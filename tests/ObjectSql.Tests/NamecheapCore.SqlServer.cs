//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from database.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Configuration;
using System.Data.SqlClient;
using System.Collections.Generic;
using System.Data;
using ObjectSql;
using ObjectSql.QueryInterfaces;

namespace ObjectSql.Tests
{
	namespace dbo
	{
		[Table("Applications",Schema="dbo")]
		public partial class Applications
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("applicationName",TypeName="varchar")] public string applicationName {get; set;}
			[Column("description",TypeName="varchar")] public string description {get; set;}
			[Column("isActive",TypeName="bit")] public bool? isActive {get; set;}
		}

		[Table("banned_d_list",Schema="dbo")]
		public partial class banned_d_list
		{
			[Column("Col",TypeName="varchar")] public string Col {get; set;}
		}

		[Table("BROKERLOG_TEMP",Schema="dbo")]
		public partial class BROKERLOG_TEMP
		{
			[Column("U",TypeName="uniqueidentifier")] public Guid? U {get; set;}
			[Column("LOGTIME",TypeName="bigint")] public long? LOGTIME {get; set;}
			[Column("DATA",TypeName="xml")] public string DATA {get; set;}
			[Column("UV",TypeName="nvarchar")] public string UV {get; set;}
		}

		[Table("CanceledPaymentQueue",Schema="dbo")]
		public partial class CanceledPaymentQueue
		{
			[Column("AutoID",TypeName="bigint")] public long AutoID {get; set;}
			[Column("TransactionId",TypeName="numeric")] public decimal TransactionId {get; set;}
			[Column("ProviderTransID",TypeName="varchar")] public string ProviderTransID {get; set;}
			[Column("Amount",TypeName="money")] public decimal? Amount {get; set;}
			[Column("PaymentStatus",TypeName="varchar")] public string PaymentStatus {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("PaymentProviderToken",TypeName="varchar")] public string PaymentProviderToken {get; set;}
			[Column("CreatedDateTime",TypeName="bigint")] public long? CreatedDateTime {get; set;}
			[Column("Status",TypeName="varchar")] public string Status {get; set;}
			[Column("StatusDescription",TypeName="varchar")] public string StatusDescription {get; set;}
		}

		[Table("Check_Transfer_Domain",Schema="dbo")]
		public partial class Check_Transfer_Domain
		{
			[Column("Domainname",TypeName="nvarchar")] public string Domainname {get; set;}
			[Column("Eppkey",TypeName="nvarchar")] public string Eppkey {get; set;}
			[Column("username",TypeName="nvarchar")] public string username {get; set;}
			[Column("Transfer_Success",TypeName="bit")] public bool Transfer_Success {get; set;}
			[Column("Is_domain_Submitted_For_Transfer",TypeName="bit")] public bool Is_domain_Submitted_For_Transfer {get; set;}
			[Column("Transfer_cancelled_YN",TypeName="bit")] public bool Transfer_cancelled_YN {get; set;}
			[Column("EPPCode",TypeName="varchar")] public string EPPCode {get; set;}
			[Column("TransferDate",TypeName="datetime")] public DateTime? TransferDate {get; set;}
			[Column("CompletedYN",TypeName="bit")] public bool? CompletedYN {get; set;}
			[Column("AddedToUserYN",TypeName="bit")] public bool? AddedToUserYN {get; set;}
			[Column("EmailSentYN",TypeName="bit")] public bool? EmailSentYN {get; set;}
			[Column("CancelledYN",TypeName="bit")] public bool? CancelledYN {get; set;}
			[Column("RefundedYN",TypeName="bit")] public bool? RefundedYN {get; set;}
			[Column("TransID",TypeName="nvarchar")] public string TransID {get; set;}
			[Column("TransferOrderID",TypeName="nvarchar")] public string TransferOrderID {get; set;}
			[Column("TransferOrderDetailID",TypeName="nvarchar")] public string TransferOrderDetailID {get; set;}
			[Column("StatusID",TypeName="nvarchar")] public string StatusID {get; set;}
			[Column("StatusDesc",TypeName="nvarchar")] public string StatusDesc {get; set;}
			[Column("StatusDate",TypeName="datetime")] public DateTime? StatusDate {get; set;}
			[Column("ErrInfo",TypeName="varchar")] public string ErrInfo {get; set;}
			[Column("Associated_Order_ID",TypeName="numeric")] public decimal? Associated_Order_ID {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("Expire_DateTime_Before_Transfer",TypeName="datetime")] public DateTime? Expire_DateTime_Before_Transfer {get; set;}
			[Column("Expire_DateTime_After_Transfer",TypeName="datetime")] public DateTime? Expire_DateTime_After_Transfer {get; set;}
			[Column("RequestIP",TypeName="varchar")] public string RequestIP {get; set;}
			[Column("Option1",TypeName="varchar")] public string Option1 {get; set;}
		}

		[Table("CheckDomainExpiry",Schema="dbo")]
		public partial class CheckDomainExpiry
		{
			[Column("AutoId",TypeName="int")] public int AutoId {get; set;}
			[Column("Domainname",TypeName="nvarchar")] public string Domainname {get; set;}
			[Column("OrderId",TypeName="bigint")] public long? OrderId {get; set;}
			[Column("OrderDateTime",TypeName="datetime")] public DateTime? OrderDateTime {get; set;}
			[Column("IsAvailableInTableDomain",TypeName="bit")] public bool IsAvailableInTableDomain {get; set;}
			[Column("ExpiryDateInTable",TypeName="datetime")] public DateTime? ExpiryDateInTable {get; set;}
			[Column("ExpiryDateTimeInEnom",TypeName="datetime")] public DateTime? ExpiryDateTimeInEnom {get; set;}
			[Column("IsCompleted",TypeName="bit")] public bool IsCompleted {get; set;}
			[Column("IsError",TypeName="bit")] public bool IsError {get; set;}
			[Column("ErrorDetails",TypeName="nvarchar")] public string ErrorDetails {get; set;}
			[Column("IsDateMismatch",TypeName="bit")] public bool? IsDateMismatch {get; set;}
			[Column("NoOfDaysMismatch",TypeName="int")] public int? NoOfDaysMismatch {get; set;}
		}

		[Table("CMSCartServers",Schema="dbo")]
		public partial class CMSCartServers
		{
			[Column("CMSCartServerName",TypeName="varchar")] public string CMSCartServerName {get; set;}
			[Column("location",TypeName="varchar")] public string location {get; set;}
			[Column("ConnectionString",TypeName="varchar")] public string ConnectionString {get; set;}
		}

		[Table("Continents",Schema="dbo")]
		public partial class Continents
		{
			[Column("code",TypeName="varchar")] public string code {get; set;}
			[Column("name",TypeName="varchar")] public string name {get; set;}
		}

		[Table("Countries",Schema="dbo")]
		public partial class Countries
		{
			[Column("code",TypeName="varchar")] public string code {get; set;}
			[Column("name",TypeName="varchar")] public string name {get; set;}
		}

		[Table("CreditCardUserOptions",Schema="dbo")]
		public partial class CreditCardUserOptions
		{
			[Column("CreditCardId",TypeName="uniqueidentifier")] public Guid CreditCardId {get; set;}
			[Column("UserId",TypeName="int")] public int UserId {get; set;}
			[Column("SetAsDefault",TypeName="bit")] public bool SetAsDefault {get; set;}
			[Column("AutoRenewPriority",TypeName="tinyint")] public byte AutoRenewPriority {get; set;}
		}

		[Table("DBCleanupwhoisguard",Schema="dbo")]
		public partial class DBCleanupwhoisguard
		{
			[Column("Autoid",TypeName="numeric")] public decimal Autoid {get; set;}
			[Column("SLD",TypeName="nvarchar")] public string SLD {get; set;}
			[Column("TLD",TypeName="nvarchar")] public string TLD {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("Status",TypeName="nvarchar")] public string Status {get; set;}
			[Column("CreationDate",TypeName="datetime")] public DateTime? CreationDate {get; set;}
			[Column("ExpireDate",TypeName="datetime")] public DateTime? ExpireDate {get; set;}
			[Column("BillingOrganizationName",TypeName="nvarchar")] public string BillingOrganizationName {get; set;}
			[Column("BillingJobTitle",TypeName="nvarchar")] public string BillingJobTitle {get; set;}
			[Column("BillingFName",TypeName="nvarchar")] public string BillingFName {get; set;}
			[Column("BillingLName",TypeName="nvarchar")] public string BillingLName {get; set;}
			[Column("BillingAddress1",TypeName="nvarchar")] public string BillingAddress1 {get; set;}
			[Column("BillingAddress2",TypeName="nvarchar")] public string BillingAddress2 {get; set;}
			[Column("BillingCity",TypeName="nvarchar")] public string BillingCity {get; set;}
			[Column("BillingStateProvince",TypeName="nvarchar")] public string BillingStateProvince {get; set;}
			[Column("BillingStateProvinceChoice",TypeName="nvarchar")] public string BillingStateProvinceChoice {get; set;}
			[Column("BillingPostalCode",TypeName="nvarchar")] public string BillingPostalCode {get; set;}
			[Column("BillingCountry",TypeName="nvarchar")] public string BillingCountry {get; set;}
			[Column("BillingPhone",TypeName="nvarchar")] public string BillingPhone {get; set;}
			[Column("BillingPhoneExt",TypeName="nvarchar")] public string BillingPhoneExt {get; set;}
			[Column("BillingFax",TypeName="nvarchar")] public string BillingFax {get; set;}
			[Column("BillingEmailAddress",TypeName="nvarchar")] public string BillingEmailAddress {get; set;}
			[Column("RegistrantOrganizationName",TypeName="nvarchar")] public string RegistrantOrganizationName {get; set;}
			[Column("RegistrantJobTitle",TypeName="nvarchar")] public string RegistrantJobTitle {get; set;}
			[Column("RegistrantFName",TypeName="nvarchar")] public string RegistrantFName {get; set;}
			[Column("RegistrantLName",TypeName="nvarchar")] public string RegistrantLName {get; set;}
			[Column("RegistrantAddress1",TypeName="nvarchar")] public string RegistrantAddress1 {get; set;}
			[Column("RegistrantAddress2",TypeName="nvarchar")] public string RegistrantAddress2 {get; set;}
			[Column("RegistrantCity",TypeName="nvarchar")] public string RegistrantCity {get; set;}
			[Column("RegistrantStateProvince",TypeName="nvarchar")] public string RegistrantStateProvince {get; set;}
			[Column("RegistrantStateProvinceChoice",TypeName="nvarchar")] public string RegistrantStateProvinceChoice {get; set;}
			[Column("RegistrantPostalCode",TypeName="nvarchar")] public string RegistrantPostalCode {get; set;}
			[Column("RegistrantCountry",TypeName="nvarchar")] public string RegistrantCountry {get; set;}
			[Column("RegistrantPhone",TypeName="nvarchar")] public string RegistrantPhone {get; set;}
			[Column("RegistrantPhoneExt",TypeName="nvarchar")] public string RegistrantPhoneExt {get; set;}
			[Column("RegistrantFax",TypeName="nvarchar")] public string RegistrantFax {get; set;}
			[Column("RegistrantEmailAddress",TypeName="nvarchar")] public string RegistrantEmailAddress {get; set;}
			[Column("AdministrativeOrganizationName",TypeName="nvarchar")] public string AdministrativeOrganizationName {get; set;}
			[Column("AdministrativeJobTitle",TypeName="nvarchar")] public string AdministrativeJobTitle {get; set;}
			[Column("AdministrativeFName",TypeName="nvarchar")] public string AdministrativeFName {get; set;}
			[Column("AdministrativeLName",TypeName="nvarchar")] public string AdministrativeLName {get; set;}
			[Column("AdministrativeAddress1",TypeName="nvarchar")] public string AdministrativeAddress1 {get; set;}
			[Column("AdministrativeAddress2",TypeName="nvarchar")] public string AdministrativeAddress2 {get; set;}
			[Column("AdministrativeCity",TypeName="nvarchar")] public string AdministrativeCity {get; set;}
			[Column("AdministrativeStateProvince",TypeName="nvarchar")] public string AdministrativeStateProvince {get; set;}
			[Column("AdministrativeStateProvinceChoice",TypeName="nvarchar")] public string AdministrativeStateProvinceChoice {get; set;}
			[Column("AdministrativePostalCode",TypeName="nvarchar")] public string AdministrativePostalCode {get; set;}
			[Column("AdministrativeCountry",TypeName="nvarchar")] public string AdministrativeCountry {get; set;}
			[Column("AdministrativePhone",TypeName="nvarchar")] public string AdministrativePhone {get; set;}
			[Column("AdministrativePhoneExt",TypeName="nvarchar")] public string AdministrativePhoneExt {get; set;}
			[Column("AdministrativeFax",TypeName="nvarchar")] public string AdministrativeFax {get; set;}
			[Column("AdministrativeEmailAddress",TypeName="nvarchar")] public string AdministrativeEmailAddress {get; set;}
			[Column("TechnicalOrganizationName",TypeName="nvarchar")] public string TechnicalOrganizationName {get; set;}
			[Column("TechnicalJobTitle",TypeName="nvarchar")] public string TechnicalJobTitle {get; set;}
			[Column("TechnicalFName",TypeName="nvarchar")] public string TechnicalFName {get; set;}
			[Column("TechnicalLName",TypeName="nvarchar")] public string TechnicalLName {get; set;}
			[Column("TechnicalAddress1",TypeName="nvarchar")] public string TechnicalAddress1 {get; set;}
			[Column("TechnicalAddress2",TypeName="nvarchar")] public string TechnicalAddress2 {get; set;}
			[Column("TechnicalCity",TypeName="nvarchar")] public string TechnicalCity {get; set;}
			[Column("TechnicalStateProvince",TypeName="nvarchar")] public string TechnicalStateProvince {get; set;}
			[Column("TechnicalStateProvinceChoice",TypeName="nvarchar")] public string TechnicalStateProvinceChoice {get; set;}
			[Column("TechnicalPostalCode",TypeName="nvarchar")] public string TechnicalPostalCode {get; set;}
			[Column("TechnicalCountry",TypeName="nvarchar")] public string TechnicalCountry {get; set;}
			[Column("TechnicalPhone",TypeName="nvarchar")] public string TechnicalPhone {get; set;}
			[Column("TechnicalPhoneExt",TypeName="nvarchar")] public string TechnicalPhoneExt {get; set;}
			[Column("TechnicalFax",TypeName="nvarchar")] public string TechnicalFax {get; set;}
			[Column("TechnicalEmailAddress",TypeName="nvarchar")] public string TechnicalEmailAddress {get; set;}
			[Column("IsMatchedOurAddress",TypeName="bit")] public bool IsMatchedOurAddress {get; set;}
			[Column("IsWhoisguardProtected",TypeName="bit")] public bool IsWhoisguardProtected {get; set;}
			[Column("CompletedYN",TypeName="bit")] public bool CompletedYN {get; set;}
			[Column("IsProfileNotavailable",TypeName="bit")] public bool IsProfileNotavailable {get; set;}
			[Column("IsCompletedfetch",TypeName="bit")] public bool IsCompletedfetch {get; set;}
		}

		[Table("dblist",Schema="dbo")]
		public partial class dblist
		{
			[Column("db",TypeName="nvarchar")] public string db {get; set;}
			[Column("nt_username",TypeName="nchar")] public string nt_username {get; set;}
			[Column("qry",TypeName="nvarchar")] public string qry {get; set;}
			[Column("program_name",TypeName="nchar")] public string program_name {get; set;}
			[Column("Hostname",TypeName="nchar")] public string Hostname {get; set;}
			[Column("nt_domain",TypeName="nchar")] public string nt_domain {get; set;}
			[Column("start_time",TypeName="datetime")] public DateTime start_time {get; set;}
		}

		[Table("dblist1",Schema="dbo")]
		public partial class dblist1
		{
			[Column("dbname",TypeName="nvarchar")] public string dbname {get; set;}
			[Column("hostname",TypeName="nchar")] public string hostname {get; set;}
			[Column("program_name",TypeName="nchar")] public string program_name {get; set;}
			[Column("nt_domain",TypeName="nchar")] public string nt_domain {get; set;}
			[Column("nt_username",TypeName="nchar")] public string nt_username {get; set;}
		}

		[Table("DBWgAddressChangeCompleted",Schema="dbo")]
		public partial class DBWgAddressChangeCompleted
		{
			[Column("slotid",TypeName="numeric")] public decimal? slotid {get; set;}
			[Column("CompletedYN",TypeName="bit")] public bool CompletedYN {get; set;}
			[Column("IsCompletedfetch",TypeName="bit")] public bool IsCompletedfetch {get; set;}
		}

		[Table("DealImport",Schema="dbo")]
		public partial class DealImport
		{
			[Column("id",TypeName="int")] public int id {get; set;}
			[Column("code",TypeName="varchar")] public string code {get; set;}
			[Column("bonusvalue",TypeName="varchar")] public string bonusvalue {get; set;}
		}

		[Table("DebugLogs",Schema="dbo")]
		public partial class DebugLogs
		{
			[Column("Id",TypeName="uniqueidentifier")] public Guid Id {get; set;}
			[Column("Date",TypeName="datetime")] public DateTime Date {get; set;}
			[Column("CommandName",TypeName="nvarchar")] public string CommandName {get; set;}
			[Column("OperationPoint",TypeName="nvarchar")] public string OperationPoint {get; set;}
			[Column("TransactionId",TypeName="nvarchar")] public string TransactionId {get; set;}
			[Column("Data",TypeName="nvarchar")] public string Data {get; set;}
		}

		[Table("decemberContext",Schema="dbo")]
		public partial class decemberContext
		{
			[Column("questionAutoID",TypeName="int")] public int? questionAutoID {get; set;}
			[Column("question",TypeName="nvarchar")] public string question {get; set;}
			[Column("answer",TypeName="nvarchar")] public string answer {get; set;}
			[Column("keyword1",TypeName="nvarchar")] public string keyword1 {get; set;}
			[Column("keyword2",TypeName="nvarchar")] public string keyword2 {get; set;}
			[Column("keyword3",TypeName="nvarchar")] public string keyword3 {get; set;}
			[Column("keyword4",TypeName="nvarchar")] public string keyword4 {get; set;}
			[Column("keyword5",TypeName="nvarchar")] public string keyword5 {get; set;}
		}

		[Table("DomainInfo",Schema="dbo")]
		public partial class DomainInfo
		{
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("NumberOfYears",TypeName="tinyint")] public byte NumberOfYears {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("RegisterDateTime",TypeName="datetime")] public DateTime? RegisterDateTime {get; set;}
			[Column("ExpireDateTime",TypeName="datetime")] public DateTime? ExpireDateTime {get; set;}
			[Column("Expired_YN",TypeName="bit")] public bool? Expired_YN {get; set;}
			[Column("ProviderName",TypeName="varchar")] public string ProviderName {get; set;}
		}

		[Table("DomainListbyAccount",Schema="dbo")]
		public partial class DomainListbyAccount
		{
			[Column("domainname",TypeName="nvarchar")] public string domainname {get; set;}
			[Column("NamecheapDomainListExport",TypeName="nvarchar")] public string NamecheapDomainListExport {get; set;}
			[Column("AccountPin",TypeName="int")] public int? AccountPin {get; set;}
			[Column("OfferPrice",TypeName="money")] public decimal? OfferPrice {get; set;}
			[Column("username",TypeName="nvarchar")] public string username {get; set;}
			[Column("Expireyn",TypeName="bit")] public bool? Expireyn {get; set;}
			[Column("Addedtolisting",TypeName="bit")] public bool? Addedtolisting {get; set;}
		}

		[Table("DomainProviders",Schema="dbo")]
		public partial class DomainProviders
		{
			[Column("Name",TypeName="varchar")] public string Name {get; set;}
			[Column("Title",TypeName="varchar")] public string Title {get; set;}
			[Column("Description",TypeName="varchar")] public string Description {get; set;}
		}

		[Table("DomainRestriction",Schema="dbo")]
		public partial class DomainRestriction
		{
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("RestrictionId",TypeName="int")] public int? RestrictionId {get; set;}
			[Column("StartDate",TypeName="bigint")] public long? StartDate {get; set;}
			[Column("EndDate",TypeName="bigint")] public long? EndDate {get; set;}
			[Column("ShowUserMessage",TypeName="varchar")] public string ShowUserMessage {get; set;}
		}

		[Table("DynamicReportCategories",Schema="dbo")]
		public partial class DynamicReportCategories
		{
			[Column("DynamicReportCategoryId",TypeName="int")] public int DynamicReportCategoryId {get; set;}
			[Column("CategoryName",TypeName="varchar")] public string CategoryName {get; set;}
			[Column("CategoryDescription",TypeName="varchar")] public string CategoryDescription {get; set;}
			[Column("Sequence",TypeName="smallint")] public short Sequence {get; set;}
		}

		[Table("DynamicReportGenerator",Schema="dbo")]
		public partial class DynamicReportGenerator
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Query",TypeName="varchar")] public string Query {get; set;}
			[Column("FriendlyName",TypeName="varchar")] public string FriendlyName {get; set;}
			[Column("Sequence",TypeName="int")] public int? Sequence {get; set;}
			[Column("Description",TypeName="varchar")] public string Description {get; set;}
			[Column("CreatedBy",TypeName="nvarchar")] public string CreatedBy {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime? CreatedDateTime {get; set;}
			[Column("LastModifiedBy",TypeName="nvarchar")] public string LastModifiedBy {get; set;}
			[Column("LastModifiedDateTime",TypeName="datetime")] public DateTime? LastModifiedDateTime {get; set;}
			[Column("QueryType",TypeName="varchar")] public string QueryType {get; set;}
			[Column("IsActive",TypeName="bit")] public bool IsActive {get; set;}
			[Column("DynamicReportCategoryId",TypeName="int")] public int DynamicReportCategoryId {get; set;}
		}

		[Table("EnomPremiumDomainsApprovedTrack",Schema="dbo")]
		public partial class EnomPremiumDomainsApprovedTrack
		{
			[Column("AutoId",TypeName="numeric")] public decimal AutoId {get; set;}
			[Column("MP_Listing_ID",TypeName="numeric")] public decimal MP_Listing_ID {get; set;}
			[Column("AdminApprovedDateTime",TypeName="datetime")] public DateTime? AdminApprovedDateTime {get; set;}
			[Column("LastCheckedDateTime",TypeName="datetime")] public DateTime? LastCheckedDateTime {get; set;}
			[Column("CheckCount",TypeName="int")] public int? CheckCount {get; set;}
			[Column("Status",TypeName="varchar")] public string Status {get; set;}
			[Column("StatusDescription",TypeName="varchar")] public string StatusDescription {get; set;}
		}

		[Table("errodebug",Schema="dbo")]
		public partial class errodebug
		{
			[Column("errortime",TypeName="datetime")] public DateTime errortime {get; set;}
			[Column("orderid",TypeName="bigint")] public long? orderid {get; set;}
			[Column("errorDesc",TypeName="nvarchar")] public string errorDesc {get; set;}
		}

		[Table("ExpiringDomains",Schema="dbo")]
		public partial class ExpiringDomains
		{
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("NumberOfYears",TypeName="tinyint")] public byte NumberOfYears {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("RegisterDateTime",TypeName="datetime")] public DateTime? RegisterDateTime {get; set;}
			[Column("ExpireDateTime",TypeName="datetime")] public DateTime? ExpireDateTime {get; set;}
			[Column("DaysToExpire",TypeName="int")] public int? DaysToExpire {get; set;}
			[Column("Auto_Renew",TypeName="bit")] public bool? Auto_Renew {get; set;}
			[Column("Auto_Renew_Status",TypeName="varchar")] public string Auto_Renew_Status {get; set;}
			[Column("FirstName",TypeName="nvarchar")] public string FirstName {get; set;}
			[Column("LastName",TypeName="nvarchar")] public string LastName {get; set;}
			[Column("EMail",TypeName="nvarchar")] public string EMail {get; set;}
			[Column("Expired_YN",TypeName="bit")] public bool? Expired_YN {get; set;}
			[Column("OrderID",TypeName="nvarchar")] public string OrderID {get; set;}
			[Column("Domain_ID",TypeName="numeric")] public decimal Domain_ID {get; set;}
		}

		[Table("ExpiringSSL",Schema="dbo")]
		public partial class ExpiringSSL
		{
			[Column("Certificate_ID",TypeName="numeric")] public decimal Certificate_ID {get; set;}
			[Column("SSL_Type",TypeName="varchar")] public string SSL_Type {get; set;}
			[Column("DomainUsed",TypeName="varchar")] public string DomainUsed {get; set;}
			[Column("Purchase_DateTime",TypeName="datetime")] public DateTime? Purchase_DateTime {get; set;}
			[Column("years",TypeName="int")] public int? years {get; set;}
			[Column("Months",TypeName="int")] public int? Months {get; set;}
			[Column("Expire_DateTime",TypeName="datetime")] public DateTime? Expire_DateTime {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("DaysToExpire",TypeName="int")] public int? DaysToExpire {get; set;}
			[Column("FirstName",TypeName="nvarchar")] public string FirstName {get; set;}
			[Column("LastName",TypeName="nvarchar")] public string LastName {get; set;}
			[Column("EMail",TypeName="nvarchar")] public string EMail {get; set;}
			[Column("Orderid",TypeName="nvarchar")] public string Orderid {get; set;}
			[Column("GeotrustOrderId",TypeName="varchar")] public string GeotrustOrderId {get; set;}
			[Column("Issue_Pin",TypeName="varchar")] public string Issue_Pin {get; set;}
			[Column("Price",TypeName="money")] public decimal? Price {get; set;}
		}

		[Table("forudf_viewGETDATE",Schema="dbo")]
		public partial class forudf_viewGETDATE
		{
			[Column("vGETDATE",TypeName="datetime")] public DateTime vGETDATE {get; set;}
		}

		[Table("fraglist",Schema="dbo")]
		public partial class fraglist
		{
			[Column("ObjectName",TypeName="char")] public string ObjectName {get; set;}
			[Column("ObjectId",TypeName="int")] public int? ObjectId {get; set;}
			[Column("IndexName",TypeName="char")] public string IndexName {get; set;}
			[Column("IndexId",TypeName="int")] public int? IndexId {get; set;}
			[Column("Lvl",TypeName="int")] public int? Lvl {get; set;}
			[Column("CountPages",TypeName="int")] public int? CountPages {get; set;}
			[Column("CountRows",TypeName="int")] public int? CountRows {get; set;}
			[Column("MinRecSize",TypeName="int")] public int? MinRecSize {get; set;}
			[Column("MaxRecSize",TypeName="int")] public int? MaxRecSize {get; set;}
			[Column("AvgRecSize",TypeName="int")] public int? AvgRecSize {get; set;}
			[Column("ForRecCount",TypeName="int")] public int? ForRecCount {get; set;}
			[Column("Extents",TypeName="int")] public int? Extents {get; set;}
			[Column("ExtentSwitches",TypeName="int")] public int? ExtentSwitches {get; set;}
			[Column("AvgFreeBytes",TypeName="int")] public int? AvgFreeBytes {get; set;}
			[Column("AvgPageDensity",TypeName="int")] public int? AvgPageDensity {get; set;}
			[Column("ScanDensity",TypeName="decimal")] public decimal? ScanDensity {get; set;}
			[Column("BestCount",TypeName="int")] public int? BestCount {get; set;}
			[Column("ActualCount",TypeName="int")] public int? ActualCount {get; set;}
			[Column("LogicalFrag",TypeName="decimal")] public decimal? LogicalFrag {get; set;}
			[Column("ExtentFrag",TypeName="decimal")] public decimal? ExtentFrag {get; set;}
		}

		[Table("GeoIPCountryContinent",Schema="dbo")]
		public partial class GeoIPCountryContinent
		{
			[Column("country",TypeName="varchar")] public string country {get; set;}
			[Column("continent",TypeName="varchar")] public string continent {get; set;}
		}

		[Table("GeoIPCountryWhois",Schema="dbo")]
		public partial class GeoIPCountryWhois
		{
			[Column("start_ip",TypeName="varchar")] public string start_ip {get; set;}
			[Column("end_ip",TypeName="varchar")] public string end_ip {get; set;}
			[Column("start_num",TypeName="bigint")] public long? start_num {get; set;}
			[Column("end_num",TypeName="bigint")] public long? end_num {get; set;}
			[Column("country",TypeName="varchar")] public string country {get; set;}
			[Column("name",TypeName="varchar")] public string name {get; set;}
		}

		[Table("GlobalConfig",Schema="dbo")]
		public partial class GlobalConfig
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("applicationID",TypeName="int")] public int? applicationID {get; set;}
			[Column("minuteCounter",TypeName="smallint")] public short minuteCounter {get; set;}
			[Column("hourCounter",TypeName="int")] public int? hourCounter {get; set;}
			[Column("dayCounter",TypeName="int")] public int? dayCounter {get; set;}
			[Column("maxMinuteCounter",TypeName="smallint")] public short? maxMinuteCounter {get; set;}
			[Column("maxHourcounter",TypeName="int")] public int? maxHourcounter {get; set;}
			[Column("maxDayCounter",TypeName="int")] public int? maxDayCounter {get; set;}
			[Column("applyMaxCounterLimit",TypeName="bit")] public bool? applyMaxCounterLimit {get; set;}
		}

		[Table("IPConfig",Schema="dbo")]
		public partial class IPConfig
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("applicationID",TypeName="int")] public int applicationID {get; set;}
			[Column("startingIP",TypeName="bigint")] public long startingIP {get; set;}
			[Column("endingIP",TypeName="bigint")] public long endingIP {get; set;}
			[Column("minuteCounter",TypeName="smallint")] public short? minuteCounter {get; set;}
			[Column("hourCounter",TypeName="int")] public int? hourCounter {get; set;}
			[Column("dayCounter",TypeName="int")] public int? dayCounter {get; set;}
			[Column("createdDateTime",TypeName="int")] public int? createdDateTime {get; set;}
			[Column("addedBy",TypeName="nvarchar")] public string addedBy {get; set;}
			[Column("addedReson",TypeName="nvarchar")] public string addedReson {get; set;}
			[Column("updatedDateTime",TypeName="int")] public int? updatedDateTime {get; set;}
			[Column("isActive",TypeName="bit")] public bool isActive {get; set;}
			[Column("markedAsDeleted",TypeName="bit")] public bool markedAsDeleted {get; set;}
		}

		[Table("KeyConfig",Schema="dbo")]
		public partial class KeyConfig
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("applicationID",TypeName="int")] public int? applicationID {get; set;}
			[Column("keyword",TypeName="nvarchar")] public string keyword {get; set;}
			[Column("minuteCounter",TypeName="smallint")] public short? minuteCounter {get; set;}
			[Column("hourCounter",TypeName="int")] public int? hourCounter {get; set;}
			[Column("dayCounter",TypeName="int")] public int? dayCounter {get; set;}
			[Column("createdDateTime",TypeName="int")] public int? createdDateTime {get; set;}
			[Column("addedBy",TypeName="nvarchar")] public string addedBy {get; set;}
			[Column("addedReson",TypeName="nvarchar")] public string addedReson {get; set;}
			[Column("updatedDateTime",TypeName="int")] public int? updatedDateTime {get; set;}
			[Column("isActive",TypeName="bit")] public bool isActive {get; set;}
			[Column("markedAsDeleted",TypeName="bit")] public bool markedAsDeleted {get; set;}
		}

		[Table("latestContext",Schema="dbo")]
		public partial class latestContext
		{
			[Column("questionAutoID",TypeName="int")] public int? questionAutoID {get; set;}
			[Column("question",TypeName="nvarchar")] public string question {get; set;}
			[Column("answer",TypeName="nvarchar")] public string answer {get; set;}
			[Column("keyword1",TypeName="nvarchar")] public string keyword1 {get; set;}
			[Column("keyword2",TypeName="nvarchar")] public string keyword2 {get; set;}
			[Column("keyword3",TypeName="nvarchar")] public string keyword3 {get; set;}
			[Column("keyword4",TypeName="nvarchar")] public string keyword4 {get; set;}
			[Column("keyword5",TypeName="nvarchar")] public string keyword5 {get; set;}
		}

		[Table("LogAutoRenewHistory",Schema="dbo")]
		public partial class LogAutoRenewHistory
		{
			[Column("autoid",TypeName="int")] public int autoid {get; set;}
			[Column("domainName",TypeName="nvarchar")] public string domainName {get; set;}
			[Column("domainRenew",TypeName="bit")] public bool? domainRenew {get; set;}
			[Column("WGRenew",TypeName="bit")] public bool? WGRenew {get; set;}
			[Column("pop3Renew",TypeName="bit")] public bool? pop3Renew {get; set;}
			[Column("ipaddress",TypeName="varchar")] public string ipaddress {get; set;}
			[Column("createdDateTime",TypeName="datetime")] public DateTime? createdDateTime {get; set;}
			[Column("AdminUser",TypeName="varchar")] public string AdminUser {get; set;}
			[Column("InternalReasons",TypeName="nvarchar")] public string InternalReasons {get; set;}
		}

		[Table("LogDBExecution",Schema="dbo")]
		public partial class LogDBExecution
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Createdatetime",TypeName="datetime")] public DateTime? Createdatetime {get; set;}
			[Column("MessagePath",TypeName="varchar")] public string MessagePath {get; set;}
			[Column("Message",TypeName="nvarchar")] public string Message {get; set;}
			[Column("MessageType",TypeName="varchar")] public string MessageType {get; set;}
		}

		[Table("LogDomainDnsSync",Schema="dbo")]
		public partial class LogDomainDnsSync
		{
			[Column("Id",TypeName="numeric")] public decimal Id {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("ChangeType",TypeName="nvarchar")] public string ChangeType {get; set;}
			[Column("PreviousDnsProviderType",TypeName="nvarchar")] public string PreviousDnsProviderType {get; set;}
			[Column("CurrentDnsProviderType",TypeName="nvarchar")] public string CurrentDnsProviderType {get; set;}
			[Column("OldValue",TypeName="nvarchar")] public string OldValue {get; set;}
			[Column("NewValue",TypeName="nvarchar")] public string NewValue {get; set;}
			[Column("Record_Ceated_Date",TypeName="datetime")] public DateTime Record_Ceated_Date {get; set;}
		}

		[Table("LogEnomError",Schema="dbo")]
		public partial class LogEnomError
		{
			[Column("Id",TypeName="numeric")] public decimal Id {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("CommandName",TypeName="varchar")] public string CommandName {get; set;}
			[Column("ResponseCode",TypeName="nvarchar")] public string ResponseCode {get; set;}
			[Column("ResponseString",TypeName="nvarchar")] public string ResponseString {get; set;}
			[Column("Record_Ceated_Date",TypeName="datetime")] public DateTime? Record_Ceated_Date {get; set;}
		}

		[Table("LogManageCreditCards",Schema="dbo")]
		public partial class LogManageCreditCards
		{
			[Column("AutoId",TypeName="bigint")] public long AutoId {get; set;}
			[Column("UserId",TypeName="numeric")] public decimal UserId {get; set;}
			[Column("CreatedDateTime",TypeName="bigint")] public long? CreatedDateTime {get; set;}
			[Column("ProviderStatus",TypeName="varchar")] public string ProviderStatus {get; set;}
			[Column("Error",TypeName="varchar")] public string Error {get; set;}
			[Column("ClientIp",TypeName="bigint")] public long? ClientIp {get; set;}
			[Column("ActionType",TypeName="varchar")] public string ActionType {get; set;}
		}

		[Table("LogMessageDepartment",Schema="dbo")]
		public partial class LogMessageDepartment
		{
			[Column("id",TypeName="int")] public int id {get; set;}
			[Column("name",TypeName="varchar")] public string name {get; set;}
			[Column("Title",TypeName="varchar")] public string Title {get; set;}
			[Column("isActive",TypeName="bit")] public bool isActive {get; set;}
		}

		[Table("LogPrivacyPolicyPurchase",Schema="dbo")]
		public partial class LogPrivacyPolicyPurchase
		{
			[Column("SubscriptionID",TypeName="numeric")] public decimal SubscriptionID {get; set;}
			[Column("StatusID",TypeName="int")] public int StatusID {get; set;}
			[Column("CreateDate",TypeName="datetime")] public DateTime CreateDate {get; set;}
			[Column("MoreInfo",TypeName="xml")] public string MoreInfo {get; set;}
		}

		[Table("LogResellerLevels",Schema="dbo")]
		public partial class LogResellerLevels
		{
			[Column("AutoId",TypeName="bigint")] public long AutoId {get; set;}
			[Column("UserId",TypeName="int")] public int UserId {get; set;}
			[Column("RoleId",TypeName="int")] public int RoleId {get; set;}
			[Column("ResellerAction",TypeName="varchar")] public string ResellerAction {get; set;}
			[Column("ResellerType",TypeName="varchar")] public string ResellerType {get; set;}
			[Column("CreatedDateTime",TypeName="bigint")] public long? CreatedDateTime {get; set;}
			[Column("IsMailSent",TypeName="bit")] public bool IsMailSent {get; set;}
			[Column("Subject",TypeName="varchar")] public string Subject {get; set;}
			[Column("TextEmailContent",TypeName="nvarchar")] public string TextEmailContent {get; set;}
			[Column("HtmlEmailContent",TypeName="nvarchar")] public string HtmlEmailContent {get; set;}
			[Column("CurrentTotalReceipts",TypeName="money")] public decimal? CurrentTotalReceipts {get; set;}
			[Column("Comment",TypeName="nvarchar")] public string Comment {get; set;}
			[Column("AdminComment",TypeName="nvarchar")] public string AdminComment {get; set;}
			[Column("OldLevelId",TypeName="int")] public int? OldLevelId {get; set;}
			[Column("NewLevelId",TypeName="int")] public int? NewLevelId {get; set;}
		}

		[Table("LogRestriction",Schema="dbo")]
		public partial class LogRestriction
		{
			[Column("AutoId",TypeName="numeric")] public decimal AutoId {get; set;}
			[Column("ObjectType",TypeName="varchar")] public string ObjectType {get; set;}
			[Column("ObjectName",TypeName="varchar")] public string ObjectName {get; set;}
			[Column("StartDate",TypeName="bigint")] public long? StartDate {get; set;}
			[Column("EndDate",TypeName="bigint")] public long? EndDate {get; set;}
			[Column("RestrictionIdCsv",TypeName="varchar")] public string RestrictionIdCsv {get; set;}
			[Column("AdminUserName",TypeName="nvarchar")] public string AdminUserName {get; set;}
			[Column("AdminIp",TypeName="bigint")] public long? AdminIp {get; set;}
			[Column("AdminMessage",TypeName="varchar")] public string AdminMessage {get; set;}
			[Column("LogDate",TypeName="bigint")] public long? LogDate {get; set;}
		}

		[Table("LogTransferMateOptionChange",Schema="dbo")]
		public partial class LogTransferMateOptionChange
		{
			[Column("AutoId",TypeName="int")] public int AutoId {get; set;}
			[Column("TransferId",TypeName="numeric")] public decimal TransferId {get; set;}
			[Column("TransferMateEnabled",TypeName="bit")] public bool TransferMateEnabled {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime? CreatedDateTime {get; set;}
			[Column("AdminComments",TypeName="varchar")] public string AdminComments {get; set;}
		}

		[Table("marContext",Schema="dbo")]
		public partial class marContext
		{
			[Column("questionAutoID",TypeName="int")] public int? questionAutoID {get; set;}
			[Column("question",TypeName="nvarchar")] public string question {get; set;}
			[Column("answer",TypeName="nvarchar")] public string answer {get; set;}
			[Column("keyword1",TypeName="nvarchar")] public string keyword1 {get; set;}
			[Column("keyword2",TypeName="nvarchar")] public string keyword2 {get; set;}
			[Column("keyword3",TypeName="nvarchar")] public string keyword3 {get; set;}
			[Column("keyword4",TypeName="nvarchar")] public string keyword4 {get; set;}
			[Column("keyword5",TypeName="nvarchar")] public string keyword5 {get; set;}
		}

		[Table("NamecheapDealsCategory",Schema="dbo")]
		public partial class NamecheapDealsCategory
		{
			[Column("categoryId",TypeName="int")] public int categoryId {get; set;}
			[Column("name",TypeName="varchar")] public string name {get; set;}
			[Column("displayName",TypeName="varchar")] public string displayName {get; set;}
			[Column("description",TypeName="varchar")] public string description {get; set;}
		}

		[Table("NamecheapDealsPartnerBonusDetails",Schema="dbo")]
		public partial class NamecheapDealsPartnerBonusDetails
		{
			[Column("autoId",TypeName="int")] public int autoId {get; set;}
			[Column("partnerName",TypeName="varchar")] public string partnerName {get; set;}
			[Column("rangeStart",TypeName="money")] public decimal rangeStart {get; set;}
			[Column("rangeEnd",TypeName="money")] public decimal? rangeEnd {get; set;}
			[Column("bonusValue",TypeName="varchar")] public string bonusValue {get; set;}
			[Column("bonusCode",TypeName="varchar")] public string bonusCode {get; set;}
			[Column("expiryDateTime",TypeName="datetime")] public DateTime? expiryDateTime {get; set;}
			[Column("bonusType",TypeName="varchar")] public string bonusType {get; set;}
			[Column("bonusUrlPattern",TypeName="varchar")] public string bonusUrlPattern {get; set;}
			[Column("showApplyCodeLink",TypeName="bit")] public bool showApplyCodeLink {get; set;}
			[Column("showApplyCodeText",TypeName="varchar")] public string showApplyCodeText {get; set;}
			[Column("showApplyCodeUrlPattern",TypeName="varchar")] public string showApplyCodeUrlPattern {get; set;}
			[Column("userName",TypeName="nvarchar")] public string userName {get; set;}
			[Column("associatedDateTime",TypeName="datetime")] public DateTime? associatedDateTime {get; set;}
			[Column("endUserIp",TypeName="varchar")] public string endUserIp {get; set;}
			[Column("unlinked_yn",TypeName="bit")] public bool? unlinked_yn {get; set;}
			[Column("adminUser",TypeName="nvarchar")] public string adminUser {get; set;}
			[Column("adminDesc",TypeName="varchar")] public string adminDesc {get; set;}
		}

		[Table("NamecheapDealsPartners",Schema="dbo")]
		public partial class NamecheapDealsPartners
		{
			[Column("PartnerName",TypeName="varchar")] public string PartnerName {get; set;}
			[Column("partnerDisplayName",TypeName="varchar")] public string partnerDisplayName {get; set;}
			[Column("categoryId",TypeName="int")] public int? categoryId {get; set;}
			[Column("isActive",TypeName="bit")] public bool isActive {get; set;}
			[Column("partnerLogoUrl",TypeName="varchar")] public string partnerLogoUrl {get; set;}
			[Column("description",TypeName="nvarchar")] public string description {get; set;}
			[Column("showBonusPattern",TypeName="varchar")] public string showBonusPattern {get; set;}
			[Column("showLearnMore",TypeName="bit")] public bool showLearnMore {get; set;}
			[Column("learnMoreDetails",TypeName="nvarchar")] public string learnMoreDetails {get; set;}
			[Column("viewDetailButtonText",TypeName="varchar")] public string viewDetailButtonText {get; set;}
			[Column("viewDetailUrl",TypeName="varchar")] public string viewDetailUrl {get; set;}
			[Column("activateDealTitle",TypeName="varchar")] public string activateDealTitle {get; set;}
			[Column("activateDealText",TypeName="varchar")] public string activateDealText {get; set;}
			[Column("defaultBonusValue",TypeName="varchar")] public string defaultBonusValue {get; set;}
		}

		[Table("NC_All_Domains",Schema="dbo")]
		public partial class NC_All_Domains
		{
			[Column("Sld",TypeName="varchar")] public string Sld {get; set;}
			[Column("Tld",TypeName="varchar")] public string Tld {get; set;}
			[Column("Date",TypeName="varchar")] public string Date {get; set;}
			[Column("RegistrationStatus",TypeName="varchar")] public string RegistrationStatus {get; set;}
			[Column("EnomExpireddatetime",TypeName="datetime")] public DateTime? EnomExpireddatetime {get; set;}
			[Column("Domainname",TypeName="nvarchar")] public string Domainname {get; set;}
			[Column("daydiff",TypeName="smallint")] public short? daydiff {get; set;}
		}

		[Table("ncc",Schema="dbo")]
		public partial class ncc
		{
			[Column("table_schema",TypeName="nvarchar")] public string table_schema {get; set;}
			[Column("table_name",TypeName="nvarchar")] public string table_name {get; set;}
			[Column("column_name",TypeName="nvarchar")] public string column_name {get; set;}
			[Column("data_type",TypeName="nvarchar")] public string data_type {get; set;}
			[Column("is_nullable",TypeName="varchar")] public string is_nullable {get; set;}
			[Column("character_maximum_length",TypeName="int")] public int? character_maximum_length {get; set;}
		}

		[Table("newsletterMeTldsTemp",Schema="dbo")]
		public partial class newsletterMeTldsTemp
		{
			[Column("email",TypeName="nvarchar")] public string email {get; set;}
			[Column("newslettertype",TypeName="int")] public int? newslettertype {get; set;}
			[Column("username",TypeName="nvarchar")] public string username {get; set;}
			[Column("firstName",TypeName="nvarchar")] public string firstName {get; set;}
			[Column("lastname",TypeName="nvarchar")] public string lastname {get; set;}
			[Column("usernumid",TypeName="numeric")] public decimal? usernumid {get; set;}
			[Column("dateadded",TypeName="datetime")] public DateTime? dateadded {get; set;}
			[Column("activitystatus",TypeName="varchar")] public string activitystatus {get; set;}
			[Column("confirmed",TypeName="datetime")] public DateTime? confirmed {get; set;}
			[Column("countryname",TypeName="varchar")] public string countryname {get; set;}
			[Column("signupdate",TypeName="datetime")] public DateTime? signupdate {get; set;}
			[Column("encodedid",TypeName="numeric")] public decimal? encodedid {get; set;}
			[Column("hasTransactions",TypeName="int")] public int? hasTransactions {get; set;}
			[Column("domainName",TypeName="nvarchar")] public string domainName {get; set;}
			[Column("isAvailable",TypeName="int")] public int? isAvailable {get; set;}
			[Column("isCompleted",TypeName="int")] public int? isCompleted {get; set;}
		}

		[Table("NewsletterSubscription",Schema="dbo")]
		public partial class NewsletterSubscription
		{
			[Column("SubscriptionId",TypeName="int")] public int SubscriptionId {get; set;}
			[Column("Email",TypeName="nvarchar")] public string Email {get; set;}
			[Column("UserId",TypeName="numeric")] public decimal? UserId {get; set;}
			[Column("CreatedDateTime",TypeName="int")] public int CreatedDateTime {get; set;}
			[Column("IsDisabledByAdmin",TypeName="bit")] public bool IsDisabledByAdmin {get; set;}
			[Column("DisabledComments",TypeName="varchar")] public string DisabledComments {get; set;}
			[Column("DisabledByAdminUserName",TypeName="varchar")] public string DisabledByAdminUserName {get; set;}
			[Column("DisabledByAdminIp",TypeName="bigint")] public long? DisabledByAdminIp {get; set;}
			[Column("DisabledDateTime",TypeName="int")] public int? DisabledDateTime {get; set;}
		}

		[Table("NewsletterSubscriptionAction",Schema="dbo")]
		public partial class NewsletterSubscriptionAction
		{
			[Column("AutoId",TypeName="int")] public int AutoId {get; set;}
			[Column("SubscriptionId",TypeName="int")] public int? SubscriptionId {get; set;}
			[Column("email",TypeName="nvarchar")] public string email {get; set;}
			[Column("VerificationCode",TypeName="varchar")] public string VerificationCode {get; set;}
			[Column("CreatedDateTime",TypeName="int")] public int CreatedDateTime {get; set;}
			[Column("IsVerified",TypeName="bit")] public bool IsVerified {get; set;}
			[Column("InitiationIp",TypeName="bigint")] public long? InitiationIp {get; set;}
			[Column("VerificationIp",TypeName="bigint")] public long? VerificationIp {get; set;}
			[Column("VertificationDateTime",TypeName="int")] public int? VertificationDateTime {get; set;}
			[Column("IsInitiatedFromProfile",TypeName="bit")] public bool IsInitiatedFromProfile {get; set;}
			[Column("action",TypeName="varchar")] public string action {get; set;}
		}

		[Table("OAuth_CryptoKey",Schema="dbo")]
		public partial class OAuth_CryptoKey
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Bucket",TypeName="nvarchar")] public string Bucket {get; set;}
			[Column("Handle",TypeName="nvarchar")] public string Handle {get; set;}
			[Column("ExpiresUtc",TypeName="datetime2")] public DateTime ExpiresUtc {get; set;}
			[Column("KeyDump",TypeName="binary")] public byte[] KeyDump {get; set;}
			[Column("KeyDumpLength",TypeName="int")] public int KeyDumpLength {get; set;}
		}

		[Table("OAuth_GrantRequest",Schema="dbo")]
		public partial class OAuth_GrantRequest
		{
			[Column("Id",TypeName="uniqueidentifier")] public Guid Id {get; set;}
			[Column("CallBackUri",TypeName="nvarchar")] public string CallBackUri {get; set;}
			[Column("RecipientUri",TypeName="nvarchar")] public string RecipientUri {get; set;}
			[Column("ClientId",TypeName="nvarchar")] public string ClientId {get; set;}
			[Column("ClientState",TypeName="nvarchar")] public string ClientState {get; set;}
			[Column("ProtocolVersionMajor",TypeName="int")] public int ProtocolVersionMajor {get; set;}
			[Column("ProtocolVersionMinor",TypeName="int")] public int ProtocolVersionMinor {get; set;}
			[Column("MessageTransport",TypeName="int")] public int MessageTransport {get; set;}
			[Column("RequestDate",TypeName="datetime2")] public DateTime RequestDate {get; set;}
		}

		[Table("OAuth_GrantRequest_Scope",Schema="dbo")]
		public partial class OAuth_GrantRequest_Scope
		{
			[Column("ID",TypeName="uniqueidentifier")] public Guid ID {get; set;}
			[Column("RequestId",TypeName="uniqueidentifier")] public Guid RequestId {get; set;}
			[Column("ScopeItem",TypeName="nvarchar")] public string ScopeItem {get; set;}
		}

		[Table("OAuth_Nonce",Schema="dbo")]
		public partial class OAuth_Nonce
		{
			[Column("Context",TypeName="nvarchar")] public string Context {get; set;}
			[Column("Code",TypeName="nvarchar")] public string Code {get; set;}
			[Column("Timestamp",TypeName="datetime")] public DateTime Timestamp {get; set;}
		}

		[Table("OAuth_Token",Schema="dbo")]
		public partial class OAuth_Token
		{
			[Column("TokenId",TypeName="int")] public int TokenId {get; set;}
			[Column("Token",TypeName="nvarchar")] public string Token {get; set;}
			[Column("TokenSecret",TypeName="nvarchar")] public string TokenSecret {get; set;}
			[Column("State",TypeName="int")] public int State {get; set;}
			[Column("IssueDate",TypeName="datetime")] public DateTime IssueDate {get; set;}
			[Column("ConsumerId",TypeName="int")] public int ConsumerId {get; set;}
			[Column("UserId",TypeName="decimal")] public decimal? UserId {get; set;}
			[Column("Scope",TypeName="nvarchar")] public string Scope {get; set;}
			[Column("RequestTokenVerifier",TypeName="nvarchar")] public string RequestTokenVerifier {get; set;}
			[Column("RequestTokenCallback",TypeName="nvarchar")] public string RequestTokenCallback {get; set;}
			[Column("ConsumerVersion",TypeName="nvarchar")] public string ConsumerVersion {get; set;}
		}

		[Table("OAuth_Token_UserRequest",Schema="dbo")]
		public partial class OAuth_Token_UserRequest
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("TokenId",TypeName="int")] public int TokenId {get; set;}
			[Column("MessageProtectionsFlags",TypeName="int")] public int MessageProtectionsFlags {get; set;}
			[Column("MessageTransport",TypeName="int")] public int MessageTransport {get; set;}
			[Column("HandlerUri",TypeName="nvarchar")] public string HandlerUri {get; set;}
			[Column("RequestType",TypeName="int")] public int RequestType {get; set;}
			[Column("IsIncoming",TypeName="bit")] public bool IsIncoming {get; set;}
			[Column("IsLowSecurityMode",TypeName="bit")] public bool IsLowSecurityMode {get; set;}
			[Column("VersionMajor",TypeName="int")] public int VersionMajor {get; set;}
			[Column("VersionMinor",TypeName="int")] public int VersionMinor {get; set;}
			[Column("VersionBuild",TypeName="int")] public int VersionBuild {get; set;}
		}

		[Table("OAuth_Token_UserRequest_ExtraData",Schema="dbo")]
		public partial class OAuth_Token_UserRequest_ExtraData
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("RequestId",TypeName="int")] public int RequestId {get; set;}
			[Column("ExtraDataKey",TypeName="nvarchar")] public string ExtraDataKey {get; set;}
			[Column("ExtraDataValue",TypeName="nvarchar")] public string ExtraDataValue {get; set;}
		}

		[Table("OnePagerActionLog",Schema="dbo")]
		public partial class OnePagerActionLog
		{
			[Column("actionLogId",TypeName="numeric")] public decimal actionLogId {get; set;}
			[Column("subscriptionId",TypeName="numeric")] public decimal subscriptionId {get; set;}
			[Column("hostName",TypeName="nvarchar")] public string hostName {get; set;}
			[Column("partnerSubscriptionId",TypeName="numeric")] public decimal partnerSubscriptionId {get; set;}
			[Column("actionType",TypeName="varchar")] public string actionType {get; set;}
			[Column("actionDateTime",TypeName="datetime")] public DateTime? actionDateTime {get; set;}
			[Column("orderId",TypeName="numeric")] public decimal? orderId {get; set;}
			[Column("duration",TypeName="int")] public int? duration {get; set;}
			[Column("durationType",TypeName="varchar")] public string durationType {get; set;}
		}

		[Table("OnePagerStatusLog",Schema="dbo")]
		public partial class OnePagerStatusLog
		{
			[Column("statusLogId",TypeName="numeric")] public decimal statusLogId {get; set;}
			[Column("subscriptionId",TypeName="numeric")] public decimal subscriptionId {get; set;}
			[Column("statusType",TypeName="varchar")] public string statusType {get; set;}
			[Column("newValue",TypeName="varchar")] public string newValue {get; set;}
			[Column("previousValue",TypeName="varchar")] public string previousValue {get; set;}
			[Column("statusChangeDateTime",TypeName="datetime")] public DateTime? statusChangeDateTime {get; set;}
			[Column("adminUserId",TypeName="int")] public int? adminUserId {get; set;}
			[Column("comments",TypeName="varchar")] public string comments {get; set;}
			[Column("adminComments",TypeName="varchar")] public string adminComments {get; set;}
		}

		[Table("OnePagerSubscriptions",Schema="dbo")]
		public partial class OnePagerSubscriptions
		{
			[Column("subscriptionId",TypeName="numeric")] public decimal subscriptionId {get; set;}
			[Column("username",TypeName="nvarchar")] public string username {get; set;}
			[Column("hostName",TypeName="nvarchar")] public string hostName {get; set;}
			[Column("domainName",TypeName="nvarchar")] public string domainName {get; set;}
			[Column("emailAddress",TypeName="varchar")] public string emailAddress {get; set;}
			[Column("domainId",TypeName="int")] public int? domainId {get; set;}
			[Column("partnerSubscriptionId",TypeName="numeric")] public decimal? partnerSubscriptionId {get; set;}
			[Column("createdDateTime",TypeName="datetime")] public DateTime? createdDateTime {get; set;}
			[Column("expirationDateTime",TypeName="datetime")] public DateTime? expirationDateTime {get; set;}
			[Column("isEnabled",TypeName="bit")] public bool isEnabled {get; set;}
			[Column("comments",TypeName="varchar")] public string comments {get; set;}
			[Column("isAutoRenew",TypeName="bit")] public bool isAutoRenew {get; set;}
			[Column("isExpired",TypeName="bit")] public bool? isExpired {get; set;}
			[Column("AutoRenewStatus",TypeName="varchar")] public string AutoRenewStatus {get; set;}
		}

		[Table("OneTimeFreeHostingEnableUserList",Schema="dbo")]
		public partial class OneTimeFreeHostingEnableUserList
		{
			[Column("AutoId",TypeName="int")] public int AutoId {get; set;}
			[Column("Username",TypeName="nvarchar")] public string Username {get; set;}
			[Column("NoOfDomains",TypeName="int")] public int NoOfDomains {get; set;}
			[Column("HasHostingAccount",TypeName="bit")] public bool HasHostingAccount {get; set;}
			[Column("BatchNo",TypeName="tinyint")] public byte? BatchNo {get; set;}
			[Column("AddedOn",TypeName="datetime")] public DateTime? AddedOn {get; set;}
			[Column("UserId",TypeName="bigint")] public long? UserId {get; set;}
		}

		[Table("OrderSendOneTimeEmail",Schema="dbo")]
		public partial class OrderSendOneTimeEmail
		{
			[Column("Auto_ID",TypeName="numeric")] public decimal Auto_ID {get; set;}
			[Column("Order_ID",TypeName="numeric")] public decimal Order_ID {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime CreatedDateTime {get; set;}
			[Column("CompletedDateTime",TypeName="datetime")] public DateTime? CompletedDateTime {get; set;}
			[Column("IsOneTimeEmailSent",TypeName="bit")] public bool IsOneTimeEmailSent {get; set;}
		}

		[Table("OrderVerificationConfig",Schema="dbo")]
		public partial class OrderVerificationConfig
		{
			[Column("LastVerifiedOrderId",TypeName="numeric")] public decimal LastVerifiedOrderId {get; set;}
			[Column("LastUpdatedDateTime",TypeName="date")] public DateTime? LastUpdatedDateTime {get; set;}
			[Column("CheckTimeDiffInMins",TypeName="int")] public int? CheckTimeDiffInMins {get; set;}
			[Column("RetryRevertNameServersTimeInMins",TypeName="int")] public int? RetryRevertNameServersTimeInMins {get; set;}
			[Column("CheckTimeDiffForRetryInMins",TypeName="int")] public int? CheckTimeDiffForRetryInMins {get; set;}
			[Column("LastUpdatedRetryRevertNSDateTime",TypeName="datetime")] public DateTime? LastUpdatedRetryRevertNSDateTime {get; set;}
		}

		[Table("OrgTldPromotionDetails",Schema="dbo")]
		public partial class OrgTldPromotionDetails
		{
			[Column("AutoId",TypeName="int")] public int AutoId {get; set;}
			[Column("OrgTldDomain",TypeName="nvarchar")] public string OrgTldDomain {get; set;}
			[Column("OrgUserName",TypeName="nvarchar")] public string OrgUserName {get; set;}
			[Column("OrgCreatedDateTime",TypeName="datetime")] public DateTime? OrgCreatedDateTime {get; set;}
			[Column("OtherTldDomain",TypeName="nvarchar")] public string OtherTldDomain {get; set;}
			[Column("OtherTldUserName",TypeName="nvarchar")] public string OtherTldUserName {get; set;}
			[Column("OtherTldCreatedDateTime",TypeName="datetime")] public DateTime? OtherTldCreatedDateTime {get; set;}
			[Column("RecordCreatedDateTime",TypeName="datetime")] public DateTime? RecordCreatedDateTime {get; set;}
			[Column("IsOtherDomainCreated",TypeName="bit")] public bool? IsOtherDomainCreated {get; set;}
			[Column("ApiReason",TypeName="nvarchar")] public string ApiReason {get; set;}
		}

		[Table("PaypalPaymentTrack",Schema="dbo")]
		public partial class PaypalPaymentTrack
		{
			[Column("AutoID",TypeName="bigint")] public long AutoID {get; set;}
			[Column("InvoiceNumber",TypeName="varchar")] public string InvoiceNumber {get; set;}
			[Column("ClientIP",TypeName="bigint")] public long ClientIP {get; set;}
			[Column("Token",TypeName="varchar")] public string Token {get; set;}
			[Column("UserID",TypeName="numeric")] public decimal UserID {get; set;}
			[Column("PaypalTokenCreatedDateTime",TypeName="int")] public int PaypalTokenCreatedDateTime {get; set;}
			[Column("RecordCreatedDateTime",TypeName="int")] public int RecordCreatedDateTime {get; set;}
			[Column("Amount",TypeName="money")] public decimal? Amount {get; set;}
			[Column("PaypalTransID",TypeName="varchar")] public string PaypalTransID {get; set;}
			[Column("TokenStatus",TypeName="varchar")] public string TokenStatus {get; set;}
			[Column("CurrencyCode",TypeName="varchar")] public string CurrencyCode {get; set;}
			[Column("StatusDecription",TypeName="varchar")] public string StatusDecription {get; set;}
			[Column("OrderRefId",TypeName="varchar")] public string OrderRefId {get; set;}
		}

		[Table("PaypalPendingTrack",Schema="dbo")]
		public partial class PaypalPendingTrack
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("TransactionID",TypeName="numeric")] public decimal? TransactionID {get; set;}
			[Column("PaymentStatus",TypeName="varchar")] public string PaymentStatus {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime? CreatedDateTime {get; set;}
			[Column("RefundedYN",TypeName="bit")] public bool RefundedYN {get; set;}
			[Column("RefundedTransID",TypeName="varchar")] public string RefundedTransID {get; set;}
		}

		[Table("PersonalDomainsAddToCart",Schema="dbo")]
		public partial class PersonalDomainsAddToCart
		{
			[Column("guid",TypeName="varchar")] public string guid {get; set;}
			[Column("domainsXml",TypeName="xml")] public string domainsXml {get; set;}
			[Column("createdDatetime",TypeName="datetime")] public DateTime createdDatetime {get; set;}
		}

		[Table("PrivacyPolicy",Schema="dbo")]
		public partial class PrivacyPolicy
		{
			[Column("SubscriptionId",TypeName="int")] public int SubscriptionId {get; set;}
			[Column("CreatedOrderId",TypeName="numeric")] public decimal? CreatedOrderId {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("EmailAddress",TypeName="nvarchar")] public string EmailAddress {get; set;}
			[Column("CreatedDatetime",TypeName="datetime")] public DateTime CreatedDatetime {get; set;}
			[Column("SubscriptionType",TypeName="varchar")] public string SubscriptionType {get; set;}
			[Column("PartnerAutoRenew",TypeName="bit")] public bool PartnerAutoRenew {get; set;}
			[Column("PartnerSubscriptionId",TypeName="numeric")] public decimal? PartnerSubscriptionId {get; set;}
			[Column("PartnerOrderID",TypeName="numeric")] public decimal? PartnerOrderID {get; set;}
			[Column("CreatedOrderItemId",TypeName="numeric")] public decimal? CreatedOrderItemId {get; set;}
			[Column("Username",TypeName="nvarchar")] public string Username {get; set;}
			[Column("Password",TypeName="nvarchar")] public string Password {get; set;}
			[Column("HasPassword",TypeName="bit")] public bool HasPassword {get; set;}
			[Column("Statusid",TypeName="int")] public int? Statusid {get; set;}
			[Column("Policystatus",TypeName="varchar")] public string Policystatus {get; set;}
			[Column("NextBillingDateTime",TypeName="datetime")] public DateTime? NextBillingDateTime {get; set;}
			[Column("RenewalStatus",TypeName="varchar")] public string RenewalStatus {get; set;}
		}

		[Table("PrivacyPolicyRenew",Schema="dbo")]
		public partial class PrivacyPolicyRenew
		{
			[Column("SubscriptionId",TypeName="int")] public int SubscriptionId {get; set;}
			[Column("NumOfYears",TypeName="int")] public int NumOfYears {get; set;}
			[Column("OrderId",TypeName="numeric")] public decimal? OrderId {get; set;}
			[Column("OrderItemID",TypeName="numeric")] public decimal? OrderItemID {get; set;}
			[Column("TransactionId",TypeName="numeric")] public decimal? TransactionId {get; set;}
			[Column("CreatedDatetime",TypeName="datetime")] public DateTime CreatedDatetime {get; set;}
			[Column("StatusId",TypeName="int")] public int? StatusId {get; set;}
			[Column("PolicyStatus",TypeName="varchar")] public string PolicyStatus {get; set;}
			[Column("ExpiryDatetime",TypeName="datetime")] public DateTime ExpiryDatetime {get; set;}
			[Column("RenewalStatus",TypeName="varchar")] public string RenewalStatus {get; set;}
		}

		[Table("PrivacyPolicyStatus",Schema="dbo")]
		public partial class PrivacyPolicyStatus
		{
			[Column("statusId",TypeName="int")] public int statusId {get; set;}
			[Column("status",TypeName="varchar")] public string status {get; set;}
			[Column("statusTitle",TypeName="varchar")] public string statusTitle {get; set;}
			[Column("statusDescription",TypeName="varchar")] public string statusDescription {get; set;}
			[Column("statusOnlyForLog",TypeName="bit")] public bool statusOnlyForLog {get; set;}
			[Column("providerStatus",TypeName="varchar")] public string providerStatus {get; set;}
			[Column("providerStatusId",TypeName="tinyint")] public byte? providerStatusId {get; set;}
		}

		[Table("ProfileLogs",Schema="dbo")]
		public partial class ProfileLogs
		{
			[Column("AutoID",TypeName="bigint")] public long AutoID {get; set;}
			[Column("RecordCreatedDateTime",TypeName="datetime")] public DateTime RecordCreatedDateTime {get; set;}
			[Column("UserName",TypeName="varbinary")] public byte[] UserName {get; set;}
			[Column("Pwd",TypeName="varbinary")] public byte[] Pwd {get; set;}
			[Column("ChangedDateTime",TypeName="bigint")] public long ChangedDateTime {get; set;}
			[Column("CreatedIp",TypeName="varbinary")] public byte[] CreatedIp {get; set;}
			[Column("Reason",TypeName="varchar")] public string Reason {get; set;}
		}

		[Table("PromotionItemUsage",Schema="dbo")]
		public partial class PromotionItemUsage
		{
			[Column("PromotionUsageID",TypeName="int")] public int PromotionUsageID {get; set;}
			[Column("Product",TypeName="varchar")] public string Product {get; set;}
			[Column("Action",TypeName="varchar")] public string Action {get; set;}
			[Column("RegularPrice",TypeName="smallmoney")] public decimal? RegularPrice {get; set;}
			[Column("Price",TypeName="smallmoney")] public decimal? Price {get; set;}
		}

		[Table("Query",Schema="dbo")]
		public partial class Query
		{
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("mpid",TypeName="decimal")] public decimal mpid {get; set;}
			[Column("seller",TypeName="nvarchar")] public string seller {get; set;}
			[Column("price",TypeName="money")] public decimal? price {get; set;}
			[Column("ispremium",TypeName="bit")] public bool? ispremium {get; set;}
			[Column("expirydate",TypeName="datetime2")] public DateTime? expirydate {get; set;}
		}

		[Table("RedeemCoupons",Schema="dbo")]
		public partial class RedeemCoupons
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("CouponCode",TypeName="varchar")] public string CouponCode {get; set;}
			[Column("CreatedDateTime",TypeName="date")] public DateTime? CreatedDateTime {get; set;}
			[Column("UserID",TypeName="numeric")] public decimal? UserID {get; set;}
			[Column("TransactionId",TypeName="numeric")] public decimal? TransactionId {get; set;}
			[Column("ClientIP",TypeName="nvarchar")] public string ClientIP {get; set;}
			[Column("AppliedDateTime",TypeName="datetime")] public DateTime? AppliedDateTime {get; set;}
		}

		[Table("ReDomainTransferStausTrack",Schema="dbo")]
		public partial class ReDomainTransferStausTrack
		{
			[Column("id",TypeName="numeric")] public decimal id {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("ReCode",TypeName="int")] public int? ReCode {get; set;}
			[Column("ReTransferOrPostponedStatus",TypeName="nvarchar")] public string ReTransferOrPostponedStatus {get; set;}
		}

		[Table("ResellerDetails",Schema="dbo")]
		public partial class ResellerDetails
		{
			[Column("ResellerUserId",TypeName="numeric")] public decimal ResellerUserId {get; set;}
			[Column("PartnerName",TypeName="varchar")] public string PartnerName {get; set;}
			[Column("CreatedDate",TypeName="int")] public int? CreatedDate {get; set;}
			[Column("CreatedBy",TypeName="varchar")] public string CreatedBy {get; set;}
			[Column("InitiatedBy",TypeName="varchar")] public string InitiatedBy {get; set;}
		}

		[Table("ResellerInitialActivationDetails",Schema="dbo")]
		public partial class ResellerInitialActivationDetails
		{
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("ActivatedDateTime",TypeName="int")] public int? ActivatedDateTime {get; set;}
			[Column("ResellerType",TypeName="varchar")] public string ResellerType {get; set;}
			[Column("Ip",TypeName="bigint")] public long? Ip {get; set;}
			[Column("InitialLevel",TypeName="varchar")] public string InitialLevel {get; set;}
			[Column("Source",TypeName="varchar")] public string Source {get; set;}
		}

		[Table("ResellerLevels",Schema="dbo")]
		public partial class ResellerLevels
		{
			[Column("ResellerLevelID",TypeName="int")] public int ResellerLevelID {get; set;}
			[Column("LevelName",TypeName="varchar")] public string LevelName {get; set;}
			[Column("LevelTitle",TypeName="varchar")] public string LevelTitle {get; set;}
			[Column("LevelDesc",TypeName="varchar")] public string LevelDesc {get; set;}
			[Column("StartValue",TypeName="int")] public int StartValue {get; set;}
			[Column("EndValue",TypeName="int")] public int? EndValue {get; set;}
			[Column("ResellerType",TypeName="varchar")] public string ResellerType {get; set;}
			[Column("AssignYN",TypeName="bit")] public bool AssignYN {get; set;}
			[Column("LevelSequence",TypeName="int")] public int LevelSequence {get; set;}
			[Column("RoleID",TypeName="int")] public int? RoleID {get; set;}
			[Column("IsVisibleToUser",TypeName="bit")] public bool IsVisibleToUser {get; set;}
		}

		[Table("ResellerVoucherProducts",Schema="dbo")]
		public partial class ResellerVoucherProducts
		{
			[Column("ResellerVoucherProductId",TypeName="int")] public int ResellerVoucherProductId {get; set;}
			[Column("VoucherId",TypeName="int")] public int VoucherId {get; set;}
			[Column("ProductName",TypeName="varchar")] public string ProductName {get; set;}
			[Column("ActionName",TypeName="varchar")] public string ActionName {get; set;}
			[Column("Duration",TypeName="smallint")] public short? Duration {get; set;}
			[Column("DurationType",TypeName="varchar")] public string DurationType {get; set;}
			[Column("Quantity",TypeName="int")] public int? Quantity {get; set;}
			[Column("PartnerCost",TypeName="smallmoney")] public decimal? PartnerCost {get; set;}
			[Column("PartnerAdditionalCost",TypeName="smallmoney")] public decimal? PartnerAdditionalCost {get; set;}
		}

		[Table("ResellerVoucherRedeemDetails",Schema="dbo")]
		public partial class ResellerVoucherRedeemDetails
		{
			[Column("ResellerVoucherRedeemDetailId",TypeName="int")] public int ResellerVoucherRedeemDetailId {get; set;}
			[Column("ResellerVoucherProductId",TypeName="int")] public int ResellerVoucherProductId {get; set;}
			[Column("ItemId",TypeName="int")] public int ItemId {get; set;}
			[Column("OrderItemId",TypeName="int")] public int OrderItemId {get; set;}
			[Column("IsCancelled",TypeName="bit")] public bool IsCancelled {get; set;}
		}

		[Table("ResellerVouchers",Schema="dbo")]
		public partial class ResellerVouchers
		{
			[Column("VoucherId",TypeName="int")] public int VoucherId {get; set;}
			[Column("VoucherCode",TypeName="varchar")] public string VoucherCode {get; set;}
			[Column("VoucherType",TypeName="varchar")] public string VoucherType {get; set;}
			[Column("ResellerUserId",TypeName="int")] public int ResellerUserId {get; set;}
			[Column("ExpirationDate",TypeName="int")] public int ExpirationDate {get; set;}
			[Column("IsActive",TypeName="bit")] public bool IsActive {get; set;}
			[Column("AddedBy",TypeName="nchar")] public string AddedBy {get; set;}
			[Column("AddedDateTime",TypeName="int")] public int? AddedDateTime {get; set;}
			[Column("VoucherPurchaseOrderId",TypeName="int")] public int? VoucherPurchaseOrderId {get; set;}
			[Column("RedeemedByUserId",TypeName="nvarchar")] public string RedeemedByUserId {get; set;}
			[Column("RedeemedIp",TypeName="bigint")] public long? RedeemedIp {get; set;}
			[Column("RedeemedDate",TypeName="int")] public int? RedeemedDate {get; set;}
			[Column("RedeemOrderId",TypeName="int")] public int? RedeemOrderId {get; set;}
			[Column("RedeemTransactionId",TypeName="int")] public int? RedeemTransactionId {get; set;}
			[Column("RedeemPartnerCustom1",TypeName="nvarchar")] public string RedeemPartnerCustom1 {get; set;}
			[Column("RedeemPartnerCustom2",TypeName="nvarchar")] public string RedeemPartnerCustom2 {get; set;}
		}

		[Table("Restriction",Schema="dbo")]
		public partial class Restriction
		{
			[Column("RestrictionId",TypeName="int")] public int RestrictionId {get; set;}
			[Column("RestrictionName",TypeName="nvarchar")] public string RestrictionName {get; set;}
			[Column("Description",TypeName="varchar")] public string Description {get; set;}
			[Column("ShowDefaultUserMessage",TypeName="varchar")] public string ShowDefaultUserMessage {get; set;}
			[Column("Title",TypeName="varchar")] public string Title {get; set;}
		}

		[Table("ricardo2002$",Schema="dbo")]
		public partial class ricardo2002
		{
			[Column("domainname",TypeName="varchar")] public string domainname {get; set;}
		}

		[Table("SetParkingHostTmp",Schema="dbo")]
		public partial class SetParkingHostTmp
		{
			[Column("Auto_id",TypeName="int")] public int Auto_id {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("Host_Change_Completed_YN",TypeName="bit")] public bool Host_Change_Completed_YN {get; set;}
			[Column("Is_Record_Processed",TypeName="bit")] public bool? Is_Record_Processed {get; set;}
		}

		[Table("Sheet1",Schema="dbo")]
		public partial class Sheet1
		{
			[Column("Order ID",TypeName="float")] public double? Order_ID {get; set;}
			[Column("Domain",TypeName="nvarchar")] public string Domain {get; set;}
			[Column("Action",TypeName="nvarchar")] public string Action {get; set;}
			[Column("Price",TypeName="float")] public double? Price {get; set;}
		}

		[Table("ShoppingCartProcess",Schema="dbo")]
		public partial class ShoppingCartProcess
		{
			[Column("ShoppingCartProcessID",TypeName="bigint")] public long ShoppingCartProcessID {get; set;}
			[Column("CheckoutProcessID",TypeName="varchar")] public string CheckoutProcessID {get; set;}
			[Column("RefID",TypeName="varchar")] public string RefID {get; set;}
			[Column("CheckoutID",TypeName="varchar")] public string CheckoutID {get; set;}
			[Column("CreatedDateTime",TypeName="int")] public int CreatedDateTime {get; set;}
			[Column("PromotionCode",TypeName="varchar")] public string PromotionCode {get; set;}
			[Column("PromotionCodeDescription",TypeName="varchar")] public string PromotionCodeDescription {get; set;}
			[Column("IsGlobalPromotion",TypeName="bit")] public bool IsGlobalPromotion {get; set;}
			[Column("GlobalPromotionDiscount",TypeName="money")] public decimal? GlobalPromotionDiscount {get; set;}
			[Column("IsGlobalPromotionPercentageType",TypeName="bit")] public bool IsGlobalPromotionPercentageType {get; set;}
			[Column("LastUpdatedDateTime",TypeName="int")] public int LastUpdatedDateTime {get; set;}
			[Column("Total",TypeName="money")] public decimal Total {get; set;}
			[Column("CheckoutStatus",TypeName="varchar")] public string CheckoutStatus {get; set;}
			[Column("CheckoutStatusDescription",TypeName="varchar")] public string CheckoutStatusDescription {get; set;}
			[Column("CheckoutStatusDatetime",TypeName="int")] public int? CheckoutStatusDatetime {get; set;}
			[Column("CMSCartServerName",TypeName="varchar")] public string CMSCartServerName {get; set;}
			[Column("PaymentMode",TypeName="varchar")] public string PaymentMode {get; set;}
			[Column("InvoiceAddr",TypeName="xml")] public string InvoiceAddr {get; set;}
		}

		[Table("ShoppingCartProcessItemAddons",Schema="dbo")]
		public partial class ShoppingCartProcessItemAddons
		{
			[Column("AutoID",TypeName="bigint")] public long AutoID {get; set;}
			[Column("ShoppingCartItemID",TypeName="bigint")] public long ShoppingCartItemID {get; set;}
			[Column("ShoppingCartProcessID",TypeName="bigint")] public long ShoppingCartProcessID {get; set;}
			[Column("AddonName",TypeName="varchar")] public string AddonName {get; set;}
			[Column("AddonGroupName",TypeName="varchar")] public string AddonGroupName {get; set;}
			[Column("Qty",TypeName="int")] public int Qty {get; set;}
			[Column("RegularPrice",TypeName="smallmoney")] public decimal RegularPrice {get; set;}
			[Column("IsRegularPricingTypeMultiple",TypeName="bit")] public bool IsRegularPricingTypeMultiple {get; set;}
			[Column("RegularPricingHint",TypeName="varchar")] public string RegularPricingHint {get; set;}
			[Column("SpecialPrice",TypeName="smallmoney")] public decimal? SpecialPrice {get; set;}
			[Column("SpecialPricingHint",TypeName="varchar")] public string SpecialPricingHint {get; set;}
			[Column("IsSpecialPricingTypeMultiple",TypeName="bit")] public bool? IsSpecialPricingTypeMultiple {get; set;}
			[Column("Price",TypeName="smallmoney")] public decimal Price {get; set;}
			[Column("PricingHint",TypeName="varchar")] public string PricingHint {get; set;}
			[Column("IsPricingTypeMultiple",TypeName="bit")] public bool IsPricingTypeMultiple {get; set;}
			[Column("AppliedPricingMode",TypeName="varchar")] public string AppliedPricingMode {get; set;}
			[Column("RegularAdditionalCost",TypeName="smallmoney")] public decimal? RegularAdditionalCost {get; set;}
			[Column("RegularAdditionalCostHint",TypeName="varchar")] public string RegularAdditionalCostHint {get; set;}
			[Column("IsRegularAdditionalCostTypeMultiple",TypeName="bit")] public bool? IsRegularAdditionalCostTypeMultiple {get; set;}
			[Column("SpecialAdditionalCost",TypeName="smallmoney")] public decimal? SpecialAdditionalCost {get; set;}
			[Column("SpecialAdditionalCostHint",TypeName="varchar")] public string SpecialAdditionalCostHint {get; set;}
			[Column("IsSpecialAdditionalCostTypeMultiple",TypeName="bit")] public bool? IsSpecialAdditionalCostTypeMultiple {get; set;}
			[Column("AdditionalCost",TypeName="smallmoney")] public decimal? AdditionalCost {get; set;}
			[Column("AdditionalCostHint",TypeName="varchar")] public string AdditionalCostHint {get; set;}
			[Column("IsAdditionalCostTypeMultiple",TypeName="bit")] public bool? IsAdditionalCostTypeMultiple {get; set;}
			[Column("AppliedAdditionalCostMode",TypeName="varchar")] public string AppliedAdditionalCostMode {get; set;}
			[Column("PricePromotionCode",TypeName="varchar")] public string PricePromotionCode {get; set;}
			[Column("PricePromotionCodeApplyType",TypeName="varchar")] public string PricePromotionCodeApplyType {get; set;}
			[Column("AdditionalCostPromotionCode",TypeName="varchar")] public string AdditionalCostPromotionCode {get; set;}
			[Column("AdditionalCostPromotionCodeApplyType",TypeName="varchar")] public string AdditionalCostPromotionCodeApplyType {get; set;}
			[Column("Title",TypeName="varchar")] public string Title {get; set;}
			[Column("IgnoreQty",TypeName="int")] public int? IgnoreQty {get; set;}
		}

		[Table("ShoppingCartProcessItems",Schema="dbo")]
		public partial class ShoppingCartProcessItems
		{
			[Column("ShoppingCartItemID",TypeName="bigint")] public long ShoppingCartItemID {get; set;}
			[Column("ShoppingCartProcessID",TypeName="bigint")] public long ShoppingCartProcessID {get; set;}
			[Column("ProductName",TypeName="varchar")] public string ProductName {get; set;}
			[Column("ActionName",TypeName="varchar")] public string ActionName {get; set;}
			[Column("Duration",TypeName="smallint")] public short Duration {get; set;}
			[Column("DurationType",TypeName="varchar")] public string DurationType {get; set;}
			[Column("Name",TypeName="varchar")] public string Name {get; set;}
			[Column("Title",TypeName="varchar")] public string Title {get; set;}
			[Column("TitleShownToAddAgain",TypeName="varchar")] public string TitleShownToAddAgain {get; set;}
			[Column("Qty",TypeName="int")] public int Qty {get; set;}
			[Column("RegularPrice",TypeName="smallmoney")] public decimal RegularPrice {get; set;}
			[Column("RegularPricingHint",TypeName="varchar")] public string RegularPricingHint {get; set;}
			[Column("IsRegularPricingTypeMultiple",TypeName="bit")] public bool IsRegularPricingTypeMultiple {get; set;}
			[Column("SpecialPrice",TypeName="smallmoney")] public decimal? SpecialPrice {get; set;}
			[Column("SpecialPricingHint",TypeName="varchar")] public string SpecialPricingHint {get; set;}
			[Column("IsSpecialPricingTypeMultiple",TypeName="bit")] public bool? IsSpecialPricingTypeMultiple {get; set;}
			[Column("Price",TypeName="smallmoney")] public decimal Price {get; set;}
			[Column("PricingHint",TypeName="varchar")] public string PricingHint {get; set;}
			[Column("IsPricingTypeMultiple",TypeName="bit")] public bool IsPricingTypeMultiple {get; set;}
			[Column("AppliedPricingMode",TypeName="varchar")] public string AppliedPricingMode {get; set;}
			[Column("RegularAdditionalCost",TypeName="smallmoney")] public decimal? RegularAdditionalCost {get; set;}
			[Column("RegularAdditionalCostHint",TypeName="varchar")] public string RegularAdditionalCostHint {get; set;}
			[Column("IsRegularAdditionalCostTypeMultiple",TypeName="bit")] public bool? IsRegularAdditionalCostTypeMultiple {get; set;}
			[Column("SpecialAdditionalCost",TypeName="smallmoney")] public decimal? SpecialAdditionalCost {get; set;}
			[Column("SpecialAdditionalCostHint",TypeName="varchar")] public string SpecialAdditionalCostHint {get; set;}
			[Column("IsSpecialAdditionalCostTypeMultiple",TypeName="bit")] public bool? IsSpecialAdditionalCostTypeMultiple {get; set;}
			[Column("AdditionalCost",TypeName="smallmoney")] public decimal? AdditionalCost {get; set;}
			[Column("AdditionalCostHint",TypeName="varchar")] public string AdditionalCostHint {get; set;}
			[Column("IsAdditionalCostTypeMultiple",TypeName="bit")] public bool? IsAdditionalCostTypeMultiple {get; set;}
			[Column("AppliedAdditionalCostMode",TypeName="varchar")] public string AppliedAdditionalCostMode {get; set;}
			[Column("AddonsTotalPrice",TypeName="smallmoney")] public decimal? AddonsTotalPrice {get; set;}
			[Column("PricePromotionCode",TypeName="varchar")] public string PricePromotionCode {get; set;}
			[Column("PricePromotionCodeApplyType",TypeName="varchar")] public string PricePromotionCodeApplyType {get; set;}
			[Column("AdditionalCostPromotionCode",TypeName="varchar")] public string AdditionalCostPromotionCode {get; set;}
			[Column("AdditionalCostPromotionCodeApplyType",TypeName="varchar")] public string AdditionalCostPromotionCodeApplyType {get; set;}
			[Column("PricingPackageID",TypeName="int")] public int? PricingPackageID {get; set;}
			[Column("PricingPackageTriggerID",TypeName="int")] public int? PricingPackageTriggerID {get; set;}
			[Column("ParentShoppingCartItemID",TypeName="bigint")] public long? ParentShoppingCartItemID {get; set;}
			[Column("IsAddedByBonusTypeAddNew",TypeName="bit")] public bool IsAddedByBonusTypeAddNew {get; set;}
			[Column("IsActive",TypeName="bit")] public bool IsActive {get; set;}
			[Column("IsDeleted",TypeName="bit")] public bool IsDeleted {get; set;}
			[Column("RelatedItemID",TypeName="bigint")] public long? RelatedItemID {get; set;}
			[Column("Options",TypeName="nvarchar")] public string Options {get; set;}
			[Column("PriceCalculationFactor",TypeName="float")] public double PriceCalculationFactor {get; set;}
			[Column("IsSuccess",TypeName="bit")] public bool IsSuccess {get; set;}
			[Column("ErrorInfo",TypeName="varchar")] public string ErrorInfo {get; set;}
			[Column("ProviderRawData",TypeName="nvarchar")] public string ProviderRawData {get; set;}
			[Column("SettingStatus",TypeName="varchar")] public string SettingStatus {get; set;}
			[Column("SettingStatusDateTime",TypeName="int")] public int? SettingStatusDateTime {get; set;}
			[Column("SettingStatusDesc",TypeName="nvarchar")] public string SettingStatusDesc {get; set;}
			[Column("LosingRegistrar",TypeName="nvarchar")] public string LosingRegistrar {get; set;}
			[Column("TierPricingID",TypeName="int")] public int? TierPricingID {get; set;}
			[Column("AutoRenew",TypeName="bit")] public bool? AutoRenew {get; set;}
		}

		[Table("shoptemp",Schema="dbo")]
		public partial class shoptemp
		{
			[Column("dataname",TypeName="varchar")] public string dataname {get; set;}
			[Column("data",TypeName="varchar")] public string data {get; set;}
		}

		[Table("statsreport",Schema="dbo")]
		public partial class statsreport
		{
			[Column("username",TypeName="nvarchar")] public string username {get; set;}
			[Column("domaincount",TypeName="int")] public int? domaincount {get; set;}
			[Column("rate",TypeName="int")] public int? rate {get; set;}
		}

		[Table("SunsetMailinglist",Schema="dbo")]
		public partial class SunsetMailinglist
		{
			[Column("LoginID",TypeName="float")] public double? LoginID {get; set;}
			[Column("FirstName",TypeName="nvarchar")] public string FirstName {get; set;}
			[Column("LastName",TypeName="nvarchar")] public string LastName {get; set;}
			[Column("Email",TypeName="nvarchar")] public string Email {get; set;}
		}

		[Table("TBL_ABUSED_DETAILS",Schema="dbo")]
		public partial class TBL_ABUSED_DETAILS
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("abuseType",TypeName="varchar")] public string abuseType {get; set;}
			[Column("complainant",TypeName="varchar")] public string complainant {get; set;}
			[Column("ticketID",TypeName="varchar")] public string ticketID {get; set;}
			[Column("domainID",TypeName="int")] public int? domainID {get; set;}
			[Column("domainName",TypeName="varchar")] public string domainName {get; set;}
			[Column("status",TypeName="varchar")] public string status {get; set;}
			[Column("description",TypeName="varchar")] public string description {get; set;}
			[Column("createdDate",TypeName="datetime")] public DateTime? createdDate {get; set;}
			[Column("adminUserName",TypeName="varchar")] public string adminUserName {get; set;}
		}

		[Table("TBL_ABUSED_DOMAINS",Schema="dbo")]
		public partial class TBL_ABUSED_DOMAINS
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("domainName",TypeName="nvarchar")] public string domainName {get; set;}
			[Column("userName_Notice1",TypeName="nvarchar")] public string userName_Notice1 {get; set;}
			[Column("emailId_Notice1",TypeName="nvarchar")] public string emailId_Notice1 {get; set;}
			[Column("emailSentDateTime_Notice1",TypeName="datetime")] public DateTime? emailSentDateTime_Notice1 {get; set;}
			[Column("userName_Notice2",TypeName="nvarchar")] public string userName_Notice2 {get; set;}
			[Column("emailId_Notice2",TypeName="nvarchar")] public string emailId_Notice2 {get; set;}
			[Column("emailSentDateTime_Notice2",TypeName="datetime")] public DateTime? emailSentDateTime_Notice2 {get; set;}
			[Column("createdDateTime",TypeName="datetime")] public DateTime? createdDateTime {get; set;}
			[Column("lastListedDateTime",TypeName="datetime")] public DateTime? lastListedDateTime {get; set;}
			[Column("scheduleDisableDateTime",TypeName="datetime")] public DateTime? scheduleDisableDateTime {get; set;}
			[Column("disableDNS",TypeName="bit")] public bool? disableDNS {get; set;}
			[Column("status",TypeName="varchar")] public string status {get; set;}
			[Column("isArchived",TypeName="bit")] public bool isArchived {get; set;}
			[Column("dnsProviderType",TypeName="varchar")] public string dnsProviderType {get; set;}
		}

		[Table("TBL_ACTION",Schema="dbo")]
		public partial class TBL_ACTION
		{
			[Column("Action_ID",TypeName="varchar")] public string Action_ID {get; set;}
			[Column("Action_Description",TypeName="varchar")] public string Action_Description {get; set;}
		}

		[Table("TBL_AD_GROUP_TYPE",Schema="dbo")]
		public partial class TBL_AD_GROUP_TYPE
		{
			[Column("Group_Type_ID",TypeName="int")] public int Group_Type_ID {get; set;}
			[Column("Value",TypeName="varchar")] public string Value {get; set;}
		}

		[Table("TBL_AD_GROUPS",Schema="dbo")]
		public partial class TBL_AD_GROUPS
		{
			[Column("Ad_Group_Id",TypeName="int")] public int Ad_Group_Id {get; set;}
			[Column("Ad_Group_Name",TypeName="varchar")] public string Ad_Group_Name {get; set;}
			[Column("Description",TypeName="text")] public string Description {get; set;}
			[Column("Group_Type_Id",TypeName="int")] public int? Group_Type_Id {get; set;}
		}

		[Table("TBL_ADD_FUNDS_REQUEST",Schema="dbo")]
		public partial class TBL_ADD_FUNDS_REQUEST
		{
			[Column("AutoId",TypeName="numeric")] public decimal AutoId {get; set;}
			[Column("TokenId",TypeName="varchar")] public string TokenId {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("RequestorUserName",TypeName="nvarchar")] public string RequestorUserName {get; set;}
			[Column("RequestorUserType",TypeName="nvarchar")] public string RequestorUserType {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime CreatedDateTime {get; set;}
			[Column("Status",TypeName="varchar")] public string Status {get; set;}
			[Column("RequestedAmount",TypeName="money")] public decimal RequestedAmount {get; set;}
			[Column("ActualAmount",TypeName="money")] public decimal? ActualAmount {get; set;}
			[Column("TrasactionId",TypeName="numeric")] public decimal? TrasactionId {get; set;}
			[Column("CreatedByEndUserIP",TypeName="varchar")] public string CreatedByEndUserIP {get; set;}
			[Column("CreatedByRequestIP",TypeName="varchar")] public string CreatedByRequestIP {get; set;}
			[Column("ReturnUrl",TypeName="varchar")] public string ReturnUrl {get; set;}
			[Column("SubStatus",TypeName="varchar")] public string SubStatus {get; set;}
			[Column("LastUpdatedDateTime",TypeName="datetime")] public DateTime? LastUpdatedDateTime {get; set;}
			[Column("SubmittedIPAddress",TypeName="varchar")] public string SubmittedIPAddress {get; set;}
		}

		[Table("TBL_ADMIN_ALLOWED_DOMAINS",Schema="dbo")]
		public partial class TBL_ADMIN_ALLOWED_DOMAINS
		{
			[Column("Id",TypeName="smallint")] public short Id {get; set;}
			[Column("Admin_User_Id",TypeName="int")] public int Admin_User_Id {get; set;}
			[Column("Domain",TypeName="varchar")] public string Domain {get; set;}
			[Column("AddedBy",TypeName="varchar")] public string AddedBy {get; set;}
			[Column("AddedOn",TypeName="datetime")] public DateTime? AddedOn {get; set;}
			[Column("AddedComments",TypeName="text")] public string AddedComments {get; set;}
		}

		[Table("TBL_ADMIN_ALLOWED_IPS",Schema="dbo")]
		public partial class TBL_ADMIN_ALLOWED_IPS
		{
			[Column("Id",TypeName="smallint")] public short Id {get; set;}
			[Column("Admin_User_Id",TypeName="int")] public int Admin_User_Id {get; set;}
			[Column("IPClassA",TypeName="tinyint")] public byte? IPClassA {get; set;}
			[Column("IPClassB",TypeName="tinyint")] public byte? IPClassB {get; set;}
			[Column("IPClassC",TypeName="tinyint")] public byte? IPClassC {get; set;}
			[Column("IPClassD",TypeName="tinyint")] public byte? IPClassD {get; set;}
			[Column("AddedBy",TypeName="varchar")] public string AddedBy {get; set;}
			[Column("AddedOn",TypeName="datetime")] public DateTime? AddedOn {get; set;}
			[Column("AddedComments",TypeName="text")] public string AddedComments {get; set;}
		}

		[Table("TBL_ADMIN_BATCH_PROCESS_DETAILS",Schema="dbo")]
		public partial class TBL_ADMIN_BATCH_PROCESS_DETAILS
		{
			[Column("AutoId",TypeName="int")] public int AutoId {get; set;}
			[Column("Admin_UserName",TypeName="varchar")] public string Admin_UserName {get; set;}
			[Column("Session_Id",TypeName="varchar")] public string Session_Id {get; set;}
			[Column("Object_Type",TypeName="varchar")] public string Object_Type {get; set;}
			[Column("Object_Name",TypeName="nvarchar")] public string Object_Name {get; set;}
			[Column("Action",TypeName="varchar")] public string Action {get; set;}
			[Column("Added_From_Page",TypeName="varchar")] public string Added_From_Page {get; set;}
			[Column("Status",TypeName="varchar")] public string Status {get; set;}
			[Column("Status_DateTime",TypeName="int")] public int? Status_DateTime {get; set;}
			[Column("Status_Description",TypeName="varchar")] public string Status_Description {get; set;}
			[Column("Added_DateTime",TypeName="int")] public int? Added_DateTime {get; set;}
			[Column("Reason",TypeName="varchar")] public string Reason {get; set;}
			[Column("ReasonForAdmin",TypeName="varchar")] public string ReasonForAdmin {get; set;}
			[Column("NamecheapLock",TypeName="bit")] public bool? NamecheapLock {get; set;}
			[Column("RegistrarLock",TypeName="bit")] public bool? RegistrarLock {get; set;}
			[Column("ClientUpdateProhibited",TypeName="bit")] public bool? ClientUpdateProhibited {get; set;}
			[Column("ClientDeleteProhibited",TypeName="bit")] public bool? ClientDeleteProhibited {get; set;}
			[Column("ClientHold",TypeName="bit")] public bool? ClientHold {get; set;}
			[Column("DisableAutoRenew",TypeName="bit")] public bool? DisableAutoRenew {get; set;}
		}

		[Table("TBL_ADMIN_BATCH_PROCESS_DETAILS_backup",Schema="dbo")]
		public partial class TBL_ADMIN_BATCH_PROCESS_DETAILS_backup
		{
			[Column("AutoId",TypeName="int")] public int AutoId {get; set;}
			[Column("Admin_UserName",TypeName="varchar")] public string Admin_UserName {get; set;}
			[Column("Session_Id",TypeName="varchar")] public string Session_Id {get; set;}
			[Column("Object_Type",TypeName="varchar")] public string Object_Type {get; set;}
			[Column("Object_Name",TypeName="varchar")] public string Object_Name {get; set;}
			[Column("Action",TypeName="varchar")] public string Action {get; set;}
			[Column("Added_From_Page",TypeName="varchar")] public string Added_From_Page {get; set;}
			[Column("Status",TypeName="varchar")] public string Status {get; set;}
			[Column("Status_DateTime",TypeName="int")] public int? Status_DateTime {get; set;}
			[Column("Status_Description",TypeName="varchar")] public string Status_Description {get; set;}
			[Column("Added_DateTime",TypeName="int")] public int? Added_DateTime {get; set;}
			[Column("Reason",TypeName="varchar")] public string Reason {get; set;}
			[Column("ReasonForAdmin",TypeName="varchar")] public string ReasonForAdmin {get; set;}
		}

		[Table("TBL_ADMIN_FAVOURITE_LINK",Schema="dbo")]
		public partial class TBL_ADMIN_FAVOURITE_LINK
		{
			[Column("Admin_User_Id",TypeName="tinyint")] public byte Admin_User_Id {get; set;}
			[Column("Admin_Favourite_LinkId",TypeName="varchar")] public string Admin_Favourite_LinkId {get; set;}
			[Column("Seq_No",TypeName="smallint")] public short? Seq_No {get; set;}
		}

		[Table("TBL_ADMIN_LOG",Schema="dbo")]
		public partial class TBL_ADMIN_LOG
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Admin_User_Id",TypeName="int")] public int Admin_User_Id {get; set;}
			[Column("IPClassA",TypeName="tinyint")] public byte? IPClassA {get; set;}
			[Column("IPClassB",TypeName="tinyint")] public byte? IPClassB {get; set;}
			[Column("IPClassC",TypeName="tinyint")] public byte? IPClassC {get; set;}
			[Column("IPClassD",TypeName="tinyint")] public byte? IPClassD {get; set;}
			[Column("List_Type",TypeName="varchar")] public string List_Type {get; set;}
			[Column("Activity_Date_Time",TypeName="datetime")] public DateTime? Activity_Date_Time {get; set;}
		}

		[Table("TBL_ADMIN_LOG_CREDITCARD_REFUNDS",Schema="dbo")]
		public partial class TBL_ADMIN_LOG_CREDITCARD_REFUNDS
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Admin_User_Id",TypeName="int")] public int? Admin_User_Id {get; set;}
			[Column("Parent_Transaction_Id",TypeName="int")] public int? Parent_Transaction_Id {get; set;}
			[Column("Status",TypeName="nvarchar")] public string Status {get; set;}
			[Column("Description",TypeName="nvarchar")] public string Description {get; set;}
			[Column("Transaction_Id",TypeName="int")] public int? Transaction_Id {get; set;}
			[Column("Created_Date_Time",TypeName="datetime")] public DateTime? Created_Date_Time {get; set;}
			[Column("Comments",TypeName="nvarchar")] public string Comments {get; set;}
		}

		[Table("TBL_ADMIN_LOGIN_TOKENS",Schema="dbo")]
		public partial class TBL_ADMIN_LOGIN_TOKENS
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("TicketGuid",TypeName="nvarchar")] public string TicketGuid {get; set;}
			[Column("TicketDate",TypeName="datetime")] public DateTime? TicketDate {get; set;}
			[Column("AdminIpAddress",TypeName="varchar")] public string AdminIpAddress {get; set;}
			[Column("AdminUser",TypeName="nvarchar")] public string AdminUser {get; set;}
			[Column("Reason",TypeName="nvarchar")] public string Reason {get; set;}
			[Column("UserToImpersonate",TypeName="int")] public int? UserToImpersonate {get; set;}
			[Column("TicketUseStatus",TypeName="varchar")] public string TicketUseStatus {get; set;}
			[Column("TicketUseDate",TypeName="datetime")] public DateTime? TicketUseDate {get; set;}
			[Column("TicketUseIpAddress",TypeName="varchar")] public string TicketUseIpAddress {get; set;}
		}

		[Table("TBL_ADMIN_ROLES",Schema="dbo")]
		public partial class TBL_ADMIN_ROLES
		{
			[Column("RoleID",TypeName="int")] public int RoleID {get; set;}
			[Column("RoleName",TypeName="varchar")] public string RoleName {get; set;}
			[Column("Description",TypeName="varchar")] public string Description {get; set;}
			[Column("DisabledYN",TypeName="bit")] public bool DisabledYN {get; set;}
			[Column("IsPrimary",TypeName="bit")] public bool? IsPrimary {get; set;}
		}

		[Table("TBL_ADMIN_ROLES_ADMIN_SITE_PAGES",Schema="dbo")]
		public partial class TBL_ADMIN_ROLES_ADMIN_SITE_PAGES
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("RoleId",TypeName="int")] public int RoleId {get; set;}
			[Column("SitePageId",TypeName="int")] public int SitePageId {get; set;}
		}

		[Table("TBL_ADMIN_ROLES_OXCOMMANDS",Schema="dbo")]
		public partial class TBL_ADMIN_ROLES_OXCOMMANDS
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("AdminRoleId",TypeName="int")] public int AdminRoleId {get; set;}
			[Column("OXCommandId",TypeName="int")] public int OXCommandId {get; set;}
		}

		[Table("TBL_ADMIN_SITE_PAGES",Schema="dbo")]
		public partial class TBL_ADMIN_SITE_PAGES
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
		}

		[Table("TBL_Admin_User_LogMessageDepartment",Schema="dbo")]
		public partial class TBL_Admin_User_LogMessageDepartment
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("AdminUserId",TypeName="tinyint")] public byte AdminUserId {get; set;}
			[Column("DepartmentId",TypeName="int")] public int DepartmentId {get; set;}
		}

		[Table("TBL_ADMIN_USERS",Schema="dbo")]
		public partial class TBL_ADMIN_USERS
		{
			[Column("Admin_User_Id",TypeName="int")] public int Admin_User_Id {get; set;}
			[Column("Admin_UserName",TypeName="varchar")] public string Admin_UserName {get; set;}
			[Column("PassWord",TypeName="varchar")] public string PassWord {get; set;}
			[Column("Password_Expiry_Date",TypeName="datetime")] public DateTime? Password_Expiry_Date {get; set;}
			[Column("FullName",TypeName="varchar")] public string FullName {get; set;}
			[Column("EmailAddress",TypeName="varchar")] public string EmailAddress {get; set;}
			[Column("Locked_Yn",TypeName="bit")] public bool Locked_Yn {get; set;}
			[Column("Locked_Reason_Id",TypeName="smallint")] public short? Locked_Reason_Id {get; set;}
			[Column("Login_Try",TypeName="smallint")] public short? Login_Try {get; set;}
			[Column("Temp_Password_YN",TypeName="bit")] public bool Temp_Password_YN {get; set;}
			[Column("Is_Super_Admin",TypeName="bit")] public bool Is_Super_Admin {get; set;}
			[Column("RevealUserPwdYN",TypeName="bit")] public bool RevealUserPwdYN {get; set;}
			[Column("displayName",TypeName="varchar")] public string displayName {get; set;}
			[Column("isShowAllDepartment",TypeName="bit")] public bool isShowAllDepartment {get; set;}
		}

		[Table("TBL_ADMIN_USERS_ADMIN_ROLES",Schema="dbo")]
		public partial class TBL_ADMIN_USERS_ADMIN_ROLES
		{
			[Column("AdminId",TypeName="int")] public int AdminId {get; set;}
			[Column("AdminRoleId",TypeName="int")] public int AdminRoleId {get; set;}
		}

		[Table("TBL_ADS",Schema="dbo")]
		public partial class TBL_ADS
		{
			[Column("Ad_Id",TypeName="int")] public int Ad_Id {get; set;}
			[Column("Title",TypeName="varchar")] public string Title {get; set;}
			[Column("Image_URL",TypeName="varchar")] public string Image_URL {get; set;}
			[Column("Image_Width",TypeName="smallint")] public short? Image_Width {get; set;}
			[Column("Image_Height",TypeName="smallint")] public short? Image_Height {get; set;}
			[Column("Target_Link",TypeName="varchar")] public string Target_Link {get; set;}
			[Column("Description",TypeName="text")] public string Description {get; set;}
			[Column("TextType_YN",TypeName="bit")] public bool? TextType_YN {get; set;}
			[Column("HTML_Map",TypeName="text")] public string HTML_Map {get; set;}
		}

		[Table("TBL_ADS_ADGROUPS",Schema="dbo")]
		public partial class TBL_ADS_ADGROUPS
		{
			[Column("Ad_Id",TypeName="int")] public int Ad_Id {get; set;}
			[Column("Ad_Group_Id",TypeName="int")] public int Ad_Group_Id {get; set;}
			[Column("Seq",TypeName="int")] public int? Seq {get; set;}
		}

		[Table("TBL_AFFILIATE_COMMISSION_CALCULATION_STATUS",Schema="dbo")]
		public partial class TBL_AFFILIATE_COMMISSION_CALCULATION_STATUS
		{
			[Column("statusID",TypeName="tinyint")] public byte statusID {get; set;}
			[Column("status",TypeName="varchar")] public string status {get; set;}
			[Column("statusDescription",TypeName="varchar")] public string statusDescription {get; set;}
			[Column("StatusTitle_For_User",TypeName="varchar")] public string StatusTitle_For_User {get; set;}
		}

		[Table("TBL_AFFILIATE_EARNED_COMMISSION",Schema="dbo")]
		public partial class TBL_AFFILIATE_EARNED_COMMISSION
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("affiliateID",TypeName="int")] public int affiliateID {get; set;}
			[Column("TLD_Name",TypeName="varchar")] public string TLD_Name {get; set;}
			[Column("Action_ID",TypeName="varchar")] public string Action_ID {get; set;}
			[Column("OrderID",TypeName="int")] public int? OrderID {get; set;}
			[Column("OrderDetailID",TypeName="int")] public int? OrderDetailID {get; set;}
			[Column("commissionValue",TypeName="float")] public double? commissionValue {get; set;}
			[Column("commissionType",TypeName="char")] public string commissionType {get; set;}
			[Column("additionalCostCommissionType",TypeName="char")] public string additionalCostCommissionType {get; set;}
			[Column("additionalCostCommissionValue",TypeName="float")] public double? additionalCostCommissionValue {get; set;}
			[Column("commissionAmount",TypeName="smallmoney")] public decimal? commissionAmount {get; set;}
			[Column("ignoreYears",TypeName="bit")] public bool? ignoreYears {get; set;}
			[Column("ignoreQty",TypeName="bit")] public bool? ignoreQty {get; set;}
			[Column("saleDate",TypeName="int")] public int? saleDate {get; set;}
			[Column("createdDateTime",TypeName="int")] public int? createdDateTime {get; set;}
			[Column("processedYN",TypeName="bit")] public bool processedYN {get; set;}
			[Column("relatedAutoID",TypeName="int")] public int? relatedAutoID {get; set;}
			[Column("quantity",TypeName="int")] public int? quantity {get; set;}
			[Column("details",TypeName="varchar")] public string details {get; set;}
			[Column("addonCostCommissionType",TypeName="char")] public string addonCostCommissionType {get; set;}
			[Column("addonCostCommissionValue",TypeName="float")] public double? addonCostCommissionValue {get; set;}
		}

		[Table("TBL_AFFILIATE_GLOBAL_COMMISSION",Schema="dbo")]
		public partial class TBL_AFFILIATE_GLOBAL_COMMISSION
		{
			[Column("commissionID",TypeName="int")] public int commissionID {get; set;}
			[Column("TLD_Pricing_ID",TypeName="int")] public int TLD_Pricing_ID {get; set;}
			[Column("commissionType",TypeName="char")] public string commissionType {get; set;}
			[Column("commissionValue",TypeName="float")] public double? commissionValue {get; set;}
			[Column("additionalCostCommissionType",TypeName="char")] public string additionalCostCommissionType {get; set;}
			[Column("additionalCostCommissionValue",TypeName="float")] public double? additionalCostCommissionValue {get; set;}
			[Column("ignoreYears",TypeName="bit")] public bool ignoreYears {get; set;}
			[Column("ignoreQty",TypeName="bit")] public bool ignoreQty {get; set;}
			[Column("addonCostCommissionType",TypeName="char")] public string addonCostCommissionType {get; set;}
			[Column("addonCostCommissionValue",TypeName="float")] public double? addonCostCommissionValue {get; set;}
		}

		[Table("TBL_AFFILIATE_GLOBAL_CONFIG",Schema="dbo")]
		public partial class TBL_AFFILIATE_GLOBAL_CONFIG
		{
			[Column("numberOfOrdersCommissionAppliedFor",TypeName="int")] public int? numberOfOrdersCommissionAppliedFor {get; set;}
			[Column("canUseAfflCodeForOwnAccount",TypeName="bit")] public bool canUseAfflCodeForOwnAccount {get; set;}
			[Column("numberOfDaysToWaitToProcessOrder",TypeName="tinyint")] public byte numberOfDaysToWaitToProcessOrder {get; set;}
			[Column("numberOfDaysToWaitToProcessCommission",TypeName="tinyint")] public byte? numberOfDaysToWaitToProcessCommission {get; set;}
		}

		[Table("TBL_AFFILIATE_PROGRAM",Schema="dbo")]
		public partial class TBL_AFFILIATE_PROGRAM
		{
			[Column("affiliateProgramID",TypeName="int")] public int affiliateProgramID {get; set;}
			[Column("affiliateProgramName",TypeName="varchar")] public string affiliateProgramName {get; set;}
			[Column("affiliateProgramDescription",TypeName="varchar")] public string affiliateProgramDescription {get; set;}
			[Column("createdDateTime",TypeName="int")] public int? createdDateTime {get; set;}
			[Column("expiryDateTime",TypeName="int")] public int? expiryDateTime {get; set;}
			[Column("numberOfOrdersCommissionAppliedFor",TypeName="int")] public int? numberOfOrdersCommissionAppliedFor {get; set;}
			[Column("canUseAfflCodeForOwnAccount",TypeName="bit")] public bool? canUseAfflCodeForOwnAccount {get; set;}
			[Column("programLandingPage",TypeName="varchar")] public string programLandingPage {get; set;}
			[Column("affilitateSpecificYN",TypeName="bit")] public bool affilitateSpecificYN {get; set;}
			[Column("promotionCode",TypeName="varchar")] public string promotionCode {get; set;}
			[Column("grantCommissionForSpecifiedProductsOnly",TypeName="bit")] public bool grantCommissionForSpecifiedProductsOnly {get; set;}
		}

		[Table("TBL_AFFILIATE_PROGRAM_COMMISSION",Schema="dbo")]
		public partial class TBL_AFFILIATE_PROGRAM_COMMISSION
		{
			[Column("programCommissionID",TypeName="int")] public int programCommissionID {get; set;}
			[Column("affiliateProgramID",TypeName="int")] public int? affiliateProgramID {get; set;}
			[Column("commissionID",TypeName="int")] public int? commissionID {get; set;}
			[Column("commissionType",TypeName="char")] public string commissionType {get; set;}
			[Column("commissionValue",TypeName="float")] public double? commissionValue {get; set;}
			[Column("additionalCostCommissionType",TypeName="char")] public string additionalCostCommissionType {get; set;}
			[Column("additionalCostCommissionValue",TypeName="float")] public double? additionalCostCommissionValue {get; set;}
			[Column("ignoreYears",TypeName="bit")] public bool? ignoreYears {get; set;}
			[Column("ignoreQty",TypeName="bit")] public bool? ignoreQty {get; set;}
			[Column("addonCostCommissionType",TypeName="char")] public string addonCostCommissionType {get; set;}
			[Column("addonCostCommissionValue",TypeName="float")] public double? addonCostCommissionValue {get; set;}
		}

		[Table("TBL_AFFILIATE_PROGRAM_USER",Schema="dbo")]
		public partial class TBL_AFFILIATE_PROGRAM_USER
		{
			[Column("affiliateID",TypeName="int")] public int affiliateID {get; set;}
			[Column("affiliateProgramID",TypeName="int")] public int affiliateProgramID {get; set;}
		}

		[Table("TBL_AFFILIATE_TRACK_ORDER_PROCESS",Schema="dbo")]
		public partial class TBL_AFFILIATE_TRACK_ORDER_PROCESS
		{
			[Column("maxOrdersToProcessInSingleRun",TypeName="int")] public int maxOrdersToProcessInSingleRun {get; set;}
			[Column("lastProcessedOrderID",TypeName="numeric")] public decimal? lastProcessedOrderID {get; set;}
			[Column("lastProcessedDateTime",TypeName="int")] public int? lastProcessedDateTime {get; set;}
		}

		[Table("TBL_AFFILIATE_TRACK_UNPROCESSED_CANCEL_ORDERS",Schema="dbo")]
		public partial class TBL_AFFILIATE_TRACK_UNPROCESSED_CANCEL_ORDERS
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("OrderID",TypeName="int")] public int? OrderID {get; set;}
			[Column("OrderDetailID",TypeName="int")] public int? OrderDetailID {get; set;}
			[Column("ProcessedYN",TypeName="bit")] public bool ProcessedYN {get; set;}
			[Column("AdminCancelledYN",TypeName="bit")] public bool? AdminCancelledYN {get; set;}
			[Column("Details",TypeName="varchar")] public string Details {get; set;}
		}

		[Table("TBL_AFFILIATE_TRANSACTION",Schema="dbo")]
		public partial class TBL_AFFILIATE_TRANSACTION
		{
			[Column("affiliateTransactionID",TypeName="int")] public int affiliateTransactionID {get; set;}
			[Column("affiliateID",TypeName="int")] public int? affiliateID {get; set;}
			[Column("transactionType",TypeName="varchar")] public string transactionType {get; set;}
			[Column("paymentMode",TypeName="varchar")] public string paymentMode {get; set;}
			[Column("transactionDate",TypeName="int")] public int? transactionDate {get; set;}
			[Column("createdDateTime",TypeName="int")] public int? createdDateTime {get; set;}
			[Column("amount",TypeName="smallmoney")] public decimal? amount {get; set;}
			[Column("previousBalance",TypeName="smallmoney")] public decimal? previousBalance {get; set;}
			[Column("currentBalance",TypeName="smallmoney")] public decimal? currentBalance {get; set;}
			[Column("paypalEmail",TypeName="varchar")] public string paypalEmail {get; set;}
			[Column("referenceID",TypeName="int")] public int? referenceID {get; set;}
			[Column("referenceIDType",TypeName="varchar")] public string referenceIDType {get; set;}
		}

		[Table("TBL_AFFILIATE_USER",Schema="dbo")]
		public partial class TBL_AFFILIATE_USER
		{
			[Column("affiliateID",TypeName="int")] public int affiliateID {get; set;}
			[Column("userID",TypeName="int")] public int userID {get; set;}
			[Column("isDeleted",TypeName="bit")] public bool isDeleted {get; set;}
			[Column("lockedByAdminYN",TypeName="bit")] public bool lockedByAdminYN {get; set;}
			[Column("createdDateTime",TypeName="int")] public int? createdDateTime {get; set;}
			[Column("ip",TypeName="bigint")] public long? ip {get; set;}
			[Column("allowToWithdrawIfLocked",TypeName="bit")] public bool allowToWithdrawIfLocked {get; set;}
		}

		[Table("TBL_AFFILIATE_USER_COMMISSION",Schema="dbo")]
		public partial class TBL_AFFILIATE_USER_COMMISSION
		{
			[Column("userCommissionID",TypeName="int")] public int userCommissionID {get; set;}
			[Column("affiliateID",TypeName="int")] public int? affiliateID {get; set;}
			[Column("commissionID",TypeName="int")] public int? commissionID {get; set;}
			[Column("commissionType",TypeName="char")] public string commissionType {get; set;}
			[Column("commissionValue",TypeName="float")] public double? commissionValue {get; set;}
			[Column("additionalCostCommissionType",TypeName="char")] public string additionalCostCommissionType {get; set;}
			[Column("additionalCostCommissionValue",TypeName="float")] public double? additionalCostCommissionValue {get; set;}
			[Column("ignoreYears",TypeName="bit")] public bool? ignoreYears {get; set;}
			[Column("ignoreQty",TypeName="bit")] public bool? ignoreQty {get; set;}
			[Column("addonCostCommissionType",TypeName="char")] public string addonCostCommissionType {get; set;}
			[Column("addonCostCommissionValue",TypeName="float")] public double? addonCostCommissionValue {get; set;}
		}

		[Table("TBL_AFFILIATE_USER_OPTIONS",Schema="dbo")]
		public partial class TBL_AFFILIATE_USER_OPTIONS
		{
			[Column("affiliateID",TypeName="int")] public int affiliateID {get; set;}
			[Column("numberOfOrdersCommissionAppliedFor",TypeName="int")] public int? numberOfOrdersCommissionAppliedFor {get; set;}
			[Column("canUseAfflCodeForOwnAccount",TypeName="bit")] public bool? canUseAfflCodeForOwnAccount {get; set;}
			[Column("lockedByAdminReason",TypeName="varchar")] public string lockedByAdminReason {get; set;}
			[Column("lockedByAdminInternalReason",TypeName="varchar")] public string lockedByAdminInternalReason {get; set;}
			[Column("deletedReason",TypeName="varchar")] public string deletedReason {get; set;}
			[Column("deletedInternalReason",TypeName="varchar")] public string deletedInternalReason {get; set;}
		}

		[Table("TBL_ALL_TLDS",Schema="dbo")]
		public partial class TBL_ALL_TLDS
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("TLD_Name",TypeName="varchar")] public string TLD_Name {get; set;}
			[Column("Allow_DNSHosting_YN",TypeName="bit")] public bool Allow_DNSHosting_YN {get; set;}
			[Column("IsSubLevel",TypeName="bit")] public bool? IsSubLevel {get; set;}
		}

		[Table("TBL_API_ALLOWED_IPS",Schema="dbo")]
		public partial class TBL_API_ALLOWED_IPS
		{
			[Column("API_IP_ID",TypeName="numeric")] public decimal API_IP_ID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("IP",TypeName="varchar")] public string IP {get; set;}
			[Column("Added_Date_Time",TypeName="datetime")] public DateTime? Added_Date_Time {get; set;}
			[Column("Disabled_By_Admin_YN",TypeName="bit")] public bool Disabled_By_Admin_YN {get; set;}
		}

		[Table("TBL_API_APP_USER_ALLOWED_IPS",Schema="dbo")]
		public partial class TBL_API_APP_USER_ALLOWED_IPS
		{
			[Column("IP_ID",TypeName="numeric")] public decimal IP_ID {get; set;}
			[Column("AppUserName",TypeName="varchar")] public string AppUserName {get; set;}
			[Column("IP",TypeName="varchar")] public string IP {get; set;}
			[Column("Added_Date_Time",TypeName="datetime")] public DateTime? Added_Date_Time {get; set;}
			[Column("Disabled_By_Admin_YN",TypeName="bit")] public bool Disabled_By_Admin_YN {get; set;}
		}

		[Table("TBL_API_COMMAND",Schema="dbo")]
		public partial class TBL_API_COMMAND
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("CommandName",TypeName="nvarchar")] public string CommandName {get; set;}
		}

		[Table("TBL_API_COMMAND_SCOPE",Schema="dbo")]
		public partial class TBL_API_COMMAND_SCOPE
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("ApiCommandId",TypeName="int")] public int ApiCommandId {get; set;}
			[Column("ApiScopeId",TypeName="int")] public int ApiScopeId {get; set;}
		}

		[Table("TBL_API_SCOPE",Schema="dbo")]
		public partial class TBL_API_SCOPE
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("ScopeName",TypeName="nvarchar")] public string ScopeName {get; set;}
		}

		[Table("TBL_API_SCOPE_APP_ROLE",Schema="dbo")]
		public partial class TBL_API_SCOPE_APP_ROLE
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("ApiScopeId",TypeName="int")] public int ApiScopeId {get; set;}
			[Column("AppRoleId",TypeName="int")] public int AppRoleId {get; set;}
		}

		[Table("TBL_API_SCOPE_ROLE",Schema="dbo")]
		public partial class TBL_API_SCOPE_ROLE
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("ApiScopeId",TypeName="int")] public int ApiScopeId {get; set;}
			[Column("RoleId",TypeName="int")] public int RoleId {get; set;}
		}

		[Table("TBL_APP_ROLES",Schema="dbo")]
		public partial class TBL_APP_ROLES
		{
			[Column("RoleID",TypeName="int")] public int RoleID {get; set;}
			[Column("RoleName",TypeName="varchar")] public string RoleName {get; set;}
			[Column("Description",TypeName="varchar")] public string Description {get; set;}
			[Column("DisabledYN",TypeName="bit")] public bool DisabledYN {get; set;}
		}

		[Table("TBL_APP_USER_APP_ROLES",Schema="dbo")]
		public partial class TBL_APP_USER_APP_ROLES
		{
			[Column("UserID",TypeName="int")] public int UserID {get; set;}
			[Column("RoleID",TypeName="int")] public int RoleID {get; set;}
		}

		[Table("TBL_APP_USER_KEYS",Schema="dbo")]
		public partial class TBL_APP_USER_KEYS
		{
			[Column("App_User_key_Id",TypeName="int")] public int App_User_key_Id {get; set;}
			[Column("App_User_Id",TypeName="int")] public int? App_User_Id {get; set;}
			[Column("EndUser_IP_Taken_From",TypeName="varchar")] public string EndUser_IP_Taken_From {get; set;}
			[Column("Key_Version",TypeName="varchar")] public string Key_Version {get; set;}
			[Column("Key",TypeName="varchar")] public string Key {get; set;}
			[Column("Key_Expiration_Timestamp",TypeName="int")] public int? Key_Expiration_Timestamp {get; set;}
			[Column("Show_Warning_Message",TypeName="bit")] public bool Show_Warning_Message {get; set;}
			[Column("Warning_Message",TypeName="varchar")] public string Warning_Message {get; set;}
			[Column("Key_Status",TypeName="varchar")] public string Key_Status {get; set;}
			[Column("Decryption_Key",TypeName="text")] public string Decryption_Key {get; set;}
			[Column("EncryptDecrypt_Type",TypeName="varchar")] public string EncryptDecrypt_Type {get; set;}
			[Column("EncryptDecrypt_Algorithm",TypeName="varchar")] public string EncryptDecrypt_Algorithm {get; set;}
			[Column("EncryptDecrypt_Properties",TypeName="text")] public string EncryptDecrypt_Properties {get; set;}
		}

		[Table("TBL_APP_USERS",Schema="dbo")]
		public partial class TBL_APP_USERS
		{
			[Column("App_User_Id",TypeName="int")] public int App_User_Id {get; set;}
			[Column("App_User_Name",TypeName="varchar")] public string App_User_Name {get; set;}
			[Column("App_User_URL",TypeName="varchar")] public string App_User_URL {get; set;}
			[Column("Status",TypeName="varchar")] public string Status {get; set;}
			[Column("MasterPassword",TypeName="varchar")] public string MasterPassword {get; set;}
			[Column("IsAllowedByIPOnly",TypeName="bit")] public bool IsAllowedByIPOnly {get; set;}
			[Column("Title",TypeName="nvarchar")] public string Title {get; set;}
			[Column("Description",TypeName="nvarchar")] public string Description {get; set;}
			[Column("OAuth20CallBack",TypeName="nvarchar")] public string OAuth20CallBack {get; set;}
			[Column("Disable2FACheck",TypeName="bit")] public bool Disable2FACheck {get; set;}
		}

		[Table("TBL_ATTRIBUTE",Schema="dbo")]
		public partial class TBL_ATTRIBUTE
		{
			[Column("AttributeId",TypeName="int")] public int AttributeId {get; set;}
			[Column("AttributeName",TypeName="varchar")] public string AttributeName {get; set;}
			[Column("AttributeGroupId",TypeName="int")] public int? AttributeGroupId {get; set;}
			[Column("Description",TypeName="text")] public string Description {get; set;}
			[Column("Sequence",TypeName="int")] public int? Sequence {get; set;}
		}

		[Table("TBL_ATTRIBUTE_GROUP",Schema="dbo")]
		public partial class TBL_ATTRIBUTE_GROUP
		{
			[Column("AttributeGroupId",TypeName="int")] public int AttributeGroupId {get; set;}
			[Column("AttributeGroupName",TypeName="varchar")] public string AttributeGroupName {get; set;}
			[Column("Description",TypeName="text")] public string Description {get; set;}
			[Column("Sequence",TypeName="int")] public int? Sequence {get; set;}
			[Column("AttributeGroupTypeID",TypeName="int")] public int? AttributeGroupTypeID {get; set;}
		}

		[Table("TBL_ATTRIBUTE_GROUP_TYPE",Schema="dbo")]
		public partial class TBL_ATTRIBUTE_GROUP_TYPE
		{
			[Column("AttributeGroupTypeId",TypeName="int")] public int AttributeGroupTypeId {get; set;}
			[Column("AttributeGroupTypeName",TypeName="varchar")] public string AttributeGroupTypeName {get; set;}
			[Column("Description",TypeName="text")] public string Description {get; set;}
		}

		[Table("TBL_AUTORENEW_SKIP_FOR_USERLOCK",Schema="dbo")]
		public partial class TBL_AUTORENEW_SKIP_FOR_USERLOCK
		{
			[Column("Username",TypeName="varchar")] public string Username {get; set;}
			[Column("LoginTry",TypeName="int")] public int LoginTry {get; set;}
			[Column("Domainname",TypeName="varchar")] public string Domainname {get; set;}
			[Column("ExpireDateTime",TypeName="datetime")] public DateTime ExpireDateTime {get; set;}
			[Column("RecordCreatedDate",TypeName="datetime")] public DateTime RecordCreatedDate {get; set;}
		}

		[Table("TBL_BANNED_DOMAIN",Schema="dbo")]
		public partial class TBL_BANNED_DOMAIN
		{
			[Column("Ban_ID",TypeName="int")] public int Ban_ID {get; set;}
			[Column("Banned_Domain",TypeName="varchar")] public string Banned_Domain {get; set;}
			[Column("Banned_Comments",TypeName="varchar")] public string Banned_Comments {get; set;}
			[Column("Banned_Admin_Comments",TypeName="varchar")] public string Banned_Admin_Comments {get; set;}
			[Column("Banned_Type",TypeName="varchar")] public string Banned_Type {get; set;}
			[Column("Last_Updated_DateTime",TypeName="datetime")] public DateTime? Last_Updated_DateTime {get; set;}
			[Column("Last_Updated_By",TypeName="varchar")] public string Last_Updated_By {get; set;}
		}

		[Table("TBL_BANNED_DOMAIN_bkup_before_insert",Schema="dbo")]
		public partial class TBL_BANNED_DOMAIN_bkup_before_insert
		{
			[Column("Ban_ID",TypeName="int")] public int Ban_ID {get; set;}
			[Column("Banned_Domain",TypeName="varchar")] public string Banned_Domain {get; set;}
			[Column("Banned_Comments",TypeName="varchar")] public string Banned_Comments {get; set;}
			[Column("Banned_Admin_Comments",TypeName="varchar")] public string Banned_Admin_Comments {get; set;}
			[Column("Banned_Type",TypeName="varchar")] public string Banned_Type {get; set;}
			[Column("Last_Updated_DateTime",TypeName="datetime")] public DateTime? Last_Updated_DateTime {get; set;}
			[Column("Last_Updated_By",TypeName="varchar")] public string Last_Updated_By {get; set;}
		}

		[Table("TBL_BANNED_DOMAIN2",Schema="dbo")]
		public partial class TBL_BANNED_DOMAIN2
		{
			[Column("Ban_ID",TypeName="int")] public int Ban_ID {get; set;}
			[Column("Banned_Domain",TypeName="varchar")] public string Banned_Domain {get; set;}
			[Column("Banned_Comments",TypeName="varchar")] public string Banned_Comments {get; set;}
			[Column("Banned_Admin_Comments",TypeName="varchar")] public string Banned_Admin_Comments {get; set;}
			[Column("Banned_Type",TypeName="varchar")] public string Banned_Type {get; set;}
			[Column("Last_Updated_DateTime",TypeName="datetime")] public DateTime? Last_Updated_DateTime {get; set;}
			[Column("Last_Updated_By",TypeName="varchar")] public string Last_Updated_By {get; set;}
		}

		[Table("TBL_BANNED_PASSWORD",Schema="dbo")]
		public partial class TBL_BANNED_PASSWORD
		{
			[Column("Ban_ID",TypeName="int")] public int Ban_ID {get; set;}
			[Column("Banned_Password",TypeName="varchar")] public string Banned_Password {get; set;}
			[Column("Banned_Admin_Comments",TypeName="varchar")] public string Banned_Admin_Comments {get; set;}
			[Column("Last_Updated_DateTime",TypeName="datetime")] public DateTime? Last_Updated_DateTime {get; set;}
			[Column("Last_Updated_By",TypeName="varchar")] public string Last_Updated_By {get; set;}
		}

		[Table("TBL_BLOCKED_IP_LIST",Schema="dbo")]
		public partial class TBL_BLOCKED_IP_LIST
		{
			[Column("BlockedID",TypeName="int")] public int BlockedID {get; set;}
			[Column("BlockedIP",TypeName="varchar")] public string BlockedIP {get; set;}
			[Column("BlockedComments",TypeName="varchar")] public string BlockedComments {get; set;}
			[Column("AdminUserName",TypeName="varchar")] public string AdminUserName {get; set;}
			[Column("AdminUserIP",TypeName="varchar")] public string AdminUserIP {get; set;}
			[Column("LastUpdatedDateTime",TypeName="datetime")] public DateTime? LastUpdatedDateTime {get; set;}
		}

		[Table("TBL_CATEGORY",Schema="dbo")]
		public partial class TBL_CATEGORY
		{
			[Column("Category_ID",TypeName="numeric")] public decimal Category_ID {get; set;}
			[Column("Category_Name",TypeName="nvarchar")] public string Category_Name {get; set;}
			[Column("Parent_Category_ID",TypeName="numeric")] public decimal? Parent_Category_ID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
		}

		[Table("TBL_CHECKOUT_STATUS",Schema="dbo")]
		public partial class TBL_CHECKOUT_STATUS
		{
			[Column("CheckoutStatusId",TypeName="tinyint")] public byte CheckoutStatusId {get; set;}
			[Column("CheckoutStatus",TypeName="varchar")] public string CheckoutStatus {get; set;}
			[Column("StatusDescription",TypeName="varchar")] public string StatusDescription {get; set;}
		}

		[Table("TBL_CONFIG",Schema="dbo")]
		public partial class TBL_CONFIG
		{
			[Column("Auto_ID",TypeName="numeric")] public decimal Auto_ID {get; set;}
			[Column("Key",TypeName="varchar")] public string Key {get; set;}
			[Column("Value1",TypeName="varchar")] public string Value1 {get; set;}
			[Column("Value2",TypeName="varchar")] public string Value2 {get; set;}
			[Column("Value3",TypeName="varchar")] public string Value3 {get; set;}
			[Column("Value4",TypeName="varchar")] public string Value4 {get; set;}
			[Column("Value5",TypeName="varchar")] public string Value5 {get; set;}
		}

		[Table("TBL_CONFIG_COUNTRY_CODES",Schema="dbo")]
		public partial class TBL_CONFIG_COUNTRY_CODES
		{
			[Column("Country_Code",TypeName="nvarchar")] public string Country_Code {get; set;}
			[Column("Country_Name",TypeName="nvarchar")] public string Country_Name {get; set;}
		}

		[Table("TBL_CONFIG_US_STATES",Schema="dbo")]
		public partial class TBL_CONFIG_US_STATES
		{
			[Column("State_Code",TypeName="nvarchar")] public string State_Code {get; set;}
			[Column("State_Name",TypeName="nvarchar")] public string State_Name {get; set;}
		}

		[Table("TBL_CURRENCY_CONVERSION_DATA_CACHE",Schema="dbo")]
		public partial class TBL_CURRENCY_CONVERSION_DATA_CACHE
		{
			[Column("versionId",TypeName="int")] public int versionId {get; set;}
			[Column("source",TypeName="varchar")] public string source {get; set;}
			[Column("sourceUrl",TypeName="varchar")] public string sourceUrl {get; set;}
			[Column("dataUrl",TypeName="varchar")] public string dataUrl {get; set;}
			[Column("data",TypeName="text")] public string data {get; set;}
			[Column("dataFormat",TypeName="varchar")] public string dataFormat {get; set;}
			[Column("dataDateTime",TypeName="datetime")] public DateTime? dataDateTime {get; set;}
			[Column("baseCurrencyCode",TypeName="varchar")] public string baseCurrencyCode {get; set;}
			[Column("message",TypeName="varchar")] public string message {get; set;}
			[Column("cacheDateTime",TypeName="datetime")] public DateTime? cacheDateTime {get; set;}
		}

		[Table("tbl_debug_check_free_dns",Schema="dbo")]
		public partial class tbl_debug_check_free_dns
		{
			[Column("domainname",TypeName="varchar")] public string domainname {get; set;}
			[Column("ourdns",TypeName="bit")] public bool? ourdns {get; set;}
			[Column("response",TypeName="varchar")] public string response {get; set;}
			[Column("err1",TypeName="varchar")] public string err1 {get; set;}
			[Column("lastupdate",TypeName="datetime")] public DateTime? lastupdate {get; set;}
		}

		[Table("TBL_DEVICE_TYPE",Schema="dbo")]
		public partial class TBL_DEVICE_TYPE
		{
			[Column("Id",TypeName="smallint")] public short Id {get; set;}
			[Column("DeviceTypeName",TypeName="nvarchar")] public string DeviceTypeName {get; set;}
		}

		[Table("TBL_DNS",Schema="dbo")]
		public partial class TBL_DNS
		{
			[Column("Dns_ID",TypeName="int")] public int Dns_ID {get; set;}
			[Column("Dns_Name",TypeName="varchar")] public string Dns_Name {get; set;}
			[Column("Comments",TypeName="varchar")] public string Comments {get; set;}
			[Column("Log_Type",TypeName="varchar")] public string Log_Type {get; set;}
		}

		[Table("TBL_DNS_LOG",Schema="dbo")]
		public partial class TBL_DNS_LOG
		{
			[Column("DnsLog_ID",TypeName="numeric")] public decimal DnsLog_ID {get; set;}
			[Column("DomainName",TypeName="varchar")] public string DomainName {get; set;}
			[Column("UserName",TypeName="varchar")] public string UserName {get; set;}
			[Column("DnsName",TypeName="varchar")] public string DnsName {get; set;}
			[Column("LogTime",TypeName="datetime")] public DateTime? LogTime {get; set;}
			[Column("Log_Type",TypeName="varchar")] public string Log_Type {get; set;}
		}

		[Table("TBL_DNS_NAMESERVERS",Schema="dbo")]
		public partial class TBL_DNS_NAMESERVERS
		{
			[Column("nsId",TypeName="int")] public int nsId {get; set;}
			[Column("domainId",TypeName="int")] public int? domainId {get; set;}
			[Column("nsName",TypeName="varchar")] public string nsName {get; set;}
			[Column("sequence",TypeName="tinyint")] public byte? sequence {get; set;}
			[Column("lastUpdatedDateTime",TypeName="bigint")] public long? lastUpdatedDateTime {get; set;}
		}

		[Table("TBL_DNS_REPLICATION_LOG",Schema="dbo")]
		public partial class TBL_DNS_REPLICATION_LOG
		{
			[Column("id",TypeName="uniqueidentifier")] public Guid id {get; set;}
			[Column("started_DateTime",TypeName="datetime")] public DateTime? started_DateTime {get; set;}
			[Column("newProviderId",TypeName="tinyint")] public byte? newProviderId {get; set;}
			[Column("oldProviderId",TypeName="tinyint")] public byte? oldProviderId {get; set;}
			[Column("type",TypeName="varchar")] public string type {get; set;}
			[Column("domainId",TypeName="int")] public int? domainId {get; set;}
			[Column("isHostedDomain",TypeName="bit")] public bool? isHostedDomain {get; set;}
		}

		[Table("TBL_DNS_REPLICATION_QUEUE_OPTIONS",Schema="dbo")]
		public partial class TBL_DNS_REPLICATION_QUEUE_OPTIONS
		{
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("QueueId",TypeName="smallint")] public short? QueueId {get; set;}
			[Column("InternalComments",TypeName="varchar")] public string InternalComments {get; set;}
			[Column("AddedBy",TypeName="varchar")] public string AddedBy {get; set;}
			[Column("AddedDateTime",TypeName="datetime")] public DateTime? AddedDateTime {get; set;}
		}

		[Table("TBL_DNS_RR",Schema="dbo")]
		public partial class TBL_DNS_RR
		{
			[Column("rrId",TypeName="int")] public int rrId {get; set;}
			[Column("soaId",TypeName="int")] public int? soaId {get; set;}
			[Column("host",TypeName="varchar")] public string host {get; set;}
			[Column("recordType",TypeName="varchar")] public string recordType {get; set;}
			[Column("data",TypeName="varchar")] public string data {get; set;}
			[Column("priority",TypeName="tinyint")] public byte? priority {get; set;}
			[Column("ttl",TypeName="int")] public int? ttl {get; set;}
			[Column("pageTitle",TypeName="varchar")] public string pageTitle {get; set;}
			[Column("metaKeyword",TypeName="varchar")] public string metaKeyword {get; set;}
			[Column("metaDescription",TypeName="varchar")] public string metaDescription {get; set;}
		}

		[Table("TBL_DNS_SOA",Schema="dbo")]
		public partial class TBL_DNS_SOA
		{
			[Column("soaId",TypeName="int")] public int soaId {get; set;}
			[Column("domainId",TypeName="int")] public int? domainId {get; set;}
			[Column("minimumTTL",TypeName="int")] public int? minimumTTL {get; set;}
			[Column("ttl",TypeName="int")] public int? ttl {get; set;}
			[Column("isActive",TypeName="bit")] public bool? isActive {get; set;}
			[Column("updatedDateTime",TypeName="int")] public int? updatedDateTime {get; set;}
			[Column("createdDateTime",TypeName="int")] public int? createdDateTime {get; set;}
			[Column("hostName",TypeName="varchar")] public string hostName {get; set;}
		}

		[Table("TBL_DNSSEC_DATA",Schema="dbo")]
		public partial class TBL_DNSSEC_DATA
		{
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("KeyTag",TypeName="int")] public int KeyTag {get; set;}
			[Column("Algorithm",TypeName="int")] public int Algorithm {get; set;}
			[Column("DigestType",TypeName="int")] public int DigestType {get; set;}
			[Column("DigiestData",TypeName="nvarchar")] public string DigiestData {get; set;}
		}

		[Table("TBL_DOMAIN",Schema="dbo")]
		public partial class TBL_DOMAIN
		{
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("Pwd",TypeName="nvarchar")] public string Pwd {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("RegDateTime",TypeName="datetime")] public DateTime? RegDateTime {get; set;}
			[Column("PayStatus",TypeName="nvarchar")] public string PayStatus {get; set;}
			[Column("TransID",TypeName="nvarchar")] public string TransID {get; set;}
			[Column("OrderID",TypeName="nvarchar")] public string OrderID {get; set;}
			[Column("NumYears",TypeName="tinyint")] public byte? NumYears {get; set;}
			[Column("EnomTransID",TypeName="nvarchar")] public string EnomTransID {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("Computed_Expire_Date_Time",TypeName="datetime")] public DateTime? Computed_Expire_Date_Time {get; set;}
			[Column("Computed_Num_Days_To_Expire",TypeName="int")] public int? Computed_Num_Days_To_Expire {get; set;}
			[Column("Computed_TLD",TypeName="varchar")] public string Computed_TLD {get; set;}
			[Column("Expired_YN",TypeName="bit")] public bool? Expired_YN {get; set;}
			[Column("Domain_ID",TypeName="numeric")] public decimal Domain_ID {get; set;}
			[Column("User_ID",TypeName="numeric")] public decimal? User_ID {get; set;}
			[Column("Reseller_ID",TypeName="numeric")] public decimal? Reseller_ID {get; set;}
			[Column("Domain_Locked_YN",TypeName="bit")] public bool? Domain_Locked_YN {get; set;}
			[Column("Auto_Renew",TypeName="bit")] public bool? Auto_Renew {get; set;}
			[Column("Auto_Renew_Status",TypeName="varchar")] public string Auto_Renew_Status {get; set;}
			[Column("Auto_Renew_WG",TypeName="bit")] public bool? Auto_Renew_WG {get; set;}
			[Column("Auto_Renew_Status_WG",TypeName="nvarchar")] public string Auto_Renew_Status_WG {get; set;}
			[Column("Auto_Renew_POP3",TypeName="bit")] public bool? Auto_Renew_POP3 {get; set;}
			[Column("Auto_Renew_Status_POP3",TypeName="nvarchar")] public string Auto_Renew_Status_POP3 {get; set;}
			[Column("Deny_Listing_YN",TypeName="bit")] public bool? Deny_Listing_YN {get; set;}
			[Column("Deny_Listing_Description",TypeName="text")] public string Deny_Listing_Description {get; set;}
			[Column("Sale_Commission_Percentage",TypeName="int")] public int? Sale_Commission_Percentage {get; set;}
			[Column("Clear_POP3_Users_YN",TypeName="bit")] public bool? Clear_POP3_Users_YN {get; set;}
			[Column("Our_Registrar_YN",TypeName="bit")] public bool? Our_Registrar_YN {get; set;}
			[Column("dnsProviderId",TypeName="tinyint")] public byte? dnsProviderId {get; set;}
			[Column("emailProviderId",TypeName="tinyint")] public byte? emailProviderId {get; set;}
			[Column("urlProviderId",TypeName="tinyint")] public byte? urlProviderId {get; set;}
			[Column("ddnsPassword",TypeName="varchar")] public string ddnsPassword {get; set;}
			[Column("ProviderName",TypeName="varchar")] public string ProviderName {get; set;}
			[Column("Related_Expire_Domain_Process_Status_ID",TypeName="int")] public int? Related_Expire_Domain_Process_Status_ID {get; set;}
			[Column("OrderDetailID",TypeName="numeric")] public decimal? OrderDetailID {get; set;}
			[Column("InfoCacheExpiryDateTime",TypeName="datetime")] public DateTime? InfoCacheExpiryDateTime {get; set;}
			[Column("DnsSecEnabled_YN",TypeName="bit")] public bool DnsSecEnabled_YN {get; set;}
		}

		[Table("TBL_DOMAIN_AUTORENEW_LOG",Schema="dbo")]
		public partial class TBL_DOMAIN_AUTORENEW_LOG
		{
			[Column("Id",TypeName="bigint")] public long Id {get; set;}
			[Column("ActionDate",TypeName="datetime")] public DateTime ActionDate {get; set;}
			[Column("AutoRenew",TypeName="bit")] public bool? AutoRenew {get; set;}
			[Column("DomainName",TypeName="varchar")] public string DomainName {get; set;}
			[Column("OrderId",TypeName="numeric")] public decimal? OrderId {get; set;}
			[Column("UserName",TypeName="varchar")] public string UserName {get; set;}
			[Column("Reason",TypeName="varchar")] public string Reason {get; set;}
			[Column("AdminUserName",TypeName="varchar")] public string AdminUserName {get; set;}
			[Column("ReasonForAdmin",TypeName="varchar")] public string ReasonForAdmin {get; set;}
		}

		[Table("tbl_domain_backup_auto_renew_updt",Schema="dbo")]
		public partial class tbl_domain_backup_auto_renew_updt
		{
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("Pwd",TypeName="nvarchar")] public string Pwd {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("RegDateTime",TypeName="datetime")] public DateTime? RegDateTime {get; set;}
			[Column("PayStatus",TypeName="nvarchar")] public string PayStatus {get; set;}
			[Column("TransID",TypeName="nvarchar")] public string TransID {get; set;}
			[Column("OrderID",TypeName="nvarchar")] public string OrderID {get; set;}
			[Column("NumYears",TypeName="tinyint")] public byte? NumYears {get; set;}
			[Column("EnomTransID",TypeName="nvarchar")] public string EnomTransID {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("Computed_Expire_Date_Time",TypeName="datetime")] public DateTime? Computed_Expire_Date_Time {get; set;}
			[Column("Computed_Num_Days_To_Expire",TypeName="int")] public int? Computed_Num_Days_To_Expire {get; set;}
			[Column("Computed_TLD",TypeName="varchar")] public string Computed_TLD {get; set;}
			[Column("Expired_YN",TypeName="bit")] public bool? Expired_YN {get; set;}
			[Column("Domain_ID",TypeName="numeric")] public decimal Domain_ID {get; set;}
			[Column("User_ID",TypeName="numeric")] public decimal? User_ID {get; set;}
			[Column("Reseller_ID",TypeName="numeric")] public decimal? Reseller_ID {get; set;}
			[Column("Domain_Locked_YN",TypeName="bit")] public bool? Domain_Locked_YN {get; set;}
			[Column("Auto_Renew",TypeName="bit")] public bool? Auto_Renew {get; set;}
			[Column("Auto_Renew_Status",TypeName="varchar")] public string Auto_Renew_Status {get; set;}
			[Column("Auto_Renew_WG",TypeName="bit")] public bool? Auto_Renew_WG {get; set;}
			[Column("Auto_Renew_Status_WG",TypeName="nvarchar")] public string Auto_Renew_Status_WG {get; set;}
			[Column("Auto_Renew_POP3",TypeName="bit")] public bool? Auto_Renew_POP3 {get; set;}
			[Column("Auto_Renew_Status_POP3",TypeName="nvarchar")] public string Auto_Renew_Status_POP3 {get; set;}
			[Column("Deny_Listing_YN",TypeName="bit")] public bool? Deny_Listing_YN {get; set;}
			[Column("Deny_Listing_Description",TypeName="text")] public string Deny_Listing_Description {get; set;}
			[Column("Sale_Commission_Percentage",TypeName="int")] public int? Sale_Commission_Percentage {get; set;}
			[Column("Clear_POP3_Users_YN",TypeName="bit")] public bool? Clear_POP3_Users_YN {get; set;}
			[Column("Our_Registrar_YN",TypeName="bit")] public bool? Our_Registrar_YN {get; set;}
			[Column("dnsProviderId",TypeName="tinyint")] public byte? dnsProviderId {get; set;}
			[Column("emailProviderId",TypeName="tinyint")] public byte? emailProviderId {get; set;}
			[Column("urlProviderId",TypeName="tinyint")] public byte? urlProviderId {get; set;}
			[Column("ddnsPassword",TypeName="varchar")] public string ddnsPassword {get; set;}
			[Column("ProviderName",TypeName="varchar")] public string ProviderName {get; set;}
			[Column("Related_Expire_Domain_Process_Status_ID",TypeName="int")] public int? Related_Expire_Domain_Process_Status_ID {get; set;}
			[Column("OrderDetailID",TypeName="numeric")] public decimal? OrderDetailID {get; set;}
		}

		[Table("TBL_DOMAIN_CATEGORY",Schema="dbo")]
		public partial class TBL_DOMAIN_CATEGORY
		{
			[Column("Category_ID",TypeName="numeric")] public decimal Category_ID {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("IsHostedDomainYN",TypeName="bit")] public bool IsHostedDomainYN {get; set;}
		}

		[Table("TBL_DOMAIN_DNS",Schema="dbo")]
		public partial class TBL_DOMAIN_DNS
		{
			[Column("DNS_ID",TypeName="numeric")] public decimal DNS_ID {get; set;}
			[Column("Domain_ID",TypeName="numeric")] public decimal? Domain_ID {get; set;}
			[Column("DNS",TypeName="varchar")] public string DNS {get; set;}
		}

		[Table("TBL_DOMAIN_EMAIL",Schema="dbo")]
		public partial class TBL_DOMAIN_EMAIL
		{
			[Column("emailDomainId",TypeName="int")] public int emailDomainId {get; set;}
			[Column("domainName",TypeName="varchar")] public string domainName {get; set;}
			[Column("catchAllAddress",TypeName="varchar")] public string catchAllAddress {get; set;}
			[Column("isActive",TypeName="bit")] public bool? isActive {get; set;}
		}

		[Table("TBL_DOMAIN_EMAIL_ACCOUNTS",Schema="dbo")]
		public partial class TBL_DOMAIN_EMAIL_ACCOUNTS
		{
			[Column("emailAccountId",TypeName="int")] public int emailAccountId {get; set;}
			[Column("emailDomainId",TypeName="int")] public int? emailDomainId {get; set;}
			[Column("mailboxName",TypeName="varchar")] public string mailboxName {get; set;}
			[Column("mailboxPassword",TypeName="varchar")] public string mailboxPassword {get; set;}
		}

		[Table("TBL_DOMAIN_EMAIL_FORWARDING",Schema="dbo")]
		public partial class TBL_DOMAIN_EMAIL_FORWARDING
		{
			[Column("emailForwardingId",TypeName="int")] public int emailForwardingId {get; set;}
			[Column("emailDomainId",TypeName="int")] public int? emailDomainId {get; set;}
			[Column("mailboxName",TypeName="varchar")] public string mailboxName {get; set;}
			[Column("forwardedTo",TypeName="varchar")] public string forwardedTo {get; set;}
		}

		[Table("TBL_DOMAIN_LOCK_UNLOCK_INFO",Schema="dbo")]
		public partial class TBL_DOMAIN_LOCK_UNLOCK_INFO
		{
			[Column("id",TypeName="numeric")] public decimal id {get; set;}
			[Column("LockType",TypeName="varchar")] public string LockType {get; set;}
			[Column("DomainName",TypeName="varchar")] public string DomainName {get; set;}
			[Column("UserName",TypeName="varchar")] public string UserName {get; set;}
			[Column("reason",TypeName="varchar")] public string reason {get; set;}
			[Column("Order_id",TypeName="numeric")] public decimal? Order_id {get; set;}
			[Column("transaction_id",TypeName="varchar")] public string transaction_id {get; set;}
			[Column("transaction_date_time",TypeName="datetime")] public DateTime? transaction_date_time {get; set;}
			[Column("lock_yn",TypeName="bit")] public bool? lock_yn {get; set;}
			[Column("action_date_time",TypeName="datetime")] public DateTime? action_date_time {get; set;}
			[Column("admin_UserName",TypeName="varchar")] public string admin_UserName {get; set;}
			[Column("reasonCode",TypeName="smallint")] public short? reasonCode {get; set;}
			[Column("reasonForAdmin",TypeName="varchar")] public string reasonForAdmin {get; set;}
		}

		[Table("TBL_DOMAIN_LOG",Schema="dbo")]
		public partial class TBL_DOMAIN_LOG
		{
			[Column("ID",TypeName="numeric")] public decimal ID {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("NumYears",TypeName="smallint")] public short? NumYears {get; set;}
			[Column("TransactionID",TypeName="nvarchar")] public string TransactionID {get; set;}
			[Column("OrderID",TypeName="nvarchar")] public string OrderID {get; set;}
			[Column("CreateDate",TypeName="datetime")] public DateTime? CreateDate {get; set;}
			[Column("ActionID",TypeName="nvarchar")] public string ActionID {get; set;}
			[Column("ActionDate",TypeName="datetime")] public DateTime? ActionDate {get; set;}
			[Column("Push_To",TypeName="varchar")] public string Push_To {get; set;}
			[Column("domainId",TypeName="int")] public int? domainId {get; set;}
			[Column("Comments",TypeName="varchar")] public string Comments {get; set;}
			[Column("ProviderName",TypeName="varchar")] public string ProviderName {get; set;}
			[Column("OrderDetailID",TypeName="numeric")] public decimal? OrderDetailID {get; set;}
			[Column("AdditionalInfo",TypeName="varchar")] public string AdditionalInfo {get; set;}
			[Column("RegistrarDeleteYN",TypeName="varchar")] public string RegistrarDeleteYN {get; set;}
		}

		[Table("TBL_DOMAIN_LOG_FOR_HOSTS",Schema="dbo")]
		public partial class TBL_DOMAIN_LOG_FOR_HOSTS
		{
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("RegDateTime",TypeName="datetime")] public DateTime? RegDateTime {get; set;}
			[Column("GetHostDateTime",TypeName="datetime")] public DateTime? GetHostDateTime {get; set;}
			[Column("GetHostData",TypeName="text")] public string GetHostData {get; set;}
			[Column("DomainExpiredYN",TypeName="bit")] public bool? DomainExpiredYN {get; set;}
			[Column("DomainTransferredYN",TypeName="bit")] public bool? DomainTransferredYN {get; set;}
			[Column("UseEnomDNS",TypeName="int")] public int? UseEnomDNS {get; set;}
			[Column("UpdateNeededYN",TypeName="bit")] public bool? UpdateNeededYN {get; set;}
			[Column("UpdateSuccessfulYN",TypeName="bit")] public bool? UpdateSuccessfulYN {get; set;}
			[Column("UpdateStatus",TypeName="varchar")] public string UpdateStatus {get; set;}
			[Column("UpdateDateTime",TypeName="datetime")] public DateTime? UpdateDateTime {get; set;}
		}

		[Table("tbl_domain_log_temp",Schema="dbo")]
		public partial class tbl_domain_log_temp
		{
			[Column("ID",TypeName="numeric")] public decimal ID {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("NumYears",TypeName="smallint")] public short? NumYears {get; set;}
			[Column("TransactionID",TypeName="nvarchar")] public string TransactionID {get; set;}
			[Column("OrderID",TypeName="nvarchar")] public string OrderID {get; set;}
			[Column("CreateDate",TypeName="datetime")] public DateTime? CreateDate {get; set;}
			[Column("ActionID",TypeName="nvarchar")] public string ActionID {get; set;}
			[Column("ActionDate",TypeName="datetime")] public DateTime? ActionDate {get; set;}
			[Column("Push_To",TypeName="varchar")] public string Push_To {get; set;}
			[Column("domainId",TypeName="int")] public int? domainId {get; set;}
			[Column("Comments",TypeName="varchar")] public string Comments {get; set;}
		}

		[Table("TBL_DOMAIN_LOG_TRANSFERREDIN",Schema="dbo")]
		public partial class TBL_DOMAIN_LOG_TRANSFERREDIN
		{
			[Column("Id",TypeName="numeric")] public decimal Id {get; set;}
			[Column("DomainName",TypeName="varchar")] public string DomainName {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("TransferredDate",TypeName="datetime")] public DateTime TransferredDate {get; set;}
			[Column("LoosingRegistrar",TypeName="varchar")] public string LoosingRegistrar {get; set;}
		}

		[Table("TBL_DOMAIN_LOG_TRANSFERREDOUT",Schema="dbo")]
		public partial class TBL_DOMAIN_LOG_TRANSFERREDOUT
		{
			[Column("Id",TypeName="numeric")] public decimal Id {get; set;}
			[Column("DomainName",TypeName="varchar")] public string DomainName {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("TransferredDate",TypeName="datetime")] public DateTime TransferredDate {get; set;}
			[Column("GainingRegistrar",TypeName="varchar")] public string GainingRegistrar {get; set;}
			[Column("ExistInDomainTable",TypeName="bit")] public bool? ExistInDomainTable {get; set;}
			[Column("VerifiedInEnom_YN",TypeName="bit")] public bool? VerifiedInEnom_YN {get; set;}
			[Column("DomainDeleted_YN",TypeName="bit")] public bool? DomainDeleted_YN {get; set;}
			[Column("DeletedDate",TypeName="datetime")] public DateTime? DeletedDate {get; set;}
			[Column("MailSent_YN",TypeName="bit")] public bool? MailSent_YN {get; set;}
		}

		[Table("TBL_DOMAIN_OPTIONS",Schema="dbo")]
		public partial class TBL_DOMAIN_OPTIONS
		{
			[Column("domainName",TypeName="varchar")] public string domainName {get; set;}
			[Column("freeDnsDisallowedYN",TypeName="bit")] public bool freeDnsDisallowedYN {get; set;}
			[Column("freeDnsDisallowedReason",TypeName="varchar")] public string freeDnsDisallowedReason {get; set;}
			[Column("freeDnsDisallowedAdminReason",TypeName="varchar")] public string freeDnsDisallowedAdminReason {get; set;}
		}

		[Table("TBL_DOMAIN_PARKING_INFO",Schema="dbo")]
		public partial class TBL_DOMAIN_PARKING_INFO
		{
			[Column("Domain_Name",TypeName="nvarchar")] public string Domain_Name {get; set;}
			[Column("Parking_Text",TypeName="text")] public string Parking_Text {get; set;}
			[Column("Tracking_Code",TypeName="text")] public string Tracking_Code {get; set;}
			[Column("Updated_DateTime",TypeName="datetime")] public DateTime? Updated_DateTime {get; set;}
			[Column("Synced_DateTime",TypeName="datetime")] public DateTime? Synced_DateTime {get; set;}
			[Column("Deleted_DateTime",TypeName="datetime")] public DateTime? Deleted_DateTime {get; set;}
		}

		[Table("TBL_DOMAIN_RECORD_TYPE",Schema="dbo")]
		public partial class TBL_DOMAIN_RECORD_TYPE
		{
			[Column("Record_type_Id",TypeName="numeric")] public decimal Record_type_Id {get; set;}
			[Column("Get_Command",TypeName="varchar")] public string Get_Command {get; set;}
			[Column("Set_Command",TypeName="varchar")] public string Set_Command {get; set;}
			[Column("Description",TypeName="varchar")] public string Description {get; set;}
		}

		[Table("TBL_DOMAIN_RECORDS",Schema="dbo")]
		public partial class TBL_DOMAIN_RECORDS
		{
			[Column("ref_id",TypeName="numeric")] public decimal? ref_id {get; set;}
			[Column("Domain_id",TypeName="numeric")] public decimal? Domain_id {get; set;}
			[Column("content",TypeName="ntext")] public string content {get; set;}
			[Column("hostid",TypeName="varchar")] public string hostid {get; set;}
		}

		[Table("TBL_DOMAIN_REGISTRATION_QUEUE",Schema="dbo")]
		public partial class TBL_DOMAIN_REGISTRATION_QUEUE
		{
			[Column("RegisterID",TypeName="numeric")] public decimal RegisterID {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("QueuedDate",TypeName="datetime")] public DateTime? QueuedDate {get; set;}
			[Column("TransID",TypeName="nvarchar")] public string TransID {get; set;}
			[Column("RegisterOrderID",TypeName="nvarchar")] public string RegisterOrderID {get; set;}
			[Column("NumOfYears",TypeName="int")] public int? NumOfYears {get; set;}
			[Column("CompletedYN",TypeName="bit")] public bool? CompletedYN {get; set;}
			[Column("AddedToUserYN",TypeName="bit")] public bool? AddedToUserYN {get; set;}
			[Column("EmailSentYN",TypeName="bit")] public bool? EmailSentYN {get; set;}
			[Column("StatusID",TypeName="nvarchar")] public string StatusID {get; set;}
			[Column("OrderStatus",TypeName="varchar")] public string OrderStatus {get; set;}
			[Column("Status",TypeName="nvarchar")] public string Status {get; set;}
			[Column("StatusDate",TypeName="datetime")] public DateTime? StatusDate {get; set;}
			[Column("ErrInfo",TypeName="varchar")] public string ErrInfo {get; set;}
			[Column("Associated_Order_ID",TypeName="numeric")] public decimal? Associated_Order_ID {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("RefundYN",TypeName="bit")] public bool? RefundYN {get; set;}
			[Column("ProviderName",TypeName="varchar")] public string ProviderName {get; set;}
			[Column("Auto_Renew",TypeName="bit")] public bool? Auto_Renew {get; set;}
			[Column("Auto_Renew_WG",TypeName="bit")] public bool? Auto_Renew_WG {get; set;}
			[Column("OrderDetailID",TypeName="numeric")] public decimal? OrderDetailID {get; set;}
		}

		[Table("TBL_DOMAIN_SOCIAL_NETWORKING",Schema="dbo")]
		public partial class TBL_DOMAIN_SOCIAL_NETWORKING
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("SLD",TypeName="nvarchar")] public string SLD {get; set;}
			[Column("TLD",TypeName="nvarchar")] public string TLD {get; set;}
			[Column("ME_Username",TypeName="nvarchar")] public string ME_Username {get; set;}
			[Column("ME_Password",TypeName="nvarchar")] public string ME_Password {get; set;}
			[Column("ME_email",TypeName="nvarchar")] public string ME_email {get; set;}
			[Column("ME_CreatedDate",TypeName="datetime")] public DateTime? ME_CreatedDate {get; set;}
			[Column("Record_created_datetime",TypeName="datetime")] public DateTime? Record_created_datetime {get; set;}
		}

		[Table("TBL_DOMAIN_TRANSFER_REQUEST",Schema="dbo")]
		public partial class TBL_DOMAIN_TRANSFER_REQUEST
		{
			[Column("TransferID",TypeName="numeric")] public decimal TransferID {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("NumYears",TypeName="smallint")] public short? NumYears {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("EPPCode",TypeName="varchar")] public string EPPCode {get; set;}
			[Column("TransferDate",TypeName="datetime")] public DateTime? TransferDate {get; set;}
			[Column("CompletedYN",TypeName="bit")] public bool? CompletedYN {get; set;}
			[Column("AddedToUserYN",TypeName="bit")] public bool? AddedToUserYN {get; set;}
			[Column("EmailSentYN",TypeName="bit")] public bool? EmailSentYN {get; set;}
			[Column("CancelledYN",TypeName="bit")] public bool? CancelledYN {get; set;}
			[Column("RefundedYN",TypeName="bit")] public bool? RefundedYN {get; set;}
			[Column("RefundStatus",TypeName="varchar")] public string RefundStatus {get; set;}
			[Column("TransID",TypeName="nvarchar")] public string TransID {get; set;}
			[Column("TransferOrderID",TypeName="nvarchar")] public string TransferOrderID {get; set;}
			[Column("TransferOrderDetailID",TypeName="nvarchar")] public string TransferOrderDetailID {get; set;}
			[Column("StatusID",TypeName="nvarchar")] public string StatusID {get; set;}
			[Column("StatusDesc",TypeName="nvarchar")] public string StatusDesc {get; set;}
			[Column("StatusDate",TypeName="datetime")] public DateTime? StatusDate {get; set;}
			[Column("ErrInfo",TypeName="varchar")] public string ErrInfo {get; set;}
			[Column("Associated_Order_ID",TypeName="numeric")] public decimal? Associated_Order_ID {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("RequestIP",TypeName="varchar")] public string RequestIP {get; set;}
			[Column("Option1",TypeName="varchar")] public string Option1 {get; set;}
			[Column("Expire_DateTime_Before_Transfer",TypeName="datetime")] public DateTime? Expire_DateTime_Before_Transfer {get; set;}
			[Column("Expire_DateTime_After_Transfer",TypeName="datetime")] public DateTime? Expire_DateTime_After_Transfer {get; set;}
			[Column("Api_StatusDesc",TypeName="nvarchar")] public string Api_StatusDesc {get; set;}
			[Column("Associated_OrderDetailID",TypeName="numeric")] public decimal? Associated_OrderDetailID {get; set;}
			[Column("MP_Listing_ID",TypeName="numeric")] public decimal? MP_Listing_ID {get; set;}
			[Column("Auto_Renew",TypeName="bit")] public bool? Auto_Renew {get; set;}
			[Column("Auto_Renew_WG",TypeName="bit")] public bool? Auto_Renew_WG {get; set;}
			[Column("ProviderName",TypeName="nvarchar")] public string ProviderName {get; set;}
			[Column("TransferMateEnabled",TypeName="bit")] public bool TransferMateEnabled {get; set;}
			[Column("LosingRegistrar",TypeName="nvarchar")] public string LosingRegistrar {get; set;}
			[Column("TransferMateOriginalEmail",TypeName="varchar")] public string TransferMateOriginalEmail {get; set;}
			[Column("TransferMateStatusDescription",TypeName="ntext")] public string TransferMateStatusDescription {get; set;}
		}

		[Table("TBL_DOMAIN_WHITELIST",Schema="dbo")]
		public partial class TBL_DOMAIN_WHITELIST
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("BannedDomain",TypeName="nvarchar")] public string BannedDomain {get; set;}
			[Column("Comments",TypeName="nvarchar")] public string Comments {get; set;}
			[Column("AdminComments",TypeName="nvarchar")] public string AdminComments {get; set;}
			[Column("BanScope",TypeName="varchar")] public string BanScope {get; set;}
			[Column("LastUpdatedDateTime",TypeName="datetime")] public DateTime? LastUpdatedDateTime {get; set;}
			[Column("LastUpdatedBy",TypeName="varchar")] public string LastUpdatedBy {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
		}

		[Table("TBL_EDIT_CAPABILITY",Schema="dbo")]
		public partial class TBL_EDIT_CAPABILITY
		{
			[Column("Capability_ID",TypeName="smallint")] public short Capability_ID {get; set;}
			[Column("Capability_Type",TypeName="varchar")] public string Capability_Type {get; set;}
			[Column("Capability_Name",TypeName="varchar")] public string Capability_Name {get; set;}
			[Column("Parent_Capability_ID",TypeName="smallint")] public short? Parent_Capability_ID {get; set;}
			[Column("API_Capability_Type",TypeName="varchar")] public string API_Capability_Type {get; set;}
			[Column("Enabled_YN",TypeName="bit")] public bool? Enabled_YN {get; set;}
			[Column("Seq_No",TypeName="tinyint")] public byte? Seq_No {get; set;}
		}

		[Table("TBL_EDIT_CAPABILITY_DOMAIN_BY_USER",Schema="dbo")]
		public partial class TBL_EDIT_CAPABILITY_DOMAIN_BY_USER
		{
			[Column("User_ID",TypeName="numeric")] public decimal User_ID {get; set;}
			[Column("Domain_ID",TypeName="numeric")] public decimal Domain_ID {get; set;}
			[Column("Capability_ID",TypeName="smallint")] public short Capability_ID {get; set;}
			[Column("Enabled_YN",TypeName="bit")] public bool? Enabled_YN {get; set;}
		}

		[Table("TBL_EDIT_CAPABILITY_RESELLER",Schema="dbo")]
		public partial class TBL_EDIT_CAPABILITY_RESELLER
		{
			[Column("Reseller_ID",TypeName="numeric")] public decimal Reseller_ID {get; set;}
			[Column("Capability_ID",TypeName="smallint")] public short Capability_ID {get; set;}
			[Column("Enabled_YN",TypeName="bit")] public bool? Enabled_YN {get; set;}
		}

		[Table("TBL_EDIT_CAPABILITY_USER",Schema="dbo")]
		public partial class TBL_EDIT_CAPABILITY_USER
		{
			[Column("User_ID",TypeName="numeric")] public decimal User_ID {get; set;}
			[Column("Capability_ID",TypeName="smallint")] public short Capability_ID {get; set;}
			[Column("Enabled_YN",TypeName="bit")] public bool? Enabled_YN {get; set;}
		}

		[Table("TBL_ENOM_AUTO_RENEW_TRACK",Schema="dbo")]
		public partial class TBL_ENOM_AUTO_RENEW_TRACK
		{
			[Column("Enom_Auto_Renew_Track_ID",TypeName="numeric")] public decimal Enom_Auto_Renew_Track_ID {get; set;}
			[Column("Domain_Name",TypeName="nvarchar")] public string Domain_Name {get; set;}
			[Column("Related_Order_ID",TypeName="numeric")] public decimal? Related_Order_ID {get; set;}
			[Column("Current_Expiration_Date",TypeName="datetime")] public DateTime? Current_Expiration_Date {get; set;}
			[Column("Auto_Renew_Request_Date",TypeName="datetime")] public DateTime? Auto_Renew_Request_Date {get; set;}
			[Column("Waiting_For_Auto_Renew_YN",TypeName="bit")] public bool Waiting_For_Auto_Renew_YN {get; set;}
			[Column("Auto_Renew_Success_YN",TypeName="bit")] public bool Auto_Renew_Success_YN {get; set;}
			[Column("New_Expiration_Date_Time",TypeName="datetime")] public DateTime? New_Expiration_Date_Time {get; set;}
			[Column("Email_Sent_YN",TypeName="bit")] public bool Email_Sent_YN {get; set;}
			[Column("Domain_Update_YN",TypeName="bit")] public bool Domain_Update_YN {get; set;}
			[Column("EnomDisabledAutoRenew_YN",TypeName="bit")] public bool EnomDisabledAutoRenew_YN {get; set;}
			[Column("Status",TypeName="varchar")] public string Status {get; set;}
		}

		[Table("TBL_EPP_REQUEST",Schema="dbo")]
		public partial class TBL_EPP_REQUEST
		{
			[Column("Auto_ID",TypeName="numeric")] public decimal Auto_ID {get; set;}
			[Column("Request_DateTime",TypeName="datetime")] public DateTime? Request_DateTime {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("ClientIp",TypeName="varchar")] public string ClientIp {get; set;}
			[Column("Reason_Type",TypeName="varchar")] public string Reason_Type {get; set;}
			[Column("Reason_Description",TypeName="varchar")] public string Reason_Description {get; set;}
			[Column("Contact_User_YN",TypeName="bit")] public bool? Contact_User_YN {get; set;}
			[Column("EPP_Available_YN",TypeName="bit")] public bool? EPP_Available_YN {get; set;}
			[Column("Next_EPP_Check_DateTime",TypeName="datetime2")] public DateTime? Next_EPP_Check_DateTime {get; set;}
			[Column("Email_Sent_YN",TypeName="bit")] public bool? Email_Sent_YN {get; set;}
			[Column("Sent_To_Enom_YN",TypeName="bit")] public bool? Sent_To_Enom_YN {get; set;}
			[Column("Last_EPP_Check_DateTime",TypeName="datetime2")] public DateTime? Last_EPP_Check_DateTime {get; set;}
		}

		[Table("TBL_EXPIRE_DOMAIN_PROCESS_QUEUE",Schema="dbo")]
		public partial class TBL_EXPIRE_DOMAIN_PROCESS_QUEUE
		{
			[Column("Auto_Id",TypeName="bigint")] public long Auto_Id {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Domain_Name",TypeName="nvarchar")] public string Domain_Name {get; set;}
			[Column("Expire_Date_Time",TypeName="bigint")] public long? Expire_Date_Time {get; set;}
		}

		[Table("TBL_EXPIRE_DOMAIN_PROCESS_STATUS",Schema="dbo")]
		public partial class TBL_EXPIRE_DOMAIN_PROCESS_STATUS
		{
			[Column("Auto_ID",TypeName="int")] public int Auto_ID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Domain_Name",TypeName="nvarchar")] public string Domain_Name {get; set;}
			[Column("Domain_Id",TypeName="numeric")] public decimal? Domain_Id {get; set;}
			[Column("Domain_Expire_Date_Time",TypeName="bigint")] public long? Domain_Expire_Date_Time {get; set;}
			[Column("Record_Created_Date_Time",TypeName="bigint")] public long? Record_Created_Date_Time {get; set;}
			[Column("Registry_Old_Expire_Date_Time",TypeName="bigint")] public long? Registry_Old_Expire_Date_Time {get; set;}
			[Column("Registry_New_Expire_Date_Time",TypeName="bigint")] public long? Registry_New_Expire_Date_Time {get; set;}
			[Column("Admin_UserName",TypeName="varchar")] public string Admin_UserName {get; set;}
			[Column("Admin_Ip",TypeName="bigint")] public long? Admin_Ip {get; set;}
			[Column("Internal_Comments",TypeName="varchar")] public string Internal_Comments {get; set;}
			[Column("User_Renewal_Flag",TypeName="bit")] public bool User_Renewal_Flag {get; set;}
			[Column("Internal_Renewal_Flag",TypeName="bit")] public bool Internal_Renewal_Flag {get; set;}
			[Column("Internal_Action_Type",TypeName="varchar")] public string Internal_Action_Type {get; set;}
			[Column("Internal_Action_Completed_Date_Time",TypeName="bigint")] public long? Internal_Action_Completed_Date_Time {get; set;}
			[Column("Enom_Order_Id",TypeName="numeric")] public decimal? Enom_Order_Id {get; set;}
			[Column("Log_Info",TypeName="varchar")] public string Log_Info {get; set;}
			[Column("Is_NameServer_Changed_YN",TypeName="bit")] public bool Is_NameServer_Changed_YN {get; set;}
			[Column("Is_NameServer_Reverted_YN",TypeName="bit")] public bool Is_NameServer_Reverted_YN {get; set;}
			[Column("NameServerRevertDateTime",TypeName="bigint")] public long? NameServerRevertDateTime {get; set;}
		}

		[Table("TBL_EXPORT_REQUEST",Schema="dbo")]
		public partial class TBL_EXPORT_REQUEST
		{
			[Column("Auto_ID",TypeName="numeric")] public decimal Auto_ID {get; set;}
			[Column("Request_Time",TypeName="datetime")] public DateTime? Request_Time {get; set;}
			[Column("Username",TypeName="nvarchar")] public string Username {get; set;}
			[Column("Report_Type",TypeName="nvarchar")] public string Report_Type {get; set;}
			[Column("Status",TypeName="nvarchar")] public string Status {get; set;}
			[Column("Filename",TypeName="nvarchar")] public string Filename {get; set;}
			[Column("Link",TypeName="nvarchar")] public string Link {get; set;}
			[Column("Report_Time",TypeName="datetime")] public DateTime? Report_Time {get; set;}
		}

		[Table("TBL_FR_POSTALCODES",Schema="dbo")]
		public partial class TBL_FR_POSTALCODES
		{
			[Column("PostalCode",TypeName="varchar")] public string PostalCode {get; set;}
			[Column("PlaceName",TypeName="varchar")] public string PlaceName {get; set;}
		}

		[Table("TBL_GLOBAL_PREFERENCE",Schema="dbo")]
		public partial class TBL_GLOBAL_PREFERENCE
		{
			[Column("Global_Preference_ID",TypeName="int")] public int Global_Preference_ID {get; set;}
			[Column("Records_Per_Page",TypeName="int")] public int? Records_Per_Page {get; set;}
			[Column("Page_Link_Count",TypeName="int")] public int? Page_Link_Count {get; set;}
		}

		[Table("TBL_HOSTED_DOMAIN_STATUS",Schema="dbo")]
		public partial class TBL_HOSTED_DOMAIN_STATUS
		{
			[Column("id",TypeName="tinyint")] public byte id {get; set;}
			[Column("name",TypeName="varchar")] public string name {get; set;}
			[Column("type",TypeName="varchar")] public string type {get; set;}
			[Column("description",TypeName="varchar")] public string description {get; set;}
		}

		[Table("TBL_HOSTED_DOMAINS",Schema="dbo")]
		public partial class TBL_HOSTED_DOMAINS
		{
			[Column("hostID",TypeName="int")] public int hostID {get; set;}
			[Column("hostName",TypeName="varchar")] public string hostName {get; set;}
			[Column("userName",TypeName="nvarchar")] public string userName {get; set;}
			[Column("domainName",TypeName="varchar")] public string domainName {get; set;}
			[Column("computedTLD",TypeName="varchar")] public string computedTLD {get; set;}
			[Column("authorizationStatusID",TypeName="tinyint")] public byte? authorizationStatusID {get; set;}
			[Column("verificationStatusID",TypeName="tinyint")] public byte? verificationStatusID {get; set;}
			[Column("paymentStatusID",TypeName="tinyint")] public byte? paymentStatusID {get; set;}
			[Column("lastPaymentDateTime",TypeName="datetime")] public DateTime? lastPaymentDateTime {get; set;}
			[Column("lastPayementOrderID",TypeName="int")] public int? lastPayementOrderID {get; set;}
			[Column("paidSubscriptionExpiresOn",TypeName="datetime")] public DateTime? paidSubscriptionExpiresOn {get; set;}
			[Column("domainLockedYN",TypeName="bit")] public bool? domainLockedYN {get; set;}
			[Column("domainLockedReason",TypeName="varchar")] public string domainLockedReason {get; set;}
			[Column("domainLockedAdminComments",TypeName="varchar")] public string domainLockedAdminComments {get; set;}
			[Column("registrarName",TypeName="varchar")] public string registrarName {get; set;}
			[Column("recordCreatedDateTime",TypeName="datetime")] public DateTime? recordCreatedDateTime {get; set;}
			[Column("expiryDateTime",TypeName="datetime")] public DateTime? expiryDateTime {get; set;}
			[Column("verificationExpiryDateTime",TypeName="datetime")] public DateTime? verificationExpiryDateTime {get; set;}
			[Column("authorizationEmail",TypeName="varchar")] public string authorizationEmail {get; set;}
			[Column("authorizationKey",TypeName="varchar")] public string authorizationKey {get; set;}
			[Column("authorizationInitiatedDateTime",TypeName="datetime")] public DateTime? authorizationInitiatedDateTime {get; set;}
			[Column("authorizationLastEmailSentDateTime",TypeName="datetime")] public DateTime? authorizationLastEmailSentDateTime {get; set;}
			[Column("authorizationIP",TypeName="varchar")] public string authorizationIP {get; set;}
			[Column("addedIP",TypeName="varchar")] public string addedIP {get; set;}
			[Column("dnsProviderId",TypeName="tinyint")] public byte? dnsProviderId {get; set;}
			[Column("emailProviderId",TypeName="tinyint")] public byte? emailProviderId {get; set;}
			[Column("urlProviderId",TypeName="tinyint")] public byte? urlProviderId {get; set;}
			[Column("ddnsPassword",TypeName="varchar")] public string ddnsPassword {get; set;}
			[Column("verifyTryCount",TypeName="tinyint")] public byte? verifyTryCount {get; set;}
			[Column("lastVerifiedDateTime",TypeName="datetime")] public DateTime? lastVerifiedDateTime {get; set;}
			[Column("authorizationTryCount",TypeName="tinyint")] public byte? authorizationTryCount {get; set;}
			[Column("lastAuthorizationTryDateTime",TypeName="datetime")] public DateTime? lastAuthorizationTryDateTime {get; set;}
			[Column("dnsSecEnabled_YN",TypeName="bit")] public bool dnsSecEnabled_YN {get; set;}
		}

		[Table("TBL_HOSTED_DOMAINS_CART",Schema="dbo")]
		public partial class TBL_HOSTED_DOMAINS_CART
		{
			[Column("refID",TypeName="varchar")] public string refID {get; set;}
			[Column("domainName",TypeName="varchar")] public string domainName {get; set;}
			[Column("userName",TypeName="nvarchar")] public string userName {get; set;}
			[Column("recordCreatedDateTime",TypeName="datetime")] public DateTime? recordCreatedDateTime {get; set;}
			[Column("lastUpdatedDateTime",TypeName="datetime")] public DateTime? lastUpdatedDateTime {get; set;}
			[Column("bulkHost",TypeName="bit")] public bool bulkHost {get; set;}
		}

		[Table("TBL_HOSTED_DOMAINS_CONFIG",Schema="dbo")]
		public partial class TBL_HOSTED_DOMAINS_CONFIG
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("authorizationExpiryDays",TypeName="int")] public int authorizationExpiryDays {get; set;}
			[Column("authorizationKeyExpiryDays",TypeName="int")] public int authorizationKeyExpiryDays {get; set;}
			[Column("daysToCheckBeforeExpiry",TypeName="int")] public int daysToCheckBeforeExpiry {get; set;}
			[Column("verificationExtendPeriodInDays",TypeName="int")] public int verificationExtendPeriodInDays {get; set;}
			[Column("verificationStageOneMaxCount",TypeName="int")] public int verificationStageOneMaxCount {get; set;}
			[Column("verficationStageOneIntervalInMinute",TypeName="int")] public int verficationStageOneIntervalInMinute {get; set;}
			[Column("verificationStageTwoMaxCount",TypeName="int")] public int verificationStageTwoMaxCount {get; set;}
			[Column("verficationStageTwoIntervalInMinute",TypeName="int")] public int verficationStageTwoIntervalInMinute {get; set;}
			[Column("verificationStageThreeMaxCount",TypeName="int")] public int verificationStageThreeMaxCount {get; set;}
			[Column("verficationStageThreeIntervalInMinute",TypeName="int")] public int verficationStageThreeIntervalInMinute {get; set;}
			[Column("authorizationStageOneMaxCount",TypeName="int")] public int? authorizationStageOneMaxCount {get; set;}
			[Column("authorizationStageOneIntervalInMinute",TypeName="int")] public int? authorizationStageOneIntervalInMinute {get; set;}
			[Column("authorizationStageTwoMaxCount",TypeName="int")] public int? authorizationStageTwoMaxCount {get; set;}
			[Column("authorizationStageTwoIntervalInMinute",TypeName="int")] public int? authorizationStageTwoIntervalInMinute {get; set;}
		}

		[Table("TBL_HOSTED_DOMAINS_HISTORY",Schema="dbo")]
		public partial class TBL_HOSTED_DOMAINS_HISTORY
		{
			[Column("autoID",TypeName="bigint")] public long autoID {get; set;}
			[Column("hostName",TypeName="varchar")] public string hostName {get; set;}
			[Column("userName",TypeName="nvarchar")] public string userName {get; set;}
			[Column("actionID",TypeName="tinyint")] public byte? actionID {get; set;}
			[Column("statusID",TypeName="tinyint")] public byte? statusID {get; set;}
			[Column("description",TypeName="varchar")] public string description {get; set;}
			[Column("relatedUserName",TypeName="nvarchar")] public string relatedUserName {get; set;}
			[Column("internalOnly",TypeName="bit")] public bool? internalOnly {get; set;}
			[Column("detailID",TypeName="int")] public int? detailID {get; set;}
			[Column("actionDateTime",TypeName="datetime")] public DateTime? actionDateTime {get; set;}
		}

		[Table("TBL_HOSTED_DOMAINS_HISTORY_ACTION",Schema="dbo")]
		public partial class TBL_HOSTED_DOMAINS_HISTORY_ACTION
		{
			[Column("id",TypeName="tinyint")] public byte id {get; set;}
			[Column("name",TypeName="varchar")] public string name {get; set;}
			[Column("description",TypeName="varchar")] public string description {get; set;}
			[Column("internalDescription",TypeName="varchar")] public string internalDescription {get; set;}
		}

		[Table("TBL_HOSTED_DOMAINS_HISTORY_DETAILS",Schema="dbo")]
		public partial class TBL_HOSTED_DOMAINS_HISTORY_DETAILS
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("historyID",TypeName="int")] public int historyID {get; set;}
			[Column("internalComments",TypeName="varchar")] public string internalComments {get; set;}
			[Column("hostRecords",TypeName="xml")] public string hostRecords {get; set;}
		}

		[Table("TBL_HOSTED_DOMAINS_INTERMEDIATE",Schema="dbo")]
		public partial class TBL_HOSTED_DOMAINS_INTERMEDIATE
		{
			[Column("hostID",TypeName="int")] public int hostID {get; set;}
			[Column("hostName",TypeName="varchar")] public string hostName {get; set;}
			[Column("userName",TypeName="nvarchar")] public string userName {get; set;}
			[Column("domainName",TypeName="varchar")] public string domainName {get; set;}
			[Column("computedTLD",TypeName="varchar")] public string computedTLD {get; set;}
			[Column("authorizationStatusID",TypeName="tinyint")] public byte? authorizationStatusID {get; set;}
			[Column("registrarName",TypeName="varchar")] public string registrarName {get; set;}
			[Column("recordCreatedDateTime",TypeName="datetime")] public DateTime? recordCreatedDateTime {get; set;}
			[Column("expiryDateTime",TypeName="datetime")] public DateTime? expiryDateTime {get; set;}
			[Column("authorizationEmail",TypeName="varchar")] public string authorizationEmail {get; set;}
			[Column("authorizationKey",TypeName="varchar")] public string authorizationKey {get; set;}
			[Column("authorizationInitiatedDateTime",TypeName="datetime")] public DateTime? authorizationInitiatedDateTime {get; set;}
			[Column("authorizationLastEmailSentDateTime",TypeName="datetime")] public DateTime? authorizationLastEmailSentDateTime {get; set;}
			[Column("authorizationIP",TypeName="varchar")] public string authorizationIP {get; set;}
			[Column("addedIP",TypeName="varchar")] public string addedIP {get; set;}
			[Column("authorizationTryCount",TypeName="tinyint")] public byte? authorizationTryCount {get; set;}
			[Column("lastAuthorizationTryDateTime",TypeName="datetime")] public DateTime? lastAuthorizationTryDateTime {get; set;}
		}

		[Table("TBL_IP",Schema="dbo")]
		public partial class TBL_IP
		{
			[Column("Auto_ID",TypeName="decimal")] public decimal Auto_ID {get; set;}
			[Column("IP",TypeName="varchar")] public string IP {get; set;}
			[Column("Access_Count",TypeName="decimal")] public decimal? Access_Count {get; set;}
			[Column("Last_Access_Date_Time",TypeName="datetime")] public DateTime? Last_Access_Date_Time {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("MaxMind_XML",TypeName="text")] public string MaxMind_XML {get; set;}
		}

		[Table("TBL_LOCK_REASON",Schema="dbo")]
		public partial class TBL_LOCK_REASON
		{
			[Column("Locked_Reason_Id",TypeName="smallint")] public short Locked_Reason_Id {get; set;}
			[Column("Reason",TypeName="varchar")] public string Reason {get; set;}
		}

		[Table("TBL_LOCKED_DOMAIN_DNS",Schema="dbo")]
		public partial class TBL_LOCKED_DOMAIN_DNS
		{
			[Column("DomainId",TypeName="int")] public int? DomainId {get; set;}
			[Column("NameServer",TypeName="varchar")] public string NameServer {get; set;}
		}

		[Table("TBL_LOG_2M_DOMAIN_PROMOTION",Schema="dbo")]
		public partial class TBL_LOG_2M_DOMAIN_PROMOTION
		{
			[Column("AutoId",TypeName="int")] public int AutoId {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("DomainId",TypeName="numeric")] public decimal DomainId {get; set;}
			[Column("OrderId",TypeName="nvarchar")] public string OrderId {get; set;}
			[Column("ComputedDomainCount",TypeName="int")] public int ComputedDomainCount {get; set;}
			[Column("CreateDateTime",TypeName="datetime")] public DateTime CreateDateTime {get; set;}
		}

		[Table("TBL_LOG_2M_DOMAIN_PROMOTION_CURRENT_COUNT",Schema="dbo")]
		public partial class TBL_LOG_2M_DOMAIN_PROMOTION_CURRENT_COUNT
		{
			[Column("Id",TypeName="tinyint")] public byte Id {get; set;}
			[Column("CurrentActiveDomainsCount",TypeName="int")] public int CurrentActiveDomainsCount {get; set;}
			[Column("UpdatedDate",TypeName="datetime")] public DateTime UpdatedDate {get; set;}
		}

		[Table("TBL_LOG_ADMIN_LOCKORUNLOCK",Schema="dbo")]
		public partial class TBL_LOG_ADMIN_LOCKORUNLOCK
		{
			[Column("Auto_ID",TypeName="numeric")] public decimal Auto_ID {get; set;}
			[Column("LockOrUnlock_UserId",TypeName="tinyint")] public byte? LockOrUnlock_UserId {get; set;}
			[Column("LockOrUnlock_By",TypeName="varchar")] public string LockOrUnlock_By {get; set;}
			[Column("LockOrUnlock_DateTime",TypeName="datetime")] public DateTime? LockOrUnlock_DateTime {get; set;}
			[Column("Action_Type",TypeName="nvarchar")] public string Action_Type {get; set;}
			[Column("Reason",TypeName="varchar")] public string Reason {get; set;}
		}

		[Table("TBL_LOG_AFFILIATE_COMMISSION_CALCULATION",Schema="dbo")]
		public partial class TBL_LOG_AFFILIATE_COMMISSION_CALCULATION
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("orderID",TypeName="int")] public int? orderID {get; set;}
			[Column("orderDetailID",TypeName="int")] public int? orderDetailID {get; set;}
			[Column("createdDateTime",TypeName="int")] public int? createdDateTime {get; set;}
			[Column("statusID",TypeName="tinyint")] public byte? statusID {get; set;}
			[Column("details",TypeName="varchar")] public string details {get; set;}
			[Column("commissionAmount",TypeName="money")] public decimal? commissionAmount {get; set;}
			[Column("affiliateID",TypeName="int")] public int? affiliateID {get; set;}
			[Column("orderStartDateTime",TypeName="datetime")] public DateTime? orderStartDateTime {get; set;}
		}

		[Table("TBL_LOG_AFFILIATE_ENABLE_DISABLE_USER",Schema="dbo")]
		public partial class TBL_LOG_AFFILIATE_ENABLE_DISABLE_USER
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("affiliateUserID",TypeName="int")] public int? affiliateUserID {get; set;}
			[Column("disabledYN",TypeName="bit")] public bool? disabledYN {get; set;}
			[Column("lockedYN",TypeName="bit")] public bool? lockedYN {get; set;}
			[Column("adminIP",TypeName="bigint")] public long? adminIP {get; set;}
			[Column("adminUser",TypeName="varchar")] public string adminUser {get; set;}
			[Column("actiondateTime",TypeName="datetime")] public DateTime? actiondateTime {get; set;}
			[Column("adminComments",TypeName="varchar")] public string adminComments {get; set;}
		}

		[Table("TBL_LOG_AFFILIATE_TRAFFIC",Schema="dbo")]
		public partial class TBL_LOG_AFFILIATE_TRAFFIC
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("affiliateID",TypeName="int")] public int? affiliateID {get; set;}
			[Column("affiliateProgramID",TypeName="int")] public int? affiliateProgramID {get; set;}
			[Column("createdDateTime",TypeName="int")] public int createdDateTime {get; set;}
			[Column("httpReferrer",TypeName="varchar")] public string httpReferrer {get; set;}
			[Column("ip",TypeName="bigint")] public long? ip {get; set;}
		}

		[Table("TBL_LOG_CURRENT_TRANSACTIONS",Schema="dbo")]
		public partial class TBL_LOG_CURRENT_TRANSACTIONS
		{
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("TransID",TypeName="nvarchar")] public string TransID {get; set;}
			[Column("OrderID",TypeName="nvarchar")] public string OrderID {get; set;}
		}

		[Table("TBL_LOG_DOMAIN_TRANSFER_STATUS",Schema="dbo")]
		public partial class TBL_LOG_DOMAIN_TRANSFER_STATUS
		{
			[Column("TransferID",TypeName="numeric")] public decimal? TransferID {get; set;}
			[Column("Transfer_Status",TypeName="varchar")] public string Transfer_Status {get; set;}
			[Column("Transfer_Status_Date_Time",TypeName="datetime")] public DateTime? Transfer_Status_Date_Time {get; set;}
		}

		[Table("TBL_LOG_EVENTS_HOSTED_DOMAINS",Schema="dbo")]
		public partial class TBL_LOG_EVENTS_HOSTED_DOMAINS
		{
			[Column("autoID",TypeName="bigint")] public long autoID {get; set;}
			[Column("hostName",TypeName="varchar")] public string hostName {get; set;}
			[Column("userName",TypeName="nvarchar")] public string userName {get; set;}
			[Column("actionID",TypeName="tinyint")] public byte? actionID {get; set;}
			[Column("statusID",TypeName="tinyint")] public byte? statusID {get; set;}
			[Column("actionDateTime",TypeName="datetime")] public DateTime? actionDateTime {get; set;}
			[Column("comments",TypeName="varchar")] public string comments {get; set;}
		}

		[Table("TBL_LOG_GENERAL",Schema="dbo")]
		public partial class TBL_LOG_GENERAL
		{
			[Column("Auto_ID",TypeName="numeric")] public decimal Auto_ID {get; set;}
			[Column("SessionRefID",TypeName="nvarchar")] public string SessionRefID {get; set;}
			[Column("Date_Time",TypeName="datetime")] public DateTime? Date_Time {get; set;}
			[Column("ServerVar",TypeName="varchar")] public string ServerVar {get; set;}
			[Column("FormData",TypeName="varchar")] public string FormData {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
		}

		[Table("TBL_LOG_MARKETPLACE_ITEM_STATUS",Schema="dbo")]
		public partial class TBL_LOG_MARKETPLACE_ITEM_STATUS
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("MP_Listing_ID",TypeName="numeric")] public decimal? MP_Listing_ID {get; set;}
			[Column("StatusId",TypeName="tinyint")] public byte? StatusId {get; set;}
			[Column("StatusDateTime",TypeName="int")] public int StatusDateTime {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Ip",TypeName="bigint")] public long? Ip {get; set;}
			[Column("UserType",TypeName="char")] public string UserType {get; set;}
			[Column("Description",TypeName="varchar")] public string Description {get; set;}
		}

		[Table("TBL_LOG_MODIFICATION_PREVIOUS_RIGHTS",Schema="dbo")]
		public partial class TBL_LOG_MODIFICATION_PREVIOUS_RIGHTS
		{
			[Column("AutoID",TypeName="numeric")] public decimal AutoID {get; set;}
			[Column("Domain_Name",TypeName="nvarchar")] public string Domain_Name {get; set;}
			[Column("Domain_Owner_User_Name",TypeName="nvarchar")] public string Domain_Owner_User_Name {get; set;}
			[Column("By_User_Name",TypeName="nvarchar")] public string By_User_Name {get; set;}
			[Column("For_User_Name",TypeName="nvarchar")] public string For_User_Name {get; set;}
			[Column("Action",TypeName="varchar")] public string Action {get; set;}
			[Column("Rights_CSV",TypeName="varchar")] public string Rights_CSV {get; set;}
			[Column("ActionDate",TypeName="int")] public int? ActionDate {get; set;}
		}

		[Table("TBL_LOG_NEWSLETTER",Schema="dbo")]
		public partial class TBL_LOG_NEWSLETTER
		{
			[Column("ID",TypeName="int")] public int ID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("FirstName",TypeName="nvarchar")] public string FirstName {get; set;}
			[Column("LastName",TypeName="nvarchar")] public string LastName {get; set;}
			[Column("Email",TypeName="nvarchar")] public string Email {get; set;}
			[Column("OptionType",TypeName="nvarchar")] public string OptionType {get; set;}
			[Column("Processed_YN",TypeName="bit")] public bool? Processed_YN {get; set;}
			[Column("StatusHistoryId",TypeName="int")] public int? StatusHistoryId {get; set;}
		}

		[Table("TBL_LOG_NEWSLETTER_STATUSHISTORY",Schema="dbo")]
		public partial class TBL_LOG_NEWSLETTER_STATUSHISTORY
		{
			[Column("StatusHistoryId",TypeName="int")] public int StatusHistoryId {get; set;}
			[Column("Status",TypeName="nvarchar")] public string Status {get; set;}
			[Column("StatusDetails",TypeName="nvarchar")] public string StatusDetails {get; set;}
		}

		[Table("TBL_LOG_NEWSLETTER_SUBSCRIPTION",Schema="dbo")]
		public partial class TBL_LOG_NEWSLETTER_SUBSCRIPTION
		{
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("IsSubscribed",TypeName="bit")] public bool IsSubscribed {get; set;}
			[Column("ClientIP",TypeName="varchar")] public string ClientIP {get; set;}
			[Column("Comments",TypeName="varchar")] public string Comments {get; set;}
			[Column("RecordCreatedDateTime",TypeName="datetime")] public DateTime? RecordCreatedDateTime {get; set;}
		}

		[Table("TBL_LOG_NOTIFICATION_SYSTEM",Schema="dbo")]
		public partial class TBL_LOG_NOTIFICATION_SYSTEM
		{
			[Column("AutoId",TypeName="int")] public int AutoId {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("ActionType",TypeName="varchar")] public string ActionType {get; set;}
			[Column("CreatedDate",TypeName="datetime")] public DateTime? CreatedDate {get; set;}
			[Column("AdminUser",TypeName="varchar")] public string AdminUser {get; set;}
			[Column("AdminUsername",TypeName="nvarchar")] public string AdminUsername {get; set;}
			[Column("Comments",TypeName="varchar")] public string Comments {get; set;}
			[Column("Ip",TypeName="varchar")] public string Ip {get; set;}
		}

		[Table("TBL_LOG_PAYPAL_IPN",Schema="dbo")]
		public partial class TBL_LOG_PAYPAL_IPN
		{
			[Column("AutoID",TypeName="bigint")] public long AutoID {get; set;}
			[Column("TransID",TypeName="varchar")] public string TransID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime? CreatedDateTime {get; set;}
			[Column("TxnType",TypeName="varchar")] public string TxnType {get; set;}
			[Column("PaymentStatus",TypeName="varchar")] public string PaymentStatus {get; set;}
			[Column("ParentTransID",TypeName="varchar")] public string ParentTransID {get; set;}
			[Column("PaymentGross",TypeName="money")] public decimal? PaymentGross {get; set;}
			[Column("PaymentFee",TypeName="money")] public decimal? PaymentFee {get; set;}
			[Column("ReasonCode",TypeName="varchar")] public string ReasonCode {get; set;}
			[Column("PendingReason",TypeName="varchar")] public string PendingReason {get; set;}
			[Column("CaseType",TypeName="varchar")] public string CaseType {get; set;}
			[Column("ReceiverEmail",TypeName="nvarchar")] public string ReceiverEmail {get; set;}
			[Column("NotifyVersion",TypeName="varchar")] public string NotifyVersion {get; set;}
			[Column("PayerEmail",TypeName="nvarchar")] public string PayerEmail {get; set;}
			[Column("OrderRef_ID",TypeName="nvarchar")] public string OrderRef_ID {get; set;}
			[Column("PayerStatus",TypeName="varchar")] public string PayerStatus {get; set;}
			[Column("ResidenceCountry",TypeName="varchar")] public string ResidenceCountry {get; set;}
		}

		[Table("TBL_LOG_PAYPAL_TRANSACTIONS",Schema="dbo")]
		public partial class TBL_LOG_PAYPAL_TRANSACTIONS
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("TransactionID",TypeName="numeric")] public decimal TransactionID {get; set;}
			[Column("PaymentStatus",TypeName="varchar")] public string PaymentStatus {get; set;}
			[Column("PendingReason",TypeName="varchar")] public string PendingReason {get; set;}
			[Column("ReasonCode",TypeName="varchar")] public string ReasonCode {get; set;}
			[Column("StatusDateTime",TypeName="datetime")] public DateTime? StatusDateTime {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime CreatedDateTime {get; set;}
		}

		[Table("TBL_LOG_PURCHASE",Schema="dbo")]
		public partial class TBL_LOG_PURCHASE
		{
			[Column("AutoID",TypeName="numeric")] public decimal AutoID {get; set;}
			[Column("Username",TypeName="nvarchar")] public string Username {get; set;}
			[Column("Created_Date_Time",TypeName="datetime")] public DateTime? Created_Date_Time {get; set;}
			[Column("Purchase_Limit",TypeName="money")] public decimal? Purchase_Limit {get; set;}
			[Column("Purchase_Dynamic_Limit",TypeName="money")] public decimal? Purchase_Dynamic_Limit {get; set;}
			[Column("Purchase_Value",TypeName="money")] public decimal? Purchase_Value {get; set;}
			[Column("Description",TypeName="varchar")] public string Description {get; set;}
			[Column("Associated_OrderID",TypeName="varchar")] public string Associated_OrderID {get; set;}
			[Column("Perday_Limit",TypeName="bit")] public bool? Perday_Limit {get; set;}
			[Column("Global_limit",TypeName="bit")] public bool? Global_limit {get; set;}
			[Column("Current_limit",TypeName="bit")] public bool? Current_limit {get; set;}
			[Column("Tenday_Limit",TypeName="bit")] public bool? Tenday_Limit {get; set;}
		}

		[Table("TBL_LOG_RECOMMEND_US_EMAIL_QUEUE",Schema="dbo")]
		public partial class TBL_LOG_RECOMMEND_US_EMAIL_QUEUE
		{
			[Column("AutoID",TypeName="numeric")] public decimal AutoID {get; set;}
			[Column("EMail",TypeName="nvarchar")] public string EMail {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
		}

		[Table("TBL_LOG_RENEW_EMAIL",Schema="dbo")]
		public partial class TBL_LOG_RENEW_EMAIL
		{
			[Column("ID",TypeName="numeric")] public decimal ID {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("EMail",TypeName="nvarchar")] public string EMail {get; set;}
			[Column("DaysToExpire",TypeName="smallint")] public short? DaysToExpire {get; set;}
			[Column("MailDate",TypeName="datetime")] public DateTime? MailDate {get; set;}
			[Column("MailStatus",TypeName="varchar")] public string MailStatus {get; set;}
			[Column("Type",TypeName="varchar")] public string Type {get; set;}
			[Column("Slotid",TypeName="numeric")] public decimal? Slotid {get; set;}
		}

		[Table("TBL_LOG_RICHCONTENT_ACTION",Schema="dbo")]
		public partial class TBL_LOG_RICHCONTENT_ACTION
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("subscriptionAutoID",TypeName="int")] public int? subscriptionAutoID {get; set;}
			[Column("relatedOrderID",TypeName="int")] public int? relatedOrderID {get; set;}
			[Column("recordCreatedDateTime",TypeName="int")] public int? recordCreatedDateTime {get; set;}
			[Column("actionType",TypeName="varchar")] public string actionType {get; set;}
			[Column("actionIP",TypeName="bigint")] public long? actionIP {get; set;}
			[Column("actionByAdminYN",TypeName="bit")] public bool? actionByAdminYN {get; set;}
			[Column("actionDescription",TypeName="varchar")] public string actionDescription {get; set;}
		}

		[Table("TBL_LOG_RSS_NOTIFICATIONS",Schema="dbo")]
		public partial class TBL_LOG_RSS_NOTIFICATIONS
		{
			[Column("Auto_ID",TypeName="int")] public int Auto_ID {get; set;}
			[Column("User_Name",TypeName="varchar")] public string User_Name {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("IP_Address",TypeName="varchar")] public string IP_Address {get; set;}
			[Column("Domain_Name",TypeName="nvarchar")] public string Domain_Name {get; set;}
			[Column("Event_Type",TypeName="varchar")] public string Event_Type {get; set;}
			[Column("Event_Description",TypeName="nvarchar")] public string Event_Description {get; set;}
			[Column("Url",TypeName="text")] public string Url {get; set;}
			[Column("Rss_AuthKey",TypeName="nvarchar")] public string Rss_AuthKey {get; set;}
		}

		[Table("TBL_LOG_SECURITY_NOTIFICATIONS",Schema="dbo")]
		public partial class TBL_LOG_SECURITY_NOTIFICATIONS
		{
			[Column("Auto_ID",TypeName="int")] public int Auto_ID {get; set;}
			[Column("User_Name",TypeName="varchar")] public string User_Name {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("IP_Address",TypeName="varchar")] public string IP_Address {get; set;}
			[Column("Domain_Name",TypeName="nvarchar")] public string Domain_Name {get; set;}
			[Column("Old_Data",TypeName="text")] public string Old_Data {get; set;}
			[Column("New_Data",TypeName="text")] public string New_Data {get; set;}
			[Column("Data_Type",TypeName="varchar")] public string Data_Type {get; set;}
			[Column("Data_Sub_Type",TypeName="varchar")] public string Data_Sub_Type {get; set;}
			[Column("Email_To",TypeName="varchar")] public string Email_To {get; set;}
			[Column("Email_To_Name",TypeName="varchar")] public string Email_To_Name {get; set;}
			[Column("Email_Sent_Date_Time",TypeName="datetime")] public DateTime? Email_Sent_Date_Time {get; set;}
			[Column("Email_Status",TypeName="varchar")] public string Email_Status {get; set;}
			[Column("Notify_UserYN",TypeName="bit")] public bool? Notify_UserYN {get; set;}
			[Column("Notify_AdminYN",TypeName="bit")] public bool? Notify_AdminYN {get; set;}
			[Column("ActionSource",TypeName="varchar")] public string ActionSource {get; set;}
		}

		[Table("TBL_LOG_SECURITY_NOTIFICATIONS_BY_ADMIN",Schema="dbo")]
		public partial class TBL_LOG_SECURITY_NOTIFICATIONS_BY_ADMIN
		{
			[Column("Auto_ID",TypeName="int")] public int Auto_ID {get; set;}
			[Column("Admin_User_Name",TypeName="varchar")] public string Admin_User_Name {get; set;}
			[Column("User_Name",TypeName="varchar")] public string User_Name {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("IP_Address",TypeName="varchar")] public string IP_Address {get; set;}
			[Column("Domain_Name",TypeName="nvarchar")] public string Domain_Name {get; set;}
			[Column("Old_Data",TypeName="text")] public string Old_Data {get; set;}
			[Column("New_Data",TypeName="text")] public string New_Data {get; set;}
			[Column("Data_Type",TypeName="varchar")] public string Data_Type {get; set;}
			[Column("Data_Sub_Type",TypeName="varchar")] public string Data_Sub_Type {get; set;}
			[Column("Email_To",TypeName="varchar")] public string Email_To {get; set;}
			[Column("Email_To_Name",TypeName="varchar")] public string Email_To_Name {get; set;}
			[Column("Email_Sent_Date_Time",TypeName="datetime")] public DateTime? Email_Sent_Date_Time {get; set;}
			[Column("Email_Status",TypeName="varchar")] public string Email_Status {get; set;}
			[Column("Notify_UserYN",TypeName="bit")] public bool? Notify_UserYN {get; set;}
			[Column("Notify_AdminYN",TypeName="bit")] public bool? Notify_AdminYN {get; set;}
			[Column("ActionSource",TypeName="varchar")] public string ActionSource {get; set;}
		}

		[Table("TBL_LOG_SSL_ACTION",Schema="dbo")]
		public partial class TBL_LOG_SSL_ACTION
		{
			[Column("AutoID",TypeName="numeric")] public decimal AutoID {get; set;}
			[Column("CertificateId",TypeName="numeric")] public decimal? CertificateId {get; set;}
			[Column("SSLType",TypeName="varchar")] public string SSLType {get; set;}
			[Column("HostName",TypeName="varchar")] public string HostName {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("NumYears",TypeName="smallint")] public short? NumYears {get; set;}
			[Column("TransactionID",TypeName="numeric")] public decimal? TransactionID {get; set;}
			[Column("OrderID",TypeName="numeric")] public decimal? OrderID {get; set;}
			[Column("OrderDetailID",TypeName="numeric")] public decimal? OrderDetailID {get; set;}
			[Column("CreateDate",TypeName="datetime")] public DateTime? CreateDate {get; set;}
			[Column("ActionType",TypeName="varchar")] public string ActionType {get; set;}
			[Column("CertStatus",TypeName="varchar")] public string CertStatus {get; set;}
			[Column("CertStatusDescription",TypeName="varchar")] public string CertStatusDescription {get; set;}
			[Column("ActionIp",TypeName="varchar")] public string ActionIp {get; set;}
			[Column("Note",TypeName="varchar")] public string Note {get; set;}
		}

		[Table("TBL_LOG_SSL_REFUND_EMAIL_QUEUE",Schema="dbo")]
		public partial class TBL_LOG_SSL_REFUND_EMAIL_QUEUE
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("Certificate_ID",TypeName="numeric")] public decimal Certificate_ID {get; set;}
			[Column("Created_DateTime",TypeName="datetime")] public DateTime? Created_DateTime {get; set;}
			[Column("Admin_UserName",TypeName="varchar")] public string Admin_UserName {get; set;}
			[Column("Status",TypeName="varchar")] public string Status {get; set;}
			[Column("Status_Desc",TypeName="varchar")] public string Status_Desc {get; set;}
		}

		[Table("TBL_LOG_USER_EXTERNAL_LOGIN",Schema="dbo")]
		public partial class TBL_LOG_USER_EXTERNAL_LOGIN
		{
			[Column("UserId",TypeName="int")] public int? UserId {get; set;}
			[Column("Ip",TypeName="bigint")] public long? Ip {get; set;}
			[Column("CreatedDateTime",TypeName="int")] public int? CreatedDateTime {get; set;}
			[Column("IsLoginSuccess",TypeName="bit")] public bool? IsLoginSuccess {get; set;}
			[Column("LoginFrom",TypeName="varchar")] public string LoginFrom {get; set;}
		}

		[Table("TBL_LOG_USER_FUNDS",Schema="dbo")]
		public partial class TBL_LOG_USER_FUNDS
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("Transaction_ID",TypeName="int")] public int Transaction_ID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Account_Balance_Before",TypeName="money")] public decimal? Account_Balance_Before {get; set;}
			[Column("Available_Balance_Before",TypeName="money")] public decimal? Available_Balance_Before {get; set;}
			[Column("Amount",TypeName="money")] public decimal? Amount {get; set;}
			[Column("Transaction_Type",TypeName="varchar")] public string Transaction_Type {get; set;}
			[Column("Account_Balance_After",TypeName="money")] public decimal? Account_Balance_After {get; set;}
			[Column("Available_Balance_After",TypeName="money")] public decimal? Available_Balance_After {get; set;}
			[Column("CreatedDateTime",TypeName="int")] public int CreatedDateTime {get; set;}
		}

		[Table("TBL_LOG_USER_HOSTING_DETAILS",Schema="dbo")]
		public partial class TBL_LOG_USER_HOSTING_DETAILS
		{
			[Column("AutoId",TypeName="int")] public int AutoId {get; set;}
			[Column("Username",TypeName="nvarchar")] public string Username {get; set;}
			[Column("OldClientId",TypeName="int")] public int? OldClientId {get; set;}
			[Column("OldProvider",TypeName="varchar")] public string OldProvider {get; set;}
			[Column("NewClientId",TypeName="int")] public int? NewClientId {get; set;}
			[Column("NewProvider",TypeName="varchar")] public string NewProvider {get; set;}
			[Column("RecordCreatedDateTime",TypeName="datetime")] public DateTime RecordCreatedDateTime {get; set;}
			[Column("Comments",TypeName="nvarchar")] public string Comments {get; set;}
		}

		[Table("TBL_LOG_USER_LOCK_UNLOCK_HISTORY",Schema="dbo")]
		public partial class TBL_LOG_USER_LOCK_UNLOCK_HISTORY
		{
			[Column("Auto_id",TypeName="numeric")] public decimal Auto_id {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Action_Date",TypeName="int")] public int? Action_Date {get; set;}
			[Column("Action_Type",TypeName="varchar")] public string Action_Type {get; set;}
			[Column("Admin_User_Name",TypeName="varchar")] public string Admin_User_Name {get; set;}
			[Column("Reason_Code",TypeName="varchar")] public string Reason_Code {get; set;}
			[Column("Reason_Details",TypeName="varchar")] public string Reason_Details {get; set;}
		}

		[Table("TBL_LOG_USER_LOGIN",Schema="dbo")]
		public partial class TBL_LOG_USER_LOGIN
		{
			[Column("UserId",TypeName="int")] public int? UserId {get; set;}
			[Column("Ip",TypeName="bigint")] public long? Ip {get; set;}
			[Column("CreatedDateTime",TypeName="int")] public int? CreatedDateTime {get; set;}
			[Column("IsLoginSuccess",TypeName="bit")] public bool? IsLoginSuccess {get; set;}
			[Column("LoginFrom",TypeName="varchar")] public string LoginFrom {get; set;}
		}

		[Table("TBL_LOG_USER_PROFILE_CHANGE",Schema="dbo")]
		public partial class TBL_LOG_USER_PROFILE_CHANGE
		{
			[Column("autoId",TypeName="int")] public int autoId {get; set;}
			[Column("userId",TypeName="numeric")] public decimal? userId {get; set;}
			[Column("profileType",TypeName="char")] public string profileType {get; set;}
			[Column("profileSubType",TypeName="varchar")] public string profileSubType {get; set;}
			[Column("oldValue",TypeName="nvarchar")] public string oldValue {get; set;}
			[Column("newValue",TypeName="nvarchar")] public string newValue {get; set;}
			[Column("byApp",TypeName="char")] public string byApp {get; set;}
			[Column("byUser",TypeName="nvarchar")] public string byUser {get; set;}
			[Column("comment",TypeName="varchar")] public string comment {get; set;}
			[Column("ipAddress",TypeName="bigint")] public long? ipAddress {get; set;}
			[Column("createdDate",TypeName="int")] public int? createdDate {get; set;}
		}

		[Table("TBL_LOG_USER_ROLES",Schema="dbo")]
		public partial class TBL_LOG_USER_ROLES
		{
			[Column("AutoID",TypeName="numeric")] public decimal AutoID {get; set;}
			[Column("Action",TypeName="varchar")] public string Action {get; set;}
			[Column("UserID",TypeName="int")] public int? UserID {get; set;}
			[Column("RoleID",TypeName="int")] public int? RoleID {get; set;}
			[Column("RoleName",TypeName="varchar")] public string RoleName {get; set;}
			[Column("AdminUserName",TypeName="varchar")] public string AdminUserName {get; set;}
			[Column("AdminIP",TypeName="nvarchar")] public string AdminIP {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime? CreatedDateTime {get; set;}
		}

		[Table("TBL_LOG_USER_STATUS",Schema="dbo")]
		public partial class TBL_LOG_USER_STATUS
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("UserName",TypeName="varchar")] public string UserName {get; set;}
			[Column("UserStatusId",TypeName="tinyint")] public byte UserStatusId {get; set;}
			[Column("Comments",TypeName="varchar")] public string Comments {get; set;}
			[Column("AdminUser",TypeName="varchar")] public string AdminUser {get; set;}
			[Column("AdminIP",TypeName="varchar")] public string AdminIP {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime CreatedDateTime {get; set;}
		}

		[Table("TBL_LOG_USER_SUPPPORT_PIN",Schema="dbo")]
		public partial class TBL_LOG_USER_SUPPPORT_PIN
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("AdminUserName",TypeName="nvarchar")] public string AdminUserName {get; set;}
			[Column("Pin",TypeName="varchar")] public string Pin {get; set;}
			[Column("Type",TypeName="varchar")] public string Type {get; set;}
			[Column("CreateDateTime",TypeName="int")] public int? CreateDateTime {get; set;}
			[Column("Ip",TypeName="bigint")] public long? Ip {get; set;}
			[Column("Comments",TypeName="varchar")] public string Comments {get; set;}
		}

		[Table("TBL_LOG_WBL_EVENT_HISTORY",Schema="dbo")]
		public partial class TBL_LOG_WBL_EVENT_HISTORY
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("domainName",TypeName="nvarchar")] public string domainName {get; set;}
			[Column("userId",TypeName="int")] public int? userId {get; set;}
			[Column("actionType",TypeName="varchar")] public string actionType {get; set;}
			[Column("actionDateTime",TypeName="datetime")] public DateTime? actionDateTime {get; set;}
			[Column("details",TypeName="varchar")] public string details {get; set;}
		}

		[Table("TBL_MARKETPLACE_CATEGORY",Schema="dbo")]
		public partial class TBL_MARKETPLACE_CATEGORY
		{
			[Column("MP_Category_ID",TypeName="int")] public int MP_Category_ID {get; set;}
			[Column("Parent_Category_ID",TypeName="int")] public int? Parent_Category_ID {get; set;}
			[Column("Category_Name",TypeName="varchar")] public string Category_Name {get; set;}
			[Column("Category_Description",TypeName="text")] public string Category_Description {get; set;}
			[Column("Seq_No",TypeName="int")] public int? Seq_No {get; set;}
			[Column("Active_YN",TypeName="bit")] public bool? Active_YN {get; set;}
		}

		[Table("TBL_MARKETPLACE_LISTING",Schema="dbo")]
		public partial class TBL_MARKETPLACE_LISTING
		{
			[Column("MP_Listing_ID",TypeName="numeric")] public decimal MP_Listing_ID {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("Description",TypeName="text")] public string Description {get; set;}
			[Column("Seller_User_Name",TypeName="nvarchar")] public string Seller_User_Name {get; set;}
			[Column("Listing_Price",TypeName="money")] public decimal? Listing_Price {get; set;}
			[Column("Listing_Date",TypeName="datetime")] public DateTime? Listing_Date {get; set;}
			[Column("Listing_Expiry_Date",TypeName="datetime")] public DateTime? Listing_Expiry_Date {get; set;}
			[Column("Accept_Offers_YN",TypeName="bit")] public bool? Accept_Offers_YN {get; set;}
			[Column("Adult_Listing_YN",TypeName="bit")] public bool? Adult_Listing_YN {get; set;}
			[Column("Hypens_YN",TypeName="bit")] public bool? Hypens_YN {get; set;}
			[Column("Numbers_YN",TypeName="bit")] public bool? Numbers_YN {get; set;}
			[Column("Sale_Date",TypeName="datetime")] public DateTime? Sale_Date {get; set;}
			[Column("Buyer_User_Name",TypeName="nvarchar")] public string Buyer_User_Name {get; set;}
			[Column("Final_Sale_Price",TypeName="money")] public decimal? Final_Sale_Price {get; set;}
			[Column("Commission_Percentage",TypeName="int")] public int? Commission_Percentage {get; set;}
			[Column("Amount_Earned_By_Seller",TypeName="money")] public decimal? Amount_Earned_By_Seller {get; set;}
			[Column("Featured_YN",TypeName="bit")] public bool? Featured_YN {get; set;}
			[Column("Closed_YN",TypeName="bit")] public bool? Closed_YN {get; set;}
			[Column("Closed_Description",TypeName="text")] public string Closed_Description {get; set;}
			[Column("Closed_Date",TypeName="datetime")] public DateTime? Closed_Date {get; set;}
			[Column("SLD",TypeName="nvarchar")] public string SLD {get; set;}
			[Column("TLD",TypeName="nvarchar")] public string TLD {get; set;}
			[Column("Offer_EmailAlert_YN",TypeName="bit")] public bool? Offer_EmailAlert_YN {get; set;}
			[Column("Admin_Return_Description",TypeName="text")] public string Admin_Return_Description {get; set;}
			[Column("WhoisGuard_ID_During_Sale",TypeName="int")] public int? WhoisGuard_ID_During_Sale {get; set;}
			[Column("Is_Sale_Verified_YN",TypeName="bit")] public bool? Is_Sale_Verified_YN {get; set;}
			[Column("Admin_Description",TypeName="text")] public string Admin_Description {get; set;}
			[Column("Is_Premium_Domain_YN",TypeName="bit")] public bool? Is_Premium_Domain_YN {get; set;}
			[Column("Partner_Id",TypeName="int")] public int? Partner_Id {get; set;}
			[Column("Status",TypeName="varchar")] public string Status {get; set;}
			[Column("Is_Transfer_Completed_Callback_Received_YN",TypeName="bit")] public bool? Is_Transfer_Completed_Callback_Received_YN {get; set;}
			[Column("Order_ID",TypeName="numeric")] public decimal? Order_ID {get; set;}
			[Column("More_Info",TypeName="varchar")] public string More_Info {get; set;}
			[Column("PartnerOrderId",TypeName="bigint")] public long? PartnerOrderId {get; set;}
		}

		[Table("TBL_MARKETPLACE_PARTNER_CATEGORIES",Schema="dbo")]
		public partial class TBL_MARKETPLACE_PARTNER_CATEGORIES
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Name",TypeName="varchar")] public string Name {get; set;}
			[Column("NamecheapCategoryId",TypeName="int")] public int? NamecheapCategoryId {get; set;}
			[Column("PartnerId",TypeName="tinyint")] public byte PartnerId {get; set;}
			[Column("IsAdultListing",TypeName="bit")] public bool? IsAdultListing {get; set;}
		}

		[Table("TBL_MARKETPLACE_PARTNERS",Schema="dbo")]
		public partial class TBL_MARKETPLACE_PARTNERS
		{
			[Column("Id",TypeName="tinyint")] public byte Id {get; set;}
			[Column("Name",TypeName="varchar")] public string Name {get; set;}
			[Column("IsActiveYN",TypeName="bit")] public bool IsActiveYN {get; set;}
			[Column("ProductSubType",TypeName="varchar")] public string ProductSubType {get; set;}
			[Column("Priority",TypeName="tinyint")] public byte Priority {get; set;}
		}

		[Table("TBL_MARKETPLACE_STATUS",Schema="dbo")]
		public partial class TBL_MARKETPLACE_STATUS
		{
			[Column("Id",TypeName="tinyint")] public byte Id {get; set;}
			[Column("Name",TypeName="varchar")] public string Name {get; set;}
			[Column("Title",TypeName="varchar")] public string Title {get; set;}
			[Column("TitleShownToUser",TypeName="varchar")] public string TitleShownToUser {get; set;}
			[Column("Description",TypeName="varchar")] public string Description {get; set;}
			[Column("CanBeSetByAdmin",TypeName="bit")] public bool CanBeSetByAdmin {get; set;}
		}

		[Table("TBL_MARKETPLACE_SYNC_BUYDOMAINS_QUEUE",Schema="dbo")]
		public partial class TBL_MARKETPLACE_SYNC_BUYDOMAINS_QUEUE
		{
			[Column("AutoId",TypeName="int")] public int AutoId {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("Price",TypeName="money")] public decimal? Price {get; set;}
			[Column("IsFastTransferYN",TypeName="bit")] public bool IsFastTransferYN {get; set;}
			[Column("IsUpdatedYN",TypeName="bit")] public bool IsUpdatedYN {get; set;}
			[Column("IsProcessedYN",TypeName="bit")] public bool IsProcessedYN {get; set;}
			[Column("IsNewYN",TypeName="bit")] public bool IsNewYN {get; set;}
			[Column("CategoryIds",TypeName="varchar")] public string CategoryIds {get; set;}
			[Column("MpListingId",TypeName="numeric")] public decimal? MpListingId {get; set;}
			[Column("IsPriceChangedYN",TypeName="bit")] public bool IsPriceChangedYN {get; set;}
			[Column("IsCategoryIdsChangedYN",TypeName="bit")] public bool? IsCategoryIdsChangedYN {get; set;}
			[Column("AdultListingYN",TypeName="bit")] public bool? AdultListingYN {get; set;}
			[Column("HypensYN",TypeName="bit")] public bool? HypensYN {get; set;}
			[Column("NumbersYN",TypeName="bit")] public bool? NumbersYN {get; set;}
			[Column("IsDeletedYN",TypeName="bit")] public bool? IsDeletedYN {get; set;}
			[Column("ExpiryDateTime",TypeName="datetime")] public DateTime? ExpiryDateTime {get; set;}
			[Column("IsExpiryChangedYN",TypeName="bit")] public bool? IsExpiryChangedYN {get; set;}
			[Column("Partner_Id",TypeName="int")] public int? Partner_Id {get; set;}
		}

		[Table("TBL_MAXMIND_ALERT_IP",Schema="dbo")]
		public partial class TBL_MAXMIND_ALERT_IP
		{
			[Column("Auto_ID",TypeName="numeric")] public decimal Auto_ID {get; set;}
			[Column("IP_Address",TypeName="varchar")] public string IP_Address {get; set;}
			[Column("MaxMind_ID",TypeName="varchar")] public string MaxMind_ID {get; set;}
			[Column("IP_Domain",TypeName="varchar")] public string IP_Domain {get; set;}
			[Column("City",TypeName="varchar")] public string City {get; set;}
			[Column("Region",TypeName="varchar")] public string Region {get; set;}
			[Column("Country",TypeName="varchar")] public string Country {get; set;}
			[Column("MaxMind_Date",TypeName="datetime")] public DateTime? MaxMind_Date {get; set;}
			[Column("Record_Created_DateTime",TypeName="datetime")] public DateTime? Record_Created_DateTime {get; set;}
			[Column("IsReviewed",TypeName="bit")] public bool? IsReviewed {get; set;}
			[Column("Txn_ID",TypeName="varchar")] public string Txn_ID {get; set;}
			[Column("Reason",TypeName="varchar")] public string Reason {get; set;}
			[Column("LastReviewedBy",TypeName="varchar")] public string LastReviewedBy {get; set;}
			[Column("LastReviewedByDate",TypeName="datetime")] public DateTime? LastReviewedByDate {get; set;}
		}

		[Table("TBL_MESSAGE",Schema="dbo")]
		public partial class TBL_MESSAGE
		{
			[Column("Reference_ID",TypeName="numeric")] public decimal Reference_ID {get; set;}
			[Column("Reference_ID_OLD",TypeName="varchar")] public string Reference_ID_OLD {get; set;}
			[Column("Message_Title",TypeName="varchar")] public string Message_Title {get; set;}
			[Column("Message_Body",TypeName="varchar")] public string Message_Body {get; set;}
			[Column("Created_Date",TypeName="datetime")] public DateTime? Created_Date {get; set;}
			[Column("Deliver_After_Date",TypeName="datetime")] public DateTime? Deliver_After_Date {get; set;}
			[Column("UserName",TypeName="varchar")] public string UserName {get; set;}
			[Column("Associated_Domains",TypeName="varchar")] public string Associated_Domains {get; set;}
			[Column("Associated_OrderID",TypeName="varchar")] public string Associated_OrderID {get; set;}
			[Column("Additional_Info",TypeName="text")] public string Additional_Info {get; set;}
			[Column("Deleted_YN",TypeName="bit")] public bool? Deleted_YN {get; set;}
			[Column("Message_TypeID",TypeName="int")] public int? Message_TypeID {get; set;}
			[Column("ReplyTo_Mail",TypeName="varchar")] public string ReplyTo_Mail {get; set;}
			[Column("Created_By",TypeName="varchar")] public string Created_By {get; set;}
			[Column("Modified_By",TypeName="varchar")] public string Modified_By {get; set;}
			[Column("Read_YN",TypeName="bit")] public bool? Read_YN {get; set;}
			[Column("Save_yn",TypeName="bit")] public bool? Save_yn {get; set;}
		}

		[Table("TBL_MESSAGE_TYPE",Schema="dbo")]
		public partial class TBL_MESSAGE_TYPE
		{
			[Column("Type_ID",TypeName="int")] public int Type_ID {get; set;}
			[Column("Message_Type_Name",TypeName="varchar")] public string Message_Type_Name {get; set;}
			[Column("Description",TypeName="varchar")] public string Description {get; set;}
			[Column("User_Delete_YN",TypeName="bit")] public bool User_Delete_YN {get; set;}
			[Column("Reference_Name",TypeName="varchar")] public string Reference_Name {get; set;}
		}

		[Table("TBL_META_INFO",Schema="dbo")]
		public partial class TBL_META_INFO
		{
			[Column("URL",TypeName="varchar")] public string URL {get; set;}
			[Column("meta_title",TypeName="varchar")] public string meta_title {get; set;}
			[Column("meta_description",TypeName="varchar")] public string meta_description {get; set;}
			[Column("meta_keywords",TypeName="varchar")] public string meta_keywords {get; set;}
			[Column("meta_content",TypeName="varchar")] public string meta_content {get; set;}
			[Column("meta_classification",TypeName="varchar")] public string meta_classification {get; set;}
			[Column("meta_generator",TypeName="varchar")] public string meta_generator {get; set;}
			[Column("meta_author",TypeName="varchar")] public string meta_author {get; set;}
			[Column("meta_revisit_after",TypeName="varchar")] public string meta_revisit_after {get; set;}
			[Column("hidden_text",TypeName="varchar")] public string hidden_text {get; set;}
		}

		[Table("TBL_META_INFO_USER_AGENT",Schema="dbo")]
		public partial class TBL_META_INFO_USER_AGENT
		{
			[Column("URL",TypeName="varchar")] public string URL {get; set;}
			[Column("user_agent",TypeName="varchar")] public string user_agent {get; set;}
			[Column("ua_meta_title",TypeName="varchar")] public string ua_meta_title {get; set;}
			[Column("ua_meta_description",TypeName="varchar")] public string ua_meta_description {get; set;}
			[Column("ua_meta_keywords",TypeName="varchar")] public string ua_meta_keywords {get; set;}
			[Column("ua_meta_content",TypeName="varchar")] public string ua_meta_content {get; set;}
			[Column("ua_meta_classification",TypeName="varchar")] public string ua_meta_classification {get; set;}
			[Column("ua_meta_generator",TypeName="varchar")] public string ua_meta_generator {get; set;}
			[Column("ua_meta_author",TypeName="varchar")] public string ua_meta_author {get; set;}
			[Column("ua_meta_revisit_after",TypeName="varchar")] public string ua_meta_revisit_after {get; set;}
			[Column("ua_hidden_text",TypeName="varchar")] public string ua_hidden_text {get; set;}
		}

		[Table("TBL_MODIFY_MULTIPLE",Schema="dbo")]
		public partial class TBL_MODIFY_MULTIPLE
		{
			[Column("AutoID",TypeName="numeric")] public decimal AutoID {get; set;}
			[Column("BatchID",TypeName="nvarchar")] public string BatchID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("DoCommand",TypeName="nvarchar")] public string DoCommand {get; set;}
			[Column("DoCommandDesc",TypeName="nvarchar")] public string DoCommandDesc {get; set;}
			[Column("QueueTime",TypeName="datetime")] public DateTime? QueueTime {get; set;}
			[Column("Next_Process_DateTime",TypeName="datetime")] public DateTime? Next_Process_DateTime {get; set;}
			[Column("ErrInfo",TypeName="ntext")] public string ErrInfo {get; set;}
			[Column("IsHosted",TypeName="bit")] public bool? IsHosted {get; set;}
		}

		[Table("TBL_MODIFY_MULTIPLE_COMMANDS",Schema="dbo")]
		public partial class TBL_MODIFY_MULTIPLE_COMMANDS
		{
			[Column("AutoID",TypeName="numeric")] public decimal AutoID {get; set;}
			[Column("BatchID",TypeName="nvarchar")] public string BatchID {get; set;}
			[Column("Param",TypeName="nvarchar")] public string Param {get; set;}
			[Column("ParamValue",TypeName="nvarchar")] public string ParamValue {get; set;}
		}

		[Table("TBL_MONITOR_DNS",Schema="dbo")]
		public partial class TBL_MONITOR_DNS
		{
			[Column("Dns_ID",TypeName="int")] public int Dns_ID {get; set;}
			[Column("Dns_Name",TypeName="varchar")] public string Dns_Name {get; set;}
			[Column("Comments",TypeName="varchar")] public string Comments {get; set;}
			[Column("Log_Type",TypeName="varchar")] public string Log_Type {get; set;}
		}

		[Table("TBL_MONITOR_DNS_LOG",Schema="dbo")]
		public partial class TBL_MONITOR_DNS_LOG
		{
			[Column("DnsLog_ID",TypeName="numeric")] public decimal DnsLog_ID {get; set;}
			[Column("DomainName",TypeName="varchar")] public string DomainName {get; set;}
			[Column("UserName",TypeName="varchar")] public string UserName {get; set;}
			[Column("DnsName",TypeName="varchar")] public string DnsName {get; set;}
			[Column("LogTime",TypeName="datetime")] public DateTime? LogTime {get; set;}
			[Column("Log_Type",TypeName="varchar")] public string Log_Type {get; set;}
		}

		[Table("TBL_MP_DOMAIN_CATEGORY",Schema="dbo")]
		public partial class TBL_MP_DOMAIN_CATEGORY
		{
			[Column("MP_Listing_ID",TypeName="numeric")] public decimal MP_Listing_ID {get; set;}
			[Column("MP_Category_ID",TypeName="int")] public int MP_Category_ID {get; set;}
			[Column("seq_no",TypeName="smallint")] public short? seq_no {get; set;}
		}

		[Table("TBL_MP_INCLUDED_FEATURES",Schema="dbo")]
		public partial class TBL_MP_INCLUDED_FEATURES
		{
			[Column("MP_Included_Features_ID",TypeName="numeric")] public decimal MP_Included_Features_ID {get; set;}
			[Column("MP_Listing_ID",TypeName="numeric")] public decimal? MP_Listing_ID {get; set;}
			[Column("POP3_YN",TypeName="bit")] public bool? POP3_YN {get; set;}
			[Column("WhoisGuard_YN",TypeName="bit")] public bool? WhoisGuard_YN {get; set;}
		}

		[Table("TBL_MP_OFFERS",Schema="dbo")]
		public partial class TBL_MP_OFFERS
		{
			[Column("Offer_ID",TypeName="numeric")] public decimal Offer_ID {get; set;}
			[Column("MP_Listing_ID",TypeName="numeric")] public decimal? MP_Listing_ID {get; set;}
			[Column("Buyer_User_Name",TypeName="nvarchar")] public string Buyer_User_Name {get; set;}
			[Column("Offer_Price",TypeName="money")] public decimal? Offer_Price {get; set;}
			[Column("Offer_Date",TypeName="datetime")] public DateTime? Offer_Date {get; set;}
			[Column("Counter_Offer_Price",TypeName="money")] public decimal? Counter_Offer_Price {get; set;}
			[Column("Offer_Price_Accepted_YN",TypeName="bit")] public bool? Offer_Price_Accepted_YN {get; set;}
			[Column("Counter_Offer_Price_Accepted_YN",TypeName="bit")] public bool? Counter_Offer_Price_Accepted_YN {get; set;}
			[Column("Old_Offer_Price_List",TypeName="varchar")] public string Old_Offer_Price_List {get; set;}
		}

		[Table("TBL_NAMECHEAP_BONUS",Schema="dbo")]
		public partial class TBL_NAMECHEAP_BONUS
		{
			[Column("autoId",TypeName="int")] public int autoId {get; set;}
			[Column("couponCode",TypeName="varchar")] public string couponCode {get; set;}
			[Column("partnerType",TypeName="varchar")] public string partnerType {get; set;}
			[Column("rangeStart",TypeName="money")] public decimal? rangeStart {get; set;}
			[Column("rangeEnd",TypeName="money")] public decimal? rangeEnd {get; set;}
			[Column("couponValue",TypeName="money")] public decimal? couponValue {get; set;}
			[Column("userName",TypeName="nvarchar")] public string userName {get; set;}
			[Column("associatedDateTime",TypeName="datetime")] public DateTime? associatedDateTime {get; set;}
			[Column("endUserIp",TypeName="varchar")] public string endUserIp {get; set;}
			[Column("unlinked_yn",TypeName="bit")] public bool? unlinked_yn {get; set;}
			[Column("adminUser",TypeName="nvarchar")] public string adminUser {get; set;}
			[Column("adminDesc",TypeName="varchar")] public string adminDesc {get; set;}
			[Column("expiryDateTime",TypeName="datetime")] public DateTime? expiryDateTime {get; set;}
		}

		[Table("TBL_NAV_ATTR_BY_NAV",Schema="dbo")]
		public partial class TBL_NAV_ATTR_BY_NAV
		{
			[Column("Auto_ID",TypeName="int")] public int Auto_ID {get; set;}
			[Column("Nav_ID",TypeName="int")] public int? Nav_ID {get; set;}
			[Column("Child_Nav_ID",TypeName="int")] public int? Child_Nav_ID {get; set;}
			[Column("Include_ChildNav_YN",TypeName="bit")] public bool? Include_ChildNav_YN {get; set;}
			[Column("Attribute_Value",TypeName="nvarchar")] public string Attribute_Value {get; set;}
		}

		[Table("TBL_NAV_ATTR_BY_PAGE",Schema="dbo")]
		public partial class TBL_NAV_ATTR_BY_PAGE
		{
			[Column("Auto_ID",TypeName="int")] public int Auto_ID {get; set;}
			[Column("Nav_ID",TypeName="int")] public int? Nav_ID {get; set;}
			[Column("Page_ID",TypeName="int")] public int? Page_ID {get; set;}
			[Column("Attribute_Value",TypeName="nvarchar")] public string Attribute_Value {get; set;}
		}

		[Table("TBL_NAVIGATION",Schema="dbo")]
		public partial class TBL_NAVIGATION
		{
			[Column("Nav_ID",TypeName="int")] public int Nav_ID {get; set;}
			[Column("Nav_Name",TypeName="varchar")] public string Nav_Name {get; set;}
			[Column("Parent_Nav_ID",TypeName="int")] public int? Parent_Nav_ID {get; set;}
			[Column("Seq_No",TypeName="int")] public int? Seq_No {get; set;}
			[Column("Link_Type_ID",TypeName="int")] public int? Link_Type_ID {get; set;}
			[Column("Default_URL",TypeName="int")] public int? Default_URL {get; set;}
			[Column("Image_URL",TypeName="varchar")] public string Image_URL {get; set;}
			[Column("Image_Height",TypeName="int")] public int? Image_Height {get; set;}
			[Column("Image_Width",TypeName="int")] public int? Image_Width {get; set;}
			[Column("Nav_Title",TypeName="varchar")] public string Nav_Title {get; set;}
			[Column("isSectionEnabledYN",TypeName="bit")] public bool? isSectionEnabledYN {get; set;}
			[Column("isEnabledYN",TypeName="bit")] public bool? isEnabledYN {get; set;}
			[Column("Top_Navigation_HTML",TypeName="text")] public string Top_Navigation_HTML {get; set;}
			[Column("Left_Navigation_HTML",TypeName="text")] public string Left_Navigation_HTML {get; set;}
			[Column("Bottom_Navigation_HTML",TypeName="text")] public string Bottom_Navigation_HTML {get; set;}
			[Column("Top_Navigation_No_Hosting_HTML",TypeName="text")] public string Top_Navigation_No_Hosting_HTML {get; set;}
			[Column("Left_Navigation_No_Hosting_HTML",TypeName="text")] public string Left_Navigation_No_Hosting_HTML {get; set;}
			[Column("Bottom_Navigation_No_Hosting_HTML",TypeName="text")] public string Bottom_Navigation_No_Hosting_HTML {get; set;}
			[Column("Site",TypeName="varchar")] public string Site {get; set;}
		}

		[Table("TBL_NAVIGATION_BACKUP",Schema="dbo")]
		public partial class TBL_NAVIGATION_BACKUP
		{
			[Column("Nav_ID",TypeName="int")] public int Nav_ID {get; set;}
			[Column("Nav_Name",TypeName="varchar")] public string Nav_Name {get; set;}
			[Column("Parent_Nav_ID",TypeName="int")] public int? Parent_Nav_ID {get; set;}
			[Column("Seq_No",TypeName="int")] public int? Seq_No {get; set;}
			[Column("Link_Type_ID",TypeName="int")] public int? Link_Type_ID {get; set;}
			[Column("Default_URL",TypeName="int")] public int? Default_URL {get; set;}
			[Column("Image_URL",TypeName="varchar")] public string Image_URL {get; set;}
			[Column("Image_Height",TypeName="int")] public int? Image_Height {get; set;}
			[Column("Image_Width",TypeName="int")] public int? Image_Width {get; set;}
			[Column("Nav_Title",TypeName="varchar")] public string Nav_Title {get; set;}
			[Column("isSectionEnabledYN",TypeName="bit")] public bool? isSectionEnabledYN {get; set;}
			[Column("isEnabledYN",TypeName="bit")] public bool? isEnabledYN {get; set;}
			[Column("Top_Navigation_HTML",TypeName="text")] public string Top_Navigation_HTML {get; set;}
			[Column("Left_Navigation_HTML",TypeName="text")] public string Left_Navigation_HTML {get; set;}
			[Column("Bottom_Navigation_HTML",TypeName="text")] public string Bottom_Navigation_HTML {get; set;}
			[Column("Top_Navigation_No_Hosting_HTML",TypeName="text")] public string Top_Navigation_No_Hosting_HTML {get; set;}
			[Column("Left_Navigation_No_Hosting_HTML",TypeName="text")] public string Left_Navigation_No_Hosting_HTML {get; set;}
			[Column("Bottom_Navigation_No_Hosting_HTML",TypeName="text")] public string Bottom_Navigation_No_Hosting_HTML {get; set;}
			[Column("Site",TypeName="varchar")] public string Site {get; set;}
		}

		[Table("TBL_NAVIGATION_LINK_TYPE",Schema="dbo")]
		public partial class TBL_NAVIGATION_LINK_TYPE
		{
			[Column("Link_Type_ID",TypeName="int")] public int Link_Type_ID {get; set;}
			[Column("TypeName",TypeName="varchar")] public string TypeName {get; set;}
		}

		[Table("TBL_News_Letter",Schema="dbo")]
		public partial class TBL_News_Letter
		{
			[Column("RowId",TypeName="int")] public int RowId {get; set;}
			[Column("id",TypeName="int")] public int id {get; set;}
			[Column("Username",TypeName="varchar")] public string Username {get; set;}
			[Column("FirstName",TypeName="varchar")] public string FirstName {get; set;}
			[Column("Lastname",TypeName="varchar")] public string Lastname {get; set;}
			[Column("Email",TypeName="varchar")] public string Email {get; set;}
			[Column("hasAnyOrders",TypeName="bit")] public bool? hasAnyOrders {get; set;}
			[Column("Provider",TypeName="varchar")] public string Provider {get; set;}
			[Column("orderValue",TypeName="smallmoney")] public decimal? orderValue {get; set;}
			[Column("orderCount",TypeName="int")] public int? orderCount {get; set;}
		}

		[Table("TBL_NEWS_LETTER_SYNC_CONTACTS",Schema="dbo")]
		public partial class TBL_NEWS_LETTER_SYNC_CONTACTS
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("userRefID",TypeName="numeric")] public decimal? userRefID {get; set;}
			[Column("emailId",TypeName="nvarchar")] public string emailId {get; set;}
			[Column("newsLetterType",TypeName="int")] public int? newsLetterType {get; set;}
			[Column("createdDateTime",TypeName="datetime")] public DateTime? createdDateTime {get; set;}
			[Column("lastUpdatedDateTime",TypeName="datetime")] public DateTime? lastUpdatedDateTime {get; set;}
			[Column("completedYN",TypeName="bit")] public bool? completedYN {get; set;}
			[Column("ClientIP",TypeName="nvarchar")] public string ClientIP {get; set;}
			[Column("FromType",TypeName="varchar")] public string FromType {get; set;}
			[Column("userType",TypeName="varchar")] public string userType {get; set;}
		}

		[Table("TBL_ORDER",Schema="dbo")]
		public partial class TBL_ORDER
		{
			[Column("Order_ID",TypeName="numeric")] public decimal Order_ID {get; set;}
			[Column("Order_RefID",TypeName="nvarchar")] public string Order_RefID {get; set;}
			[Column("Start_Date_Time",TypeName="datetime")] public DateTime? Start_Date_Time {get; set;}
			[Column("End_Date_Time",TypeName="datetime")] public DateTime? End_Date_Time {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("CC_Order_ID",TypeName="nvarchar")] public string CC_Order_ID {get; set;}
			[Column("CC_Trans_ID",TypeName="nvarchar")] public string CC_Trans_ID {get; set;}
			[Column("CC_Status",TypeName="nvarchar")] public string CC_Status {get; set;}
			[Column("CC_Last4",TypeName="nvarchar")] public string CC_Last4 {get; set;}
			[Column("CC_Name_On_Card",TypeName="nvarchar")] public string CC_Name_On_Card {get; set;}
			[Column("CC_Billed_Amount",TypeName="money")] public decimal? CC_Billed_Amount {get; set;}
			[Column("CC_Final_Amount",TypeName="money")] public decimal? CC_Final_Amount {get; set;}
			[Column("Order_IP",TypeName="nvarchar")] public string Order_IP {get; set;}
			[Column("Order_Zip",TypeName="nvarchar")] public string Order_Zip {get; set;}
			[Column("Order_Error",TypeName="varchar")] public string Order_Error {get; set;}
			[Column("Referral_ID",TypeName="nvarchar")] public string Referral_ID {get; set;}
			[Column("Ad_ID",TypeName="nvarchar")] public string Ad_ID {get; set;}
			[Column("Promotion_Code",TypeName="varchar")] public string Promotion_Code {get; set;}
			[Column("autoRefTrafficLogID",TypeName="int")] public int? autoRefTrafficLogID {get; set;}
			[Column("affiliateID",TypeName="int")] public int? affiliateID {get; set;}
			[Column("affiliateProgramID",TypeName="int")] public int? affiliateProgramID {get; set;}
			[Column("orderIPCountry",TypeName="varchar")] public string orderIPCountry {get; set;}
			[Column("GASent",TypeName="bit")] public bool GASent {get; set;}
			[Column("CheckoutStatus",TypeName="varchar")] public string CheckoutStatus {get; set;}
			[Column("CheckoutStatusDateTime",TypeName="int")] public int? CheckoutStatusDateTime {get; set;}
			[Column("CC_First4",TypeName="nvarchar")] public string CC_First4 {get; set;}
		}

		[Table("TBL_ORDER_AFFILIATE_INFO",Schema="dbo")]
		public partial class TBL_ORDER_AFFILIATE_INFO
		{
			[Column("Auto_ID",TypeName="int")] public int Auto_ID {get; set;}
			[Column("Order_ID",TypeName="numeric")] public decimal Order_ID {get; set;}
			[Column("autoRefTrafficLogID",TypeName="int")] public int? autoRefTrafficLogID {get; set;}
			[Column("affiliateID",TypeName="int")] public int affiliateID {get; set;}
			[Column("affiliateProgramID",TypeName="int")] public int? affiliateProgramID {get; set;}
			[Column("referredDateTime",TypeName="int")] public int? referredDateTime {get; set;}
			[Column("httpReferrer",TypeName="varchar")] public string httpReferrer {get; set;}
			[Column("clientIP",TypeName="bigint")] public long? clientIP {get; set;}
		}

		[Table("TBL_ORDER_DETAIL_ADDONS",Schema="dbo")]
		public partial class TBL_ORDER_DETAIL_ADDONS
		{
			[Column("AutoID",TypeName="bigint")] public long AutoID {get; set;}
			[Column("OrderDetailID",TypeName="bigint")] public long OrderDetailID {get; set;}
			[Column("ShoppingCartItemID",TypeName="bigint")] public long ShoppingCartItemID {get; set;}
			[Column("AddonName",TypeName="varchar")] public string AddonName {get; set;}
			[Column("AddonGroupName",TypeName="varchar")] public string AddonGroupName {get; set;}
			[Column("Qty",TypeName="int")] public int Qty {get; set;}
			[Column("RegularPrice",TypeName="smallmoney")] public decimal RegularPrice {get; set;}
			[Column("IsRegularPricingTypeMultiple",TypeName="bit")] public bool IsRegularPricingTypeMultiple {get; set;}
			[Column("SpecialPrice",TypeName="smallmoney")] public decimal? SpecialPrice {get; set;}
			[Column("IsSpecialPricingTypeMultiple",TypeName="bit")] public bool? IsSpecialPricingTypeMultiple {get; set;}
			[Column("Price",TypeName="smallmoney")] public decimal Price {get; set;}
			[Column("IsPricingTypeMultiple",TypeName="bit")] public bool IsPricingTypeMultiple {get; set;}
			[Column("RegularAdditionalCost",TypeName="smallmoney")] public decimal? RegularAdditionalCost {get; set;}
			[Column("IsRegularAdditionalCostTypeMultiple",TypeName="bit")] public bool? IsRegularAdditionalCostTypeMultiple {get; set;}
			[Column("SpecialAdditionalCost",TypeName="smallmoney")] public decimal? SpecialAdditionalCost {get; set;}
			[Column("IsSpecialAdditionalCostTypeMultiple",TypeName="bit")] public bool? IsSpecialAdditionalCostTypeMultiple {get; set;}
			[Column("AdditionalCost",TypeName="smallmoney")] public decimal? AdditionalCost {get; set;}
			[Column("IsAdditionalCostTypeMultiple",TypeName="bit")] public bool? IsAdditionalCostTypeMultiple {get; set;}
			[Column("Title",TypeName="varchar")] public string Title {get; set;}
		}

		[Table("TBL_ORDER_DETAIL_ADDRESS",Schema="dbo")]
		public partial class TBL_ORDER_DETAIL_ADDRESS
		{
			[Column("Auto_ID",TypeName="numeric")] public decimal Auto_ID {get; set;}
			[Column("Order_ID",TypeName="numeric")] public decimal? Order_ID {get; set;}
			[Column("RegistrantOrganizationName",TypeName="nvarchar")] public string RegistrantOrganizationName {get; set;}
			[Column("RegistrantJobTitle",TypeName="nvarchar")] public string RegistrantJobTitle {get; set;}
			[Column("RegistrantFirstName",TypeName="nvarchar")] public string RegistrantFirstName {get; set;}
			[Column("RegistrantLastName",TypeName="nvarchar")] public string RegistrantLastName {get; set;}
			[Column("RegistrantAddress1",TypeName="nvarchar")] public string RegistrantAddress1 {get; set;}
			[Column("RegistrantAddress2",TypeName="nvarchar")] public string RegistrantAddress2 {get; set;}
			[Column("RegistrantCity",TypeName="nvarchar")] public string RegistrantCity {get; set;}
			[Column("RegistrantStateProvince",TypeName="nvarchar")] public string RegistrantStateProvince {get; set;}
			[Column("RegistrantStateProvinceChoice",TypeName="nvarchar")] public string RegistrantStateProvinceChoice {get; set;}
			[Column("RegistrantPostalCode",TypeName="nvarchar")] public string RegistrantPostalCode {get; set;}
			[Column("RegistrantCountry",TypeName="nvarchar")] public string RegistrantCountry {get; set;}
			[Column("RegistrantPhone",TypeName="nvarchar")] public string RegistrantPhone {get; set;}
			[Column("RegistrantFax",TypeName="nvarchar")] public string RegistrantFax {get; set;}
			[Column("RegistrantEmailAddress",TypeName="nvarchar")] public string RegistrantEmailAddress {get; set;}
			[Column("TechOrganizationName",TypeName="nvarchar")] public string TechOrganizationName {get; set;}
			[Column("TechJobTitle",TypeName="nvarchar")] public string TechJobTitle {get; set;}
			[Column("TechFirstName",TypeName="nvarchar")] public string TechFirstName {get; set;}
			[Column("TechLastName",TypeName="nvarchar")] public string TechLastName {get; set;}
			[Column("TechAddress1",TypeName="nvarchar")] public string TechAddress1 {get; set;}
			[Column("TechAddress2",TypeName="nvarchar")] public string TechAddress2 {get; set;}
			[Column("TechCity",TypeName="nvarchar")] public string TechCity {get; set;}
			[Column("TechStateProvince",TypeName="nvarchar")] public string TechStateProvince {get; set;}
			[Column("TechStateProvinceChoice",TypeName="nvarchar")] public string TechStateProvinceChoice {get; set;}
			[Column("TechPostalCode",TypeName="nvarchar")] public string TechPostalCode {get; set;}
			[Column("TechCountry",TypeName="nvarchar")] public string TechCountry {get; set;}
			[Column("TechPhone",TypeName="nvarchar")] public string TechPhone {get; set;}
			[Column("TechFax",TypeName="nvarchar")] public string TechFax {get; set;}
			[Column("TechEmailAddress",TypeName="nvarchar")] public string TechEmailAddress {get; set;}
			[Column("AdminOrganizationName",TypeName="nvarchar")] public string AdminOrganizationName {get; set;}
			[Column("AdminJobTitle",TypeName="nvarchar")] public string AdminJobTitle {get; set;}
			[Column("AdminFirstName",TypeName="nvarchar")] public string AdminFirstName {get; set;}
			[Column("AdminLastName",TypeName="nvarchar")] public string AdminLastName {get; set;}
			[Column("AdminAddress1",TypeName="nvarchar")] public string AdminAddress1 {get; set;}
			[Column("AdminAddress2",TypeName="nvarchar")] public string AdminAddress2 {get; set;}
			[Column("AdminCity",TypeName="nvarchar")] public string AdminCity {get; set;}
			[Column("AdminStateProvince",TypeName="nvarchar")] public string AdminStateProvince {get; set;}
			[Column("AdminStateProvinceChoice",TypeName="nvarchar")] public string AdminStateProvinceChoice {get; set;}
			[Column("AdminPostalCode",TypeName="nvarchar")] public string AdminPostalCode {get; set;}
			[Column("AdminCountry",TypeName="nvarchar")] public string AdminCountry {get; set;}
			[Column("AdminPhone",TypeName="nvarchar")] public string AdminPhone {get; set;}
			[Column("AdminFax",TypeName="nvarchar")] public string AdminFax {get; set;}
			[Column("AdminEmailAddress",TypeName="nvarchar")] public string AdminEmailAddress {get; set;}
			[Column("AuxBillingOrganizationName",TypeName="nvarchar")] public string AuxBillingOrganizationName {get; set;}
			[Column("AuxBillingJobTitle",TypeName="nvarchar")] public string AuxBillingJobTitle {get; set;}
			[Column("AuxBillingFirstName",TypeName="nvarchar")] public string AuxBillingFirstName {get; set;}
			[Column("AuxBillingLastName",TypeName="nvarchar")] public string AuxBillingLastName {get; set;}
			[Column("AuxBillingAddress1",TypeName="nvarchar")] public string AuxBillingAddress1 {get; set;}
			[Column("AuxBillingAddress2",TypeName="nvarchar")] public string AuxBillingAddress2 {get; set;}
			[Column("AuxBillingCity",TypeName="nvarchar")] public string AuxBillingCity {get; set;}
			[Column("AuxBillingStateProvince",TypeName="nvarchar")] public string AuxBillingStateProvince {get; set;}
			[Column("AuxBillingStateProvinceChoice",TypeName="nvarchar")] public string AuxBillingStateProvinceChoice {get; set;}
			[Column("AuxBillingPostalCode",TypeName="nvarchar")] public string AuxBillingPostalCode {get; set;}
			[Column("AuxBillingCountry",TypeName="nvarchar")] public string AuxBillingCountry {get; set;}
			[Column("AuxBillingPhone",TypeName="nvarchar")] public string AuxBillingPhone {get; set;}
			[Column("AuxBillingFax",TypeName="nvarchar")] public string AuxBillingFax {get; set;}
			[Column("AuxBillingEmailAddress",TypeName="nvarchar")] public string AuxBillingEmailAddress {get; set;}
			[Column("RegistrantPhoneExt",TypeName="varchar")] public string RegistrantPhoneExt {get; set;}
			[Column("TechPhoneExt",TypeName="varchar")] public string TechPhoneExt {get; set;}
			[Column("AdminPhoneExt",TypeName="varchar")] public string AdminPhoneExt {get; set;}
			[Column("AuxBillingPhoneext",TypeName="varchar")] public string AuxBillingPhoneext {get; set;}
			[Column("BillingOrganizationName",TypeName="nvarchar")] public string BillingOrganizationName {get; set;}
			[Column("BillingJobTitle",TypeName="nvarchar")] public string BillingJobTitle {get; set;}
			[Column("BillingFirstName",TypeName="nvarchar")] public string BillingFirstName {get; set;}
			[Column("BillingLastName",TypeName="nvarchar")] public string BillingLastName {get; set;}
			[Column("BillingAddress1",TypeName="nvarchar")] public string BillingAddress1 {get; set;}
			[Column("BillingAddress2",TypeName="nvarchar")] public string BillingAddress2 {get; set;}
			[Column("BillingCity",TypeName="nvarchar")] public string BillingCity {get; set;}
			[Column("BillingStateProvince",TypeName="nvarchar")] public string BillingStateProvince {get; set;}
			[Column("BillingStateProvinceChoice",TypeName="nvarchar")] public string BillingStateProvinceChoice {get; set;}
			[Column("BillingPostalCode",TypeName="nvarchar")] public string BillingPostalCode {get; set;}
			[Column("BillingCountry",TypeName="nvarchar")] public string BillingCountry {get; set;}
			[Column("BillingPhone",TypeName="nvarchar")] public string BillingPhone {get; set;}
			[Column("BillingFax",TypeName="nvarchar")] public string BillingFax {get; set;}
			[Column("BillingEmailAddress",TypeName="nvarchar")] public string BillingEmailAddress {get; set;}
			[Column("BillingPhoneext",TypeName="varchar")] public string BillingPhoneext {get; set;}
		}

		[Table("TBL_ORDER_DETAIL_DOMAINS",Schema="dbo")]
		public partial class TBL_ORDER_DETAIL_DOMAINS
		{
			[Column("Auto_ID",TypeName="numeric")] public decimal Auto_ID {get; set;}
			[Column("Order_ID",TypeName="int")] public int? Order_ID {get; set;}
			[Column("SLD",TypeName="nvarchar")] public string SLD {get; set;}
			[Column("TLD",TypeName="nvarchar")] public string TLD {get; set;}
			[Column("NumYears",TypeName="smallint")] public short? NumYears {get; set;}
			[Column("Price_Per_Year",TypeName="money")] public decimal? Price_Per_Year {get; set;}
			[Column("ActionID",TypeName="varchar")] public string ActionID {get; set;}
			[Column("ActionSuccess",TypeName="bit")] public bool ActionSuccess {get; set;}
			[Column("ErrorInfo",TypeName="varchar")] public string ErrorInfo {get; set;}
			[Column("Reg_Price_Per_Year",TypeName="money")] public decimal? Reg_Price_Per_Year {get; set;}
			[Column("Special_Price",TypeName="money")] public decimal? Special_Price {get; set;}
			[Column("Qty",TypeName="int")] public int? Qty {get; set;}
			[Column("RegistrarRawData",TypeName="text")] public string RegistrarRawData {get; set;}
			[Column("IsPricePerDuration",TypeName="bit")] public bool? IsPricePerDuration {get; set;}
			[Column("Additional_Cost",TypeName="money")] public decimal? Additional_Cost {get; set;}
			[Column("Special_Additional_Cost",TypeName="money")] public decimal? Special_Additional_Cost {get; set;}
			[Column("Reg_Additional_cost",TypeName="money")] public decimal? Reg_Additional_cost {get; set;}
			[Column("IsAdditionalCostOneTime",TypeName="bit")] public bool? IsAdditionalCostOneTime {get; set;}
			[Column("Option1",TypeName="varchar")] public string Option1 {get; set;}
			[Column("Option2",TypeName="varchar")] public string Option2 {get; set;}
			[Column("packageID",TypeName="varchar")] public string packageID {get; set;}
			[Column("cost_Price_Per_Year",TypeName="money")] public decimal? cost_Price_Per_Year {get; set;}
			[Column("cost_Additional_Cost",TypeName="money")] public decimal? cost_Additional_Cost {get; set;}
			[Column("ShoppingCartItemID",TypeName="bigint")] public long? ShoppingCartItemID {get; set;}
			[Column("CheckoutOptions",TypeName="xml")] public string CheckoutOptions {get; set;}
			[Column("CheckoutStatusId",TypeName="tinyint")] public byte? CheckoutStatusId {get; set;}
			[Column("CheckoutStatusDateTime",TypeName="int")] public int? CheckoutStatusDateTime {get; set;}
			[Column("Duration",TypeName="smallint")] public short? Duration {get; set;}
			[Column("DurationType",TypeName="varchar")] public string DurationType {get; set;}
			[Column("Title",TypeName="varchar")] public string Title {get; set;}
			[Column("ParentOrderItemId",TypeName="numeric")] public decimal? ParentOrderItemId {get; set;}
			[Column("TierPricingID",TypeName="int")] public int? TierPricingID {get; set;}
		}

		[Table("TBL_ORDER_DETAIL_OPTIONS",Schema="dbo")]
		public partial class TBL_ORDER_DETAIL_OPTIONS
		{
			[Column("Auto_ID",TypeName="decimal")] public decimal Auto_ID {get; set;}
			[Column("Associated_Order_ID",TypeName="numeric")] public decimal? Associated_Order_ID {get; set;}
			[Column("Promotion_Code",TypeName="varchar")] public string Promotion_Code {get; set;}
			[Column("RegistrantOrganizationName",TypeName="nvarchar")] public string RegistrantOrganizationName {get; set;}
			[Column("RegistrantJobTitle",TypeName="nvarchar")] public string RegistrantJobTitle {get; set;}
			[Column("RegistrantFirstName",TypeName="nvarchar")] public string RegistrantFirstName {get; set;}
			[Column("RegistrantLastName",TypeName="nvarchar")] public string RegistrantLastName {get; set;}
			[Column("RegistrantAddress1",TypeName="nvarchar")] public string RegistrantAddress1 {get; set;}
			[Column("RegistrantAddress2",TypeName="nvarchar")] public string RegistrantAddress2 {get; set;}
			[Column("RegistrantCity",TypeName="nvarchar")] public string RegistrantCity {get; set;}
			[Column("RegistrantStateProvince",TypeName="nvarchar")] public string RegistrantStateProvince {get; set;}
			[Column("RegistrantStateProvinceChoice",TypeName="nvarchar")] public string RegistrantStateProvinceChoice {get; set;}
			[Column("RegistrantPostalCode",TypeName="nvarchar")] public string RegistrantPostalCode {get; set;}
			[Column("RegistrantCountry",TypeName="nvarchar")] public string RegistrantCountry {get; set;}
			[Column("RegistrantPhone",TypeName="nvarchar")] public string RegistrantPhone {get; set;}
			[Column("RegistrantFax",TypeName="nvarchar")] public string RegistrantFax {get; set;}
			[Column("RegistrantEmailAddress",TypeName="nvarchar")] public string RegistrantEmailAddress {get; set;}
			[Column("TechOrganizationName",TypeName="nvarchar")] public string TechOrganizationName {get; set;}
			[Column("TechJobTitle",TypeName="nvarchar")] public string TechJobTitle {get; set;}
			[Column("TechFirstName",TypeName="nvarchar")] public string TechFirstName {get; set;}
			[Column("TechLastName",TypeName="nvarchar")] public string TechLastName {get; set;}
			[Column("TechAddress1",TypeName="nvarchar")] public string TechAddress1 {get; set;}
			[Column("TechAddress2",TypeName="nvarchar")] public string TechAddress2 {get; set;}
			[Column("TechCity",TypeName="nvarchar")] public string TechCity {get; set;}
			[Column("TechStateProvince",TypeName="nvarchar")] public string TechStateProvince {get; set;}
			[Column("TechStateProvinceChoice",TypeName="nvarchar")] public string TechStateProvinceChoice {get; set;}
			[Column("TechPostalCode",TypeName="nvarchar")] public string TechPostalCode {get; set;}
			[Column("TechCountry",TypeName="nvarchar")] public string TechCountry {get; set;}
			[Column("TechPhone",TypeName="nvarchar")] public string TechPhone {get; set;}
			[Column("TechFax",TypeName="nvarchar")] public string TechFax {get; set;}
			[Column("TechEmailAddress",TypeName="nvarchar")] public string TechEmailAddress {get; set;}
			[Column("AdminOrganizationName",TypeName="nvarchar")] public string AdminOrganizationName {get; set;}
			[Column("AdminJobTitle",TypeName="nvarchar")] public string AdminJobTitle {get; set;}
			[Column("AdminFirstName",TypeName="nvarchar")] public string AdminFirstName {get; set;}
			[Column("AdminLastName",TypeName="nvarchar")] public string AdminLastName {get; set;}
			[Column("AdminAddress1",TypeName="nvarchar")] public string AdminAddress1 {get; set;}
			[Column("AdminAddress2",TypeName="nvarchar")] public string AdminAddress2 {get; set;}
			[Column("AdminCity",TypeName="nvarchar")] public string AdminCity {get; set;}
			[Column("AdminStateProvince",TypeName="nvarchar")] public string AdminStateProvince {get; set;}
			[Column("AdminStateProvinceChoice",TypeName="nvarchar")] public string AdminStateProvinceChoice {get; set;}
			[Column("AdminPostalCode",TypeName="nvarchar")] public string AdminPostalCode {get; set;}
			[Column("AdminCountry",TypeName="nvarchar")] public string AdminCountry {get; set;}
			[Column("AdminPhone",TypeName="nvarchar")] public string AdminPhone {get; set;}
			[Column("AdminFax",TypeName="nvarchar")] public string AdminFax {get; set;}
			[Column("AdminEmailAddress",TypeName="nvarchar")] public string AdminEmailAddress {get; set;}
			[Column("AuxBillingOrganizationName",TypeName="nvarchar")] public string AuxBillingOrganizationName {get; set;}
			[Column("AuxBillingJobTitle",TypeName="nvarchar")] public string AuxBillingJobTitle {get; set;}
			[Column("AuxBillingFirstName",TypeName="nvarchar")] public string AuxBillingFirstName {get; set;}
			[Column("AuxBillingLastName",TypeName="nvarchar")] public string AuxBillingLastName {get; set;}
			[Column("AuxBillingAddress1",TypeName="nvarchar")] public string AuxBillingAddress1 {get; set;}
			[Column("AuxBillingAddress2",TypeName="nvarchar")] public string AuxBillingAddress2 {get; set;}
			[Column("AuxBillingCity",TypeName="nvarchar")] public string AuxBillingCity {get; set;}
			[Column("AuxBillingStateProvince",TypeName="nvarchar")] public string AuxBillingStateProvince {get; set;}
			[Column("AuxBillingStateProvinceChoice",TypeName="nvarchar")] public string AuxBillingStateProvinceChoice {get; set;}
			[Column("AuxBillingPostalCode",TypeName="nvarchar")] public string AuxBillingPostalCode {get; set;}
			[Column("AuxBillingCountry",TypeName="nvarchar")] public string AuxBillingCountry {get; set;}
			[Column("AuxBillingPhone",TypeName="nvarchar")] public string AuxBillingPhone {get; set;}
			[Column("AuxBillingFax",TypeName="nvarchar")] public string AuxBillingFax {get; set;}
			[Column("AuxBillingEmailAddress",TypeName="nvarchar")] public string AuxBillingEmailAddress {get; set;}
			[Column("UseNameServer",TypeName="nvarchar")] public string UseNameServer {get; set;}
			[Column("NS1",TypeName="nvarchar")] public string NS1 {get; set;}
			[Column("NS2",TypeName="nvarchar")] public string NS2 {get; set;}
			[Column("NS3",TypeName="nvarchar")] public string NS3 {get; set;}
			[Column("NS4",TypeName="nvarchar")] public string NS4 {get; set;}
			[Column("NS5",TypeName="nvarchar")] public string NS5 {get; set;}
			[Column("FwdEMailUser",TypeName="nvarchar")] public string FwdEMailUser {get; set;}
			[Column("FwdToEMail",TypeName="nvarchar")] public string FwdToEMail {get; set;}
			[Column("Submit",TypeName="nvarchar")] public string Submit {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("RegistrantPhoneExt",TypeName="varchar")] public string RegistrantPhoneExt {get; set;}
			[Column("TechPhoneExt",TypeName="varchar")] public string TechPhoneExt {get; set;}
			[Column("AdminPhoneExt",TypeName="varchar")] public string AdminPhoneExt {get; set;}
			[Column("AuxBillingPhoneext",TypeName="varchar")] public string AuxBillingPhoneext {get; set;}
			[Column("ForwardingURL",TypeName="varchar")] public string ForwardingURL {get; set;}
			[Column("ForwardingType",TypeName="varchar")] public string ForwardingType {get; set;}
			[Column("RegistrantNexus",TypeName="varchar")] public string RegistrantNexus {get; set;}
			[Column("RegistrantNexusCountry",TypeName="varchar")] public string RegistrantNexusCountry {get; set;}
			[Column("RegistrantPurpose",TypeName="varchar")] public string RegistrantPurpose {get; set;}
			[Column("CIRAType",TypeName="varchar")] public string CIRAType {get; set;}
			[Column("COUKLegalType",TypeName="varchar")] public string COUKLegalType {get; set;}
			[Column("COUKCompanyID",TypeName="varchar")] public string COUKCompanyID {get; set;}
			[Column("COUKRegisteredfor",TypeName="varchar")] public string COUKRegisteredfor {get; set;}
			[Column("COUKRegOptOut",TypeName="varchar")] public string COUKRegOptOut {get; set;}
			[Column("ORGUKRegisteredfor",TypeName="varchar")] public string ORGUKRegisteredfor {get; set;}
			[Column("ORGUKRegOptOut",TypeName="varchar")] public string ORGUKRegOptOut {get; set;}
			[Column("ORGUKLegalType",TypeName="varchar")] public string ORGUKLegalType {get; set;}
			[Column("ORGUKCompanyID",TypeName="varchar")] public string ORGUKCompanyID {get; set;}
			[Column("DEconfirmAddress",TypeName="bit")] public bool? DEconfirmAddress {get; set;}
			[Column("cira_registrant",TypeName="varchar")] public string cira_registrant {get; set;}
			[Column("cira_registrant_desc",TypeName="varchar")] public string cira_registrant_desc {get; set;}
			[Column("cira_trademark_no",TypeName="varchar")] public string cira_trademark_no {get; set;}
			[Column("cira_org_registered_in",TypeName="varchar")] public string cira_org_registered_in {get; set;}
			[Column("CIRA_Legal_Type",TypeName="varchar")] public string CIRA_Legal_Type {get; set;}
			[Column("CIRA_Whois_Display",TypeName="varchar")] public string CIRA_Whois_Display {get; set;}
			[Column("CIRA_Agreement_Version",TypeName="varchar")] public string CIRA_Agreement_Version {get; set;}
			[Column("CIRA_Agreement_Value",TypeName="varchar")] public string CIRA_Agreement_Value {get; set;}
			[Column("CIRA_Language",TypeName="varchar")] public string CIRA_Language {get; set;}
			[Column("asia_cclocality",TypeName="varchar")] public string asia_cclocality {get; set;}
			[Column("asia_localitycity",TypeName="nvarchar")] public string asia_localitycity {get; set;}
			[Column("asia_localitysp",TypeName="nvarchar")] public string asia_localitysp {get; set;}
			[Column("asia_legalentitytype",TypeName="varchar")] public string asia_legalentitytype {get; set;}
			[Column("asia_identform",TypeName="varchar")] public string asia_identform {get; set;}
			[Column("asia_ident_number",TypeName="varchar")] public string asia_ident_number {get; set;}
			[Column("asia_otherletype",TypeName="varchar")] public string asia_otherletype {get; set;}
			[Column("asia_otheridentform",TypeName="varchar")] public string asia_otheridentform {get; set;}
			[Column("de_agreedelete",TypeName="varchar")] public string de_agreedelete {get; set;}
		}

		[Table("TBL_PAGE_NAVIGATION",Schema="dbo")]
		public partial class TBL_PAGE_NAVIGATION
		{
			[Column("Auto_ID",TypeName="numeric")] public decimal Auto_ID {get; set;}
			[Column("Page_URL",TypeName="varchar")] public string Page_URL {get; set;}
			[Column("AlternatePageURL",TypeName="varchar")] public string AlternatePageURL {get; set;}
			[Column("Page_Title",TypeName="varchar")] public string Page_Title {get; set;}
			[Column("Nav_ID",TypeName="int")] public int Nav_ID {get; set;}
			[Column("Bread_Crumb_HTML",TypeName="varchar")] public string Bread_Crumb_HTML {get; set;}
			[Column("Site",TypeName="varchar")] public string Site {get; set;}
			[Column("Top_Navigation_HTML",TypeName="text")] public string Top_Navigation_HTML {get; set;}
			[Column("Left_Navigation_HTML",TypeName="text")] public string Left_Navigation_HTML {get; set;}
			[Column("Bottom_Navigation_HTML",TypeName="text")] public string Bottom_Navigation_HTML {get; set;}
			[Column("Top_Navigation_No_Hosting_HTML",TypeName="text")] public string Top_Navigation_No_Hosting_HTML {get; set;}
			[Column("Left_Navigation_No_Hosting_HTML",TypeName="text")] public string Left_Navigation_No_Hosting_HTML {get; set;}
			[Column("Bottom_Navigation_No_Hosting_HTML",TypeName="text")] public string Bottom_Navigation_No_Hosting_HTML {get; set;}
		}

		[Table("TBL_PAGE_NAVIGATION_BACKUP",Schema="dbo")]
		public partial class TBL_PAGE_NAVIGATION_BACKUP
		{
			[Column("Auto_ID",TypeName="numeric")] public decimal Auto_ID {get; set;}
			[Column("Page_URL",TypeName="varchar")] public string Page_URL {get; set;}
			[Column("Page_Title",TypeName="varchar")] public string Page_Title {get; set;}
			[Column("Nav_ID",TypeName="int")] public int Nav_ID {get; set;}
			[Column("Bread_Crumb_HTML",TypeName="varchar")] public string Bread_Crumb_HTML {get; set;}
			[Column("Site",TypeName="varchar")] public string Site {get; set;}
		}

		[Table("TBL_PAYPAL_DISPUTES",Schema="dbo")]
		public partial class TBL_PAYPAL_DISPUTES
		{
			[Column("AutoID",TypeName="bigint")] public long AutoID {get; set;}
			[Column("Transaction_ID",TypeName="numeric")] public decimal? Transaction_ID {get; set;}
			[Column("RegisteredDateTime",TypeName="datetime")] public DateTime? RegisteredDateTime {get; set;}
			[Column("Status",TypeName="varchar")] public string Status {get; set;}
			[Column("StatusDescription",TypeName="varchar")] public string StatusDescription {get; set;}
			[Column("PaymentAmount",TypeName="money")] public decimal? PaymentAmount {get; set;}
			[Column("DisputeCharges",TypeName="money")] public decimal? DisputeCharges {get; set;}
			[Column("LastIPNPaymentStatus",TypeName="varchar")] public string LastIPNPaymentStatus {get; set;}
			[Column("LastUserFundStatus",TypeName="varchar")] public string LastUserFundStatus {get; set;}
			[Column("NextCheckDataTime",TypeName="datetime")] public DateTime? NextCheckDataTime {get; set;}
			[Column("AdjustmentReceivedYN",TypeName="bit")] public bool AdjustmentReceivedYN {get; set;}
			[Column("LastUpdatedDateTime",TypeName="datetime")] public DateTime? LastUpdatedDateTime {get; set;}
		}

		[Table("TBL_POP3_TRACK",Schema="dbo")]
		public partial class TBL_POP3_TRACK
		{
			[Column("POP3_ID",TypeName="int")] public int POP3_ID {get; set;}
			[Column("Domain_Name",TypeName="nvarchar")] public string Domain_Name {get; set;}
			[Column("User_Name",TypeName="nvarchar")] public string User_Name {get; set;}
			[Column("Record_Created_Date_Time",TypeName="datetime")] public DateTime? Record_Created_Date_Time {get; set;}
			[Column("Last_Check_Date_Time",TypeName="datetime")] public DateTime? Last_Check_Date_Time {get; set;}
			[Column("Next_Check_Date_Time",TypeName="datetime")] public DateTime? Next_Check_Date_Time {get; set;}
		}

		[Table("TBL_POP3_TRACK_DETAILS",Schema="dbo")]
		public partial class TBL_POP3_TRACK_DETAILS
		{
			[Column("Track_Details_ID",TypeName="int")] public int Track_Details_ID {get; set;}
			[Column("POP3_ID",TypeName="int")] public int? POP3_ID {get; set;}
			[Column("POP3_Pack_ID",TypeName="varchar")] public string POP3_Pack_ID {get; set;}
			[Column("Pack_Expires_Date_Time",TypeName="datetime")] public DateTime? Pack_Expires_Date_Time {get; set;}
		}

		[Table("TBL_PRIVATE_DETAILS",Schema="dbo")]
		public partial class TBL_PRIVATE_DETAILS
		{
			[Column("Slot_ID",TypeName="numeric")] public decimal Slot_ID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Purchase_Date_Time",TypeName="datetime")] public DateTime? Purchase_Date_Time {get; set;}
			[Column("Num_Years",TypeName="smallint")] public short? Num_Years {get; set;}
			[Column("Computed_Expire_Date_Time",TypeName="datetime")] public DateTime? Computed_Expire_Date_Time {get; set;}
			[Column("Renewal_Date_Time",TypeName="datetime")] public DateTime? Renewal_Date_Time {get; set;}
			[Column("Associated_DomainID",TypeName="numeric")] public decimal? Associated_DomainID {get; set;}
			[Column("Associated_Email",TypeName="nvarchar")] public string Associated_Email {get; set;}
			[Column("Accept_Terms",TypeName="int")] public int? Accept_Terms {get; set;}
			[Column("Active_Status",TypeName="int")] public int? Active_Status {get; set;}
			[Column("Email_Change_Duration",TypeName="smallint")] public short? Email_Change_Duration {get; set;}
			[Column("Last_Email_Update_Date_Time",TypeName="datetime")] public DateTime? Last_Email_Update_Date_Time {get; set;}
			[Column("Associated_Email_Forwarded_To",TypeName="nvarchar")] public string Associated_Email_Forwarded_To {get; set;}
			[Column("Reverted_discard_YN",TypeName="bit")] public bool Reverted_discard_YN {get; set;}
			[Column("Last_Action_Date_Time",TypeName="datetime")] public DateTime? Last_Action_Date_Time {get; set;}
			[Column("Associate_OrderId",TypeName="numeric")] public decimal? Associate_OrderId {get; set;}
			[Column("Associated_OrderDetailId",TypeName="numeric")] public decimal? Associated_OrderDetailId {get; set;}
		}

		[Table("Tbl_Private_Details_Temp",Schema="dbo")]
		public partial class Tbl_Private_Details_Temp
		{
			[Column("Auto_id",TypeName="int")] public int Auto_id {get; set;}
			[Column("Slot_id",TypeName="numeric")] public decimal? Slot_id {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("Is_Generate_New_Protected_EmailYN",TypeName="bit")] public bool Is_Generate_New_Protected_EmailYN {get; set;}
			[Column("Address_Change_Completed_YN",TypeName="bit")] public bool Address_Change_Completed_YN {get; set;}
			[Column("Is_Enable_Whoisguard",TypeName="bit")] public bool Is_Enable_Whoisguard {get; set;}
			[Column("Is_WG_Address_in_Private_Contacts",TypeName="bit")] public bool Is_WG_Address_in_Private_Contacts {get; set;}
			[Column("Is_WG_Address_not_for_EnabledWG",TypeName="bit")] public bool? Is_WG_Address_not_for_EnabledWG {get; set;}
			[Column("Is_Record_Processed",TypeName="bit")] public bool? Is_Record_Processed {get; set;}
			[Column("Is_Domain_Expired",TypeName="bit")] public bool? Is_Domain_Expired {get; set;}
		}

		[Table("TBL_PRIVATE_DOMAIN_CONTACTS",Schema="dbo")]
		public partial class TBL_PRIVATE_DOMAIN_CONTACTS
		{
			[Column("Private_Domain_ID",TypeName="numeric")] public decimal Private_Domain_ID {get; set;}
			[Column("Domain_Name",TypeName="nvarchar")] public string Domain_Name {get; set;}
			[Column("Registrant_FirstName",TypeName="nvarchar")] public string Registrant_FirstName {get; set;}
			[Column("Registrant_LastName",TypeName="nvarchar")] public string Registrant_LastName {get; set;}
			[Column("Registrant_JobTitle",TypeName="nvarchar")] public string Registrant_JobTitle {get; set;}
			[Column("Registrant_Organization",TypeName="nvarchar")] public string Registrant_Organization {get; set;}
			[Column("Registrant_StreetAddress",TypeName="nvarchar")] public string Registrant_StreetAddress {get; set;}
			[Column("Registrant_Address2",TypeName="nvarchar")] public string Registrant_Address2 {get; set;}
			[Column("Registrant_City",TypeName="nvarchar")] public string Registrant_City {get; set;}
			[Column("Registrant_State",TypeName="nvarchar")] public string Registrant_State {get; set;}
			[Column("Registrant_StateProvince",TypeName="nvarchar")] public string Registrant_StateProvince {get; set;}
			[Column("Registrant_Zip",TypeName="nvarchar")] public string Registrant_Zip {get; set;}
			[Column("Registrant_Country",TypeName="nvarchar")] public string Registrant_Country {get; set;}
			[Column("Registrant_Phone",TypeName="nvarchar")] public string Registrant_Phone {get; set;}
			[Column("Registrant_Fax",TypeName="nvarchar")] public string Registrant_Fax {get; set;}
			[Column("Registrant_Email",TypeName="nvarchar")] public string Registrant_Email {get; set;}
			[Column("Admin_FirstName",TypeName="nvarchar")] public string Admin_FirstName {get; set;}
			[Column("Admin_LastName",TypeName="nvarchar")] public string Admin_LastName {get; set;}
			[Column("Admin_JobTitle",TypeName="nvarchar")] public string Admin_JobTitle {get; set;}
			[Column("Admin_Organization",TypeName="nvarchar")] public string Admin_Organization {get; set;}
			[Column("Admin_StreetAddress",TypeName="nvarchar")] public string Admin_StreetAddress {get; set;}
			[Column("Admin_Address2",TypeName="nvarchar")] public string Admin_Address2 {get; set;}
			[Column("Admin_City",TypeName="nvarchar")] public string Admin_City {get; set;}
			[Column("Admin_State",TypeName="nvarchar")] public string Admin_State {get; set;}
			[Column("Admin_StateProvince",TypeName="nvarchar")] public string Admin_StateProvince {get; set;}
			[Column("Admin_Zip",TypeName="nvarchar")] public string Admin_Zip {get; set;}
			[Column("Admin_Country",TypeName="nvarchar")] public string Admin_Country {get; set;}
			[Column("Admin_Phone",TypeName="nvarchar")] public string Admin_Phone {get; set;}
			[Column("Admin_Fax",TypeName="nvarchar")] public string Admin_Fax {get; set;}
			[Column("Admin_Email",TypeName="nvarchar")] public string Admin_Email {get; set;}
			[Column("Tech_FirstName",TypeName="nvarchar")] public string Tech_FirstName {get; set;}
			[Column("Tech_LastName",TypeName="nvarchar")] public string Tech_LastName {get; set;}
			[Column("Tech_JobTitle",TypeName="nvarchar")] public string Tech_JobTitle {get; set;}
			[Column("Tech_Organization",TypeName="nvarchar")] public string Tech_Organization {get; set;}
			[Column("Tech_StreetAddress",TypeName="nvarchar")] public string Tech_StreetAddress {get; set;}
			[Column("Tech_Address2",TypeName="nvarchar")] public string Tech_Address2 {get; set;}
			[Column("Tech_City",TypeName="nvarchar")] public string Tech_City {get; set;}
			[Column("Tech_State",TypeName="nvarchar")] public string Tech_State {get; set;}
			[Column("Tech_StateProvince",TypeName="nvarchar")] public string Tech_StateProvince {get; set;}
			[Column("Tech_Zip",TypeName="nvarchar")] public string Tech_Zip {get; set;}
			[Column("Tech_Country",TypeName="nvarchar")] public string Tech_Country {get; set;}
			[Column("Tech_Phone",TypeName="nvarchar")] public string Tech_Phone {get; set;}
			[Column("Tech_Fax",TypeName="nvarchar")] public string Tech_Fax {get; set;}
			[Column("Tech_Email",TypeName="nvarchar")] public string Tech_Email {get; set;}
			[Column("Billing_FirstName",TypeName="nvarchar")] public string Billing_FirstName {get; set;}
			[Column("Billing_LastName",TypeName="nvarchar")] public string Billing_LastName {get; set;}
			[Column("Billing_JobTitle",TypeName="nvarchar")] public string Billing_JobTitle {get; set;}
			[Column("Billing_Organization",TypeName="nvarchar")] public string Billing_Organization {get; set;}
			[Column("Billing_StreetAddress",TypeName="nvarchar")] public string Billing_StreetAddress {get; set;}
			[Column("Billing_Address2",TypeName="nvarchar")] public string Billing_Address2 {get; set;}
			[Column("Billing_City",TypeName="nvarchar")] public string Billing_City {get; set;}
			[Column("Billing_State",TypeName="nvarchar")] public string Billing_State {get; set;}
			[Column("Billing_StateProvince",TypeName="nvarchar")] public string Billing_StateProvince {get; set;}
			[Column("Billing_Zip",TypeName="nvarchar")] public string Billing_Zip {get; set;}
			[Column("Billing_Country",TypeName="nvarchar")] public string Billing_Country {get; set;}
			[Column("Billing_Phone",TypeName="nvarchar")] public string Billing_Phone {get; set;}
			[Column("Billing_Fax",TypeName="nvarchar")] public string Billing_Fax {get; set;}
			[Column("Billing_Email",TypeName="nvarchar")] public string Billing_Email {get; set;}
			[Column("RegistrantNexus",TypeName="varchar")] public string RegistrantNexus {get; set;}
			[Column("RegisrantNexusCountry",TypeName="nvarchar")] public string RegisrantNexusCountry {get; set;}
			[Column("RegistrantPurpose",TypeName="varchar")] public string RegistrantPurpose {get; set;}
			[Column("CIRAType",TypeName="varchar")] public string CIRAType {get; set;}
			[Column("COUKLegalType",TypeName="varchar")] public string COUKLegalType {get; set;}
			[Column("COUKCompanyID",TypeName="varchar")] public string COUKCompanyID {get; set;}
			[Column("ORGUKLegalType",TypeName="varchar")] public string ORGUKLegalType {get; set;}
			[Column("ORGUKCompanyID",TypeName="varchar")] public string ORGUKCompanyID {get; set;}
			[Column("Registrant_Phoneext",TypeName="varchar")] public string Registrant_Phoneext {get; set;}
			[Column("Admin_Phoneext",TypeName="varchar")] public string Admin_Phoneext {get; set;}
			[Column("Tech_Phoneext",TypeName="varchar")] public string Tech_Phoneext {get; set;}
			[Column("Billing_Phoneext",TypeName="varchar")] public string Billing_Phoneext {get; set;}
			[Column("COUKRegisteredfor",TypeName="varchar")] public string COUKRegisteredfor {get; set;}
			[Column("COUKRegOptOut",TypeName="varchar")] public string COUKRegOptOut {get; set;}
			[Column("ORGUKRegisteredfor",TypeName="varchar")] public string ORGUKRegisteredfor {get; set;}
			[Column("ORGUKRegOptOut",TypeName="varchar")] public string ORGUKRegOptOut {get; set;}
			[Column("EUAdrLang",TypeName="varchar")] public string EUAdrLang {get; set;}
			[Column("MEUKLegalType",TypeName="varchar")] public string MEUKLegalType {get; set;}
			[Column("MEUKCompanyID",TypeName="varchar")] public string MEUKCompanyID {get; set;}
			[Column("MEUKRegisteredfor",TypeName="varchar")] public string MEUKRegisteredfor {get; set;}
			[Column("MEUKRegOptOut",TypeName="varchar")] public string MEUKRegOptOut {get; set;}
			[Column("cira_registrant",TypeName="varchar")] public string cira_registrant {get; set;}
			[Column("cira_registrant_desc",TypeName="varchar")] public string cira_registrant_desc {get; set;}
			[Column("cira_trademark_no",TypeName="varchar")] public string cira_trademark_no {get; set;}
			[Column("cira_org_registered_in",TypeName="varchar")] public string cira_org_registered_in {get; set;}
			[Column("CIRA_Legal_Type",TypeName="varchar")] public string CIRA_Legal_Type {get; set;}
			[Column("CIRA_Whois_Display",TypeName="varchar")] public string CIRA_Whois_Display {get; set;}
			[Column("CIRA_Agreement_Version",TypeName="varchar")] public string CIRA_Agreement_Version {get; set;}
			[Column("CIRA_Agreement_Value",TypeName="varchar")] public string CIRA_Agreement_Value {get; set;}
			[Column("CIRA_Language",TypeName="varchar")] public string CIRA_Language {get; set;}
			[Column("asia_cclocality",TypeName="varchar")] public string asia_cclocality {get; set;}
			[Column("asia_localitycity",TypeName="nvarchar")] public string asia_localitycity {get; set;}
			[Column("asia_localitysp",TypeName="nvarchar")] public string asia_localitysp {get; set;}
			[Column("asia_legalentitytype",TypeName="varchar")] public string asia_legalentitytype {get; set;}
			[Column("asia_identform",TypeName="varchar")] public string asia_identform {get; set;}
			[Column("asia_ident_number",TypeName="varchar")] public string asia_ident_number {get; set;}
			[Column("asia_otherletype",TypeName="varchar")] public string asia_otherletype {get; set;}
			[Column("asia_otheridentform",TypeName="varchar")] public string asia_otheridentform {get; set;}
			[Column("XXX_MemberID",TypeName="varchar")] public string XXX_MemberID {get; set;}
			[Column("XXX_Resolving",TypeName="bit")] public bool? XXX_Resolving {get; set;}
			[Column("ES_RegistrantID",TypeName="varchar")] public string ES_RegistrantID {get; set;}
			[Column("ES_RegistrantIdType",TypeName="varchar")] public string ES_RegistrantIdType {get; set;}
			[Column("COMES_RegistrantID",TypeName="varchar")] public string COMES_RegistrantID {get; set;}
			[Column("COMES_RegistrantIdType",TypeName="varchar")] public string COMES_RegistrantIdType {get; set;}
			[Column("NOMES_RegistrantID",TypeName="varchar")] public string NOMES_RegistrantID {get; set;}
			[Column("NOMES_RegistrantIdType",TypeName="varchar")] public string NOMES_RegistrantIdType {get; set;}
			[Column("ORGES_RegistrantID",TypeName="varchar")] public string ORGES_RegistrantID {get; set;}
			[Column("ORGES_RegistrantIdType",TypeName="varchar")] public string ORGES_RegistrantIdType {get; set;}
			[Column("COMAU_RegistrantID",TypeName="varchar")] public string COMAU_RegistrantID {get; set;}
			[Column("COMAU_RegistrantIdType",TypeName="varchar")] public string COMAU_RegistrantIdType {get; set;}
			[Column("NETAU_RegistrantID",TypeName="varchar")] public string NETAU_RegistrantID {get; set;}
			[Column("NETAU_RegistrantIdType",TypeName="varchar")] public string NETAU_RegistrantIdType {get; set;}
			[Column("ORGAU_RegistrantID",TypeName="varchar")] public string ORGAU_RegistrantID {get; set;}
			[Column("ORGAU_RegistrantIdType",TypeName="varchar")] public string ORGAU_RegistrantIdType {get; set;}
			[Column("FR_LegalType",TypeName="varchar")] public string FR_LegalType {get; set;}
			[Column("FR_RegistrantBirthdate",TypeName="datetime")] public DateTime? FR_RegistrantBirthdate {get; set;}
			[Column("FR_RegistrantBirthPlace",TypeName="varchar")] public string FR_RegistrantBirthPlace {get; set;}
			[Column("FR_RegistrantLegalId",TypeName="varchar")] public string FR_RegistrantLegalId {get; set;}
			[Column("FR_RegistrantDunsNumber",TypeName="varchar")] public string FR_RegistrantDunsNumber {get; set;}
			[Column("FR_RegistrantLocalId",TypeName="varchar")] public string FR_RegistrantLocalId {get; set;}
			[Column("FR_RegistrantJoDateDec",TypeName="datetime")] public DateTime? FR_RegistrantJoDateDec {get; set;}
			[Column("FR_RegistrantJoDatePub",TypeName="varchar")] public string FR_RegistrantJoDatePub {get; set;}
			[Column("FR_RegistrantJoNumber",TypeName="varchar")] public string FR_RegistrantJoNumber {get; set;}
			[Column("FR_RegistrantJoPage",TypeName="varchar")] public string FR_RegistrantJoPage {get; set;}
			[Column("FR_RegistrantTradeNumber",TypeName="varchar")] public string FR_RegistrantTradeNumber {get; set;}
		}

		[Table("tbl_private_temp",Schema="dbo")]
		public partial class tbl_private_temp
		{
			[Column("privateid",TypeName="numeric")] public decimal? privateid {get; set;}
			[Column("assocdomainid",TypeName="numeric")] public decimal? assocdomainid {get; set;}
			[Column("assocemail",TypeName="varchar")] public string assocemail {get; set;}
			[Column("fwdto",TypeName="varchar")] public string fwdto {get; set;}
			[Column("domainname",TypeName="varchar")] public string domainname {get; set;}
			[Column("username",TypeName="nvarchar")] public string username {get; set;}
			[Column("actiondate",TypeName="datetime")] public DateTime? actiondate {get; set;}
			[Column("iserror",TypeName="bit")] public bool? iserror {get; set;}
			[Column("errorinfo",TypeName="text")] public string errorinfo {get; set;}
		}

		[Table("TBL_PRODUCT",Schema="dbo")]
		public partial class TBL_PRODUCT
		{
			[Column("Product_ID",TypeName="numeric")] public decimal Product_ID {get; set;}
			[Column("Product_Name",TypeName="varchar")] public string Product_Name {get; set;}
			[Column("Num_Items_In_Product",TypeName="smallint")] public short? Num_Items_In_Product {get; set;}
			[Column("Product_Info",TypeName="varchar")] public string Product_Info {get; set;}
			[Column("ActionID",TypeName="varchar")] public string ActionID {get; set;}
			[Column("Min_Years",TypeName="smallint")] public short Min_Years {get; set;}
			[Column("Max_Years",TypeName="smallint")] public short Max_Years {get; set;}
		}

		[Table("TBL_PRODUCT_ATTRIBUTE_VALUES",Schema="dbo")]
		public partial class TBL_PRODUCT_ATTRIBUTE_VALUES
		{
			[Column("AutoValueId",TypeName="int")] public int AutoValueId {get; set;}
			[Column("Product_ID",TypeName="int")] public int Product_ID {get; set;}
			[Column("AttributeId",TypeName="int")] public int AttributeId {get; set;}
			[Column("Value",TypeName="text")] public string Value {get; set;}
		}

		[Table("TBL_PRODUCT_PRICING",Schema="dbo")]
		public partial class TBL_PRODUCT_PRICING
		{
			[Column("Product_Pricing_ID",TypeName="numeric")] public decimal Product_Pricing_ID {get; set;}
			[Column("Product_ID",TypeName="numeric")] public decimal? Product_ID {get; set;}
			[Column("Price_Per_Year",TypeName="money")] public decimal? Price_Per_Year {get; set;}
			[Column("Year_Range_Start",TypeName="smallint")] public short? Year_Range_Start {get; set;}
			[Column("Year_Range_End",TypeName="smallint")] public short? Year_Range_End {get; set;}
		}

		[Table("TBL_PROFILE_HISTORY",Schema="dbo")]
		public partial class TBL_PROFILE_HISTORY
		{
			[Column("User_Id",TypeName="numeric")] public decimal? User_Id {get; set;}
			[Column("Data",TypeName="nvarchar")] public string Data {get; set;}
			[Column("Profile_Type",TypeName="char")] public string Profile_Type {get; set;}
			[Column("Record_Created_Date",TypeName="int")] public int? Record_Created_Date {get; set;}
		}

		[Table("TBL_PROMOTION",Schema="dbo")]
		public partial class TBL_PROMOTION
		{
			[Column("Promotion_ID",TypeName="int")] public int Promotion_ID {get; set;}
			[Column("Promotion_Code",TypeName="varchar")] public string Promotion_Code {get; set;}
			[Column("Promotion_Name",TypeName="varchar")] public string Promotion_Name {get; set;}
			[Column("Description",TypeName="varchar")] public string Description {get; set;}
			[Column("Start_Date",TypeName="datetime")] public DateTime? Start_Date {get; set;}
			[Column("End_Date",TypeName="datetime")] public DateTime? End_Date {get; set;}
			[Column("User_Specific_Promotion_YN",TypeName="bit")] public bool User_Specific_Promotion_YN {get; set;}
			[Column("Max_Use_Count",TypeName="int")] public int? Max_Use_Count {get; set;}
			[Column("Max_Amount_Limit",TypeName="money")] public decimal? Max_Amount_Limit {get; set;}
		}

		[Table("TBL_PROMOTION_USERS",Schema="dbo")]
		public partial class TBL_PROMOTION_USERS
		{
			[Column("Promotion_Id",TypeName="int")] public int Promotion_Id {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("InsertSequence",TypeName="int")] public int InsertSequence {get; set;}
		}

		[Table("TBL_PYD_DOMAIN_NAME_LIST",Schema="dbo")]
		public partial class TBL_PYD_DOMAIN_NAME_LIST
		{
			[Column("auto_id",TypeName="decimal")] public decimal auto_id {get; set;}
			[Column("domain_name",TypeName="varchar")] public string domain_name {get; set;}
			[Column("date_time",TypeName="datetime")] public DateTime? date_time {get; set;}
		}

		[Table("TBL_RECENT_DOMAIN_SEARCH",Schema="dbo")]
		public partial class TBL_RECENT_DOMAIN_SEARCH
		{
			[Column("Recent_Search_ID",TypeName="numeric")] public decimal Recent_Search_ID {get; set;}
			[Column("User_Name",TypeName="varchar")] public string User_Name {get; set;}
			[Column("SLD",TypeName="varchar")] public string SLD {get; set;}
			[Column("TLD",TypeName="varchar")] public string TLD {get; set;}
			[Column("Search_Date_Time",TypeName="datetime")] public DateTime Search_Date_Time {get; set;}
			[Column("Is_Available_At_Last_Check",TypeName="bit")] public bool Is_Available_At_Last_Check {get; set;}
			[Column("Search_Count",TypeName="numeric")] public decimal? Search_Count {get; set;}
		}

		[Table("TBL_REGISTRIES",Schema="dbo")]
		public partial class TBL_REGISTRIES
		{
			[Column("ID",TypeName="tinyint")] public byte ID {get; set;}
			[Column("Name",TypeName="varchar")] public string Name {get; set;}
			[Column("Company_Name",TypeName="char")] public string Company_Name {get; set;}
			[Column("URL",TypeName="nvarchar")] public string URL {get; set;}
			[Column("Description",TypeName="nvarchar")] public string Description {get; set;}
		}

		[Table("TBL_RESELLER",Schema="dbo")]
		public partial class TBL_RESELLER
		{
			[Column("Reseller_ID",TypeName="numeric")] public decimal Reseller_ID {get; set;}
			[Column("Reseller_Key",TypeName="varchar")] public string Reseller_Key {get; set;}
			[Column("Reseller_User_Name",TypeName="varchar")] public string Reseller_User_Name {get; set;}
			[Column("Reseller_Password",TypeName="varchar")] public string Reseller_Password {get; set;}
			[Column("Reseller_Name",TypeName="varchar")] public string Reseller_Name {get; set;}
			[Column("Reseller_Description",TypeName="varchar")] public string Reseller_Description {get; set;}
			[Column("Reseller_EMail",TypeName="varchar")] public string Reseller_EMail {get; set;}
			[Column("Reseller_Domain",TypeName="varchar")] public string Reseller_Domain {get; set;}
			[Column("Reseller_First_Name",TypeName="varchar")] public string Reseller_First_Name {get; set;}
			[Column("Reseller_CSS",TypeName="varchar")] public string Reseller_CSS {get; set;}
			[Column("Reseller_No_Nav",TypeName="bit")] public bool? Reseller_No_Nav {get; set;}
			[Column("Reseller_CustomDomain",TypeName="bit")] public bool? Reseller_CustomDomain {get; set;}
		}

		[Table("TBL_RESTRICTED_NAMESERVER",Schema="dbo")]
		public partial class TBL_RESTRICTED_NAMESERVER
		{
			[Column("Auto_ID",TypeName="int")] public int Auto_ID {get; set;}
			[Column("Nameserver_Name",TypeName="varchar")] public string Nameserver_Name {get; set;}
		}

		[Table("TBL_RICHCONTENT_PUBLISHER",Schema="dbo")]
		public partial class TBL_RICHCONTENT_PUBLISHER
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("userID",TypeName="int")] public int? userID {get; set;}
			[Column("partnerPublisherID",TypeName="bigint")] public long? partnerPublisherID {get; set;}
			[Column("emailAddress",TypeName="nvarchar")] public string emailAddress {get; set;}
			[Column("recordCreatedDateTime",TypeName="int")] public int? recordCreatedDateTime {get; set;}
			[Column("createdIP",TypeName="bigint")] public long? createdIP {get; set;}
		}

		[Table("TBL_RICHCONTENT_SUBSCRIPTION",Schema="dbo")]
		public partial class TBL_RICHCONTENT_SUBSCRIPTION
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("publisherAutoID",TypeName="int")] public int? publisherAutoID {get; set;}
			[Column("partnerSubscriptionID",TypeName="bigint")] public long? partnerSubscriptionID {get; set;}
			[Column("partnerOrderId",TypeName="bigint")] public long? partnerOrderId {get; set;}
			[Column("domainUsed",TypeName="varchar")] public string domainUsed {get; set;}
			[Column("subscriptionName",TypeName="varchar")] public string subscriptionName {get; set;}
			[Column("nextBillingDate",TypeName="int")] public int? nextBillingDate {get; set;}
			[Column("status",TypeName="varchar")] public string status {get; set;}
			[Column("partnerCreatedDateTime",TypeName="int")] public int? partnerCreatedDateTime {get; set;}
			[Column("recordCreatedDateTime",TypeName="int")] public int? recordCreatedDateTime {get; set;}
			[Column("createdIP",TypeName="bigint")] public long? createdIP {get; set;}
			[Column("isInTrialPeriod",TypeName="bit")] public bool isInTrialPeriod {get; set;}
			[Column("ourStatus",TypeName="varchar")] public string ourStatus {get; set;}
			[Column("ourExpiryDateTime",TypeName="int")] public int? ourExpiryDateTime {get; set;}
			[Column("orderID",TypeName="int")] public int? orderID {get; set;}
		}

		[Table("TBL_RICHCONTENT_TRACK_ORPHANED_SUBCRIPTIONS",Schema="dbo")]
		public partial class TBL_RICHCONTENT_TRACK_ORPHANED_SUBCRIPTIONS
		{
			[Column("processDurationInDays",TypeName="smallint")] public short processDurationInDays {get; set;}
			[Column("recordsToReturn",TypeName="smallint")] public short recordsToReturn {get; set;}
			[Column("lastTrackedNextBillingDate",TypeName="datetime")] public DateTime? lastTrackedNextBillingDate {get; set;}
		}

		[Table("TBL_ROLES",Schema="dbo")]
		public partial class TBL_ROLES
		{
			[Column("RoleID",TypeName="int")] public int RoleID {get; set;}
			[Column("RoleName",TypeName="varchar")] public string RoleName {get; set;}
			[Column("Description",TypeName="varchar")] public string Description {get; set;}
			[Column("DisabledYN",TypeName="bit")] public bool DisabledYN {get; set;}
		}

		[Table("TBL_SALE_TRANSACTION",Schema="dbo")]
		public partial class TBL_SALE_TRANSACTION
		{
			[Column("Trans_ID",TypeName="numeric")] public decimal Trans_ID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Associated_Order_RefID",TypeName="nvarchar")] public string Associated_Order_RefID {get; set;}
			[Column("Associated_Order_ID",TypeName="nvarchar")] public string Associated_Order_ID {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("Sale_Date_Time",TypeName="datetime")] public DateTime? Sale_Date_Time {get; set;}
			[Column("Request_ID",TypeName="numeric")] public decimal? Request_ID {get; set;}
			[Column("Transaction_Type",TypeName="varchar")] public string Transaction_Type {get; set;}
			[Column("Credit_day",TypeName="int")] public int? Credit_day {get; set;}
			[Column("Credited_YN",TypeName="bit")] public bool? Credited_YN {get; set;}
			[Column("Amount",TypeName="money")] public decimal? Amount {get; set;}
			[Column("Pay_Mode",TypeName="varchar")] public string Pay_Mode {get; set;}
			[Column("Paypal_ID",TypeName="nvarchar")] public string Paypal_ID {get; set;}
			[Column("Check_To",TypeName="nvarchar")] public string Check_To {get; set;}
			[Column("Check_Address",TypeName="text")] public string Check_Address {get; set;}
			[Column("Record_Created_Date_Time",TypeName="datetime")] public DateTime? Record_Created_Date_Time {get; set;}
			[Column("MP_Listing_Id",TypeName="numeric")] public decimal? MP_Listing_Id {get; set;}
			[Column("Return_YN",TypeName="bit")] public bool Return_YN {get; set;}
			[Column("Return_Description",TypeName="varchar")] public string Return_Description {get; set;}
		}

		[Table("TBL_SERVICE_PROVIDER",Schema="dbo")]
		public partial class TBL_SERVICE_PROVIDER
		{
			[Column("providerId",TypeName="tinyint")] public byte? providerId {get; set;}
			[Column("providerName",TypeName="varchar")] public string providerName {get; set;}
			[Column("providerType",TypeName="varchar")] public string providerType {get; set;}
			[Column("providerSubType",TypeName="varchar")] public string providerSubType {get; set;}
			[Column("isDefaultForType",TypeName="bit")] public bool? isDefaultForType {get; set;}
			[Column("isDefaultForSubType",TypeName="bit")] public bool? isDefaultForSubType {get; set;}
			[Column("isCustom",TypeName="bit")] public bool? isCustom {get; set;}
			[Column("databaseName",TypeName="varchar")] public string databaseName {get; set;}
			[Column("isActive",TypeName="bit")] public bool? isActive {get; set;}
			[Column("isRandomizePriority",TypeName="bit")] public bool? isRandomizePriority {get; set;}
			[Column("maximumItems",TypeName="bigint")] public long? maximumItems {get; set;}
			[Column("currentItems",TypeName="int")] public int? currentItems {get; set;}
			[Column("providerTitle",TypeName="int")] public int? providerTitle {get; set;}
		}

		[Table("TBL_SERVICE_PROVIDER_RR",Schema="dbo")]
		public partial class TBL_SERVICE_PROVIDER_RR
		{
			[Column("providerRRId",TypeName="int")] public int providerRRId {get; set;}
			[Column("providerId",TypeName="tinyint")] public byte? providerId {get; set;}
			[Column("host",TypeName="varchar")] public string host {get; set;}
			[Column("recordType",TypeName="varchar")] public string recordType {get; set;}
			[Column("recordSubType",TypeName="varchar")] public string recordSubType {get; set;}
			[Column("data",TypeName="varchar")] public string data {get; set;}
			[Column("priority",TypeName="tinyint")] public byte? priority {get; set;}
			[Column("serverDescription",TypeName="varchar")] public string serverDescription {get; set;}
			[Column("isActive",TypeName="bit")] public bool? isActive {get; set;}
		}

		[Table("TBL_SERVICE_PROVIDERS",Schema="dbo")]
		public partial class TBL_SERVICE_PROVIDERS
		{
			[Column("providerId",TypeName="tinyint")] public byte providerId {get; set;}
			[Column("providerName",TypeName="varchar")] public string providerName {get; set;}
			[Column("providerType",TypeName="varchar")] public string providerType {get; set;}
			[Column("providerSubType",TypeName="varchar")] public string providerSubType {get; set;}
			[Column("isDefaultForType",TypeName="bit")] public bool isDefaultForType {get; set;}
			[Column("isDefaultForSubType",TypeName="bit")] public bool isDefaultForSubType {get; set;}
			[Column("isCustom",TypeName="bit")] public bool isCustom {get; set;}
			[Column("databaseName",TypeName="varchar")] public string databaseName {get; set;}
			[Column("isActive",TypeName="bit")] public bool isActive {get; set;}
			[Column("isRandomizePriority",TypeName="bit")] public bool isRandomizePriority {get; set;}
			[Column("maximumItems",TypeName="int")] public int? maximumItems {get; set;}
			[Column("currentItems",TypeName="int")] public int? currentItems {get; set;}
			[Column("providerTitle",TypeName="varchar")] public string providerTitle {get; set;}
		}

		[Table("TBL_SHOPPING_CART",Schema="dbo")]
		public partial class TBL_SHOPPING_CART
		{
			[Column("RefID",TypeName="varchar")] public string RefID {get; set;}
			[Column("SLD",TypeName="varchar")] public string SLD {get; set;}
			[Column("TLD",TypeName="varchar")] public string TLD {get; set;}
			[Column("NumYears",TypeName="smallint")] public short? NumYears {get; set;}
			[Column("Price_Per_Year",TypeName="money")] public decimal? Price_Per_Year {get; set;}
			[Column("Reg_Price_Per_Year",TypeName="money")] public decimal? Reg_Price_Per_Year {get; set;}
			[Column("ActionID",TypeName="varchar")] public string ActionID {get; set;}
			[Column("MinYears",TypeName="int")] public int? MinYears {get; set;}
			[Column("MaxYears",TypeName="int")] public int? MaxYears {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("Special_Price",TypeName="money")] public decimal? Special_Price {get; set;}
			[Column("Pricing_Hint",TypeName="varchar")] public string Pricing_Hint {get; set;}
			[Column("Item_Num",TypeName="numeric")] public decimal Item_Num {get; set;}
			[Column("qty",TypeName="int")] public int? qty {get; set;}
			[Column("IsPricePerDuration",TypeName="bit")] public bool? IsPricePerDuration {get; set;}
			[Column("Additional_Cost",TypeName="money")] public decimal? Additional_Cost {get; set;}
			[Column("Special_Additional_Cost",TypeName="money")] public decimal? Special_Additional_Cost {get; set;}
			[Column("Reg_Additional_cost",TypeName="money")] public decimal? Reg_Additional_cost {get; set;}
			[Column("Additional_Cost_Hint",TypeName="varchar")] public string Additional_Cost_Hint {get; set;}
			[Column("IsAdditionalCostOneTime",TypeName="bit")] public bool? IsAdditionalCostOneTime {get; set;}
			[Column("Option1",TypeName="varchar")] public string Option1 {get; set;}
			[Column("Option2",TypeName="varchar")] public string Option2 {get; set;}
			[Column("LastUpdatedDateTime",TypeName="int")] public int? LastUpdatedDateTime {get; set;}
			[Column("IsCartSaved",TypeName="bit")] public bool? IsCartSaved {get; set;}
			[Column("Promotion_Code",TypeName="varchar")] public string Promotion_Code {get; set;}
			[Column("Reference_Item",TypeName="numeric")] public decimal? Reference_Item {get; set;}
			[Column("packageID",TypeName="varchar")] public string packageID {get; set;}
		}

		[Table("TBL_SHOPPING_CHECKOUT_INFO",Schema="dbo")]
		public partial class TBL_SHOPPING_CHECKOUT_INFO
		{
			[Column("Auto_ID",TypeName="decimal")] public decimal Auto_ID {get; set;}
			[Column("ID",TypeName="nvarchar")] public string ID {get; set;}
			[Column("Promotion_Code",TypeName="varchar")] public string Promotion_Code {get; set;}
			[Column("RegistrantOrganizationName",TypeName="nvarchar")] public string RegistrantOrganizationName {get; set;}
			[Column("RegistrantJobTitle",TypeName="nvarchar")] public string RegistrantJobTitle {get; set;}
			[Column("RegistrantFirstName",TypeName="nvarchar")] public string RegistrantFirstName {get; set;}
			[Column("RegistrantLastName",TypeName="nvarchar")] public string RegistrantLastName {get; set;}
			[Column("RegistrantAddress1",TypeName="nvarchar")] public string RegistrantAddress1 {get; set;}
			[Column("RegistrantAddress2",TypeName="nvarchar")] public string RegistrantAddress2 {get; set;}
			[Column("RegistrantCity",TypeName="nvarchar")] public string RegistrantCity {get; set;}
			[Column("RegistrantStateProvince",TypeName="nvarchar")] public string RegistrantStateProvince {get; set;}
			[Column("RegistrantStateProvinceChoice",TypeName="nvarchar")] public string RegistrantStateProvinceChoice {get; set;}
			[Column("RegistrantPostalCode",TypeName="nvarchar")] public string RegistrantPostalCode {get; set;}
			[Column("RegistrantCountry",TypeName="nvarchar")] public string RegistrantCountry {get; set;}
			[Column("RegistrantPhone",TypeName="nvarchar")] public string RegistrantPhone {get; set;}
			[Column("RegistrantFax",TypeName="nvarchar")] public string RegistrantFax {get; set;}
			[Column("RegistrantEmailAddress",TypeName="nvarchar")] public string RegistrantEmailAddress {get; set;}
			[Column("TechOrganizationName",TypeName="nvarchar")] public string TechOrganizationName {get; set;}
			[Column("TechJobTitle",TypeName="nvarchar")] public string TechJobTitle {get; set;}
			[Column("TechFirstName",TypeName="nvarchar")] public string TechFirstName {get; set;}
			[Column("TechLastName",TypeName="nvarchar")] public string TechLastName {get; set;}
			[Column("TechAddress1",TypeName="nvarchar")] public string TechAddress1 {get; set;}
			[Column("TechAddress2",TypeName="nvarchar")] public string TechAddress2 {get; set;}
			[Column("TechCity",TypeName="nvarchar")] public string TechCity {get; set;}
			[Column("TechStateProvince",TypeName="nvarchar")] public string TechStateProvince {get; set;}
			[Column("TechStateProvinceChoice",TypeName="nvarchar")] public string TechStateProvinceChoice {get; set;}
			[Column("TechPostalCode",TypeName="nvarchar")] public string TechPostalCode {get; set;}
			[Column("TechCountry",TypeName="nvarchar")] public string TechCountry {get; set;}
			[Column("TechPhone",TypeName="nvarchar")] public string TechPhone {get; set;}
			[Column("TechFax",TypeName="nvarchar")] public string TechFax {get; set;}
			[Column("TechEmailAddress",TypeName="nvarchar")] public string TechEmailAddress {get; set;}
			[Column("AdminOrganizationName",TypeName="nvarchar")] public string AdminOrganizationName {get; set;}
			[Column("AdminJobTitle",TypeName="nvarchar")] public string AdminJobTitle {get; set;}
			[Column("AdminFirstName",TypeName="nvarchar")] public string AdminFirstName {get; set;}
			[Column("AdminLastName",TypeName="nvarchar")] public string AdminLastName {get; set;}
			[Column("AdminAddress1",TypeName="nvarchar")] public string AdminAddress1 {get; set;}
			[Column("AdminAddress2",TypeName="nvarchar")] public string AdminAddress2 {get; set;}
			[Column("AdminCity",TypeName="nvarchar")] public string AdminCity {get; set;}
			[Column("AdminStateProvince",TypeName="nvarchar")] public string AdminStateProvince {get; set;}
			[Column("AdminStateProvinceChoice",TypeName="nvarchar")] public string AdminStateProvinceChoice {get; set;}
			[Column("AdminPostalCode",TypeName="nvarchar")] public string AdminPostalCode {get; set;}
			[Column("AdminCountry",TypeName="nvarchar")] public string AdminCountry {get; set;}
			[Column("AdminPhone",TypeName="nvarchar")] public string AdminPhone {get; set;}
			[Column("AdminFax",TypeName="nvarchar")] public string AdminFax {get; set;}
			[Column("AdminEmailAddress",TypeName="nvarchar")] public string AdminEmailAddress {get; set;}
			[Column("AuxBillingOrganizationName",TypeName="nvarchar")] public string AuxBillingOrganizationName {get; set;}
			[Column("AuxBillingJobTitle",TypeName="nvarchar")] public string AuxBillingJobTitle {get; set;}
			[Column("AuxBillingFirstName",TypeName="nvarchar")] public string AuxBillingFirstName {get; set;}
			[Column("AuxBillingLastName",TypeName="nvarchar")] public string AuxBillingLastName {get; set;}
			[Column("AuxBillingAddress1",TypeName="nvarchar")] public string AuxBillingAddress1 {get; set;}
			[Column("AuxBillingAddress2",TypeName="nvarchar")] public string AuxBillingAddress2 {get; set;}
			[Column("AuxBillingCity",TypeName="nvarchar")] public string AuxBillingCity {get; set;}
			[Column("AuxBillingStateProvince",TypeName="nvarchar")] public string AuxBillingStateProvince {get; set;}
			[Column("AuxBillingStateProvinceChoice",TypeName="nvarchar")] public string AuxBillingStateProvinceChoice {get; set;}
			[Column("AuxBillingPostalCode",TypeName="nvarchar")] public string AuxBillingPostalCode {get; set;}
			[Column("AuxBillingCountry",TypeName="nvarchar")] public string AuxBillingCountry {get; set;}
			[Column("AuxBillingPhone",TypeName="nvarchar")] public string AuxBillingPhone {get; set;}
			[Column("AuxBillingFax",TypeName="nvarchar")] public string AuxBillingFax {get; set;}
			[Column("AuxBillingEmailAddress",TypeName="nvarchar")] public string AuxBillingEmailAddress {get; set;}
			[Column("UseNameServer",TypeName="nvarchar")] public string UseNameServer {get; set;}
			[Column("NS1",TypeName="nvarchar")] public string NS1 {get; set;}
			[Column("NS2",TypeName="nvarchar")] public string NS2 {get; set;}
			[Column("NS3",TypeName="nvarchar")] public string NS3 {get; set;}
			[Column("NS4",TypeName="nvarchar")] public string NS4 {get; set;}
			[Column("NS5",TypeName="nvarchar")] public string NS5 {get; set;}
			[Column("FwdEMailUser",TypeName="nvarchar")] public string FwdEMailUser {get; set;}
			[Column("FwdToEMail",TypeName="nvarchar")] public string FwdToEMail {get; set;}
			[Column("Submit",TypeName="nvarchar")] public string Submit {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("RegistrantPhoneExt",TypeName="varchar")] public string RegistrantPhoneExt {get; set;}
			[Column("TechPhoneExt",TypeName="varchar")] public string TechPhoneExt {get; set;}
			[Column("AdminPhoneExt",TypeName="varchar")] public string AdminPhoneExt {get; set;}
			[Column("AuxBillingPhoneext",TypeName="varchar")] public string AuxBillingPhoneext {get; set;}
			[Column("ForwardingURL",TypeName="varchar")] public string ForwardingURL {get; set;}
			[Column("ForwardingType",TypeName="varchar")] public string ForwardingType {get; set;}
			[Column("RegistrantNexus",TypeName="varchar")] public string RegistrantNexus {get; set;}
			[Column("RegistrantNexusCountry",TypeName="varchar")] public string RegistrantNexusCountry {get; set;}
			[Column("RegistrantPurpose",TypeName="varchar")] public string RegistrantPurpose {get; set;}
			[Column("CIRAType",TypeName="varchar")] public string CIRAType {get; set;}
			[Column("COUKLegalType",TypeName="varchar")] public string COUKLegalType {get; set;}
			[Column("COUKCompanyID",TypeName="varchar")] public string COUKCompanyID {get; set;}
			[Column("COUKRegisteredfor",TypeName="varchar")] public string COUKRegisteredfor {get; set;}
			[Column("COUKRegOptOut",TypeName="varchar")] public string COUKRegOptOut {get; set;}
			[Column("ORGUKRegisteredfor",TypeName="varchar")] public string ORGUKRegisteredfor {get; set;}
			[Column("ORGUKRegOptOut",TypeName="varchar")] public string ORGUKRegOptOut {get; set;}
			[Column("ORGUKLegalType",TypeName="varchar")] public string ORGUKLegalType {get; set;}
			[Column("ORGUKCompanyID",TypeName="varchar")] public string ORGUKCompanyID {get; set;}
			[Column("DEconfirmAddress",TypeName="bit")] public bool? DEconfirmAddress {get; set;}
			[Column("eu_adr_lang",TypeName="varchar")] public string eu_adr_lang {get; set;}
			[Column("eu_agreedelete",TypeName="bit")] public bool? eu_agreedelete {get; set;}
			[Column("MEUKLegalType",TypeName="varchar")] public string MEUKLegalType {get; set;}
			[Column("MEUKCompanyID",TypeName="varchar")] public string MEUKCompanyID {get; set;}
			[Column("MEUKRegisteredfor",TypeName="varchar")] public string MEUKRegisteredfor {get; set;}
			[Column("MEUKRegOptOut",TypeName="varchar")] public string MEUKRegOptOut {get; set;}
			[Column("cira_registrant",TypeName="varchar")] public string cira_registrant {get; set;}
			[Column("cira_registrant_desc",TypeName="varchar")] public string cira_registrant_desc {get; set;}
			[Column("cira_trademark_no",TypeName="varchar")] public string cira_trademark_no {get; set;}
			[Column("cira_org_registered_in",TypeName="varchar")] public string cira_org_registered_in {get; set;}
			[Column("CIRA_Legal_Type",TypeName="varchar")] public string CIRA_Legal_Type {get; set;}
			[Column("CIRA_Whois_Display",TypeName="varchar")] public string CIRA_Whois_Display {get; set;}
			[Column("CIRA_Agreement_Version",TypeName="varchar")] public string CIRA_Agreement_Version {get; set;}
			[Column("CIRA_Agreement_Value",TypeName="varchar")] public string CIRA_Agreement_Value {get; set;}
			[Column("CIRA_Language",TypeName="varchar")] public string CIRA_Language {get; set;}
			[Column("asia_cclocality",TypeName="varchar")] public string asia_cclocality {get; set;}
			[Column("asia_localitycity",TypeName="nvarchar")] public string asia_localitycity {get; set;}
			[Column("asia_localitysp",TypeName="nvarchar")] public string asia_localitysp {get; set;}
			[Column("asia_legalentitytype",TypeName="varchar")] public string asia_legalentitytype {get; set;}
			[Column("asia_identform",TypeName="varchar")] public string asia_identform {get; set;}
			[Column("asia_ident_number",TypeName="varchar")] public string asia_ident_number {get; set;}
			[Column("asia_otherletype",TypeName="varchar")] public string asia_otherletype {get; set;}
			[Column("asia_otheridentform",TypeName="varchar")] public string asia_otheridentform {get; set;}
			[Column("de_agreedelete",TypeName="varchar")] public string de_agreedelete {get; set;}
		}

		[Table("TBL_SHOPPING_DOMAINS_TO_REGISTER",Schema="dbo")]
		public partial class TBL_SHOPPING_DOMAINS_TO_REGISTER
		{
			[Column("Auto_ID",TypeName="decimal")] public decimal Auto_ID {get; set;}
			[Column("RegID",TypeName="nvarchar")] public string RegID {get; set;}
			[Column("SLD",TypeName="nvarchar")] public string SLD {get; set;}
			[Column("TLD",TypeName="nvarchar")] public string TLD {get; set;}
			[Column("NumYears",TypeName="smallint")] public short? NumYears {get; set;}
			[Column("Price_Per_Year",TypeName="money")] public decimal? Price_Per_Year {get; set;}
			[Column("ActionID",TypeName="nvarchar")] public string ActionID {get; set;}
			[Column("ActionSuccess",TypeName="bit")] public bool ActionSuccess {get; set;}
			[Column("ErrorInfo",TypeName="nvarchar")] public string ErrorInfo {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("Reg_Price_Per_Year",TypeName="money")] public decimal? Reg_Price_Per_Year {get; set;}
			[Column("Special_Price",TypeName="money")] public decimal? Special_Price {get; set;}
			[Column("Qty",TypeName="int")] public int? Qty {get; set;}
			[Column("IsPricePerDuration",TypeName="bit")] public bool? IsPricePerDuration {get; set;}
			[Column("Additional_Cost",TypeName="money")] public decimal? Additional_Cost {get; set;}
			[Column("Special_Additional_Cost",TypeName="money")] public decimal? Special_Additional_Cost {get; set;}
			[Column("Reg_Additional_cost",TypeName="money")] public decimal? Reg_Additional_cost {get; set;}
			[Column("IsAdditionalCostOneTime",TypeName="bit")] public bool? IsAdditionalCostOneTime {get; set;}
			[Column("Option1",TypeName="varchar")] public string Option1 {get; set;}
			[Column("Option2",TypeName="varchar")] public string Option2 {get; set;}
			[Column("Item_Num",TypeName="numeric")] public decimal? Item_Num {get; set;}
			[Column("Reference_Item",TypeName="numeric")] public decimal? Reference_Item {get; set;}
			[Column("packageID",TypeName="varchar")] public string packageID {get; set;}
		}

		[Table("TBL_SSL_CERTIFICATE_DETAILS",Schema="dbo")]
		public partial class TBL_SSL_CERTIFICATE_DETAILS
		{
			[Column("Certificate_ID",TypeName="int")] public int? Certificate_ID {get; set;}
			[Column("CSR_CommonName",TypeName="varchar")] public string CSR_CommonName {get; set;}
			[Column("CSR_Organisation",TypeName="nvarchar")] public string CSR_Organisation {get; set;}
			[Column("CSR_OrganisationUnit",TypeName="nvarchar")] public string CSR_OrganisationUnit {get; set;}
			[Column("CSR_Country",TypeName="varchar")] public string CSR_Country {get; set;}
			[Column("CSR_State",TypeName="nvarchar")] public string CSR_State {get; set;}
			[Column("CSR_Locality",TypeName="nvarchar")] public string CSR_Locality {get; set;}
			[Column("FirstName",TypeName="nvarchar")] public string FirstName {get; set;}
			[Column("LastName",TypeName="nvarchar")] public string LastName {get; set;}
			[Column("Email",TypeName="nvarchar")] public string Email {get; set;}
			[Column("JobTitle",TypeName="nvarchar")] public string JobTitle {get; set;}
			[Column("Organization",TypeName="nvarchar")] public string Organization {get; set;}
			[Column("StreetAddress",TypeName="nvarchar")] public string StreetAddress {get; set;}
			[Column("Address2",TypeName="nvarchar")] public string Address2 {get; set;}
			[Column("City",TypeName="nvarchar")] public string City {get; set;}
			[Column("State",TypeName="nvarchar")] public string State {get; set;}
			[Column("StateProvince",TypeName="nvarchar")] public string StateProvince {get; set;}
			[Column("Zip",TypeName="nvarchar")] public string Zip {get; set;}
			[Column("Country",TypeName="nvarchar")] public string Country {get; set;}
			[Column("Phone",TypeName="varchar")] public string Phone {get; set;}
			[Column("Fax",TypeName="varchar")] public string Fax {get; set;}
			[Column("PhoneExt",TypeName="varchar")] public string PhoneExt {get; set;}
			[Column("FaxExt",TypeName="varchar")] public string FaxExt {get; set;}
			[Column("ApproverIp",TypeName="varchar")] public string ApproverIp {get; set;}
			[Column("ApprovalDateTime",TypeName="datetime")] public DateTime? ApprovalDateTime {get; set;}
			[Column("JoiLocality",TypeName="nvarchar")] public string JoiLocality {get; set;}
			[Column("JoiStateOrProvince",TypeName="nvarchar")] public string JoiStateOrProvince {get; set;}
			[Column("JoiCountry",TypeName="nvarchar")] public string JoiCountry {get; set;}
			[Column("DateOfIncorporation",TypeName="date")] public DateTime? DateOfIncorporation {get; set;}
			[Column("CompanyName",TypeName="nvarchar")] public string CompanyName {get; set;}
			[Column("CompanyNumber",TypeName="nvarchar")] public string CompanyNumber {get; set;}
			[Column("repFirstName",TypeName="nvarchar")] public string repFirstName {get; set;}
			[Column("repLastName",TypeName="nvarchar")] public string repLastName {get; set;}
			[Column("repEmailAddress",TypeName="nvarchar")] public string repEmailAddress {get; set;}
			[Column("repPhone",TypeName="varchar")] public string repPhone {get; set;}
			[Column("repFax",TypeName="varchar")] public string repFax {get; set;}
			[Column("repCallbackMethod",TypeName="varchar")] public string repCallbackMethod {get; set;}
			[Column("repOrganisationName",TypeName="nvarchar")] public string repOrganisationName {get; set;}
			[Column("repOrganisationUnitName",TypeName="nvarchar")] public string repOrganisationUnitName {get; set;}
			[Column("repAddress1",TypeName="nvarchar")] public string repAddress1 {get; set;}
			[Column("repAddress2",TypeName="nvarchar")] public string repAddress2 {get; set;}
			[Column("repCity",TypeName="nvarchar")] public string repCity {get; set;}
			[Column("repStateProvince",TypeName="nvarchar")] public string repStateProvince {get; set;}
			[Column("repPostalCode",TypeName="nvarchar")] public string repPostalCode {get; set;}
			[Column("repCountry",TypeName="nvarchar")] public string repCountry {get; set;}
			[Column("repTitle",TypeName="nvarchar")] public string repTitle {get; set;}
			[Column("repPostOfficeBox",TypeName="varchar")] public string repPostOfficeBox {get; set;}
			[Column("repCallbackDestinationSame",TypeName="varchar")] public string repCallbackDestinationSame {get; set;}
		}

		[Table("TBL_SSL_CERTIFICATES",Schema="dbo")]
		public partial class TBL_SSL_CERTIFICATES
		{
			[Column("Certificate_ID",TypeName="numeric")] public decimal Certificate_ID {get; set;}
			[Column("User_Name",TypeName="nvarchar")] public string User_Name {get; set;}
			[Column("Purchase_DateTime",TypeName="datetime")] public DateTime? Purchase_DateTime {get; set;}
			[Column("Status",TypeName="varchar")] public string Status {get; set;}
			[Column("Status_Desc",TypeName="varchar")] public string Status_Desc {get; set;}
			[Column("SSL_Type",TypeName="varchar")] public string SSL_Type {get; set;}
			[Column("Host_Name",TypeName="varchar")] public string Host_Name {get; set;}
			[Column("Years",TypeName="int")] public int? Years {get; set;}
			[Column("Purchase_Price",TypeName="money")] public decimal? Purchase_Price {get; set;}
			[Column("Retail_Price",TypeName="money")] public decimal? Retail_Price {get; set;}
			[Column("Qty",TypeName="int")] public int? Qty {get; set;}
			[Column("Refunded_YN",TypeName="bit")] public bool? Refunded_YN {get; set;}
			[Column("Refund_Datetime",TypeName="datetime")] public DateTime? Refund_Datetime {get; set;}
			[Column("Cancelled_Datetime",TypeName="datetime")] public DateTime? Cancelled_Datetime {get; set;}
			[Column("Issued_Datetime",TypeName="datetime")] public DateTime? Issued_Datetime {get; set;}
			[Column("Rejected_YN",TypeName="bit")] public bool? Rejected_YN {get; set;}
			[Column("Completed_Datetime",TypeName="datetime")] public DateTime? Completed_Datetime {get; set;}
			[Column("OrderID",TypeName="nvarchar")] public string OrderID {get; set;}
			[Column("OrderDetailID",TypeName="nvarchar")] public string OrderDetailID {get; set;}
			[Column("OrderID2",TypeName="numeric")] public decimal? OrderID2 {get; set;}
			[Column("Issue_Email",TypeName="varchar")] public string Issue_Email {get; set;}
			[Column("Issue_Pin",TypeName="varchar")] public string Issue_Pin {get; set;}
			[Column("Months",TypeName="int")] public int? Months {get; set;}
			[Column("DomainUsed",TypeName="varchar")] public string DomainUsed {get; set;}
			[Column("GeotrustOrderID",TypeName="varchar")] public string GeotrustOrderID {get; set;}
			[Column("Log_Details",TypeName="text")] public string Log_Details {get; set;}
			[Column("Expire_Datetime",TypeName="datetime")] public DateTime? Expire_Datetime {get; set;}
			[Column("Next_CheckDatetime",TypeName="datetime")] public DateTime? Next_CheckDatetime {get; set;}
			[Column("Is_Renewal_Order_YN",TypeName="bit")] public bool Is_Renewal_Order_YN {get; set;}
			[Column("Related_GeotrustOrderID",TypeName="varchar")] public string Related_GeotrustOrderID {get; set;}
			[Column("Renewal_GeotrustOrderID",TypeName="varchar")] public string Renewal_GeotrustOrderID {get; set;}
			[Column("Related_Certificate_ID",TypeName="numeric")] public decimal? Related_Certificate_ID {get; set;}
			[Column("CSR",TypeName="text")] public string CSR {get; set;}
			[Column("Approver_Email",TypeName="nvarchar")] public string Approver_Email {get; set;}
			[Column("WebServer_Type",TypeName="varchar")] public string WebServer_Type {get; set;}
			[Column("Partner_ItemOrderID",TypeName="numeric")] public decimal? Partner_ItemOrderID {get; set;}
			[Column("Partner_OrderID",TypeName="numeric")] public decimal? Partner_OrderID {get; set;}
			[Column("Last_update",TypeName="datetime")] public DateTime? Last_update {get; set;}
			[Column("Partner_ID",TypeName="smallint")] public short? Partner_ID {get; set;}
			[Column("Activation_Expire_DateTime",TypeName="datetime")] public DateTime? Activation_Expire_DateTime {get; set;}
			[Column("processIP",TypeName="bigint")] public long? processIP {get; set;}
			[Column("approverEmailWarningIgnored",TypeName="bit")] public bool? approverEmailWarningIgnored {get; set;}
			[Column("apporverSelectedDateTime",TypeName="int")] public int? apporverSelectedDateTime {get; set;}
			[Column("Replaced_Certificate_ID",TypeName="numeric")] public decimal? Replaced_Certificate_ID {get; set;}
			[Column("ReplaceInsteadOfRefundYN",TypeName="bit")] public bool ReplaceInsteadOfRefundYN {get; set;}
			[Column("PurchaseValidationID",TypeName="varchar")] public string PurchaseValidationID {get; set;}
			[Column("IsRefundByOrderDetailId",TypeName="bit")] public bool IsRefundByOrderDetailId {get; set;}
			[Column("Notes",TypeName="varchar")] public string Notes {get; set;}
			[Column("Renewal_Status",TypeName="varchar")] public string Renewal_Status {get; set;}
			[Column("Is_Renewal_Notification_Subscribed",TypeName="bit")] public bool Is_Renewal_Notification_Subscribed {get; set;}
			[Column("HttpDCValidation",TypeName="bit")] public bool? HttpDCValidation {get; set;}
			[Column("File_Name",TypeName="nvarchar")] public string File_Name {get; set;}
			[Column("File_Content",TypeName="text")] public string File_Content {get; set;}
		}

		[Table("TBL_SSL_ENOM_CERTIFICATE_POOL",Schema="dbo")]
		public partial class TBL_SSL_ENOM_CERTIFICATE_POOL
		{
			[Column("poolId",TypeName="int")] public int poolId {get; set;}
			[Column("enomOrderId",TypeName="bigint")] public long? enomOrderId {get; set;}
			[Column("enomCertId",TypeName="bigint")] public long? enomCertId {get; set;}
			[Column("created_DateTime",TypeName="datetime")] public DateTime? created_DateTime {get; set;}
			[Column("enom_certificate_Type",TypeName="varchar")] public string enom_certificate_Type {get; set;}
			[Column("enom_years_purchased",TypeName="tinyint")] public byte? enom_years_purchased {get; set;}
			[Column("associated_Certificate_ID",TypeName="int")] public int? associated_Certificate_ID {get; set;}
			[Column("associated_DateTime",TypeName="datetime")] public DateTime? associated_DateTime {get; set;}
			[Column("mark_as_unusable",TypeName="bit")] public bool? mark_as_unusable {get; set;}
		}

		[Table("TBL_SSL_PARTNERS",Schema="dbo")]
		public partial class TBL_SSL_PARTNERS
		{
			[Column("Partner_ID",TypeName="smallint")] public short Partner_ID {get; set;}
			[Column("Partner_Name",TypeName="varchar")] public string Partner_Name {get; set;}
			[Column("User_Name",TypeName="nvarchar")] public string User_Name {get; set;}
			[Column("User_Password",TypeName="varchar")] public string User_Password {get; set;}
			[Column("Security_Key",TypeName="varchar")] public string Security_Key {get; set;}
			[Column("Contract_ID",TypeName="varchar")] public string Contract_ID {get; set;}
			[Column("Partner_Reference_ID",TypeName="varchar")] public string Partner_Reference_ID {get; set;}
			[Column("Submit_URL",TypeName="varchar")] public string Submit_URL {get; set;}
		}

		[Table("TBL_SSL_PRODUCT_PARTNER",Schema="dbo")]
		public partial class TBL_SSL_PRODUCT_PARTNER
		{
			[Column("Auto_ID",TypeName="int")] public int Auto_ID {get; set;}
			[Column("Partner_ID",TypeName="smallint")] public short? Partner_ID {get; set;}
			[Column("SSL_Type",TypeName="varchar")] public string SSL_Type {get; set;}
			[Column("API_Parameter_Value",TypeName="varchar")] public string API_Parameter_Value {get; set;}
			[Column("ProviderName",TypeName="varchar")] public string ProviderName {get; set;}
			[Column("IsWildCard",TypeName="bit")] public bool IsWildCard {get; set;}
			[Column("IsSAN",TypeName="bit")] public bool IsSAN {get; set;}
			[Column("IsSGC",TypeName="bit")] public bool IsSGC {get; set;}
			[Column("IsEV",TypeName="bit")] public bool IsEV {get; set;}
			[Column("ValidationType",TypeName="varchar")] public string ValidationType {get; set;}
			[Column("IsContactJobTitleRequired",TypeName="bit")] public bool IsContactJobTitleRequired {get; set;}
			[Column("ProviderChannel",TypeName="varchar")] public string ProviderChannel {get; set;}
		}

		[Table("TBL_SSL_REFUND_EMAIL_QUEUE",Schema="dbo")]
		public partial class TBL_SSL_REFUND_EMAIL_QUEUE
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("Certificate_ID",TypeName="numeric")] public decimal Certificate_ID {get; set;}
			[Column("Partner_OrderID",TypeName="numeric")] public decimal Partner_OrderID {get; set;}
			[Column("Partner_ItemOrderID",TypeName="numeric")] public decimal Partner_ItemOrderID {get; set;}
			[Column("Admin_UserName",TypeName="varchar")] public string Admin_UserName {get; set;}
			[Column("Admin_IP",TypeName="varchar")] public string Admin_IP {get; set;}
			[Column("Cancelled_DateTime",TypeName="datetime")] public DateTime? Cancelled_DateTime {get; set;}
			[Column("Cancelled_Reason",TypeName="varchar")] public string Cancelled_Reason {get; set;}
			[Column("Refund_Email_Sent",TypeName="bit")] public bool? Refund_Email_Sent {get; set;}
			[Column("Status",TypeName="varchar")] public string Status {get; set;}
			[Column("Status_Desc",TypeName="varchar")] public string Status_Desc {get; set;}
			[Column("Refund_Revert_YN",TypeName="bit")] public bool? Refund_Revert_YN {get; set;}
			[Column("Refund_Email_Sent_DateTime",TypeName="datetime")] public DateTime? Refund_Email_Sent_DateTime {get; set;}
		}

		[Table("TBL_SSLTEMP",Schema="dbo")]
		public partial class TBL_SSLTEMP
		{
			[Column("CommonName",TypeName="varchar")] public string CommonName {get; set;}
			[Column("Certificate_ID",TypeName="numeric")] public decimal Certificate_ID {get; set;}
			[Column("GeotrustOrderID",TypeName="varchar")] public string GeotrustOrderID {get; set;}
			[Column("User_Name",TypeName="nvarchar")] public string User_Name {get; set;}
			[Column("Email",TypeName="varchar")] public string Email {get; set;}
		}

		[Table("TBL_SYNC_DOMAINS",Schema="dbo")]
		public partial class TBL_SYNC_DOMAINS
		{
			[Column("domainName",TypeName="nvarchar")] public string domainName {get; set;}
			[Column("currentExpiryDate",TypeName="datetime")] public DateTime? currentExpiryDate {get; set;}
			[Column("enomExpiryDate",TypeName="datetime")] public DateTime? enomExpiryDate {get; set;}
			[Column("isSyncDone",TypeName="bit")] public bool isSyncDone {get; set;}
			[Column("userName",TypeName="nvarchar")] public string userName {get; set;}
			[Column("responsenumber",TypeName="int")] public int? responsenumber {get; set;}
		}

		[Table("TBL_TEMP_DOMAIN_CONTACTS",Schema="dbo")]
		public partial class TBL_TEMP_DOMAIN_CONTACTS
		{
			[Column("BatchID",TypeName="nvarchar")] public string BatchID {get; set;}
			[Column("Registrant_FirstName",TypeName="nvarchar")] public string Registrant_FirstName {get; set;}
			[Column("Registrant_LastName",TypeName="nvarchar")] public string Registrant_LastName {get; set;}
			[Column("Registrant_JobTitle",TypeName="nvarchar")] public string Registrant_JobTitle {get; set;}
			[Column("Registrant_Organization",TypeName="nvarchar")] public string Registrant_Organization {get; set;}
			[Column("Registrant_StreetAddress",TypeName="nvarchar")] public string Registrant_StreetAddress {get; set;}
			[Column("Registrant_Address2",TypeName="nvarchar")] public string Registrant_Address2 {get; set;}
			[Column("Registrant_City",TypeName="nvarchar")] public string Registrant_City {get; set;}
			[Column("Registrant_State",TypeName="nvarchar")] public string Registrant_State {get; set;}
			[Column("Registrant_StateProvince",TypeName="nvarchar")] public string Registrant_StateProvince {get; set;}
			[Column("Registrant_Zip",TypeName="nvarchar")] public string Registrant_Zip {get; set;}
			[Column("Registrant_Country",TypeName="nvarchar")] public string Registrant_Country {get; set;}
			[Column("Registrant_Phone",TypeName="nvarchar")] public string Registrant_Phone {get; set;}
			[Column("Registrant_Fax",TypeName="nvarchar")] public string Registrant_Fax {get; set;}
			[Column("Registrant_Email",TypeName="nvarchar")] public string Registrant_Email {get; set;}
			[Column("Admin_FirstName",TypeName="nvarchar")] public string Admin_FirstName {get; set;}
			[Column("Admin_LastName",TypeName="nvarchar")] public string Admin_LastName {get; set;}
			[Column("Admin_JobTitle",TypeName="nvarchar")] public string Admin_JobTitle {get; set;}
			[Column("Admin_Organization",TypeName="nvarchar")] public string Admin_Organization {get; set;}
			[Column("Admin_StreetAddress",TypeName="nvarchar")] public string Admin_StreetAddress {get; set;}
			[Column("Admin_Address2",TypeName="nvarchar")] public string Admin_Address2 {get; set;}
			[Column("Admin_City",TypeName="nvarchar")] public string Admin_City {get; set;}
			[Column("Admin_State",TypeName="nvarchar")] public string Admin_State {get; set;}
			[Column("Admin_StateProvince",TypeName="nvarchar")] public string Admin_StateProvince {get; set;}
			[Column("Admin_Zip",TypeName="nvarchar")] public string Admin_Zip {get; set;}
			[Column("Admin_Country",TypeName="nvarchar")] public string Admin_Country {get; set;}
			[Column("Admin_Phone",TypeName="nvarchar")] public string Admin_Phone {get; set;}
			[Column("Admin_Fax",TypeName="nvarchar")] public string Admin_Fax {get; set;}
			[Column("Admin_Email",TypeName="nvarchar")] public string Admin_Email {get; set;}
			[Column("Tech_FirstName",TypeName="nvarchar")] public string Tech_FirstName {get; set;}
			[Column("Tech_LastName",TypeName="nvarchar")] public string Tech_LastName {get; set;}
			[Column("Tech_JobTitle",TypeName="nvarchar")] public string Tech_JobTitle {get; set;}
			[Column("Tech_Organization",TypeName="nvarchar")] public string Tech_Organization {get; set;}
			[Column("Tech_StreetAddress",TypeName="nvarchar")] public string Tech_StreetAddress {get; set;}
			[Column("Tech_Address2",TypeName="nvarchar")] public string Tech_Address2 {get; set;}
			[Column("Tech_City",TypeName="nvarchar")] public string Tech_City {get; set;}
			[Column("Tech_State",TypeName="nvarchar")] public string Tech_State {get; set;}
			[Column("Tech_StateProvince",TypeName="nvarchar")] public string Tech_StateProvince {get; set;}
			[Column("Tech_Zip",TypeName="nvarchar")] public string Tech_Zip {get; set;}
			[Column("Tech_Country",TypeName="nvarchar")] public string Tech_Country {get; set;}
			[Column("Tech_Phone",TypeName="nvarchar")] public string Tech_Phone {get; set;}
			[Column("Tech_Fax",TypeName="nvarchar")] public string Tech_Fax {get; set;}
			[Column("Tech_Email",TypeName="nvarchar")] public string Tech_Email {get; set;}
			[Column("Billing_FirstName",TypeName="nvarchar")] public string Billing_FirstName {get; set;}
			[Column("Billing_LastName",TypeName="nvarchar")] public string Billing_LastName {get; set;}
			[Column("Billing_JobTitle",TypeName="nvarchar")] public string Billing_JobTitle {get; set;}
			[Column("Billing_Organization",TypeName="nvarchar")] public string Billing_Organization {get; set;}
			[Column("Billing_StreetAddress",TypeName="nvarchar")] public string Billing_StreetAddress {get; set;}
			[Column("Billing_Address2",TypeName="nvarchar")] public string Billing_Address2 {get; set;}
			[Column("Billing_City",TypeName="nvarchar")] public string Billing_City {get; set;}
			[Column("Billing_State",TypeName="nvarchar")] public string Billing_State {get; set;}
			[Column("Billing_StateProvince",TypeName="nvarchar")] public string Billing_StateProvince {get; set;}
			[Column("Billing_Zip",TypeName="nvarchar")] public string Billing_Zip {get; set;}
			[Column("Billing_Country",TypeName="nvarchar")] public string Billing_Country {get; set;}
			[Column("Billing_Phone",TypeName="nvarchar")] public string Billing_Phone {get; set;}
			[Column("Billing_Fax",TypeName="nvarchar")] public string Billing_Fax {get; set;}
			[Column("Billing_Email",TypeName="nvarchar")] public string Billing_Email {get; set;}
			[Column("RegistrantNexus",TypeName="varchar")] public string RegistrantNexus {get; set;}
			[Column("RegisrantNexusCountry",TypeName="nvarchar")] public string RegisrantNexusCountry {get; set;}
			[Column("RegistrantPurpose",TypeName="varchar")] public string RegistrantPurpose {get; set;}
			[Column("CIRAType",TypeName="varchar")] public string CIRAType {get; set;}
			[Column("COUKLegalType",TypeName="varchar")] public string COUKLegalType {get; set;}
			[Column("COUKCompanyID",TypeName="varchar")] public string COUKCompanyID {get; set;}
			[Column("COUKRegisteredfor",TypeName="varchar")] public string COUKRegisteredfor {get; set;}
			[Column("COUKRegOptOut",TypeName="varchar")] public string COUKRegOptOut {get; set;}
			[Column("ORGUKLegalType",TypeName="varchar")] public string ORGUKLegalType {get; set;}
			[Column("ORGUKCompanyID",TypeName="varchar")] public string ORGUKCompanyID {get; set;}
			[Column("ORGUKRegisteredfor",TypeName="varchar")] public string ORGUKRegisteredfor {get; set;}
			[Column("ORGUKRegOptOut",TypeName="varchar")] public string ORGUKRegOptOut {get; set;}
			[Column("Registrant_Phoneext",TypeName="varchar")] public string Registrant_Phoneext {get; set;}
			[Column("Admin_Phoneext",TypeName="varchar")] public string Admin_Phoneext {get; set;}
			[Column("Tech_Phoneext",TypeName="varchar")] public string Tech_Phoneext {get; set;}
			[Column("Billing_Phoneext",TypeName="varchar")] public string Billing_Phoneext {get; set;}
			[Column("EUAdrLang",TypeName="varchar")] public string EUAdrLang {get; set;}
			[Column("MEUKLegalType",TypeName="varchar")] public string MEUKLegalType {get; set;}
			[Column("MEUKCompanyID",TypeName="varchar")] public string MEUKCompanyID {get; set;}
			[Column("MEUKRegisteredfor",TypeName="varchar")] public string MEUKRegisteredfor {get; set;}
			[Column("MEUKRegOptOut",TypeName="varchar")] public string MEUKRegOptOut {get; set;}
			[Column("cira_registrant",TypeName="varchar")] public string cira_registrant {get; set;}
			[Column("cira_registrant_desc",TypeName="varchar")] public string cira_registrant_desc {get; set;}
			[Column("cira_trademark_no",TypeName="varchar")] public string cira_trademark_no {get; set;}
			[Column("cira_org_registered_in",TypeName="varchar")] public string cira_org_registered_in {get; set;}
			[Column("CIRA_Legal_Type",TypeName="varchar")] public string CIRA_Legal_Type {get; set;}
			[Column("CIRA_Whois_Display",TypeName="varchar")] public string CIRA_Whois_Display {get; set;}
			[Column("CIRA_Agreement_Version",TypeName="varchar")] public string CIRA_Agreement_Version {get; set;}
			[Column("CIRA_Agreement_Value",TypeName="varchar")] public string CIRA_Agreement_Value {get; set;}
			[Column("CIRA_Language",TypeName="varchar")] public string CIRA_Language {get; set;}
			[Column("asia_cclocality",TypeName="varchar")] public string asia_cclocality {get; set;}
			[Column("asia_localitycity",TypeName="nvarchar")] public string asia_localitycity {get; set;}
			[Column("asia_localitysp",TypeName="nvarchar")] public string asia_localitysp {get; set;}
			[Column("asia_legalentitytype",TypeName="varchar")] public string asia_legalentitytype {get; set;}
			[Column("asia_identform",TypeName="varchar")] public string asia_identform {get; set;}
			[Column("asia_ident_number",TypeName="varchar")] public string asia_ident_number {get; set;}
			[Column("asia_otherletype",TypeName="varchar")] public string asia_otherletype {get; set;}
			[Column("asia_otheridentform",TypeName="varchar")] public string asia_otheridentform {get; set;}
		}

		[Table("TBL_temp_updating_Domain_Contacts",Schema="dbo")]
		public partial class TBL_temp_updating_Domain_Contacts
		{
			[Column("Auto_ID",TypeName="numeric")] public decimal Auto_ID {get; set;}
			[Column("Create_Date_Time",TypeName="datetime")] public DateTime? Create_Date_Time {get; set;}
			[Column("Domain_Name",TypeName="nvarchar")] public string Domain_Name {get; set;}
			[Column("Registrant_FirstName",TypeName="nvarchar")] public string Registrant_FirstName {get; set;}
			[Column("Registrant_LastName",TypeName="nvarchar")] public string Registrant_LastName {get; set;}
			[Column("Registrant_JobTitle",TypeName="nvarchar")] public string Registrant_JobTitle {get; set;}
			[Column("Registrant_Organization",TypeName="nvarchar")] public string Registrant_Organization {get; set;}
			[Column("Registrant_StreetAddress",TypeName="nvarchar")] public string Registrant_StreetAddress {get; set;}
			[Column("Registrant_Address2",TypeName="nvarchar")] public string Registrant_Address2 {get; set;}
			[Column("Registrant_City",TypeName="nvarchar")] public string Registrant_City {get; set;}
			[Column("Registrant_State",TypeName="nvarchar")] public string Registrant_State {get; set;}
			[Column("Registrant_StateProvince",TypeName="nvarchar")] public string Registrant_StateProvince {get; set;}
			[Column("Registrant_Zip",TypeName="nvarchar")] public string Registrant_Zip {get; set;}
			[Column("Registrant_Country",TypeName="nvarchar")] public string Registrant_Country {get; set;}
			[Column("Registrant_Phone",TypeName="nvarchar")] public string Registrant_Phone {get; set;}
			[Column("Registrant_Fax",TypeName="nvarchar")] public string Registrant_Fax {get; set;}
			[Column("Registrant_Email",TypeName="nvarchar")] public string Registrant_Email {get; set;}
			[Column("Admin_FirstName",TypeName="nvarchar")] public string Admin_FirstName {get; set;}
			[Column("Admin_LastName",TypeName="nvarchar")] public string Admin_LastName {get; set;}
			[Column("Admin_JobTitle",TypeName="nvarchar")] public string Admin_JobTitle {get; set;}
			[Column("Admin_Organization",TypeName="nvarchar")] public string Admin_Organization {get; set;}
			[Column("Admin_StreetAddress",TypeName="nvarchar")] public string Admin_StreetAddress {get; set;}
			[Column("Admin_Address2",TypeName="nvarchar")] public string Admin_Address2 {get; set;}
			[Column("Admin_City",TypeName="nvarchar")] public string Admin_City {get; set;}
			[Column("Admin_State",TypeName="nvarchar")] public string Admin_State {get; set;}
			[Column("Admin_StateProvince",TypeName="nvarchar")] public string Admin_StateProvince {get; set;}
			[Column("Admin_Zip",TypeName="nvarchar")] public string Admin_Zip {get; set;}
			[Column("Admin_Country",TypeName="nvarchar")] public string Admin_Country {get; set;}
			[Column("Admin_Phone",TypeName="nvarchar")] public string Admin_Phone {get; set;}
			[Column("Admin_Fax",TypeName="nvarchar")] public string Admin_Fax {get; set;}
			[Column("Admin_Email",TypeName="nvarchar")] public string Admin_Email {get; set;}
			[Column("Tech_FirstName",TypeName="nvarchar")] public string Tech_FirstName {get; set;}
			[Column("Tech_LastName",TypeName="nvarchar")] public string Tech_LastName {get; set;}
			[Column("Tech_JobTitle",TypeName="nvarchar")] public string Tech_JobTitle {get; set;}
			[Column("Tech_Organization",TypeName="nvarchar")] public string Tech_Organization {get; set;}
			[Column("Tech_StreetAddress",TypeName="nvarchar")] public string Tech_StreetAddress {get; set;}
			[Column("Tech_Address2",TypeName="nvarchar")] public string Tech_Address2 {get; set;}
			[Column("Tech_City",TypeName="nvarchar")] public string Tech_City {get; set;}
			[Column("Tech_State",TypeName="nvarchar")] public string Tech_State {get; set;}
			[Column("Tech_StateProvince",TypeName="nvarchar")] public string Tech_StateProvince {get; set;}
			[Column("Tech_Zip",TypeName="nvarchar")] public string Tech_Zip {get; set;}
			[Column("Tech_Country",TypeName="nvarchar")] public string Tech_Country {get; set;}
			[Column("Tech_Phone",TypeName="nvarchar")] public string Tech_Phone {get; set;}
			[Column("Tech_Fax",TypeName="nvarchar")] public string Tech_Fax {get; set;}
			[Column("Tech_Email",TypeName="nvarchar")] public string Tech_Email {get; set;}
			[Column("Billing_FirstName",TypeName="nvarchar")] public string Billing_FirstName {get; set;}
			[Column("Billing_LastName",TypeName="nvarchar")] public string Billing_LastName {get; set;}
			[Column("Billing_JobTitle",TypeName="nvarchar")] public string Billing_JobTitle {get; set;}
			[Column("Billing_Organization",TypeName="nvarchar")] public string Billing_Organization {get; set;}
			[Column("Billing_StreetAddress",TypeName="nvarchar")] public string Billing_StreetAddress {get; set;}
			[Column("Billing_Address2",TypeName="nvarchar")] public string Billing_Address2 {get; set;}
			[Column("Billing_City",TypeName="nvarchar")] public string Billing_City {get; set;}
			[Column("Billing_State",TypeName="nvarchar")] public string Billing_State {get; set;}
			[Column("Billing_StateProvince",TypeName="nvarchar")] public string Billing_StateProvince {get; set;}
			[Column("Billing_Zip",TypeName="nvarchar")] public string Billing_Zip {get; set;}
			[Column("Billing_Country",TypeName="nvarchar")] public string Billing_Country {get; set;}
			[Column("Billing_Phone",TypeName="nvarchar")] public string Billing_Phone {get; set;}
			[Column("Billing_Fax",TypeName="nvarchar")] public string Billing_Fax {get; set;}
			[Column("Billing_Email",TypeName="nvarchar")] public string Billing_Email {get; set;}
			[Column("RegistrantNexus",TypeName="varchar")] public string RegistrantNexus {get; set;}
			[Column("RegisrantNexusCountry",TypeName="nvarchar")] public string RegisrantNexusCountry {get; set;}
			[Column("RegistrantPurpose",TypeName="varchar")] public string RegistrantPurpose {get; set;}
			[Column("CIRAType",TypeName="varchar")] public string CIRAType {get; set;}
			[Column("COUKLegalType",TypeName="varchar")] public string COUKLegalType {get; set;}
			[Column("COUKCompanyID",TypeName="varchar")] public string COUKCompanyID {get; set;}
			[Column("COUKRegisteredfor",TypeName="varchar")] public string COUKRegisteredfor {get; set;}
			[Column("COUKRegOptOut",TypeName="varchar")] public string COUKRegOptOut {get; set;}
			[Column("ORGUKLegalType",TypeName="varchar")] public string ORGUKLegalType {get; set;}
			[Column("ORGUKCompanyID",TypeName="varchar")] public string ORGUKCompanyID {get; set;}
			[Column("ORGUKRegisteredfor",TypeName="varchar")] public string ORGUKRegisteredfor {get; set;}
			[Column("ORGUKRegOptOut",TypeName="varchar")] public string ORGUKRegOptOut {get; set;}
			[Column("Registrant_Phoneext",TypeName="varchar")] public string Registrant_Phoneext {get; set;}
			[Column("Admin_Phoneext",TypeName="varchar")] public string Admin_Phoneext {get; set;}
			[Column("Tech_Phoneext",TypeName="varchar")] public string Tech_Phoneext {get; set;}
			[Column("Billing_Phoneext",TypeName="varchar")] public string Billing_Phoneext {get; set;}
			[Column("EUAdrLang",TypeName="varchar")] public string EUAdrLang {get; set;}
			[Column("MEUKLegalType",TypeName="varchar")] public string MEUKLegalType {get; set;}
			[Column("MEUKCompanyID",TypeName="varchar")] public string MEUKCompanyID {get; set;}
			[Column("MEUKRegisteredfor",TypeName="varchar")] public string MEUKRegisteredfor {get; set;}
			[Column("MEUKRegOptOut",TypeName="varchar")] public string MEUKRegOptOut {get; set;}
			[Column("cira_registrant",TypeName="varchar")] public string cira_registrant {get; set;}
			[Column("cira_registrant_desc",TypeName="varchar")] public string cira_registrant_desc {get; set;}
			[Column("cira_trademark_no",TypeName="varchar")] public string cira_trademark_no {get; set;}
			[Column("cira_org_registered_in",TypeName="varchar")] public string cira_org_registered_in {get; set;}
			[Column("Completed_date_time",TypeName="datetime")] public DateTime? Completed_date_time {get; set;}
			[Column("Set_Completed_date_time",TypeName="datetime")] public DateTime? Set_Completed_date_time {get; set;}
		}

		[Table("TBL_TESTIMONIAL",Schema="dbo")]
		public partial class TBL_TESTIMONIAL
		{
			[Column("Testimonial_ID",TypeName="numeric")] public decimal Testimonial_ID {get; set;}
			[Column("Customer_Name",TypeName="varchar")] public string Customer_Name {get; set;}
			[Column("Customer_Job_Title",TypeName="varchar")] public string Customer_Job_Title {get; set;}
			[Column("Customer_Website",TypeName="varchar")] public string Customer_Website {get; set;}
			[Column("Testimonial_Full",TypeName="nvarchar")] public string Testimonial_Full {get; set;}
			[Column("Testimonial_Short",TypeName="nvarchar")] public string Testimonial_Short {get; set;}
		}

		[Table("TBL_TLD",Schema="dbo")]
		public partial class TBL_TLD
		{
			[Column("TLD_Name",TypeName="varchar")] public string TLD_Name {get; set;}
			[Column("Description",TypeName="varchar")] public string Description {get; set;}
			[Column("Min_Years",TypeName="smallint")] public short? Min_Years {get; set;}
			[Column("Seq_No",TypeName="smallint")] public short? Seq_No {get; set;}
			[Column("Active_YN",TypeName="bit")] public bool? Active_YN {get; set;}
			[Column("Include_In_Extended_Search_Only_YN",TypeName="bit")] public bool? Include_In_Extended_Search_Only_YN {get; set;}
			[Column("NonRealTime",TypeName="bit")] public bool? NonRealTime {get; set;}
			[Column("Max_years",TypeName="smallint")] public short? Max_years {get; set;}
			[Column("Disable_ModContact_YN",TypeName="bit")] public bool? Disable_ModContact_YN {get; set;}
			[Column("Disable_WGAllot_YN",TypeName="bit")] public bool? Disable_WGAllot_YN {get; set;}
			[Column("Registry_ID",TypeName="tinyint")] public byte? Registry_ID {get; set;}
			[Column("Transfer_YN",TypeName="bit")] public bool? Transfer_YN {get; set;}
			[Column("EppRequired_YN",TypeName="bit")] public bool? EppRequired_YN {get; set;}
			[Column("API_Register_YN",TypeName="bit")] public bool? API_Register_YN {get; set;}
			[Column("API_Renew_YN",TypeName="bit")] public bool? API_Renew_YN {get; set;}
			[Column("API_Transfer_YN",TypeName="bit")] public bool? API_Transfer_YN {get; set;}
			[Column("Min_Renew_Years",TypeName="smallint")] public short? Min_Renew_Years {get; set;}
			[Column("Max_Renew_Years",TypeName="smallint")] public short? Max_Renew_Years {get; set;}
			[Column("Min_Transfer_Years",TypeName="smallint")] public short? Min_Transfer_Years {get; set;}
			[Column("Max_Transfer_Years",TypeName="smallint")] public short? Max_Transfer_Years {get; set;}
			[Column("TLD_Type",TypeName="varchar")] public string TLD_Type {get; set;}
			[Column("Supports_IDN",TypeName="bit")] public bool Supports_IDN {get; set;}
			[Column("Category",TypeName="char")] public string Category {get; set;}
			[Column("SupportsRegistrarLock",TypeName="bit")] public bool SupportsRegistrarLock {get; set;}
			[Column("IsProviderRenewTypeAuto",TypeName="bit")] public bool IsProviderRenewTypeAuto {get; set;}
			[Column("RenewalMaxDays",TypeName="smallint")] public short? RenewalMaxDays {get; set;}
			[Column("RenewalMinDays",TypeName="smallint")] public short RenewalMinDays {get; set;}
			[Column("ReactivateMaxDays",TypeName="smallint")] public short ReactivateMaxDays {get; set;}
			[Column("Transfer_DefaultRenewalYears",TypeName="smallint")] public short Transfer_DefaultRenewalYears {get; set;}
			[Column("Transfer_ConfirmDefaultRenewal",TypeName="bit")] public bool Transfer_ConfirmDefaultRenewal {get; set;}
			[Column("Transfer_ExplicitRenewalRequired",TypeName="bit")] public bool Transfer_ExplicitRenewalRequired {get; set;}
			[Column("DisableModContactDesc",TypeName="varchar")] public string DisableModContactDesc {get; set;}
			[Column("AddGracePeriodDays",TypeName="int")] public int AddGracePeriodDays {get; set;}
			[Column("SupportsResendFoaEmail",TypeName="bit")] public bool SupportsResendFoaEmail {get; set;}
			[Column("noOfNameserversAllowed",TypeName="int")] public int? noOfNameserversAllowed {get; set;}
			[Column("HasExtendedAttributes",TypeName="bit")] public bool HasExtendedAttributes {get; set;}
		}

		[Table("TBL_TLD_PRICING",Schema="dbo")]
		public partial class TBL_TLD_PRICING
		{
			[Column("TLD_Pricing_ID",TypeName="int")] public int TLD_Pricing_ID {get; set;}
			[Column("TLD_Name",TypeName="varchar")] public string TLD_Name {get; set;}
			[Column("Action_ID",TypeName="varchar")] public string Action_ID {get; set;}
			[Column("Price_Per_Year",TypeName="smallmoney")] public decimal? Price_Per_Year {get; set;}
			[Column("Year_Range_Start",TypeName="smallint")] public short? Year_Range_Start {get; set;}
			[Column("Year_Range_End",TypeName="smallint")] public short? Year_Range_End {get; set;}
			[Column("Min_Qty",TypeName="int")] public int? Min_Qty {get; set;}
			[Column("Max_Qty",TypeName="int")] public int? Max_Qty {get; set;}
			[Column("Pricing_Hint",TypeName="varchar")] public string Pricing_Hint {get; set;}
			[Column("IsPricePerDuration",TypeName="bit")] public bool IsPricePerDuration {get; set;}
			[Column("IsAdditionalCostOneTime",TypeName="bit")] public bool IsAdditionalCostOneTime {get; set;}
			[Column("Additional_Cost",TypeName="money")] public decimal? Additional_Cost {get; set;}
			[Column("Additional_Cost_Hint",TypeName="varchar")] public string Additional_Cost_Hint {get; set;}
			[Column("DurationName",TypeName="varchar")] public string DurationName {get; set;}
		}

		[Table("TBL_TLD_PRODUCT_SUPER_TABLE",Schema="dbo")]
		public partial class TBL_TLD_PRODUCT_SUPER_TABLE
		{
			[Column("TLD_Name",TypeName="varchar")] public string TLD_Name {get; set;}
			[Column("Type",TypeName="varchar")] public string Type {get; set;}
		}

		[Table("TBL_TLD_PROMOTION_PRICING",Schema="dbo")]
		public partial class TBL_TLD_PROMOTION_PRICING
		{
			[Column("Promotion_ID",TypeName="int")] public int Promotion_ID {get; set;}
			[Column("TLD_Pricing_ID",TypeName="int")] public int TLD_Pricing_ID {get; set;}
			[Column("Promotion_Price_Per_Year",TypeName="money")] public decimal? Promotion_Price_Per_Year {get; set;}
			[Column("Pricing_Hint",TypeName="varchar")] public string Pricing_Hint {get; set;}
			[Column("Promotion_Additional_Cost",TypeName="money")] public decimal? Promotion_Additional_Cost {get; set;}
			[Column("Addtional_Cost_hint",TypeName="varchar")] public string Addtional_Cost_hint {get; set;}
			[Column("Pricing_Mode",TypeName="varchar")] public string Pricing_Mode {get; set;}
		}

		[Table("TBL_TLD_USER_PRICING",Schema="dbo")]
		public partial class TBL_TLD_USER_PRICING
		{
			[Column("User_Name",TypeName="nvarchar")] public string User_Name {get; set;}
			[Column("TLD_Pricing_ID",TypeName="int")] public int TLD_Pricing_ID {get; set;}
			[Column("User_Price_Per_Year",TypeName="smallmoney")] public decimal User_Price_Per_Year {get; set;}
			[Column("Pricing_Hint",TypeName="varchar")] public string Pricing_Hint {get; set;}
			[Column("User_Additional_Cost",TypeName="money")] public decimal? User_Additional_Cost {get; set;}
			[Column("Addtional_Cost_Hint",TypeName="varchar")] public string Addtional_Cost_Hint {get; set;}
			[Column("Pricing_Start_Date",TypeName="datetime")] public DateTime? Pricing_Start_Date {get; set;}
			[Column("Pricing_End_Date",TypeName="datetime")] public DateTime? Pricing_End_Date {get; set;}
			[Column("Pricing_Mode",TypeName="varchar")] public string Pricing_Mode {get; set;}
		}

		[Table("TBL_Tmp_Domains_Analysis",Schema="dbo")]
		public partial class TBL_Tmp_Domains_Analysis
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("ComputerExpiryDateTime",TypeName="datetime")] public DateTime? ComputerExpiryDateTime {get; set;}
			[Column("EnomExpiryDateTime",TypeName="datetime")] public DateTime? EnomExpiryDateTime {get; set;}
			[Column("ExistsInEnomYN",TypeName="bit")] public bool? ExistsInEnomYN {get; set;}
			[Column("IsExpiryDateTimeEqualYN",TypeName="bit")] public bool? IsExpiryDateTimeEqualYN {get; set;}
			[Column("New_Expiration_Date_Time",TypeName="datetime")] public DateTime? New_Expiration_Date_Time {get; set;}
			[Column("Enom_Auto_Renew_Track_ID",TypeName="int")] public int? Enom_Auto_Renew_Track_ID {get; set;}
			[Column("autorenew",TypeName="bit")] public bool? autorenew {get; set;}
		}

		[Table("TBL_TMP_EXPIRED_DOMAINS",Schema="dbo")]
		public partial class TBL_TMP_EXPIRED_DOMAINS
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("Domain_ID",TypeName="numeric")] public decimal Domain_ID {get; set;}
			[Column("sentMail_YN",TypeName="bit")] public bool sentMail_YN {get; set;}
			[Column("expiryDateTime",TypeName="datetime")] public DateTime? expiryDateTime {get; set;}
		}

		[Table("TBL_Tmp_UK_Domains_Analysis",Schema="dbo")]
		public partial class TBL_Tmp_UK_Domains_Analysis
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("ComputerExpiryDateTime",TypeName="datetime")] public DateTime? ComputerExpiryDateTime {get; set;}
			[Column("EnomExpiryDateTime",TypeName="datetime")] public DateTime? EnomExpiryDateTime {get; set;}
			[Column("ExistsInEnomYN",TypeName="bit")] public bool? ExistsInEnomYN {get; set;}
			[Column("IsExpiryDateTimeEqualYN",TypeName="bit")] public bool? IsExpiryDateTimeEqualYN {get; set;}
		}

		[Table("TBL_TRACK_SUBMIT",Schema="dbo")]
		public partial class TBL_TRACK_SUBMIT
		{
			[Column("Ref_id",TypeName="varchar")] public string Ref_id {get; set;}
			[Column("MD5",TypeName="varchar")] public string MD5 {get; set;}
			[Column("Unique_Time_Stamp",TypeName="int")] public int? Unique_Time_Stamp {get; set;}
		}

		[Table("TBL_TRANSACTION_ADDRESS",Schema="dbo")]
		public partial class TBL_TRANSACTION_ADDRESS
		{
			[Column("transactionContactId",TypeName="int")] public int transactionContactId {get; set;}
			[Column("transactionId",TypeName="numeric")] public decimal transactionId {get; set;}
			[Column("firstName",TypeName="varchar")] public string firstName {get; set;}
			[Column("lastName",TypeName="varchar")] public string lastName {get; set;}
			[Column("jobTitle",TypeName="varchar")] public string jobTitle {get; set;}
			[Column("organizationName",TypeName="varchar")] public string organizationName {get; set;}
			[Column("streetAddress1",TypeName="varchar")] public string streetAddress1 {get; set;}
			[Column("streetAddress2",TypeName="varchar")] public string streetAddress2 {get; set;}
			[Column("city",TypeName="varchar")] public string city {get; set;}
			[Column("state",TypeName="varchar")] public string state {get; set;}
			[Column("zipCode",TypeName="varchar")] public string zipCode {get; set;}
			[Column("country",TypeName="char")] public string country {get; set;}
			[Column("phoneNumber",TypeName="varchar")] public string phoneNumber {get; set;}
			[Column("emailAddress",TypeName="varchar")] public string emailAddress {get; set;}
		}

		[Table("TBL_TRANSACTION_FRAUD_SCORE",Schema="dbo")]
		public partial class TBL_TRANSACTION_FRAUD_SCORE
		{
			[Column("fraudScoreId",TypeName="int")] public int fraudScoreId {get; set;}
			[Column("transactionId",TypeName="numeric")] public decimal? transactionId {get; set;}
			[Column("isCountryMatch",TypeName="bit")] public bool? isCountryMatch {get; set;}
			[Column("countryCode",TypeName="char")] public string countryCode {get; set;}
			[Column("isHighRiskCountry",TypeName="bit")] public bool? isHighRiskCountry {get; set;}
			[Column("distance",TypeName="int")] public int? distance {get; set;}
			[Column("ipRegion",TypeName="varchar")] public string ipRegion {get; set;}
			[Column("ipCity",TypeName="varchar")] public string ipCity {get; set;}
			[Column("ipLatitude",TypeName="decimal")] public decimal? ipLatitude {get; set;}
			[Column("ipLongitude",TypeName="decimal")] public decimal? ipLongitude {get; set;}
			[Column("ipISP",TypeName="varchar")] public string ipISP {get; set;}
			[Column("ipOrganization",TypeName="varchar")] public string ipOrganization {get; set;}
			[Column("isAnonymousProxy",TypeName="bit")] public bool? isAnonymousProxy {get; set;}
			[Column("proxyScore",TypeName="smallint")] public short? proxyScore {get; set;}
			[Column("isTransparentProxy",TypeName="bit")] public bool? isTransparentProxy {get; set;}
			[Column("isFreeEmail",TypeName="bit")] public bool? isFreeEmail {get; set;}
			[Column("isCarderEmail",TypeName="bit")] public bool? isCarderEmail {get; set;}
			[Column("isHighRiskUsername",TypeName="bit")] public bool? isHighRiskUsername {get; set;}
			[Column("isHighRiskPassword",TypeName="bit")] public bool? isHighRiskPassword {get; set;}
			[Column("isBankCountryMatch",TypeName="bit")] public bool? isBankCountryMatch {get; set;}
			[Column("bankCountryMatchInfo",TypeName="varchar")] public string bankCountryMatchInfo {get; set;}
			[Column("isBankNameMatch",TypeName="bit")] public bool? isBankNameMatch {get; set;}
			[Column("bankNameMatchInfo",TypeName="varchar")] public string bankNameMatchInfo {get; set;}
			[Column("isBankPhoneMatch",TypeName="bit")] public bool? isBankPhoneMatch {get; set;}
			[Column("bankPhoneMatchInfo",TypeName="varchar")] public string bankPhoneMatchInfo {get; set;}
			[Column("bankCountryByMaxmind",TypeName="char")] public string bankCountryByMaxmind {get; set;}
			[Column("bankNameByMaxmind",TypeName="varchar")] public string bankNameByMaxmind {get; set;}
			[Column("bankPhoneByMaxmind",TypeName="varchar")] public string bankPhoneByMaxmind {get; set;}
			[Column("bankNameByCustomer",TypeName="varchar")] public string bankNameByCustomer {get; set;}
			[Column("bankPhoneByCustomer",TypeName="varchar")] public string bankPhoneByCustomer {get; set;}
			[Column("isPhoneNumberInBillingLocation",TypeName="bit")] public bool? isPhoneNumberInBillingLocation {get; set;}
			[Column("phoneNumberInBillingLocationInfo",TypeName="varchar")] public string phoneNumberInBillingLocationInfo {get; set;}
			[Column("isBillingCityStateZipMatch",TypeName="bit")] public bool? isBillingCityStateZipMatch {get; set;}
			[Column("scoreDeprecated",TypeName="decimal")] public decimal? scoreDeprecated {get; set;}
			[Column("riskScore",TypeName="decimal")] public decimal? riskScore {get; set;}
			[Column("riskExplanation",TypeName="varchar")] public string riskExplanation {get; set;}
			[Column("queriesRemaining",TypeName="int")] public int? queriesRemaining {get; set;}
			[Column("errorInfo",TypeName="varchar")] public string errorInfo {get; set;}
			[Column("maxmindId",TypeName="varchar")] public string maxmindId {get; set;}
			[Column("clientIp",TypeName="int")] public int? clientIp {get; set;}
			[Column("forwardedIp",TypeName="int")] public int? forwardedIp {get; set;}
			[Column("cardExpiration",TypeName="varchar")] public string cardExpiration {get; set;}
			[Column("cardCvvHash",TypeName="varchar")] public string cardCvvHash {get; set;}
		}

		[Table("TBL_TRANSACTIONS",Schema="dbo")]
		public partial class TBL_TRANSACTIONS
		{
			[Column("Transaction_ID",TypeName="numeric")] public decimal Transaction_ID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Transaction_Type",TypeName="nvarchar")] public string Transaction_Type {get; set;}
			[Column("Associated_Order_ID",TypeName="numeric")] public decimal? Associated_Order_ID {get; set;}
			[Column("Payment_Source",TypeName="nvarchar")] public string Payment_Source {get; set;}
			[Column("Payer_EMail",TypeName="nvarchar")] public string Payer_EMail {get; set;}
			[Column("CC_Initial_Amount",TypeName="money")] public decimal? CC_Initial_Amount {get; set;}
			[Column("Refund_Amount",TypeName="money")] public decimal? Refund_Amount {get; set;}
			[Column("Refund_YN",TypeName="bit")] public bool Refund_YN {get; set;}
			[Column("Completed_YN",TypeName="bit")] public bool Completed_YN {get; set;}
			[Column("Comments",TypeName="nvarchar")] public string Comments {get; set;}
			[Column("Order_RefID",TypeName="nvarchar")] public string Order_RefID {get; set;}
			[Column("Start_Date_Time",TypeName="datetime")] public DateTime? Start_Date_Time {get; set;}
			[Column("End_Date_Time",TypeName="datetime")] public DateTime? End_Date_Time {get; set;}
			[Column("CC_Order_ID",TypeName="nvarchar")] public string CC_Order_ID {get; set;}
			[Column("CC_Trans_ID",TypeName="nvarchar")] public string CC_Trans_ID {get; set;}
			[Column("CC_Status",TypeName="nvarchar")] public string CC_Status {get; set;}
			[Column("Paypal_Pending_Reason",TypeName="nvarchar")] public string Paypal_Pending_Reason {get; set;}
			[Column("Paypal_Payment_Type",TypeName="nvarchar")] public string Paypal_Payment_Type {get; set;}
			[Column("CC_Last4",TypeName="nvarchar")] public string CC_Last4 {get; set;}
			[Column("CC_Name_On_Card",TypeName="nvarchar")] public string CC_Name_On_Card {get; set;}
			[Column("Order_IP",TypeName="nvarchar")] public string Order_IP {get; set;}
			[Column("Order_Zip",TypeName="nvarchar")] public string Order_Zip {get; set;}
			[Column("Order_Error",TypeName="nvarchar")] public string Order_Error {get; set;}
			[Column("Err_Info",TypeName="varchar")] public string Err_Info {get; set;}
			[Column("Raw_Data",TypeName="text")] public string Raw_Data {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("RelatedTransactionID",TypeName="int")] public int? RelatedTransactionID {get; set;}
			[Column("Is_Added_By_Admin",TypeName="bit")] public bool? Is_Added_By_Admin {get; set;}
			[Column("Do_Not_Refund",TypeName="bit")] public bool? Do_Not_Refund {get; set;}
			[Column("PaymentProviderToken",TypeName="varchar")] public string PaymentProviderToken {get; set;}
			[Column("PaymentProviderStatus",TypeName="varchar")] public string PaymentProviderStatus {get; set;}
			[Column("CancelByRefundYN",TypeName="bit")] public bool? CancelByRefundYN {get; set;}
			[Column("CC_First4",TypeName="nvarchar")] public string CC_First4 {get; set;}
		}

		[Table("TBL_TRANSACTIONS_PAYPAL_DETAILS",Schema="dbo")]
		public partial class TBL_TRANSACTIONS_PAYPAL_DETAILS
		{
			[Column("AutoID",TypeName="bigint")] public long AutoID {get; set;}
			[Column("Transaction_ID",TypeName="numeric")] public decimal? Transaction_ID {get; set;}
			[Column("CC_Trans_ID",TypeName="nvarchar")] public string CC_Trans_ID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime? CreatedDateTime {get; set;}
			[Column("TxnType",TypeName="varchar")] public string TxnType {get; set;}
			[Column("CC_Status",TypeName="varchar")] public string CC_Status {get; set;}
			[Column("Parent_CC_TransID",TypeName="nvarchar")] public string Parent_CC_TransID {get; set;}
			[Column("PaymentGross",TypeName="money")] public decimal? PaymentGross {get; set;}
			[Column("PaymentFee",TypeName="money")] public decimal? PaymentFee {get; set;}
			[Column("ReasonCode",TypeName="varchar")] public string ReasonCode {get; set;}
			[Column("PendingReason",TypeName="varchar")] public string PendingReason {get; set;}
			[Column("CaseType",TypeName="varchar")] public string CaseType {get; set;}
			[Column("OrderRef_ID",TypeName="nvarchar")] public string OrderRef_ID {get; set;}
			[Column("PayerStatus",TypeName="varchar")] public string PayerStatus {get; set;}
			[Column("PayerEmail",TypeName="nvarchar")] public string PayerEmail {get; set;}
			[Column("ResidenceCountry",TypeName="varchar")] public string ResidenceCountry {get; set;}
		}

		[Table("TBL_TRANSACTIONS_SHORTTERM_BITCOIN_CREDITS",Schema="dbo")]
		public partial class TBL_TRANSACTIONS_SHORTTERM_BITCOIN_CREDITS
		{
			[Column("AutoId",TypeName="int")] public int AutoId {get; set;}
			[Column("TransactionId",TypeName="numeric")] public decimal TransactionId {get; set;}
			[Column("Btc",TypeName="decimal")] public decimal? Btc {get; set;}
			[Column("Username",TypeName="nvarchar")] public string Username {get; set;}
			[Column("IsCredited",TypeName="bit")] public bool IsCredited {get; set;}
			[Column("AssociatedTransactionId",TypeName="numeric")] public decimal? AssociatedTransactionId {get; set;}
		}

		[Table("TBL_USER",Schema="dbo")]
		public partial class TBL_USER
		{
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("MyPassword",TypeName="varchar")] public string MyPassword {get; set;}
			[Column("LoginTry",TypeName="smallint")] public short? LoginTry {get; set;}
			[Column("DisabledTill",TypeName="datetime")] public DateTime? DisabledTill {get; set;}
			[Column("LoginIP",TypeName="nvarchar")] public string LoginIP {get; set;}
			[Column("UserNumID",TypeName="numeric")] public decimal UserNumID {get; set;}
			[Column("EMail",TypeName="nvarchar")] public string EMail {get; set;}
			[Column("FirstName",TypeName="nvarchar")] public string FirstName {get; set;}
			[Column("LastName",TypeName="nvarchar")] public string LastName {get; set;}
			[Column("JobTitle",TypeName="nvarchar")] public string JobTitle {get; set;}
			[Column("Organization",TypeName="nvarchar")] public string Organization {get; set;}
			[Column("StreetAddress",TypeName="nvarchar")] public string StreetAddress {get; set;}
			[Column("Address2",TypeName="nvarchar")] public string Address2 {get; set;}
			[Column("City",TypeName="nvarchar")] public string City {get; set;}
			[Column("State",TypeName="nvarchar")] public string State {get; set;}
			[Column("StateProvince",TypeName="nvarchar")] public string StateProvince {get; set;}
			[Column("Zip",TypeName="nvarchar")] public string Zip {get; set;}
			[Column("Country",TypeName="nvarchar")] public string Country {get; set;}
			[Column("Phone",TypeName="nvarchar")] public string Phone {get; set;}
			[Column("Fax",TypeName="nvarchar")] public string Fax {get; set;}
			[Column("AcceptTerms",TypeName="int")] public int? AcceptTerms {get; set;}
			[Column("NewsLetter",TypeName="int")] public int? NewsLetter {get; set;}
			[Column("Account_Balance",TypeName="money")] public decimal? Account_Balance {get; set;}
			[Column("Available_Balance",TypeName="money")] public decimal? Available_Balance {get; set;}
			[Column("expEMailAccount",TypeName="nvarchar")] public string expEMailAccount {get; set;}
			[Column("expForwardTo",TypeName="nvarchar")] public string expForwardTo {get; set;}
			[Column("LastTransaction",TypeName="datetime")] public DateTime? LastTransaction {get; set;}
			[Column("LastLogin",TypeName="datetime")] public DateTime? LastLogin {get; set;}
			[Column("DefaultDNS1",TypeName="varchar")] public string DefaultDNS1 {get; set;}
			[Column("DefaultDNS2",TypeName="varchar")] public string DefaultDNS2 {get; set;}
			[Column("DefaultDNS3",TypeName="varchar")] public string DefaultDNS3 {get; set;}
			[Column("DefaultDNS4",TypeName="varchar")] public string DefaultDNS4 {get; set;}
			[Column("DefaultDNS5",TypeName="varchar")] public string DefaultDNS5 {get; set;}
			[Column("ForwardingURL",TypeName="varchar")] public string ForwardingURL {get; set;}
			[Column("ForwardingType",TypeName="varchar")] public string ForwardingType {get; set;}
			[Column("UseDNS",TypeName="varchar")] public string UseDNS {get; set;}
			[Column("RegistrantNexus",TypeName="varchar")] public string RegistrantNexus {get; set;}
			[Column("RegistrantNexusCountry",TypeName="varchar")] public string RegistrantNexusCountry {get; set;}
			[Column("RegistrantPurpose",TypeName="varchar")] public string RegistrantPurpose {get; set;}
			[Column("CIRAType",TypeName="varchar")] public string CIRAType {get; set;}
			[Column("CreateDateTime",TypeName="datetime")] public DateTime? CreateDateTime {get; set;}
			[Column("Purpose",TypeName="varchar")] public string Purpose {get; set;}
			[Column("IP",TypeName="varchar")] public string IP {get; set;}
			[Column("Referral_ID",TypeName="varchar")] public string Referral_ID {get; set;}
			[Column("Ad_ID",TypeName="varchar")] public string Ad_ID {get; set;}
			[Column("COUKLegalType",TypeName="varchar")] public string COUKLegalType {get; set;}
			[Column("COUKCompanyID",TypeName="varchar")] public string COUKCompanyID {get; set;}
			[Column("ORGUKLegalType",TypeName="varchar")] public string ORGUKLegalType {get; set;}
			[Column("ORGUKCompanyID",TypeName="varchar")] public string ORGUKCompanyID {get; set;}
			[Column("EmailKey",TypeName="nvarchar")] public string EmailKey {get; set;}
			[Column("NewEmail",TypeName="nvarchar")] public string NewEmail {get; set;}
			[Column("Parent_User_ID",TypeName="numeric")] public decimal? Parent_User_ID {get; set;}
			[Column("Parent_Reseller_ID",TypeName="numeric")] public decimal? Parent_Reseller_ID {get; set;}
			[Column("COUKRegisteredfor",TypeName="varchar")] public string COUKRegisteredfor {get; set;}
			[Column("COUKRegOptOut",TypeName="varchar")] public string COUKRegOptOut {get; set;}
			[Column("ORGUKRegisteredfor",TypeName="varchar")] public string ORGUKRegisteredfor {get; set;}
			[Column("ORGUKRegOptOut",TypeName="varchar")] public string ORGUKRegOptOut {get; set;}
			[Column("PhoneExt",TypeName="varchar")] public string PhoneExt {get; set;}
			[Column("Closed_Reason",TypeName="varchar")] public string Closed_Reason {get; set;}
			[Column("Closed_Date",TypeName="datetime")] public DateTime? Closed_Date {get; set;}
			[Column("Current_Session_Key",TypeName="varchar")] public string Current_Session_Key {get; set;}
			[Column("Earned_Amount",TypeName="money")] public decimal? Earned_Amount {get; set;}
			[Column("Withdrawable_Earned_Amount",TypeName="money")] public decimal? Withdrawable_Earned_Amount {get; set;}
			[Column("Lock_Unlock_Comments",TypeName="varchar")] public string Lock_Unlock_Comments {get; set;}
			[Column("Lock_Unlock_Comments_History",TypeName="text")] public string Lock_Unlock_Comments_History {get; set;}
			[Column("EU_adr_lang",TypeName="varchar")] public string EU_adr_lang {get; set;}
			[Column("MEUKLegalType",TypeName="varchar")] public string MEUKLegalType {get; set;}
			[Column("MEUKCompanyID",TypeName="varchar")] public string MEUKCompanyID {get; set;}
			[Column("MEUKRegisteredfor",TypeName="varchar")] public string MEUKRegisteredfor {get; set;}
			[Column("MEUKRegOptOut",TypeName="varchar")] public string MEUKRegOptOut {get; set;}
			[Column("cira_registrant",TypeName="varchar")] public string cira_registrant {get; set;}
			[Column("cira_registrant_desc",TypeName="varchar")] public string cira_registrant_desc {get; set;}
			[Column("cira_trademark_no",TypeName="varchar")] public string cira_trademark_no {get; set;}
			[Column("cira_org_registered_in",TypeName="varchar")] public string cira_org_registered_in {get; set;}
			[Column("API_Enabled_YN",TypeName="bit")] public bool? API_Enabled_YN {get; set;}
			[Column("API_Last_Enable_Date_Time",TypeName="datetime")] public DateTime? API_Last_Enable_Date_Time {get; set;}
			[Column("API_Last_Disable_Date_Time",TypeName="datetime")] public DateTime? API_Last_Disable_Date_Time {get; set;}
			[Column("API_Key",TypeName="varchar")] public string API_Key {get; set;}
			[Column("External_LoginTry",TypeName="tinyint")] public byte? External_LoginTry {get; set;}
			[Column("External_DisabledTill",TypeName="smalldatetime")] public DateTime? External_DisabledTill {get; set;}
			[Column("AutoEnableWhoisguardYN",TypeName="bit")] public bool AutoEnableWhoisguardYN {get; set;}
			[Column("API_Is_Approved_YN",TypeName="bit")] public bool? API_Is_Approved_YN {get; set;}
			[Column("API_Disabled_By_Admin_YN",TypeName="bit")] public bool? API_Disabled_By_Admin_YN {get; set;}
			[Column("API_Disabled_By_Admin_Reason",TypeName="varchar")] public string API_Disabled_By_Admin_Reason {get; set;}
			[Column("API_Disabled_By_Admin_Date",TypeName="smalldatetime")] public DateTime? API_Disabled_By_Admin_Date {get; set;}
			[Column("API_Requirements_Waived_YN",TypeName="bit")] public bool? API_Requirements_Waived_YN {get; set;}
			[Column("API_Requirements_Waived_Reason",TypeName="varchar")] public string API_Requirements_Waived_Reason {get; set;}
			[Column("API_Requirements_Waived_Date",TypeName="smalldatetime")] public DateTime? API_Requirements_Waived_Date {get; set;}
			[Column("LoggedId",TypeName="int")] public int? LoggedId {get; set;}
			[Column("currentLogin",TypeName="int")] public int? currentLogin {get; set;}
			[Column("Deny_Notification_Email",TypeName="bit")] public bool Deny_Notification_Email {get; set;}
			[Column("External_Lock_Unlock_Comments",TypeName="varchar")] public string External_Lock_Unlock_Comments {get; set;}
			[Column("External_Lock_Unlock_Comments_History",TypeName="text")] public string External_Lock_Unlock_Comments_History {get; set;}
			[Column("geoIPCountry",TypeName="varchar")] public string geoIPCountry {get; set;}
			[Column("CIRA_Legal_Type",TypeName="varchar")] public string CIRA_Legal_Type {get; set;}
			[Column("CIRA_Whois_Display",TypeName="varchar")] public string CIRA_Whois_Display {get; set;}
			[Column("CIRA_Agreement_Version",TypeName="varchar")] public string CIRA_Agreement_Version {get; set;}
			[Column("CIRA_Agreement_Value",TypeName="varchar")] public string CIRA_Agreement_Value {get; set;}
			[Column("CIRA_Language",TypeName="varchar")] public string CIRA_Language {get; set;}
			[Column("asia_cclocality",TypeName="varchar")] public string asia_cclocality {get; set;}
			[Column("asia_localitycity",TypeName="nvarchar")] public string asia_localitycity {get; set;}
			[Column("asia_localitysp",TypeName="nvarchar")] public string asia_localitysp {get; set;}
			[Column("asia_legalentitytype",TypeName="varchar")] public string asia_legalentitytype {get; set;}
			[Column("asia_identform",TypeName="varchar")] public string asia_identform {get; set;}
			[Column("asia_ident_number",TypeName="varchar")] public string asia_ident_number {get; set;}
			[Column("asia_otherletype",TypeName="varchar")] public string asia_otherletype {get; set;}
			[Column("asia_otheridentform",TypeName="varchar")] public string asia_otheridentform {get; set;}
			[Column("IsEmailVerified",TypeName="bit")] public bool? IsEmailVerified {get; set;}
			[Column("asia_contacttype",TypeName="varchar")] public string asia_contacttype {get; set;}
			[Column("push_isAcceptAll",TypeName="bit")] public bool push_isAcceptAll {get; set;}
			[Column("push_oneTimeCode",TypeName="varchar")] public string push_oneTimeCode {get; set;}
			[Column("push_customCode",TypeName="varchar")] public string push_customCode {get; set;}
			[Column("UserStatusId",TypeName="tinyint")] public byte? UserStatusId {get; set;}
			[Column("SupportPin",TypeName="varchar")] public string SupportPin {get; set;}
			[Column("SupportPinExpiryDateTime",TypeName="datetime")] public DateTime? SupportPinExpiryDateTime {get; set;}
			[Column("IsOrderEmailOneTimeSent",TypeName="bit")] public bool IsOrderEmailOneTimeSent {get; set;}
			[Column("XXX_MemberID",TypeName="varchar")] public string XXX_MemberID {get; set;}
			[Column("XXX_Resolving",TypeName="bit")] public bool XXX_Resolving {get; set;}
			[Column("InternalUserId",TypeName="uniqueidentifier")] public Guid InternalUserId {get; set;}
			[Column("MyPassword2",TypeName="nvarchar")] public string MyPassword2 {get; set;}
			[Column("UseCaseSensitivePasswordYN",TypeName="bit")] public bool UseCaseSensitivePasswordYN {get; set;}
			[Column("MyPasswordNoCase",TypeName="varchar")] public string MyPasswordNoCase {get; set;}
			[Column("EnableDomainAutoRenew",TypeName="bit")] public bool? EnableDomainAutoRenew {get; set;}
			[Column("EnableWGAutoRenew",TypeName="bit")] public bool? EnableWGAutoRenew {get; set;}
			[Column("ES_RegistrantID",TypeName="varchar")] public string ES_RegistrantID {get; set;}
			[Column("ES_RegistrantIdType",TypeName="varchar")] public string ES_RegistrantIdType {get; set;}
			[Column("COMES_RegistrantID",TypeName="varchar")] public string COMES_RegistrantID {get; set;}
			[Column("COMES_RegistrantIdType",TypeName="varchar")] public string COMES_RegistrantIdType {get; set;}
			[Column("NOMES_RegistrantID",TypeName="varchar")] public string NOMES_RegistrantID {get; set;}
			[Column("NOMES_RegistrantIdType",TypeName="varchar")] public string NOMES_RegistrantIdType {get; set;}
			[Column("ORGES_RegistrantID",TypeName="varchar")] public string ORGES_RegistrantID {get; set;}
			[Column("ORGES_RegistrantIdType",TypeName="varchar")] public string ORGES_RegistrantIdType {get; set;}
			[Column("COMAU_RegistrantID",TypeName="varchar")] public string COMAU_RegistrantID {get; set;}
			[Column("COMAU_RegistrantIdType",TypeName="varchar")] public string COMAU_RegistrantIdType {get; set;}
			[Column("NETAU_RegistrantID",TypeName="varchar")] public string NETAU_RegistrantID {get; set;}
			[Column("NETAU_RegistrantIdType",TypeName="varchar")] public string NETAU_RegistrantIdType {get; set;}
			[Column("ORGAU_RegistrantID",TypeName="varchar")] public string ORGAU_RegistrantID {get; set;}
			[Column("ORGAU_RegistrantIdType",TypeName="varchar")] public string ORGAU_RegistrantIdType {get; set;}
			[Column("EnableProductAutoRenew",TypeName="bit")] public bool? EnableProductAutoRenew {get; set;}
			[Column("KayakoUserId",TypeName="int")] public int? KayakoUserId {get; set;}
			[Column("API_IP_Requirements_Waived_YN",TypeName="bit")] public bool? API_IP_Requirements_Waived_YN {get; set;}
			[Column("API_IP_Requirements_Waived_Reason",TypeName="varchar")] public string API_IP_Requirements_Waived_Reason {get; set;}
			[Column("API_IP_Requirements_Waived_Date",TypeName="smalldatetime")] public DateTime? API_IP_Requirements_Waived_Date {get; set;}
			[Column("FirstOrderID",TypeName="bigint")] public long? FirstOrderID {get; set;}
			[Column("FR_LegalType",TypeName="varchar")] public string FR_LegalType {get; set;}
			[Column("FR_RegistrantBirthdate",TypeName="datetime")] public DateTime? FR_RegistrantBirthdate {get; set;}
			[Column("FR_RegistrantBirthPlace",TypeName="varchar")] public string FR_RegistrantBirthPlace {get; set;}
			[Column("FR_RegistrantLegalId",TypeName="varchar")] public string FR_RegistrantLegalId {get; set;}
			[Column("FR_RegistrantDunsNumber",TypeName="varchar")] public string FR_RegistrantDunsNumber {get; set;}
			[Column("FR_RegistrantLocalId",TypeName="varchar")] public string FR_RegistrantLocalId {get; set;}
			[Column("FR_RegistrantJoDateDec",TypeName="datetime")] public DateTime? FR_RegistrantJoDateDec {get; set;}
			[Column("FR_RegistrantJoDatePub",TypeName="varchar")] public string FR_RegistrantJoDatePub {get; set;}
			[Column("FR_RegistrantJoNumber",TypeName="varchar")] public string FR_RegistrantJoNumber {get; set;}
			[Column("FR_RegistrantJoPage",TypeName="varchar")] public string FR_RegistrantJoPage {get; set;}
			[Column("FR_RegistrantTradeNumber",TypeName="varchar")] public string FR_RegistrantTradeNumber {get; set;}
			[Column("SG_RCBId",TypeName="varchar")] public string SG_RCBId {get; set;}
			[Column("COMSG_RCBId",TypeName="varchar")] public string COMSG_RCBId {get; set;}
			[Column("TwoFA_Enabled",TypeName="bit")] public bool? TwoFA_Enabled {get; set;}
			[Column("NU_OrgNo",TypeName="varchar")] public string NU_OrgNo {get; set;}
			[Column("NU_VatNo",TypeName="varchar")] public string NU_VatNo {get; set;}
			[Column("IsShopperApprovedShown",TypeName="bit")] public bool IsShopperApprovedShown {get; set;}
			[Column("DefaultPaymentType",TypeName="nchar")] public string DefaultPaymentType {get; set;}
			[Column("RegistrantAddressId",TypeName="int")] public int? RegistrantAddressId {get; set;}
			[Column("AdminAddressId",TypeName="int")] public int? AdminAddressId {get; set;}
			[Column("TechAddressId",TypeName="int")] public int? TechAddressId {get; set;}
			[Column("AuxBillingAddressId",TypeName="int")] public int? AuxBillingAddressId {get; set;}
			[Column("FRRegistrantAddressId",TypeName="int")] public int? FRRegistrantAddressId {get; set;}
			[Column("FRAdminAddressId",TypeName="int")] public int? FRAdminAddressId {get; set;}
			[Column("FRTechAddressId",TypeName="int")] public int? FRTechAddressId {get; set;}
			[Column("FRAuxBillingAddressId",TypeName="int")] public int? FRAuxBillingAddressId {get; set;}
			[Column("CARegistrantAddressId",TypeName="int")] public int? CARegistrantAddressId {get; set;}
			[Column("CAAdminAddressId",TypeName="int")] public int? CAAdminAddressId {get; set;}
			[Column("CATechAddressId",TypeName="int")] public int? CATechAddressId {get; set;}
			[Column("CAAuxBillingAddressId",TypeName="int")] public int? CAAuxBillingAddressId {get; set;}
			[Column("ASIARegistrantAddressId",TypeName="int")] public int? ASIARegistrantAddressId {get; set;}
			[Column("ASIAAdminAddressId",TypeName="int")] public int? ASIAAdminAddressId {get; set;}
			[Column("ASIATechAddressId",TypeName="int")] public int? ASIATechAddressId {get; set;}
			[Column("ASIAAuxBillingAddressId",TypeName="int")] public int? ASIAAuxBillingAddressId {get; set;}
			[Column("NURegistrantAddressId",TypeName="int")] public int? NURegistrantAddressId {get; set;}
			[Column("NUAdminAddressId",TypeName="int")] public int? NUAdminAddressId {get; set;}
			[Column("NUTechAddressId",TypeName="int")] public int? NUTechAddressId {get; set;}
			[Column("NUAuxBillingAddressId",TypeName="int")] public int? NUAuxBillingAddressId {get; set;}
		}

		[Table("TBL_USER_ADDRESS",Schema="dbo")]
		public partial class TBL_USER_ADDRESS
		{
			[Column("Address_ID",TypeName="numeric")] public decimal Address_ID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Address_Name",TypeName="varchar")] public string Address_Name {get; set;}
			[Column("Default_YN",TypeName="bit")] public bool? Default_YN {get; set;}
			[Column("FirstName",TypeName="nvarchar")] public string FirstName {get; set;}
			[Column("LastName",TypeName="nvarchar")] public string LastName {get; set;}
			[Column("JobTitle",TypeName="nvarchar")] public string JobTitle {get; set;}
			[Column("Organization",TypeName="nvarchar")] public string Organization {get; set;}
			[Column("StreetAddress",TypeName="nvarchar")] public string StreetAddress {get; set;}
			[Column("Address2",TypeName="nvarchar")] public string Address2 {get; set;}
			[Column("City",TypeName="nvarchar")] public string City {get; set;}
			[Column("State",TypeName="nvarchar")] public string State {get; set;}
			[Column("StateProvince",TypeName="nvarchar")] public string StateProvince {get; set;}
			[Column("Zip",TypeName="nvarchar")] public string Zip {get; set;}
			[Column("Country",TypeName="nvarchar")] public string Country {get; set;}
			[Column("Phone",TypeName="nvarchar")] public string Phone {get; set;}
			[Column("Fax",TypeName="nvarchar")] public string Fax {get; set;}
			[Column("PhoneExt",TypeName="varchar")] public string PhoneExt {get; set;}
			[Column("Email",TypeName="nvarchar")] public string Email {get; set;}
		}

		[Table("TBL_USER_DEVICES",Schema="dbo")]
		public partial class TBL_USER_DEVICES
		{
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("DeviceTypeId",TypeName="smallint")] public short DeviceTypeId {get; set;}
			[Column("DeviceId",TypeName="nvarchar")] public string DeviceId {get; set;}
			[Column("Registered",TypeName="bit")] public bool Registered {get; set;}
		}

		[Table("TBL_USER_EMAIL_FORWARDING_TRACK",Schema="dbo")]
		public partial class TBL_USER_EMAIL_FORWARDING_TRACK
		{
			[Column("MessageID",TypeName="varchar")] public string MessageID {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime? CreatedDateTime {get; set;}
		}

		[Table("TBL_USER_EXTERNAL_MONEY_REQUEST",Schema="dbo")]
		public partial class TBL_USER_EXTERNAL_MONEY_REQUEST
		{
			[Column("autoID",TypeName="numeric")] public decimal autoID {get; set;}
			[Column("payMode",TypeName="varchar")] public string payMode {get; set;}
			[Column("amount",TypeName="money")] public decimal? amount {get; set;}
			[Column("affiliateTransactionID",TypeName="int")] public int? affiliateTransactionID {get; set;}
			[Column("paypalID",TypeName="nvarchar")] public string paypalID {get; set;}
			[Column("checkTo",TypeName="nvarchar")] public string checkTo {get; set;}
			[Column("checkAddress",TypeName="text")] public string checkAddress {get; set;}
			[Column("createdDate",TypeName="int")] public int? createdDate {get; set;}
			[Column("completedYN",TypeName="bit")] public bool completedYN {get; set;}
			[Column("cancelledYN",TypeName="bit")] public bool cancelledYN {get; set;}
			[Column("paidYN",TypeName="bit")] public bool paidYN {get; set;}
			[Column("description",TypeName="nvarchar")] public string description {get; set;}
		}

		[Table("TBL_USER_HOSTING_DETAILS",Schema="dbo")]
		public partial class TBL_USER_HOSTING_DETAILS
		{
			[Column("Auto_ID",TypeName="int")] public int Auto_ID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("ModerBill_ClientID",TypeName="int")] public int? ModerBill_ClientID {get; set;}
			[Column("Active_YN",TypeName="bit")] public bool? Active_YN {get; set;}
			[Column("Creation_DateTime",TypeName="datetime")] public DateTime? Creation_DateTime {get; set;}
			[Column("HostingProvider",TypeName="varchar")] public string HostingProvider {get; set;}
		}

		[Table("TBL_USER_MONEY_REQUEST",Schema="dbo")]
		public partial class TBL_USER_MONEY_REQUEST
		{
			[Column("AutoID",TypeName="numeric")] public decimal AutoID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("PayMode",TypeName="varchar")] public string PayMode {get; set;}
			[Column("Amount",TypeName="money")] public decimal? Amount {get; set;}
			[Column("Paypal_ID",TypeName="nvarchar")] public string Paypal_ID {get; set;}
			[Column("Check_To",TypeName="nvarchar")] public string Check_To {get; set;}
			[Column("Check_Address",TypeName="text")] public string Check_Address {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("Completed_YN",TypeName="bit")] public bool? Completed_YN {get; set;}
			[Column("Canceled_YN",TypeName="bit")] public bool? Canceled_YN {get; set;}
			[Column("Paid_YN",TypeName="bit")] public bool? Paid_YN {get; set;}
			[Column("Description",TypeName="nvarchar")] public string Description {get; set;}
			[Column("Completed_Reason",TypeName="nvarchar")] public string Completed_Reason {get; set;}
			[Column("Admin_UserName",TypeName="varchar")] public string Admin_UserName {get; set;}
			[Column("Admin_IP",TypeName="varchar")] public string Admin_IP {get; set;}
			[Column("Updated_DateTime",TypeName="datetime")] public DateTime? Updated_DateTime {get; set;}
		}

		[Table("TBL_USER_OPTIONS",Schema="dbo")]
		public partial class TBL_USER_OPTIONS
		{
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Min_CC_Add_Funds",TypeName="money")] public decimal? Min_CC_Add_Funds {get; set;}
			[Column("Min_Paypal_Add_Funds",TypeName="money")] public decimal? Min_Paypal_Add_Funds {get; set;}
			[Column("Max_Add_Funds",TypeName="money")] public decimal? Max_Add_Funds {get; set;}
			[Column("Max_Add_Funds_Per_Day",TypeName="money")] public decimal? Max_Add_Funds_Per_Day {get; set;}
			[Column("Accept_CC",TypeName="bit")] public bool? Accept_CC {get; set;}
			[Column("Accept_Funds",TypeName="bit")] public bool? Accept_Funds {get; set;}
			[Column("Is_Reseller",TypeName="bit")] public bool? Is_Reseller {get; set;}
			[Column("User_Lock_Level",TypeName="tinyint")] public byte? User_Lock_Level {get; set;}
			[Column("Max_Approved_Domain_Sale_Price",TypeName="money")] public decimal? Max_Approved_Domain_Sale_Price {get; set;}
			[Column("Is_DomainSale_Blocked",TypeName="bit")] public bool? Is_DomainSale_Blocked {get; set;}
			[Column("Send_Notification_Email_YN",TypeName="bit")] public bool? Send_Notification_Email_YN {get; set;}
			[Column("Activation_Key",TypeName="nvarchar")] public string Activation_Key {get; set;}
			[Column("Enable_Or_Disable_Requested",TypeName="varchar")] public string Enable_Or_Disable_Requested {get; set;}
			[Column("Notification_Login_YN",TypeName="bit")] public bool? Notification_Login_YN {get; set;}
			[Column("Notification_Profile_YN",TypeName="bit")] public bool? Notification_Profile_YN {get; set;}
			[Column("Notification_Domain_Changes_YN",TypeName="bit")] public bool? Notification_Domain_Changes_YN {get; set;}
			[Column("Notification_Email",TypeName="nvarchar")] public string Notification_Email {get; set;}
			[Column("Min_Approved_Domain_Sale_Price",TypeName="money")] public decimal? Min_Approved_Domain_Sale_Price {get; set;}
			[Column("Sale_Commission_Percentage",TypeName="int")] public int? Sale_Commission_Percentage {get; set;}
			[Column("DomainSale_Blocked_Reason",TypeName="text")] public string DomainSale_Blocked_Reason {get; set;}
			[Column("Paypal_Withdraw_Min_Balance",TypeName="money")] public decimal? Paypal_Withdraw_Min_Balance {get; set;}
			[Column("Check_Withdraw_Min_Balance",TypeName="money")] public decimal? Check_Withdraw_Min_Balance {get; set;}
			[Column("Min_Credit_Day",TypeName="int")] public int? Min_Credit_Day {get; set;}
			[Column("Disable_Domain_Renewal_Email_YN",TypeName="bit")] public bool? Disable_Domain_Renewal_Email_YN {get; set;}
			[Column("Disable_POP3_Renewal_Email_YN",TypeName="bit")] public bool? Disable_POP3_Renewal_Email_YN {get; set;}
			[Column("Disable_Alloted_WhoisGuard_Renewal_Email_YN",TypeName="bit")] public bool? Disable_Alloted_WhoisGuard_Renewal_Email_YN {get; set;}
			[Column("Disable_Unused_WhoisGuard_Renewal_Email_YN",TypeName="bit")] public bool? Disable_Unused_WhoisGuard_Renewal_Email_YN {get; set;}
			[Column("Max_Buyer_Limit_Per_Day",TypeName="money")] public decimal? Max_Buyer_Limit_Per_Day {get; set;}
			[Column("Admin_Notification_Login_YN",TypeName="bit")] public bool? Admin_Notification_Login_YN {get; set;}
			[Column("Admin_Notification_Profile_YN",TypeName="bit")] public bool? Admin_Notification_Profile_YN {get; set;}
			[Column("Admin_Notification_Domain_Changes_YN",TypeName="bit")] public bool? Admin_Notification_Domain_Changes_YN {get; set;}
			[Column("Auto_Approve_Marketplace_Purchase_YN",TypeName="bit")] public bool? Auto_Approve_Marketplace_Purchase_YN {get; set;}
			[Column("freeDnsDisallowedYN",TypeName="bit")] public bool freeDnsDisallowedYN {get; set;}
			[Column("freeDnsDisallowedReason",TypeName="varchar")] public string freeDnsDisallowedReason {get; set;}
			[Column("freeDnsDisallowedAdminReason",TypeName="varchar")] public string freeDnsDisallowedAdminReason {get; set;}
			[Column("disallowPasswordReminderByUsername",TypeName="bit")] public bool disallowPasswordReminderByUsername {get; set;}
			[Column("disallowPasswordReminderByEmail",TypeName="bit")] public bool disallowPasswordReminderByEmail {get; set;}
			[Column("disallowPasswordReminderByDomain",TypeName="bit")] public bool disallowPasswordReminderByDomain {get; set;}
			[Column("Disable_TransferredOut_Notification",TypeName="bit")] public bool Disable_TransferredOut_Notification {get; set;}
			[Column("twitterScreenName",TypeName="varchar")] public string twitterScreenName {get; set;}
			[Column("twitterUserID",TypeName="int")] public int? twitterUserID {get; set;}
			[Column("Disable_DNSHosting",TypeName="bit")] public bool Disable_DNSHosting {get; set;}
			[Column("Disable_DNSHosting_Reason",TypeName="varchar")] public string Disable_DNSHosting_Reason {get; set;}
			[Column("Disable_DNSHosting_AdminComments",TypeName="varchar")] public string Disable_DNSHosting_AdminComments {get; set;}
			[Column("richcontentBlockedFromFreeTrialYN",TypeName="bit")] public bool richcontentBlockedFromFreeTrialYN {get; set;}
			[Column("richcontentBlockedFromFreeTrialReason",TypeName="varchar")] public string richcontentBlockedFromFreeTrialReason {get; set;}
			[Column("richcontentBlockedFromFreeTrialInternalReason",TypeName="varchar")] public string richcontentBlockedFromFreeTrialInternalReason {get; set;}
			[Column("blockAffiliateYN",TypeName="bit")] public bool blockAffiliateYN {get; set;}
			[Column("blockAffiliateReason",TypeName="varchar")] public string blockAffiliateReason {get; set;}
			[Column("blockAffiliateInternalReason",TypeName="varchar")] public string blockAffiliateInternalReason {get; set;}
			[Column("Min_CC_Checkout",TypeName="money")] public decimal? Min_CC_Checkout {get; set;}
			[Column("Max_CC_Checkout",TypeName="money")] public decimal? Max_CC_Checkout {get; set;}
			[Column("Min_Paypal_Checkout",TypeName="money")] public decimal? Min_Paypal_Checkout {get; set;}
			[Column("Max_Paypal_Checkout",TypeName="money")] public decimal? Max_Paypal_Checkout {get; set;}
			[Column("Min_Funds_Checkout",TypeName="money")] public decimal? Min_Funds_Checkout {get; set;}
			[Column("Max_Funds_Checkout",TypeName="money")] public decimal? Max_Funds_Checkout {get; set;}
			[Column("Accept_Paypal",TypeName="bit")] public bool Accept_Paypal {get; set;}
			[Column("Disable_Checkout",TypeName="bit")] public bool Disable_Checkout {get; set;}
			[Column("Disable_Checkout_Comments",TypeName="varchar")] public string Disable_Checkout_Comments {get; set;}
			[Column("AddFunds_Accept_CC",TypeName="bit")] public bool? AddFunds_Accept_CC {get; set;}
			[Column("AddFunds_Accept_Paypal",TypeName="bit")] public bool? AddFunds_Accept_Paypal {get; set;}
			[Column("AddFunds_Accept_GoogleCheckout",TypeName="bit")] public bool? AddFunds_Accept_GoogleCheckout {get; set;}
			[Column("DisableWhoisGuardAllot",TypeName="bit")] public bool? DisableWhoisGuardAllot {get; set;}
			[Column("DisableWhoisGuardAllotReason",TypeName="varchar")] public string DisableWhoisGuardAllotReason {get; set;}
			[Column("DisableWhoisGuardAllotInternalReason",TypeName="varchar")] public string DisableWhoisGuardAllotInternalReason {get; set;}
			[Column("DefaultDNSProviderSubTypeName",TypeName="varchar")] public string DefaultDNSProviderSubTypeName {get; set;}
			[Column("DefaultDNSProviderReason",TypeName="varchar")] public string DefaultDNSProviderReason {get; set;}
			[Column("DefaultDNSProviderInternalReason",TypeName="varchar")] public string DefaultDNSProviderInternalReason {get; set;}
			[Column("DisallowedDNSProvidersSubTypeNameCSV",TypeName="varchar")] public string DisallowedDNSProvidersSubTypeNameCSV {get; set;}
			[Column("DisallowedDNSProvidersReason",TypeName="varchar")] public string DisallowedDNSProvidersReason {get; set;}
			[Column("DisallowedDNSProvidersInternalReason",TypeName="varchar")] public string DisallowedDNSProvidersInternalReason {get; set;}
			[Column("Accept_Funds_Disable_Comments",TypeName="varchar")] public string Accept_Funds_Disable_Comments {get; set;}
			[Column("Accept_CC_Disable_Comments",TypeName="varchar")] public string Accept_CC_Disable_Comments {get; set;}
			[Column("Accept_Paypal_Disable_Comments",TypeName="varchar")] public string Accept_Paypal_Disable_Comments {get; set;}
			[Column("AddFunds_Accept_CC_Disable_Comments",TypeName="varchar")] public string AddFunds_Accept_CC_Disable_Comments {get; set;}
			[Column("AddFunds_Accept_Paypal_Disable_Comments",TypeName="varchar")] public string AddFunds_Accept_Paypal_Disable_Comments {get; set;}
			[Column("AddFunds_Accept_GoogleCheckout_Disable_Comments",TypeName="varchar")] public string AddFunds_Accept_GoogleCheckout_Disable_Comments {get; set;}
			[Column("CCMaxAmountPerCharge",TypeName="money")] public decimal? CCMaxAmountPerCharge {get; set;}
			[Column("AutoRenewPaymentMethodPriority",TypeName="varchar")] public string AutoRenewPaymentMethodPriority {get; set;}
			[Column("HostRecordLimit",TypeName="smallint")] public short? HostRecordLimit {get; set;}
		}

		[Table("TBL_USER_OPTIONS_DEFAULTS",Schema="dbo")]
		public partial class TBL_USER_OPTIONS_DEFAULTS
		{
			[Column("RowID",TypeName="smallint")] public short RowID {get; set;}
			[Column("Min_CC_Add_Funds",TypeName="money")] public decimal? Min_CC_Add_Funds {get; set;}
			[Column("Min_Paypal_Add_Funds",TypeName="money")] public decimal? Min_Paypal_Add_Funds {get; set;}
			[Column("Max_Add_Funds",TypeName="money")] public decimal? Max_Add_Funds {get; set;}
			[Column("Max_Add_Funds_Per_Day",TypeName="money")] public decimal? Max_Add_Funds_Per_Day {get; set;}
			[Column("Accept_CC",TypeName="bit")] public bool? Accept_CC {get; set;}
			[Column("Accept_Funds",TypeName="bit")] public bool? Accept_Funds {get; set;}
			[Column("Max_Approved_Domain_Sale_Price",TypeName="money")] public decimal? Max_Approved_Domain_Sale_Price {get; set;}
			[Column("Min_Approved_Domain_Sale_Price",TypeName="money")] public decimal? Min_Approved_Domain_Sale_Price {get; set;}
			[Column("Sale_Commission_Percentage",TypeName="int")] public int? Sale_Commission_Percentage {get; set;}
			[Column("Paypal_Withdraw_Min_Balance",TypeName="money")] public decimal? Paypal_Withdraw_Min_Balance {get; set;}
			[Column("Check_Withdraw_Min_Balance",TypeName="money")] public decimal? Check_Withdraw_Min_Balance {get; set;}
			[Column("Min_Credit_Day",TypeName="int")] public int? Min_Credit_Day {get; set;}
			[Column("Max_Buyer_Limit_Per_Day",TypeName="money")] public decimal? Max_Buyer_Limit_Per_Day {get; set;}
			[Column("Min_CC_Checkout",TypeName="money")] public decimal Min_CC_Checkout {get; set;}
			[Column("Max_CC_Checkout",TypeName="money")] public decimal Max_CC_Checkout {get; set;}
			[Column("Min_Paypal_Checkout",TypeName="money")] public decimal Min_Paypal_Checkout {get; set;}
			[Column("Max_Paypal_Checkout",TypeName="money")] public decimal Max_Paypal_Checkout {get; set;}
			[Column("Min_Funds_Checkout",TypeName="money")] public decimal Min_Funds_Checkout {get; set;}
			[Column("Max_Funds_Checkout",TypeName="money")] public decimal Max_Funds_Checkout {get; set;}
			[Column("Accept_Paypal",TypeName="bit")] public bool Accept_Paypal {get; set;}
			[Column("Disable_Checkout",TypeName="bit")] public bool Disable_Checkout {get; set;}
			[Column("AddFunds_Accept_CC",TypeName="bit")] public bool AddFunds_Accept_CC {get; set;}
			[Column("AddFunds_Accept_Paypal",TypeName="bit")] public bool AddFunds_Accept_Paypal {get; set;}
			[Column("AddFunds_Accept_GoogleCheckout",TypeName="bit")] public bool AddFunds_Accept_GoogleCheckout {get; set;}
			[Column("DisableWhoisGuardAllot",TypeName="bit")] public bool? DisableWhoisGuardAllot {get; set;}
			[Column("DisableWhoisGuardAllotReason",TypeName="varchar")] public string DisableWhoisGuardAllotReason {get; set;}
			[Column("DisableWhoisGuardAllotInternalReason",TypeName="varchar")] public string DisableWhoisGuardAllotInternalReason {get; set;}
			[Column("DefaultDNSProviderSubTypeName",TypeName="varchar")] public string DefaultDNSProviderSubTypeName {get; set;}
			[Column("Disable_Checkout_Comments",TypeName="varchar")] public string Disable_Checkout_Comments {get; set;}
			[Column("Accept_Funds_Disable_Comments",TypeName="varchar")] public string Accept_Funds_Disable_Comments {get; set;}
			[Column("Accept_CC_Disable_Comments",TypeName="varchar")] public string Accept_CC_Disable_Comments {get; set;}
			[Column("Accept_Paypal_Disable_Comments",TypeName="varchar")] public string Accept_Paypal_Disable_Comments {get; set;}
			[Column("AddFunds_Accept_CC_Disable_Comments",TypeName="varchar")] public string AddFunds_Accept_CC_Disable_Comments {get; set;}
			[Column("AddFunds_Accept_Paypal_Disable_Comments",TypeName="varchar")] public string AddFunds_Accept_Paypal_Disable_Comments {get; set;}
			[Column("AddFunds_Accept_GoogleCheckout_Disable_Comments",TypeName="varchar")] public string AddFunds_Accept_GoogleCheckout_Disable_Comments {get; set;}
			[Column("CCMaxAmountPerCharge",TypeName="money")] public decimal? CCMaxAmountPerCharge {get; set;}
			[Column("AutoRenewPaymentMethodPriority",TypeName="varchar")] public string AutoRenewPaymentMethodPriority {get; set;}
			[Column("Disable_2FA_Subscription",TypeName="bit")] public bool? Disable_2FA_Subscription {get; set;}
			[Column("HostRecordLimit",TypeName="smallint")] public short? HostRecordLimit {get; set;}
		}

		[Table("TBL_USER_RESET_PASSWORD_REQUEST",Schema="dbo")]
		public partial class TBL_USER_RESET_PASSWORD_REQUEST
		{
			[Column("Request_Token",TypeName="varchar")] public string Request_Token {get; set;}
			[Column("UserNumID",TypeName="int")] public int? UserNumID {get; set;}
			[Column("Requested_IP",TypeName="bigint")] public long? Requested_IP {get; set;}
			[Column("Requested_Date_Time",TypeName="int")] public int? Requested_Date_Time {get; set;}
			[Column("Valid_Till_Date_Time",TypeName="int")] public int? Valid_Till_Date_Time {get; set;}
			[Column("Password_Change_IP",TypeName="bigint")] public long? Password_Change_IP {get; set;}
			[Column("Password_Change_Date_Time",TypeName="int")] public int? Password_Change_Date_Time {get; set;}
			[Column("Requested_By_Type",TypeName="char")] public string Requested_By_Type {get; set;}
			[Column("Requested_Value",TypeName="nvarchar")] public string Requested_Value {get; set;}
			[Column("To_Email",TypeName="nvarchar")] public string To_Email {get; set;}
			[Column("AuthorizationReferenceId",TypeName="varchar")] public string AuthorizationReferenceId {get; set;}
		}

		[Table("TBL_USER_ROLES",Schema="dbo")]
		public partial class TBL_USER_ROLES
		{
			[Column("UserId",TypeName="int")] public int UserId {get; set;}
			[Column("RoleId",TypeName="int")] public int RoleId {get; set;}
		}

		[Table("TBL_USER_SSLPARTNER",Schema="dbo")]
		public partial class TBL_USER_SSLPARTNER
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("userID",TypeName="numeric")] public decimal? userID {get; set;}
			[Column("Resellone_UserID",TypeName="int")] public int? Resellone_UserID {get; set;}
			[Column("Resellone_UserName",TypeName="nvarchar")] public string Resellone_UserName {get; set;}
			[Column("Resellone_Password",TypeName="nvarchar")] public string Resellone_Password {get; set;}
			[Column("Created_DateTime",TypeName="datetime")] public DateTime? Created_DateTime {get; set;}
		}

		[Table("TBL_USER_STATUS_DETAILS",Schema="dbo")]
		public partial class TBL_USER_STATUS_DETAILS
		{
			[Column("Id",TypeName="tinyint")] public byte Id {get; set;}
			[Column("Name",TypeName="varchar")] public string Name {get; set;}
			[Column("Title",TypeName="varchar")] public string Title {get; set;}
			[Column("Description",TypeName="varchar")] public string Description {get; set;}
			[Column("Priority",TypeName="tinyint")] public byte Priority {get; set;}
			[Column("IsNullStatus",TypeName="bit")] public bool IsNullStatus {get; set;}
		}

		[Table("TBL_USER_SUPPORT_VERIFICATION",Schema="dbo")]
		public partial class TBL_USER_SUPPORT_VERIFICATION
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Pin",TypeName="varchar")] public string Pin {get; set;}
			[Column("ProfileEmail",TypeName="nvarchar")] public string ProfileEmail {get; set;}
			[Column("CreatedDatetime",TypeName="int")] public int CreatedDatetime {get; set;}
			[Column("AdminUserName",TypeName="varchar")] public string AdminUserName {get; set;}
			[Column("AdminIp",TypeName="bigint")] public long? AdminIp {get; set;}
			[Column("Comments",TypeName="varchar")] public string Comments {get; set;}
			[Column("CompletedDateTime",TypeName="int")] public int? CompletedDateTime {get; set;}
			[Column("CompledtedIp",TypeName="bigint")] public long? CompledtedIp {get; set;}
			[Column("IsVerificationSuccess",TypeName="bit")] public bool IsVerificationSuccess {get; set;}
			[Column("VerifiedByUserName",TypeName="nvarchar")] public string VerifiedByUserName {get; set;}
			[Column("VerificationStatus",TypeName="char")] public string VerificationStatus {get; set;}
		}

		[Table("TBL_USER_TWITTER_VALIDATION",Schema="dbo")]
		public partial class TBL_USER_TWITTER_VALIDATION
		{
			[Column("userName",TypeName="nvarchar")] public string userName {get; set;}
			[Column("twitterScreenName",TypeName="varchar")] public string twitterScreenName {get; set;}
			[Column("twitterUserID",TypeName="int")] public int? twitterUserID {get; set;}
			[Column("validationCode",TypeName="varchar")] public string validationCode {get; set;}
			[Column("numOfTry",TypeName="tinyint")] public byte? numOfTry {get; set;}
			[Column("createdDateTime",TypeName="datetime")] public DateTime? createdDateTime {get; set;}
			[Column("alternateValidationCode",TypeName="varchar")] public string alternateValidationCode {get; set;}
		}

		[Table("TBL_WBL",Schema="dbo")]
		public partial class TBL_WBL
		{
			[Column("wblID",TypeName="int")] public int wblID {get; set;}
			[Column("domainName",TypeName="nvarchar")] public string domainName {get; set;}
			[Column("userID",TypeName="int")] public int? userID {get; set;}
			[Column("enomWblID",TypeName="bigint")] public long? enomWblID {get; set;}
			[Column("orderID",TypeName="int")] public int? orderID {get; set;}
			[Column("enomOrderID",TypeName="bigint")] public long? enomOrderID {get; set;}
			[Column("purchasedDateTime",TypeName="datetime")] public DateTime? purchasedDateTime {get; set;}
			[Column("expiryDateTime",TypeName="datetime")] public DateTime? expiryDateTime {get; set;}
		}

		[Table("TBL_WG_EMAIL_QUEUE",Schema="dbo")]
		public partial class TBL_WG_EMAIL_QUEUE
		{
			[Column("Email_Queue_ID",TypeName="numeric")] public decimal Email_Queue_ID {get; set;}
			[Column("Email",TypeName="varchar")] public string Email {get; set;}
			[Column("Forward_To_Email",TypeName="varchar")] public string Forward_To_Email {get; set;}
			[Column("Operation",TypeName="varchar")] public string Operation {get; set;}
			[Column("Record_Created_Date_Time",TypeName="datetime")] public DateTime? Record_Created_Date_Time {get; set;}
			[Column("Last_Action_Date_Time",TypeName="datetime")] public DateTime? Last_Action_Date_Time {get; set;}
			[Column("Action_Completed_Date_Time",TypeName="datetime")] public DateTime? Action_Completed_Date_Time {get; set;}
			[Column("IsFromBulk",TypeName="bit")] public bool IsFromBulk {get; set;}
		}

		[Table("TBL_WG_EMAIL_QUEUE_20130420",Schema="dbo")]
		public partial class TBL_WG_EMAIL_QUEUE_20130420
		{
			[Column("Email_Queue_ID",TypeName="numeric")] public decimal Email_Queue_ID {get; set;}
			[Column("Email",TypeName="varchar")] public string Email {get; set;}
			[Column("Forward_To_Email",TypeName="varchar")] public string Forward_To_Email {get; set;}
			[Column("Operation",TypeName="varchar")] public string Operation {get; set;}
			[Column("Record_Created_Date_Time",TypeName="datetime")] public DateTime? Record_Created_Date_Time {get; set;}
			[Column("Last_Action_Date_Time",TypeName="datetime")] public DateTime? Last_Action_Date_Time {get; set;}
			[Column("Action_Completed_Date_Time",TypeName="datetime")] public DateTime? Action_Completed_Date_Time {get; set;}
			[Column("IsFromBulk",TypeName="bit")] public bool IsFromBulk {get; set;}
		}

		[Table("TBL_WHOISGUARD_ADDRESS",Schema="dbo")]
		public partial class TBL_WHOISGUARD_ADDRESS
		{
			[Column("ID",TypeName="numeric")] public decimal ID {get; set;}
			[Column("Registrant_FirstName",TypeName="nvarchar")] public string Registrant_FirstName {get; set;}
			[Column("Registrant_LastName",TypeName="nvarchar")] public string Registrant_LastName {get; set;}
			[Column("Registrant_JobTitle",TypeName="nvarchar")] public string Registrant_JobTitle {get; set;}
			[Column("Registrant_Organization",TypeName="nvarchar")] public string Registrant_Organization {get; set;}
			[Column("Registrant_StreetAddress",TypeName="nvarchar")] public string Registrant_StreetAddress {get; set;}
			[Column("Registrant_Address2",TypeName="nvarchar")] public string Registrant_Address2 {get; set;}
			[Column("Registrant_City",TypeName="nvarchar")] public string Registrant_City {get; set;}
			[Column("Registrant_State",TypeName="nvarchar")] public string Registrant_State {get; set;}
			[Column("Registrant_StateProvince",TypeName="nvarchar")] public string Registrant_StateProvince {get; set;}
			[Column("Registrant_Zip",TypeName="nvarchar")] public string Registrant_Zip {get; set;}
			[Column("Registrant_Country",TypeName="nvarchar")] public string Registrant_Country {get; set;}
			[Column("Registrant_Phone",TypeName="nvarchar")] public string Registrant_Phone {get; set;}
			[Column("Registrant_Fax",TypeName="nvarchar")] public string Registrant_Fax {get; set;}
			[Column("Admin_FirstName",TypeName="nvarchar")] public string Admin_FirstName {get; set;}
			[Column("Admin_LastName",TypeName="nvarchar")] public string Admin_LastName {get; set;}
			[Column("Admin_JobTitle",TypeName="nvarchar")] public string Admin_JobTitle {get; set;}
			[Column("Admin_Organization",TypeName="nvarchar")] public string Admin_Organization {get; set;}
			[Column("Admin_StreetAddress",TypeName="nvarchar")] public string Admin_StreetAddress {get; set;}
			[Column("Admin_Address2",TypeName="nvarchar")] public string Admin_Address2 {get; set;}
			[Column("Admin_City",TypeName="nvarchar")] public string Admin_City {get; set;}
			[Column("Admin_State",TypeName="nvarchar")] public string Admin_State {get; set;}
			[Column("Admin_StateProvince",TypeName="nvarchar")] public string Admin_StateProvince {get; set;}
			[Column("Admin_Zip",TypeName="nvarchar")] public string Admin_Zip {get; set;}
			[Column("Admin_Country",TypeName="nvarchar")] public string Admin_Country {get; set;}
			[Column("Admin_Phone",TypeName="nvarchar")] public string Admin_Phone {get; set;}
			[Column("Admin_Fax",TypeName="nvarchar")] public string Admin_Fax {get; set;}
			[Column("Tech_FirstName",TypeName="nvarchar")] public string Tech_FirstName {get; set;}
			[Column("Tech_LastName",TypeName="nvarchar")] public string Tech_LastName {get; set;}
			[Column("Tech_JobTitle",TypeName="nvarchar")] public string Tech_JobTitle {get; set;}
			[Column("Tech_Organization",TypeName="nvarchar")] public string Tech_Organization {get; set;}
			[Column("Tech_StreetAddress",TypeName="nvarchar")] public string Tech_StreetAddress {get; set;}
			[Column("Tech_Address2",TypeName="nvarchar")] public string Tech_Address2 {get; set;}
			[Column("Tech_City",TypeName="nvarchar")] public string Tech_City {get; set;}
			[Column("Tech_State",TypeName="nvarchar")] public string Tech_State {get; set;}
			[Column("Tech_StateProvince",TypeName="nvarchar")] public string Tech_StateProvince {get; set;}
			[Column("Tech_Zip",TypeName="nvarchar")] public string Tech_Zip {get; set;}
			[Column("Tech_Country",TypeName="nvarchar")] public string Tech_Country {get; set;}
			[Column("Tech_Phone",TypeName="nvarchar")] public string Tech_Phone {get; set;}
			[Column("Tech_Fax",TypeName="nvarchar")] public string Tech_Fax {get; set;}
			[Column("Billing_FirstName",TypeName="nvarchar")] public string Billing_FirstName {get; set;}
			[Column("Billing_LastName",TypeName="nvarchar")] public string Billing_LastName {get; set;}
			[Column("Billing_JobTitle",TypeName="nvarchar")] public string Billing_JobTitle {get; set;}
			[Column("Billing_Organization",TypeName="nvarchar")] public string Billing_Organization {get; set;}
			[Column("Billing_StreetAddress",TypeName="nvarchar")] public string Billing_StreetAddress {get; set;}
			[Column("Billing_Address2",TypeName="nvarchar")] public string Billing_Address2 {get; set;}
			[Column("Billing_City",TypeName="nvarchar")] public string Billing_City {get; set;}
			[Column("Billing_State",TypeName="nvarchar")] public string Billing_State {get; set;}
			[Column("Billing_StateProvince",TypeName="nvarchar")] public string Billing_StateProvince {get; set;}
			[Column("Billing_Zip",TypeName="nvarchar")] public string Billing_Zip {get; set;}
			[Column("Billing_Country",TypeName="nvarchar")] public string Billing_Country {get; set;}
			[Column("Billing_Phone",TypeName="nvarchar")] public string Billing_Phone {get; set;}
			[Column("Billing_Fax",TypeName="nvarchar")] public string Billing_Fax {get; set;}
			[Column("Registrant_Phoneext",TypeName="varchar")] public string Registrant_Phoneext {get; set;}
			[Column("Admin_Phoneext",TypeName="varchar")] public string Admin_Phoneext {get; set;}
			[Column("Tech_Phoneext",TypeName="varchar")] public string Tech_Phoneext {get; set;}
			[Column("Billing_Phoneext",TypeName="varchar")] public string Billing_Phoneext {get; set;}
			[Column("RegistrantNexus",TypeName="varchar")] public string RegistrantNexus {get; set;}
			[Column("RegistrantNexusCountry",TypeName="nvarchar")] public string RegistrantNexusCountry {get; set;}
			[Column("RegistrantPurpose",TypeName="varchar")] public string RegistrantPurpose {get; set;}
			[Column("CIRAType",TypeName="varchar")] public string CIRAType {get; set;}
			[Column("COUKLegalType",TypeName="varchar")] public string COUKLegalType {get; set;}
			[Column("COUKCompanyID",TypeName="varchar")] public string COUKCompanyID {get; set;}
			[Column("COUKRegisteredfor",TypeName="varchar")] public string COUKRegisteredfor {get; set;}
			[Column("COUKRegOptOut",TypeName="varchar")] public string COUKRegOptOut {get; set;}
			[Column("ORGUKLegalType",TypeName="varchar")] public string ORGUKLegalType {get; set;}
			[Column("ORGUKCompanyID",TypeName="varchar")] public string ORGUKCompanyID {get; set;}
			[Column("ORGUKRegisteredfor",TypeName="varchar")] public string ORGUKRegisteredfor {get; set;}
			[Column("ORGUKRegOptOut",TypeName="varchar")] public string ORGUKRegOptOut {get; set;}
			[Column("EUAdrLang",TypeName="varchar")] public string EUAdrLang {get; set;}
			[Column("MEUKLegalType",TypeName="varchar")] public string MEUKLegalType {get; set;}
			[Column("MEUKCompanyID",TypeName="varchar")] public string MEUKCompanyID {get; set;}
			[Column("MEUKRegisteredfor",TypeName="varchar")] public string MEUKRegisteredfor {get; set;}
			[Column("MEUKRegOptOut",TypeName="varchar")] public string MEUKRegOptOut {get; set;}
			[Column("cira_registrant",TypeName="varchar")] public string cira_registrant {get; set;}
			[Column("cira_registrant_desc",TypeName="varchar")] public string cira_registrant_desc {get; set;}
			[Column("cira_trademark_no",TypeName="varchar")] public string cira_trademark_no {get; set;}
			[Column("cira_org_registered_in",TypeName="varchar")] public string cira_org_registered_in {get; set;}
			[Column("Registrant_Faxext",TypeName="varchar")] public string Registrant_Faxext {get; set;}
			[Column("Admin_Faxext",TypeName="varchar")] public string Admin_Faxext {get; set;}
			[Column("Tech_Faxext",TypeName="varchar")] public string Tech_Faxext {get; set;}
			[Column("Billing_Faxext",TypeName="varchar")] public string Billing_Faxext {get; set;}
			[Column("CIRA_Legal_Type",TypeName="varchar")] public string CIRA_Legal_Type {get; set;}
			[Column("CIRA_Whois_Display",TypeName="varchar")] public string CIRA_Whois_Display {get; set;}
			[Column("CIRA_Agreement_Version",TypeName="varchar")] public string CIRA_Agreement_Version {get; set;}
			[Column("CIRA_Agreement_Value",TypeName="varchar")] public string CIRA_Agreement_Value {get; set;}
			[Column("CIRA_Language",TypeName="varchar")] public string CIRA_Language {get; set;}
			[Column("asia_cclocality",TypeName="varchar")] public string asia_cclocality {get; set;}
			[Column("asia_localitycity",TypeName="nvarchar")] public string asia_localitycity {get; set;}
			[Column("asia_localitysp",TypeName="nvarchar")] public string asia_localitysp {get; set;}
			[Column("asia_legalentitytype",TypeName="varchar")] public string asia_legalentitytype {get; set;}
			[Column("asia_identform",TypeName="varchar")] public string asia_identform {get; set;}
			[Column("asia_ident_number",TypeName="varchar")] public string asia_ident_number {get; set;}
			[Column("asia_otherletype",TypeName="varchar")] public string asia_otherletype {get; set;}
			[Column("asia_otheridentform",TypeName="varchar")] public string asia_otheridentform {get; set;}
			[Column("XXX_MemberID",TypeName="varchar")] public string XXX_MemberID {get; set;}
			[Column("XXX_Resolving",TypeName="bit")] public bool XXX_Resolving {get; set;}
			[Column("FR_LegalType",TypeName="varchar")] public string FR_LegalType {get; set;}
			[Column("FR_RegistrantBirthdate",TypeName="datetime")] public DateTime? FR_RegistrantBirthdate {get; set;}
			[Column("FR_RegistrantBirthPlace",TypeName="varchar")] public string FR_RegistrantBirthPlace {get; set;}
			[Column("FR_RegistrantLegalId",TypeName="varchar")] public string FR_RegistrantLegalId {get; set;}
			[Column("FR_RegistrantDunsNumber",TypeName="varchar")] public string FR_RegistrantDunsNumber {get; set;}
			[Column("FR_RegistrantLocalId",TypeName="varchar")] public string FR_RegistrantLocalId {get; set;}
			[Column("FR_RegistrantJoDateDec",TypeName="datetime")] public DateTime? FR_RegistrantJoDateDec {get; set;}
			[Column("FR_RegistrantJoDatePub",TypeName="varchar")] public string FR_RegistrantJoDatePub {get; set;}
			[Column("FR_RegistrantJoNumber",TypeName="varchar")] public string FR_RegistrantJoNumber {get; set;}
			[Column("FR_RegistrantJoPage",TypeName="varchar")] public string FR_RegistrantJoPage {get; set;}
			[Column("FR_RegistrantTradeNumber",TypeName="varchar")] public string FR_RegistrantTradeNumber {get; set;}
		}

		[Table("TBL_WHOISGUARD_HISTORY",Schema="dbo")]
		public partial class TBL_WHOISGUARD_HISTORY
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("Slot_Id",TypeName="numeric")] public decimal? Slot_Id {get; set;}
			[Column("UserName",TypeName="varchar")] public string UserName {get; set;}
			[Column("Admin_UserName",TypeName="varchar")] public string Admin_UserName {get; set;}
			[Column("Log_DateTime",TypeName="datetime")] public DateTime? Log_DateTime {get; set;}
			[Column("Action",TypeName="varchar")] public string Action {get; set;}
			[Column("Reason",TypeName="nvarchar")] public string Reason {get; set;}
		}

		[Table("temp.mysqlwhoisguardemailforward",Schema="dbo")]
		public partial class temp_mysqlwhoisguardemailforward
		{
			[Column("autoid",TypeName="numeric")] public decimal? autoid {get; set;}
			[Column("email",TypeName="varchar")] public string email {get; set;}
			[Column("forwardedTo",TypeName="varchar")] public string forwardedTo {get; set;}
		}

		[Table("TEMP_COUPON_USED_RELATED_USER_TABLE",Schema="dbo")]
		public partial class TEMP_COUPON_USED_RELATED_USER_TABLE
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("UserID",TypeName="numeric")] public decimal? UserID {get; set;}
			[Column("RelatedUserID",TypeName="numeric")] public decimal? RelatedUserID {get; set;}
		}

		[Table("TEMP_COUPON_USED_RELATED_USER_TABLE_2",Schema="dbo")]
		public partial class TEMP_COUPON_USED_RELATED_USER_TABLE_2
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("UserID",TypeName="numeric")] public decimal? UserID {get; set;}
			[Column("RelatedUserID",TypeName="numeric")] public decimal? RelatedUserID {get; set;}
		}

		[Table("TEMP_COUPON_USED_USER_TABLE",Schema="dbo")]
		public partial class TEMP_COUPON_USED_USER_TABLE
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("UserID",TypeName="numeric")] public decimal? UserID {get; set;}
			[Column("UserName",TypeName="varchar")] public string UserName {get; set;}
			[Column("IsFinished",TypeName="bit")] public bool? IsFinished {get; set;}
			[Column("ItemCount",TypeName="int")] public int ItemCount {get; set;}
		}

		[Table("TEMP_COUPON_USED_USER_TABLE_2",Schema="dbo")]
		public partial class TEMP_COUPON_USED_USER_TABLE_2
		{
			[Column("AutoID",TypeName="int")] public int AutoID {get; set;}
			[Column("UserID",TypeName="numeric")] public decimal? UserID {get; set;}
			[Column("UserName",TypeName="varchar")] public string UserName {get; set;}
			[Column("ItemCount",TypeName="int")] public int? ItemCount {get; set;}
			[Column("IsFinished",TypeName="bit")] public bool? IsFinished {get; set;}
		}

		[Table("temp_ImportNamecheapDeals",Schema="dbo")]
		public partial class temp_ImportNamecheapDeals
		{
			[Column("couponcode",TypeName="varchar")] public string couponcode {get; set;}
		}

		[Table("TEMP_TBL_DOMAIN_DELETED_LOG",Schema="dbo")]
		public partial class TEMP_TBL_DOMAIN_DELETED_LOG
		{
			[Column("ID",TypeName="int")] public int ID {get; set;}
			[Column("Domainname",TypeName="nvarchar")] public string Domainname {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("NumYears",TypeName="smallint")] public short? NumYears {get; set;}
			[Column("TransactionID",TypeName="nvarchar")] public string TransactionID {get; set;}
			[Column("OrderID",TypeName="nvarchar")] public string OrderID {get; set;}
			[Column("CreateDate",TypeName="datetime")] public DateTime? CreateDate {get; set;}
			[Column("DeletedDate",TypeName="datetime")] public DateTime? DeletedDate {get; set;}
			[Column("Status",TypeName="varchar")] public string Status {get; set;}
			[Column("description",TypeName="nvarchar")] public string description {get; set;}
		}

		[Table("temp1",Schema="dbo")]
		public partial class temp1
		{
			[Column("domainname",TypeName="nvarchar")] public string domainname {get; set;}
			[Column("a",TypeName="nvarchar")] public string a {get; set;}
			[Column("sds",TypeName="nvarchar")] public string sds {get; set;}
			[Column("sd",TypeName="nvarchar")] public string sd {get; set;}
			[Column("dqf",TypeName="nvarchar")] public string dqf {get; set;}
			[Column("fds",TypeName="nvarchar")] public string fds {get; set;}
			[Column("dsf",TypeName="nvarchar")] public string dsf {get; set;}
		}

		[Table("TempPayaplTransaction",Schema="dbo")]
		public partial class TempPayaplTransaction
		{
			[Column("Date",TypeName="datetime")] public DateTime? Date {get; set;}
			[Column(" Time",TypeName="datetime")] public DateTime? _Time {get; set;}
			[Column(" Time Zone",TypeName="nvarchar")] public string _Time_Zone {get; set;}
			[Column(" Name",TypeName="nvarchar")] public string _Name {get; set;}
			[Column(" Type",TypeName="nvarchar")] public string _Type {get; set;}
			[Column(" Status",TypeName="nvarchar")] public string _Status {get; set;}
			[Column(" Currency",TypeName="nvarchar")] public string _Currency {get; set;}
			[Column(" Gross",TypeName="float")] public double? _Gross {get; set;}
			[Column(" Fee",TypeName="float")] public double? _Fee {get; set;}
			[Column(" Net",TypeName="float")] public double? _Net {get; set;}
			[Column(" From Email Address",TypeName="nvarchar")] public string _From_Email_Address {get; set;}
			[Column(" To Email Address",TypeName="nvarchar")] public string _To_Email_Address {get; set;}
			[Column(" Transaction ID",TypeName="nvarchar")] public string _Transaction_ID {get; set;}
			[Column(" Counterparty Status",TypeName="nvarchar")] public string _Counterparty_Status {get; set;}
			[Column(" Shipping Address",TypeName="nvarchar")] public string _Shipping_Address {get; set;}
			[Column(" Address Status",TypeName="nvarchar")] public string _Address_Status {get; set;}
			[Column(" Item Title",TypeName="nvarchar")] public string _Item_Title {get; set;}
			[Column(" Item ID",TypeName="nvarchar")] public string _Item_ID {get; set;}
			[Column(" Shipping and Handling Amount",TypeName="float")] public double? _Shipping_and_Handling_Amount {get; set;}
			[Column(" Insurance Amount",TypeName="nvarchar")] public string _Insurance_Amount {get; set;}
			[Column(" Sales Tax",TypeName="float")] public double? _Sales_Tax {get; set;}
			[Column(" Option 1 Name",TypeName="nvarchar")] public string _Option_1_Name {get; set;}
			[Column(" Option 1 Value",TypeName="nvarchar")] public string _Option_1_Value {get; set;}
			[Column(" Option 2 Name",TypeName="nvarchar")] public string _Option_2_Name {get; set;}
			[Column(" Option 2 Value",TypeName="nvarchar")] public string _Option_2_Value {get; set;}
			[Column(" Auction Site",TypeName="float")] public double? _Auction_Site {get; set;}
			[Column(" Buyer ID",TypeName="nvarchar")] public string _Buyer_ID {get; set;}
			[Column(" Item URL",TypeName="nvarchar")] public string _Item_URL {get; set;}
			[Column(" Closing Date",TypeName="datetime")] public DateTime? _Closing_Date {get; set;}
			[Column(" Escrow Id",TypeName="datetime")] public DateTime? _Escrow_Id {get; set;}
			[Column(" Invoice Id",TypeName="nvarchar")] public string _Invoice_Id {get; set;}
			[Column(" Reference Txn ID",TypeName="nvarchar")] public string _Reference_Txn_ID {get; set;}
			[Column(" Invoice Number",TypeName="nvarchar")] public string _Invoice_Number {get; set;}
			[Column(" Custom Number",TypeName="nvarchar")] public string _Custom_Number {get; set;}
			[Column(" Receipt ID",TypeName="nvarchar")] public string _Receipt_ID {get; set;}
			[Column(" Balance",TypeName="float")] public double? _Balance {get; set;}
			[Column(" Contact Phone Number",TypeName="nvarchar")] public string _Contact_Phone_Number {get; set;}
			[Column(" ",TypeName="nvarchar")] public string _ {get; set;}
		}

		[Table("TEMPTBL_PRIVATE_DETAILS",Schema="dbo")]
		public partial class TEMPTBL_PRIVATE_DETAILS
		{
			[Column("Slot_ID",TypeName="numeric")] public decimal? Slot_ID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Purchase_Date_Time",TypeName="datetime")] public DateTime? Purchase_Date_Time {get; set;}
			[Column("Num_Years",TypeName="smallint")] public short? Num_Years {get; set;}
			[Column("Computed_Expire_Date_Time",TypeName="datetime")] public DateTime? Computed_Expire_Date_Time {get; set;}
			[Column("Renewal_Date_Time",TypeName="datetime")] public DateTime? Renewal_Date_Time {get; set;}
			[Column("Associated_DomainID",TypeName="numeric")] public decimal? Associated_DomainID {get; set;}
			[Column("Associated_Email",TypeName="nvarchar")] public string Associated_Email {get; set;}
			[Column("Accept_Terms",TypeName="int")] public int? Accept_Terms {get; set;}
			[Column("Active_Status",TypeName="int")] public int? Active_Status {get; set;}
			[Column("Email_Change_Duration",TypeName="smallint")] public short? Email_Change_Duration {get; set;}
			[Column("Last_Email_Update_Date_Time",TypeName="datetime")] public DateTime? Last_Email_Update_Date_Time {get; set;}
			[Column("Associated_Email_Forwarded_To",TypeName="nvarchar")] public string Associated_Email_Forwarded_To {get; set;}
			[Column("Reverted_discard_YN",TypeName="bit")] public bool Reverted_discard_YN {get; set;}
			[Column("Last_Action_Date_Time",TypeName="datetime")] public DateTime? Last_Action_Date_Time {get; set;}
			[Column("Associate_OrderId",TypeName="numeric")] public decimal? Associate_OrderId {get; set;}
			[Column("Associated_OrderDetailId",TypeName="numeric")] public decimal? Associated_OrderDetailId {get; set;}
			[Column("AfterBackup",TypeName="bit")] public bool AfterBackup {get; set;}
			[Column("MySQLWGFWD",TypeName="nvarchar")] public string MySQLWGFWD {get; set;}
			[Column("TBLWGFWD",TypeName="nvarchar")] public string TBLWGFWD {get; set;}
		}

		[Table("TempWhoisguardaffectedsupportnamecheapemail",Schema="dbo")]
		public partial class TempWhoisguardaffectedsupportnamecheapemail
		{
			[Column("slot_id",TypeName="numeric")] public decimal? slot_id {get; set;}
			[Column("profileemail",TypeName="nvarchar")] public string profileemail {get; set;}
			[Column("whoisguardemail",TypeName="nvarchar")] public string whoisguardemail {get; set;}
			[Column("oldassociatedemail",TypeName="nvarchar")] public string oldassociatedemail {get; set;}
			[Column("generatedquery",TypeName="varchar")] public string generatedquery {get; set;}
		}

		[Table("TldDomainProvider",Schema="dbo")]
		public partial class TldDomainProvider
		{
			[Column("TldDomainProviderID",TypeName="int")] public int TldDomainProviderID {get; set;}
			[Column("Tld",TypeName="varchar")] public string Tld {get; set;}
			[Column("Action",TypeName="varchar")] public string Action {get; set;}
			[Column("DefaultProviderName",TypeName="varchar")] public string DefaultProviderName {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime? CreatedDateTime {get; set;}
			[Column("LastUpdatedDateTime",TypeName="datetime")] public DateTime? LastUpdatedDateTime {get; set;}
			[Column("LastUpdatedBy",TypeName="varchar")] public string LastUpdatedBy {get; set;}
			[Column("LastUpdatedIP",TypeName="varchar")] public string LastUpdatedIP {get; set;}
			[Column("Comments",TypeName="varchar")] public string Comments {get; set;}
		}

		[Table("TldDomainProviderOverride",Schema="dbo")]
		public partial class TldDomainProviderOverride
		{
			[Column("TldDomainProviderID",TypeName="int")] public int TldDomainProviderID {get; set;}
			[Column("ProviderName",TypeName="varchar")] public string ProviderName {get; set;}
			[Column("StartDateTime",TypeName="datetime")] public DateTime? StartDateTime {get; set;}
			[Column("EndDatetime",TypeName="datetime")] public DateTime? EndDatetime {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime? CreatedDateTime {get; set;}
			[Column("CreatedBy",TypeName="varchar")] public string CreatedBy {get; set;}
			[Column("CreatedIP",TypeName="varchar")] public string CreatedIP {get; set;}
			[Column("LastUpdatedDateTime",TypeName="datetime")] public DateTime? LastUpdatedDateTime {get; set;}
			[Column("LastUpdatedBy",TypeName="varchar")] public string LastUpdatedBy {get; set;}
			[Column("LastUpdatedIP",TypeName="varchar")] public string LastUpdatedIP {get; set;}
			[Column("Comments",TypeName="varchar")] public string Comments {get; set;}
			[Column("IsActive",TypeName="bit")] public bool IsActive {get; set;}
		}

		[Table("TldParentUserDomainProvider",Schema="dbo")]
		public partial class TldParentUserDomainProvider
		{
			[Column("TldDomainProviderID",TypeName="int")] public int TldDomainProviderID {get; set;}
			[Column("ParentUserID",TypeName="numeric")] public decimal ParentUserID {get; set;}
			[Column("ProviderName",TypeName="varchar")] public string ProviderName {get; set;}
			[Column("StartDateTime",TypeName="datetime")] public DateTime? StartDateTime {get; set;}
			[Column("EndDatetime",TypeName="datetime")] public DateTime? EndDatetime {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime? CreatedDateTime {get; set;}
			[Column("CreatedBy",TypeName="varchar")] public string CreatedBy {get; set;}
			[Column("CreatedIP",TypeName="varchar")] public string CreatedIP {get; set;}
			[Column("LastUpdatedDateTime",TypeName="datetime")] public DateTime? LastUpdatedDateTime {get; set;}
			[Column("LastUpdatedBy",TypeName="varchar")] public string LastUpdatedBy {get; set;}
			[Column("LastUpdatedIP",TypeName="varchar")] public string LastUpdatedIP {get; set;}
			[Column("Comments",TypeName="varchar")] public string Comments {get; set;}
			[Column("IsActive",TypeName="bit")] public bool IsActive {get; set;}
		}

		[Table("TldPromotionOrderCheckTrack",Schema="dbo")]
		public partial class TldPromotionOrderCheckTrack
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Order_Id",TypeName="numeric")] public decimal Order_Id {get; set;}
			[Column("LasUpdateDate",TypeName="datetime")] public DateTime? LasUpdateDate {get; set;}
			[Column("StopTldPromotionCheck",TypeName="bit")] public bool StopTldPromotionCheck {get; set;}
		}

		[Table("TldUserDomainProvider",Schema="dbo")]
		public partial class TldUserDomainProvider
		{
			[Column("TldDomainProviderID",TypeName="int")] public int TldDomainProviderID {get; set;}
			[Column("UserID",TypeName="numeric")] public decimal UserID {get; set;}
			[Column("ProviderName",TypeName="varchar")] public string ProviderName {get; set;}
			[Column("StartDateTime",TypeName="datetime")] public DateTime? StartDateTime {get; set;}
			[Column("EndDatetime",TypeName="datetime")] public DateTime? EndDatetime {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime? CreatedDateTime {get; set;}
			[Column("CreatedBy",TypeName="varchar")] public string CreatedBy {get; set;}
			[Column("CreatedIP",TypeName="varchar")] public string CreatedIP {get; set;}
			[Column("LastUpdatedDateTime",TypeName="datetime")] public DateTime? LastUpdatedDateTime {get; set;}
			[Column("LastUpdatedBy",TypeName="varchar")] public string LastUpdatedBy {get; set;}
			[Column("LastUpdatedIP",TypeName="varchar")] public string LastUpdatedIP {get; set;}
			[Column("Comments",TypeName="varchar")] public string Comments {get; set;}
			[Column("IsActive",TypeName="bit")] public bool IsActive {get; set;}
		}

		[Table("TldUserRoleDomainProvider",Schema="dbo")]
		public partial class TldUserRoleDomainProvider
		{
			[Column("TldDomainProviderID",TypeName="int")] public int TldDomainProviderID {get; set;}
			[Column("RoleID",TypeName="int")] public int RoleID {get; set;}
			[Column("ProviderName",TypeName="varchar")] public string ProviderName {get; set;}
			[Column("StartDateTime",TypeName="datetime")] public DateTime? StartDateTime {get; set;}
			[Column("EndDatetime",TypeName="datetime")] public DateTime? EndDatetime {get; set;}
			[Column("CreatedDateTime",TypeName="datetime")] public DateTime? CreatedDateTime {get; set;}
			[Column("CreatedBy",TypeName="varchar")] public string CreatedBy {get; set;}
			[Column("CreatedIP",TypeName="varchar")] public string CreatedIP {get; set;}
			[Column("LastUpdatedDateTime",TypeName="datetime")] public DateTime? LastUpdatedDateTime {get; set;}
			[Column("LastUpdatedBy",TypeName="varchar")] public string LastUpdatedBy {get; set;}
			[Column("LastUpdatedIP",TypeName="varchar")] public string LastUpdatedIP {get; set;}
			[Column("Comments",TypeName="varchar")] public string Comments {get; set;}
			[Column("IsActive",TypeName="bit")] public bool IsActive {get; set;}
		}

		[Table("TMP_TBL_LOG_ADD_FUNDS",Schema="dbo")]
		public partial class TMP_TBL_LOG_ADD_FUNDS
		{
			[Column("autoID",TypeName="int")] public int autoID {get; set;}
			[Column("createdDateTime",TypeName="datetime")] public DateTime? createdDateTime {get; set;}
			[Column("amount",TypeName="money")] public decimal? amount {get; set;}
			[Column("username",TypeName="nvarchar")] public string username {get; set;}
			[Column("details",TypeName="varchar")] public string details {get; set;}
		}

		[Table("tmpCCProviderId",Schema="dbo")]
		public partial class tmpCCProviderId
		{
			[Column("providerid",TypeName="nvarchar")] public string providerid {get; set;}
		}

		[Table("tmpExpireStatusfix",Schema="dbo")]
		public partial class tmpExpireStatusfix
		{
			[Column("AutoId",TypeName="int")] public int? AutoId {get; set;}
			[Column("domainName",TypeName="varchar")] public string domainName {get; set;}
			[Column("isAssoicated",TypeName="bit")] public bool? isAssoicated {get; set;}
		}

		[Table("tmpHostPromo",Schema="dbo")]
		public partial class tmpHostPromo
		{
			[Column("userid",TypeName="numeric")] public decimal userid {get; set;}
		}

		[Table("tmpHostTable",Schema="dbo")]
		public partial class tmpHostTable
		{
			[Column("username",TypeName="nvarchar")] public string username {get; set;}
			[Column("userid",TypeName="numeric")] public decimal? userid {get; set;}
		}

		[Table("tmpnameservers",Schema="dbo")]
		public partial class tmpnameservers
		{
			[Column("domainid",TypeName="int")] public int? domainid {get; set;}
			[Column("domainname",TypeName="nvarchar")] public string domainname {get; set;}
			[Column("nsname",TypeName="varchar")] public string nsname {get; set;}
		}

		[Table("tmpnameservers1",Schema="dbo")]
		public partial class tmpnameservers1
		{
			[Column("domainid",TypeName="int")] public int? domainid {get; set;}
			[Column("domainname",TypeName="nvarchar")] public string domainname {get; set;}
			[Column("nsname",TypeName="varchar")] public string nsname {get; set;}
		}

		[Table("tmpnameservers2",Schema="dbo")]
		public partial class tmpnameservers2
		{
			[Column("domainid",TypeName="int")] public int? domainid {get; set;}
			[Column("domainname",TypeName="nvarchar")] public string domainname {get; set;}
			[Column("nsname",TypeName="varchar")] public string nsname {get; set;}
		}

		[Table("tmpTable",Schema="dbo")]
		public partial class tmpTable
		{
			[Column("Auto_id",TypeName="bigint")] public long? Auto_id {get; set;}
			[Column("domainname",TypeName="varchar")] public string domainname {get; set;}
			[Column("relid",TypeName="bigint")] public long? relid {get; set;}
		}

		[Table("tmpTabledomainlist",Schema="dbo")]
		public partial class tmpTabledomainlist
		{
			[Column("domainname",TypeName="nvarchar")] public string domainname {get; set;}
			[Column("IsNamecheap",TypeName="bit")] public bool? IsNamecheap {get; set;}
			[Column("registereddatetime",TypeName="datetime")] public DateTime? registereddatetime {get; set;}
		}

		[Table("TmpWGFix",Schema="dbo")]
		public partial class TmpWGFix
		{
			[Column("Slotid",TypeName="numeric")] public decimal? Slotid {get; set;}
			[Column("CurrentAssociatedEmail",TypeName="nvarchar")] public string CurrentAssociatedEmail {get; set;}
			[Column("OldAssocicatedEmail",TypeName="nvarchar")] public string OldAssocicatedEmail {get; set;}
			[Column("CurrentFwdEmail",TypeName="nvarchar")] public string CurrentFwdEmail {get; set;}
			[Column("OldFwdEmail",TypeName="nvarchar")] public string OldFwdEmail {get; set;}
			[Column("Username",TypeName="nvarchar")] public string Username {get; set;}
			[Column("CurrentActiveStatus",TypeName="int")] public int? CurrentActiveStatus {get; set;}
			[Column("oldActiveStatus",TypeName="int")] public int? oldActiveStatus {get; set;}
			[Column("CurrentRevertedStatus",TypeName="bit")] public bool? CurrentRevertedStatus {get; set;}
			[Column("OldRevertedStatus",TypeName="bit")] public bool? OldRevertedStatus {get; set;}
			[Column("tblwgFwdEmail",TypeName="nvarchar")] public string tblwgFwdEmail {get; set;}
			[Column("mysqlFwdEmail",TypeName="nvarchar")] public string mysqlFwdEmail {get; set;}
			[Column("IsAssoicateEmailMismatch",TypeName="bit")] public bool? IsAssoicateEmailMismatch {get; set;}
			[Column("IsFwdSameWithAssociate",TypeName="bit")] public bool IsFwdSameWithAssociate {get; set;}
		}

		[Table("TmpWGFix1",Schema="dbo")]
		public partial class TmpWGFix1
		{
			[Column("Slotid",TypeName="numeric")] public decimal? Slotid {get; set;}
			[Column("CurrentAssociatedEmail",TypeName="nvarchar")] public string CurrentAssociatedEmail {get; set;}
			[Column("OldAssocicatedEmail",TypeName="nvarchar")] public string OldAssocicatedEmail {get; set;}
			[Column("CurrentFwdEmail",TypeName="nvarchar")] public string CurrentFwdEmail {get; set;}
			[Column("OldFwdEmail",TypeName="nvarchar")] public string OldFwdEmail {get; set;}
			[Column("Username",TypeName="nvarchar")] public string Username {get; set;}
			[Column("CurrentActiveStatus",TypeName="int")] public int? CurrentActiveStatus {get; set;}
			[Column("oldActiveStatus",TypeName="int")] public int? oldActiveStatus {get; set;}
			[Column("CurrentRevertedStatus",TypeName="bit")] public bool? CurrentRevertedStatus {get; set;}
			[Column("OldRevertedStatus",TypeName="bit")] public bool? OldRevertedStatus {get; set;}
			[Column("tblwgFwdEmail",TypeName="nvarchar")] public string tblwgFwdEmail {get; set;}
			[Column("mysqlFwdEmail",TypeName="nvarchar")] public string mysqlFwdEmail {get; set;}
			[Column("IsAssoicateEmailMismatch",TypeName="bit")] public bool? IsAssoicateEmailMismatch {get; set;}
			[Column("IsFwdSameWithAssociate",TypeName="bit")] public bool IsFwdSameWithAssociate {get; set;}
			[Column("Accept_Terms",TypeName="int")] public int? Accept_Terms {get; set;}
			[Column("Active_Status",TypeName="int")] public int? Active_Status {get; set;}
			[Column("AssociatedDomainID",TypeName="numeric")] public decimal? AssociatedDomainID {get; set;}
			[Column("ACTIONS",TypeName="varchar")] public string ACTIONS {get; set;}
		}

		[Table("TrackREAutoRenewSet",Schema="dbo")]
		public partial class TrackREAutoRenewSet
		{
			[Column("OrderId",TypeName="numeric")] public decimal OrderId {get; set;}
			[Column("LastProcessedDateTime",TypeName="datetime")] public DateTime? LastProcessedDateTime {get; set;}
		}

		[Table("TransactionFraudCheckTrack",Schema="dbo")]
		public partial class TransactionFraudCheckTrack
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Transaction_ID",TypeName="numeric")] public decimal Transaction_ID {get; set;}
			[Column("LastUpdateDate",TypeName="datetime")] public DateTime? LastUpdateDate {get; set;}
			[Column("StopMaxmindCheck",TypeName="bit")] public bool StopMaxmindCheck {get; set;}
		}

		[Table("twitter_AnswerKeywords",Schema="dbo")]
		public partial class twitter_AnswerKeywords
		{
			[Column("answerKeywordId",TypeName="int")] public int answerKeywordId {get; set;}
			[Column("questionAutoId",TypeName="int")] public int questionAutoId {get; set;}
			[Column("keyword",TypeName="nvarchar")] public string keyword {get; set;}
		}

		[Table("twitter_dec08_AnswerKeywords",Schema="dbo")]
		public partial class twitter_dec08_AnswerKeywords
		{
			[Column("answerKeywordId",TypeName="int")] public int answerKeywordId {get; set;}
			[Column("questionAutoId",TypeName="int")] public int questionAutoId {get; set;}
			[Column("keyword",TypeName="nvarchar")] public string keyword {get; set;}
		}

		[Table("twitter_dec08_Questions",Schema="dbo")]
		public partial class twitter_dec08_Questions
		{
			[Column("questionAutoId",TypeName="int")] public int questionAutoId {get; set;}
			[Column("questionStatusId",TypeName="int")] public int? questionStatusId {get; set;}
			[Column("question",TypeName="nvarchar")] public string question {get; set;}
			[Column("answer",TypeName="nvarchar")] public string answer {get; set;}
			[Column("liveDate",TypeName="smalldatetime")] public DateTime? liveDate {get; set;}
			[Column("isPosted",TypeName="bit")] public bool isPosted {get; set;}
			[Column("createdDate",TypeName="smalldatetime")] public DateTime createdDate {get; set;}
			[Column("updatedDate",TypeName="smalldatetime")] public DateTime updatedDate {get; set;}
			[Column("actualLiveDate",TypeName="datetime")] public DateTime? actualLiveDate {get; set;}
		}

		[Table("twitter_dec08_Replies",Schema="dbo")]
		public partial class twitter_dec08_Replies
		{
			[Column("replyStatusId",TypeName="int")] public int replyStatusId {get; set;}
			[Column("inReplyToStatusId",TypeName="int")] public int inReplyToStatusId {get; set;}
			[Column("questionStatusId",TypeName="int")] public int? questionStatusId {get; set;}
			[Column("twitterUserId",TypeName="int")] public int twitterUserId {get; set;}
			[Column("text",TypeName="nvarchar")] public string text {get; set;}
			[Column("replyTime",TypeName="datetime")] public DateTime replyTime {get; set;}
			[Column("isKeywordMatch",TypeName="bit")] public bool? isKeywordMatch {get; set;}
			[Column("isAnswerCorrect",TypeName="bit")] public bool? isAnswerCorrect {get; set;}
			[Column("isDiscarded",TypeName="bit")] public bool isDiscarded {get; set;}
			[Column("isDuplicate",TypeName="bit")] public bool isDuplicate {get; set;}
			[Column("isProcessed",TypeName="bit")] public bool isProcessed {get; set;}
		}

		[Table("twitter_dec08_Winners",Schema="dbo")]
		public partial class twitter_dec08_Winners
		{
			[Column("winnerAutoId",TypeName="int")] public int winnerAutoId {get; set;}
			[Column("questionStatusId",TypeName="int")] public int questionStatusId {get; set;}
			[Column("twitterUserId",TypeName="int")] public int twitterUserId {get; set;}
			[Column("creditStatus",TypeName="varchar")] public string creditStatus {get; set;}
			[Column("transactionId",TypeName="int")] public int? transactionId {get; set;}
		}

		[Table("twitter_import_Questions",Schema="dbo")]
		public partial class twitter_import_Questions
		{
			[Column("id",TypeName="float")] public double? id {get; set;}
			[Column("date",TypeName="datetime")] public DateTime? date {get; set;}
			[Column("questions",TypeName="nvarchar")] public string questions {get; set;}
			[Column("answer",TypeName="nvarchar")] public string answer {get; set;}
			[Column("keyword1",TypeName="nvarchar")] public string keyword1 {get; set;}
			[Column("keyword2",TypeName="nvarchar")] public string keyword2 {get; set;}
			[Column("keyword3",TypeName="nvarchar")] public string keyword3 {get; set;}
			[Column("keyword4",TypeName="nvarchar")] public string keyword4 {get; set;}
			[Column("keyword5",TypeName="nvarchar")] public string keyword5 {get; set;}
		}

		[Table("twitter_jun09_AnswerKeywords",Schema="dbo")]
		public partial class twitter_jun09_AnswerKeywords
		{
			[Column("answerKeywordId",TypeName="int")] public int answerKeywordId {get; set;}
			[Column("questionAutoId",TypeName="int")] public int questionAutoId {get; set;}
			[Column("keyword",TypeName="nvarchar")] public string keyword {get; set;}
		}

		[Table("twitter_jun09_Questions",Schema="dbo")]
		public partial class twitter_jun09_Questions
		{
			[Column("questionAutoId",TypeName="int")] public int questionAutoId {get; set;}
			[Column("questionStatusId",TypeName="bigint")] public long? questionStatusId {get; set;}
			[Column("question",TypeName="nvarchar")] public string question {get; set;}
			[Column("answer",TypeName="nvarchar")] public string answer {get; set;}
			[Column("liveDate",TypeName="smalldatetime")] public DateTime? liveDate {get; set;}
			[Column("isPosted",TypeName="bit")] public bool isPosted {get; set;}
			[Column("createdDate",TypeName="smalldatetime")] public DateTime createdDate {get; set;}
			[Column("updatedDate",TypeName="smalldatetime")] public DateTime updatedDate {get; set;}
			[Column("actualLiveDate",TypeName="datetime")] public DateTime? actualLiveDate {get; set;}
		}

		[Table("twitter_jun09_Replies",Schema="dbo")]
		public partial class twitter_jun09_Replies
		{
			[Column("replyStatusId",TypeName="bigint")] public long replyStatusId {get; set;}
			[Column("inReplyToStatusId",TypeName="bigint")] public long inReplyToStatusId {get; set;}
			[Column("questionStatusId",TypeName="bigint")] public long? questionStatusId {get; set;}
			[Column("twitterUserId",TypeName="int")] public int twitterUserId {get; set;}
			[Column("text",TypeName="nvarchar")] public string text {get; set;}
			[Column("replyTime",TypeName="datetime")] public DateTime replyTime {get; set;}
			[Column("isKeywordMatch",TypeName="bit")] public bool? isKeywordMatch {get; set;}
			[Column("isAnswerCorrect",TypeName="bit")] public bool? isAnswerCorrect {get; set;}
			[Column("isDiscarded",TypeName="bit")] public bool isDiscarded {get; set;}
			[Column("isDuplicate",TypeName="bit")] public bool isDuplicate {get; set;}
			[Column("isProcessed",TypeName="bit")] public bool isProcessed {get; set;}
		}

		[Table("twitter_jun09_Winners",Schema="dbo")]
		public partial class twitter_jun09_Winners
		{
			[Column("winnerAutoId",TypeName="int")] public int winnerAutoId {get; set;}
			[Column("questionStatusId",TypeName="bigint")] public long questionStatusId {get; set;}
			[Column("twitterUserId",TypeName="int")] public int twitterUserId {get; set;}
			[Column("creditStatus",TypeName="varchar")] public string creditStatus {get; set;}
			[Column("transactionId",TypeName="int")] public int? transactionId {get; set;}
		}

		[Table("twitter_mar09_AnswerKeywords",Schema="dbo")]
		public partial class twitter_mar09_AnswerKeywords
		{
			[Column("answerKeywordId",TypeName="int")] public int answerKeywordId {get; set;}
			[Column("questionAutoId",TypeName="int")] public int questionAutoId {get; set;}
			[Column("keyword",TypeName="nvarchar")] public string keyword {get; set;}
		}

		[Table("twitter_mar09_Questions",Schema="dbo")]
		public partial class twitter_mar09_Questions
		{
			[Column("questionAutoId",TypeName="int")] public int questionAutoId {get; set;}
			[Column("questionStatusId",TypeName="int")] public int? questionStatusId {get; set;}
			[Column("question",TypeName="nvarchar")] public string question {get; set;}
			[Column("answer",TypeName="nvarchar")] public string answer {get; set;}
			[Column("liveDate",TypeName="smalldatetime")] public DateTime? liveDate {get; set;}
			[Column("isPosted",TypeName="bit")] public bool isPosted {get; set;}
			[Column("createdDate",TypeName="smalldatetime")] public DateTime createdDate {get; set;}
			[Column("updatedDate",TypeName="smalldatetime")] public DateTime updatedDate {get; set;}
			[Column("actualLiveDate",TypeName="datetime")] public DateTime? actualLiveDate {get; set;}
		}

		[Table("twitter_mar09_Replies",Schema="dbo")]
		public partial class twitter_mar09_Replies
		{
			[Column("replyStatusId",TypeName="int")] public int replyStatusId {get; set;}
			[Column("inReplyToStatusId",TypeName="int")] public int inReplyToStatusId {get; set;}
			[Column("questionStatusId",TypeName="int")] public int? questionStatusId {get; set;}
			[Column("twitterUserId",TypeName="int")] public int twitterUserId {get; set;}
			[Column("text",TypeName="nvarchar")] public string text {get; set;}
			[Column("replyTime",TypeName="datetime")] public DateTime replyTime {get; set;}
			[Column("isKeywordMatch",TypeName="bit")] public bool? isKeywordMatch {get; set;}
			[Column("isAnswerCorrect",TypeName="bit")] public bool? isAnswerCorrect {get; set;}
			[Column("isDiscarded",TypeName="bit")] public bool isDiscarded {get; set;}
			[Column("isDuplicate",TypeName="bit")] public bool isDuplicate {get; set;}
			[Column("isProcessed",TypeName="bit")] public bool isProcessed {get; set;}
		}

		[Table("twitter_mar09_Winners",Schema="dbo")]
		public partial class twitter_mar09_Winners
		{
			[Column("winnerAutoId",TypeName="int")] public int winnerAutoId {get; set;}
			[Column("questionStatusId",TypeName="int")] public int questionStatusId {get; set;}
			[Column("twitterUserId",TypeName="int")] public int twitterUserId {get; set;}
			[Column("creditStatus",TypeName="varchar")] public string creditStatus {get; set;}
			[Column("transactionId",TypeName="int")] public int? transactionId {get; set;}
		}

		[Table("twitter_Questions",Schema="dbo")]
		public partial class twitter_Questions
		{
			[Column("questionAutoId",TypeName="int")] public int questionAutoId {get; set;}
			[Column("questionStatusId",TypeName="bigint")] public long? questionStatusId {get; set;}
			[Column("question",TypeName="nvarchar")] public string question {get; set;}
			[Column("answer",TypeName="nvarchar")] public string answer {get; set;}
			[Column("liveDate",TypeName="smalldatetime")] public DateTime? liveDate {get; set;}
			[Column("isPosted",TypeName="bit")] public bool isPosted {get; set;}
			[Column("createdDate",TypeName="smalldatetime")] public DateTime createdDate {get; set;}
			[Column("updatedDate",TypeName="smalldatetime")] public DateTime updatedDate {get; set;}
			[Column("actualLiveDate",TypeName="datetime")] public DateTime? actualLiveDate {get; set;}
			[Column("contestID",TypeName="int")] public int contestID {get; set;}
		}

		[Table("twitter_Replies",Schema="dbo")]
		public partial class twitter_Replies
		{
			[Column("replyStatusId",TypeName="bigint")] public long replyStatusId {get; set;}
			[Column("inReplyToStatusId",TypeName="bigint")] public long inReplyToStatusId {get; set;}
			[Column("questionStatusId",TypeName="bigint")] public long? questionStatusId {get; set;}
			[Column("twitterUserId",TypeName="int")] public int twitterUserId {get; set;}
			[Column("text",TypeName="nvarchar")] public string text {get; set;}
			[Column("replyTime",TypeName="datetime")] public DateTime replyTime {get; set;}
			[Column("isKeywordMatch",TypeName="bit")] public bool? isKeywordMatch {get; set;}
			[Column("isAnswerCorrect",TypeName="bit")] public bool? isAnswerCorrect {get; set;}
			[Column("isDiscarded",TypeName="bit")] public bool isDiscarded {get; set;}
			[Column("isDuplicate",TypeName="bit")] public bool isDuplicate {get; set;}
			[Column("isProcessed",TypeName="bit")] public bool isProcessed {get; set;}
			[Column("contestID",TypeName="int")] public int contestID {get; set;}
			[Column("Source",TypeName="nvarchar")] public string Source {get; set;}
		}

		[Table("twitter_Users",Schema="dbo")]
		public partial class twitter_Users
		{
			[Column("twitterUserId",TypeName="int")] public int twitterUserId {get; set;}
			[Column("name",TypeName="nvarchar")] public string name {get; set;}
			[Column("screenName",TypeName="varchar")] public string screenName {get; set;}
			[Column("profileImageUrl",TypeName="varchar")] public string profileImageUrl {get; set;}
			[Column("userCreatedDate",TypeName="smalldatetime")] public DateTime? userCreatedDate {get; set;}
			[Column("isBanned",TypeName="bit")] public bool isBanned {get; set;}
		}

		[Table("twitter_Users_Log",Schema="dbo")]
		public partial class twitter_Users_Log
		{
			[Column("autoId",TypeName="int")] public int autoId {get; set;}
			[Column("twitterUserId",TypeName="bigint")] public long twitterUserId {get; set;}
			[Column("logType",TypeName="varchar")] public string logType {get; set;}
			[Column("description",TypeName="varchar")] public string description {get; set;}
			[Column("logBy",TypeName="varchar")] public string logBy {get; set;}
			[Column("createdDateTime",TypeName="datetime")] public DateTime? createdDateTime {get; set;}
			[Column("LoggedByIp",TypeName="varchar")] public string LoggedByIp {get; set;}
		}

		[Table("twitter_Winners",Schema="dbo")]
		public partial class twitter_Winners
		{
			[Column("winnerAutoId",TypeName="int")] public int winnerAutoId {get; set;}
			[Column("questionStatusId",TypeName="bigint")] public long questionStatusId {get; set;}
			[Column("twitterUserId",TypeName="int")] public int twitterUserId {get; set;}
			[Column("creditStatus",TypeName="varchar")] public string creditStatus {get; set;}
			[Column("transactionId",TypeName="int")] public int? transactionId {get; set;}
		}

		[Table("UserRestriction",Schema="dbo")]
		public partial class UserRestriction
		{
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("RestrictionId",TypeName="int")] public int? RestrictionId {get; set;}
			[Column("StartDate",TypeName="bigint")] public long? StartDate {get; set;}
			[Column("EndDate",TypeName="bigint")] public long? EndDate {get; set;}
			[Column("ShowUserMessage",TypeName="varchar")] public string ShowUserMessage {get; set;}
		}

		[Table("VW_ExpiringWhoisguard",Schema="dbo")]
		public partial class VW_ExpiringWhoisguard
		{
			[Column("Slot_ID",TypeName="numeric")] public decimal Slot_ID {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Purchase_Date_Time",TypeName="datetime")] public DateTime? Purchase_Date_Time {get; set;}
			[Column("Computed_Expire_Date_Time",TypeName="datetime")] public DateTime? Computed_Expire_Date_Time {get; set;}
			[Column("Associated_DomainID",TypeName="numeric")] public decimal? Associated_DomainID {get; set;}
			[Column("Active_Status",TypeName="int")] public int? Active_Status {get; set;}
			[Column("Num_Years",TypeName="smallint")] public short? Num_Years {get; set;}
			[Column("DaysToExpire",TypeName="int")] public int? DaysToExpire {get; set;}
			[Column("RecordCount",TypeName="bigint")] public long? RecordCount {get; set;}
		}

		[Table("VW_MarketPlaceList",Schema="dbo")]
		public partial class VW_MarketPlaceList
		{
			[Column("MP_Listing_ID",TypeName="numeric")] public decimal MP_Listing_ID {get; set;}
			[Column("PartnerName",TypeName="varchar")] public string PartnerName {get; set;}
		}

		[Table("VW_MarketPlaceList_New",Schema="dbo")]
		public partial class VW_MarketPlaceList_New
		{
			[Column("MP_Listing_ID",TypeName="numeric")] public decimal MP_Listing_ID {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("ReverseDomainName",TypeName="nvarchar")] public string ReverseDomainName {get; set;}
			[Column("Is_Premium_Domain_YN",TypeName="bit")] public bool? Is_Premium_Domain_YN {get; set;}
			[Column("Listing_Expiry_Date",TypeName="datetime")] public DateTime? Listing_Expiry_Date {get; set;}
			[Column("Featured_YN",TypeName="bit")] public bool? Featured_YN {get; set;}
			[Column("Accept_Offers_YN",TypeName="bit")] public bool Accept_Offers_YN {get; set;}
			[Column("Buyer_User_Name",TypeName="nvarchar")] public string Buyer_User_Name {get; set;}
			[Column("Seller_User_Name",TypeName="nvarchar")] public string Seller_User_Name {get; set;}
			[Column("Listing_Date",TypeName="datetime")] public DateTime? Listing_Date {get; set;}
			[Column("Listing_Price",TypeName="money")] public decimal? Listing_Price {get; set;}
			[Column("Adult_Listing_YN",TypeName="bit")] public bool? Adult_Listing_YN {get; set;}
			[Column("Hypens_YN",TypeName="bit")] public bool? Hypens_YN {get; set;}
			[Column("Numbers_YN",TypeName="bit")] public bool? Numbers_YN {get; set;}
			[Column("SLD",TypeName="nvarchar")] public string SLD {get; set;}
			[Column("TLD",TypeName="nvarchar")] public string TLD {get; set;}
			[Column("SLDLength",TypeName="int")] public int? SLDLength {get; set;}
			[Column("RecordCount",TypeName="bigint")] public long? RecordCount {get; set;}
		}

		[Table("VW_PrivateDomainList",Schema="dbo")]
		public partial class VW_PrivateDomainList
		{
			[Column("Private_Domain_ID",TypeName="numeric")] public decimal Private_Domain_ID {get; set;}
			[Column("Domain_name",TypeName="nvarchar")] public string Domain_name {get; set;}
			[Column("TLDName",TypeName="varchar")] public string TLDName {get; set;}
		}

		[Table("VW_TBL_DOMAIN",Schema="dbo")]
		public partial class VW_TBL_DOMAIN
		{
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("RegDateTime",TypeName="datetime")] public DateTime? RegDateTime {get; set;}
			[Column("NumYears",TypeName="tinyint")] public byte? NumYears {get; set;}
			[Column("Record_Create_Date_Time",TypeName="datetime")] public DateTime? Record_Create_Date_Time {get; set;}
			[Column("Computed_Expire_Date_Time",TypeName="datetime")] public DateTime? Computed_Expire_Date_Time {get; set;}
			[Column("Computed_Num_Days_To_Expire",TypeName="int")] public int? Computed_Num_Days_To_Expire {get; set;}
			[Column("Expired_YN",TypeName="bit")] public bool? Expired_YN {get; set;}
			[Column("Domain_ID",TypeName="numeric")] public decimal Domain_ID {get; set;}
			[Column("User_ID",TypeName="numeric")] public decimal? User_ID {get; set;}
			[Column("Reseller_ID",TypeName="numeric")] public decimal? Reseller_ID {get; set;}
			[Column("Domain_Locked_YN",TypeName="bit")] public bool? Domain_Locked_YN {get; set;}
			[Column("Auto_Renew",TypeName="bit")] public bool? Auto_Renew {get; set;}
			[Column("Auto_Renew_Status",TypeName="varchar")] public string Auto_Renew_Status {get; set;}
			[Column("Our_Registrar_YN",TypeName="bit")] public bool? Our_Registrar_YN {get; set;}
			[Column("dnsProviderId",TypeName="tinyint")] public byte? dnsProviderId {get; set;}
			[Column("emailProviderId",TypeName="tinyint")] public byte? emailProviderId {get; set;}
			[Column("urlProviderId",TypeName="tinyint")] public byte? urlProviderId {get; set;}
			[Column("ProviderName",TypeName="varchar")] public string ProviderName {get; set;}
			[Column("Computed_TLD",TypeName="varchar")] public string Computed_TLD {get; set;}
		}

		[Table("VW_TBL_HOSTED_DOMAIN",Schema="dbo")]
		public partial class VW_TBL_HOSTED_DOMAIN
		{
			[Column("hostID",TypeName="int")] public int hostID {get; set;}
			[Column("hostName",TypeName="varchar")] public string hostName {get; set;}
			[Column("userName",TypeName="nvarchar")] public string userName {get; set;}
			[Column("domainName",TypeName="varchar")] public string domainName {get; set;}
			[Column("computedTLD",TypeName="varchar")] public string computedTLD {get; set;}
			[Column("authorizationStatusID",TypeName="tinyint")] public byte? authorizationStatusID {get; set;}
			[Column("verificationStatusID",TypeName="tinyint")] public byte? verificationStatusID {get; set;}
			[Column("paymentStatusID",TypeName="tinyint")] public byte? paymentStatusID {get; set;}
			[Column("domainLockedYN",TypeName="bit")] public bool? domainLockedYN {get; set;}
			[Column("domainLockedReason",TypeName="varchar")] public string domainLockedReason {get; set;}
			[Column("domainLockedAdminComments",TypeName="varchar")] public string domainLockedAdminComments {get; set;}
			[Column("registrarName",TypeName="varchar")] public string registrarName {get; set;}
			[Column("recordCreatedDateTime",TypeName="datetime")] public DateTime? recordCreatedDateTime {get; set;}
			[Column("expiryDateTime",TypeName="datetime")] public DateTime? expiryDateTime {get; set;}
			[Column("verificationExpiryDateTime",TypeName="datetime")] public DateTime? verificationExpiryDateTime {get; set;}
			[Column("authorizationEmail",TypeName="varchar")] public string authorizationEmail {get; set;}
			[Column("authorizationInitiatedDateTime",TypeName="datetime")] public DateTime? authorizationInitiatedDateTime {get; set;}
			[Column("authorizationLastEmailSentDateTime",TypeName="datetime")] public DateTime? authorizationLastEmailSentDateTime {get; set;}
			[Column("authorizationIP",TypeName="varchar")] public string authorizationIP {get; set;}
			[Column("addedIP",TypeName="varchar")] public string addedIP {get; set;}
			[Column("dnsProviderId",TypeName="tinyint")] public byte? dnsProviderId {get; set;}
			[Column("emailProviderId",TypeName="tinyint")] public byte? emailProviderId {get; set;}
			[Column("urlProviderId",TypeName="tinyint")] public byte? urlProviderId {get; set;}
			[Column("verifyTryCount",TypeName="tinyint")] public byte? verifyTryCount {get; set;}
			[Column("lastVerifiedDateTime",TypeName="datetime")] public DateTime? lastVerifiedDateTime {get; set;}
			[Column("authorizationTryCount",TypeName="tinyint")] public byte? authorizationTryCount {get; set;}
			[Column("lastAuthorizationTryDateTime",TypeName="datetime")] public DateTime? lastAuthorizationTryDateTime {get; set;}
		}

		[Table("VW_TBL_USER",Schema="dbo")]
		public partial class VW_TBL_USER
		{
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("DisabledTill",TypeName="datetime")] public DateTime? DisabledTill {get; set;}
			[Column("UserNumID",TypeName="numeric")] public decimal UserNumID {get; set;}
			[Column("LoginTry",TypeName="smallint")] public short? LoginTry {get; set;}
			[Column("LoginIP",TypeName="nvarchar")] public string LoginIP {get; set;}
			[Column("FirstName",TypeName="nvarchar")] public string FirstName {get; set;}
			[Column("LastName",TypeName="nvarchar")] public string LastName {get; set;}
			[Column("LastTransaction",TypeName="datetime")] public DateTime? LastTransaction {get; set;}
			[Column("LastLogin",TypeName="datetime")] public DateTime? LastLogin {get; set;}
			[Column("UseDNS",TypeName="varchar")] public string UseDNS {get; set;}
			[Column("ForwardingType",TypeName="varchar")] public string ForwardingType {get; set;}
			[Column("ForwardingURL",TypeName="varchar")] public string ForwardingURL {get; set;}
			[Column("DefaultDNS1",TypeName="varchar")] public string DefaultDNS1 {get; set;}
			[Column("DefaultDNS2",TypeName="varchar")] public string DefaultDNS2 {get; set;}
			[Column("DefaultDNS3",TypeName="varchar")] public string DefaultDNS3 {get; set;}
			[Column("DefaultDNS5",TypeName="varchar")] public string DefaultDNS5 {get; set;}
			[Column("DefaultDNS4",TypeName="varchar")] public string DefaultDNS4 {get; set;}
			[Column("RegistrantNexus",TypeName="varchar")] public string RegistrantNexus {get; set;}
			[Column("RegistrantNexusCountry",TypeName="varchar")] public string RegistrantNexusCountry {get; set;}
			[Column("RegistrantPurpose",TypeName="varchar")] public string RegistrantPurpose {get; set;}
			[Column("CreateDateTime",TypeName="datetime")] public DateTime? CreateDateTime {get; set;}
			[Column("Purpose",TypeName="varchar")] public string Purpose {get; set;}
			[Column("IP",TypeName="varchar")] public string IP {get; set;}
			[Column("Parent_User_ID",TypeName="numeric")] public decimal? Parent_User_ID {get; set;}
			[Column("Parent_Reseller_ID",TypeName="numeric")] public decimal? Parent_Reseller_ID {get; set;}
			[Column("Closed_Reason",TypeName="varchar")] public string Closed_Reason {get; set;}
			[Column("Closed_Date",TypeName="datetime")] public DateTime? Closed_Date {get; set;}
			[Column("API_Enabled_YN",TypeName="bit")] public bool? API_Enabled_YN {get; set;}
			[Column("External_DisabledTill",TypeName="smalldatetime")] public DateTime? External_DisabledTill {get; set;}
			[Column("EMail",TypeName="nvarchar")] public string EMail {get; set;}
		}

	}
	namespace internallog
	{
		[Table("LogMessageActionHistory",Schema="internallog")]
		public partial class LogMessageActionHistory
		{
			[Column("autoId",TypeName="int")] public int autoId {get; set;}
			[Column("messageId",TypeName="int")] public int messageId {get; set;}
			[Column("actionBy",TypeName="varchar")] public string actionBy {get; set;}
			[Column("actionTime",TypeName="datetime")] public DateTime actionTime {get; set;}
			[Column("actionType",TypeName="varchar")] public string actionType {get; set;}
			[Column("actionValue",TypeName="varchar")] public string actionValue {get; set;}
		}

		[Table("LogMessageComments",Schema="internallog")]
		public partial class LogMessageComments
		{
			[Column("commentId",TypeName="int")] public int commentId {get; set;}
			[Column("messageId",TypeName="int")] public int messageId {get; set;}
			[Column("commentsBy",TypeName="varchar")] public string commentsBy {get; set;}
			[Column("createdDateTime",TypeName="datetime")] public DateTime? createdDateTime {get; set;}
			[Column("comments",TypeName="varchar")] public string comments {get; set;}
		}

		[Table("LogMessages",Schema="internallog")]
		public partial class LogMessages
		{
			[Column("messageId",TypeName="int")] public int messageId {get; set;}
			[Column("messageShort",TypeName="varchar")] public string messageShort {get; set;}
			[Column("message",TypeName="varchar")] public string message {get; set;}
			[Column("messageDescription",TypeName="varchar")] public string messageDescription {get; set;}
			[Column("messageFrom",TypeName="varchar")] public string messageFrom {get; set;}
			[Column("messageFrom2",TypeName="varchar")] public string messageFrom2 {get; set;}
			[Column("priority",TypeName="varchar")] public string priority {get; set;}
			[Column("messageType",TypeName="varchar")] public string messageType {get; set;}
			[Column("isRead",TypeName="varchar")] public string isRead {get; set;}
			[Column("department",TypeName="varchar")] public string department {get; set;}
			[Column("messageStatus",TypeName="varchar")] public string messageStatus {get; set;}
			[Column("startDateTime",TypeName="datetime")] public DateTime? startDateTime {get; set;}
		}

		[Table("MessagePriority",Schema="internallog")]
		public partial class MessagePriority
		{
			[Column("id",TypeName="int")] public int id {get; set;}
			[Column("name",TypeName="varchar")] public string name {get; set;}
			[Column("title",TypeName="varchar")] public string title {get; set;}
		}

		[Table("MessageStatus",Schema="internallog")]
		public partial class MessageStatus
		{
			[Column("id",TypeName="int")] public int id {get; set;}
			[Column("name",TypeName="varchar")] public string name {get; set;}
			[Column("title",TypeName="varchar")] public string title {get; set;}
		}

		[Table("MessageType",Schema="internallog")]
		public partial class MessageType
		{
			[Column("id",TypeName="int")] public int id {get; set;}
			[Column("name",TypeName="varchar")] public string name {get; set;}
			[Column("title",TypeName="varchar")] public string title {get; set;}
		}

	}
	namespace log
	{
		[Table("ActionLog",Schema="log")]
		public partial class ActionLog
		{
			[Column("Id",TypeName="uniqueidentifier")] public Guid Id {get; set;}
			[Column("Date",TypeName="datetime2")] public DateTime Date {get; set;}
			[Column("ActionId",TypeName="tinyint")] public byte ActionId {get; set;}
			[Column("EntityId",TypeName="smallint")] public short EntityId {get; set;}
			[Column("Actor",TypeName="nvarchar")] public string Actor {get; set;}
			[Column("MailBox",TypeName="nvarchar")] public string MailBox {get; set;}
			[Column("Plan",TypeName="nvarchar")] public string Plan {get; set;}
			[Column("Domain",TypeName="nvarchar")] public string Domain {get; set;}
			[Column("User",TypeName="nvarchar")] public string User {get; set;}
			[Column("OldValue",TypeName="nvarchar")] public string OldValue {get; set;}
			[Column("NewValue",TypeName="nvarchar")] public string NewValue {get; set;}
			[Column("Comment",TypeName="nvarchar")] public string Comment {get; set;}
			[Column("ActionResultSatus",TypeName="smallint")] public short ActionResultSatus {get; set;}
		}

		[Table("Actions",Schema="log")]
		public partial class Actions
		{
			[Column("Id",TypeName="tinyint")] public byte Id {get; set;}
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
			[Column("Description",TypeName="nvarchar")] public string Description {get; set;}
		}

		[Table("ActionsToEntities",Schema="log")]
		public partial class ActionsToEntities
		{
			[Column("ActionId",TypeName="tinyint")] public byte ActionId {get; set;}
			[Column("EntityId",TypeName="smallint")] public short EntityId {get; set;}
			[Column("Description",TypeName="nvarchar")] public string Description {get; set;}
		}

		[Table("ApiCommandEventsLog",Schema="log")]
		public partial class ApiCommandEventsLog
		{
			[Column("Id",TypeName="uniqueidentifier")] public Guid Id {get; set;}
			[Column("Date",TypeName="datetime2")] public DateTime Date {get; set;}
			[Column("ApiCommandId",TypeName="int")] public int? ApiCommandId {get; set;}
			[Column("EventResultStatusId",TypeName="int")] public int? EventResultStatusId {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("CommandParameters",TypeName="xml")] public string CommandParameters {get; set;}
			[Column("CommandResults",TypeName="xml")] public string CommandResults {get; set;}
			[Column("CommandErrors",TypeName="xml")] public string CommandErrors {get; set;}
			[Column("ActionId",TypeName="tinyint")] public byte? ActionId {get; set;}
			[Column("EntityId",TypeName="smallint")] public short? EntityId {get; set;}
			[Column("Domain",TypeName="nvarchar")] public string Domain {get; set;}
		}

		[Table("ApiCommands",Schema="log")]
		public partial class ApiCommands
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
		}

		[Table("CustomPrices",Schema="log")]
		public partial class CustomPrices
		{
			[Column("Id",TypeName="bigint")] public long Id {get; set;}
			[Column("AdminUserName",TypeName="nvarchar")] public string AdminUserName {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("Item",TypeName="nvarchar")] public string Item {get; set;}
			[Column("ActionType",TypeName="nvarchar")] public string ActionType {get; set;}
			[Column("SupposedPrice",TypeName="money")] public decimal SupposedPrice {get; set;}
			[Column("CustomPrice",TypeName="money")] public decimal CustomPrice {get; set;}
			[Column("Comments",TypeName="nvarchar")] public string Comments {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("LogDate",TypeName="datetime2")] public DateTime LogDate {get; set;}
			[Column("OrderId",TypeName="bigint")] public long OrderId {get; set;}
		}

		[Table("Entities",Schema="log")]
		public partial class Entities
		{
			[Column("Id",TypeName="smallint")] public short Id {get; set;}
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
			[Column("Description",TypeName="nvarchar")] public string Description {get; set;}
		}

		[Table("EventInitiators",Schema="log")]
		public partial class EventInitiators
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
		}

		[Table("EventResultStatuses",Schema="log")]
		public partial class EventResultStatuses
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
		}

		[Table("Repositories",Schema="log")]
		public partial class Repositories
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
		}

		[Table("RepositoryEventsLog",Schema="log")]
		public partial class RepositoryEventsLog
		{
			[Column("Id",TypeName="uniqueidentifier")] public Guid Id {get; set;}
			[Column("Date",TypeName="datetime2")] public DateTime Date {get; set;}
			[Column("EventInitiatorId",TypeName="int")] public int? EventInitiatorId {get; set;}
			[Column("EventResultStatusId",TypeName="int")] public int? EventResultStatusId {get; set;}
			[Column("ApiCommandEventId",TypeName="uniqueidentifier")] public Guid? ApiCommandEventId {get; set;}
			[Column("RepositoryMethodId",TypeName="int")] public int? RepositoryMethodId {get; set;}
			[Column("CallParameters",TypeName="xml")] public string CallParameters {get; set;}
			[Column("CallResults",TypeName="xml")] public string CallResults {get; set;}
			[Column("CallErrors",TypeName="xml")] public string CallErrors {get; set;}
			[Column("PreviousData",TypeName="xml")] public string PreviousData {get; set;}
			[Column("PreviousDataForCommand",TypeName="bit")] public bool? PreviousDataForCommand {get; set;}
		}

		[Table("RepositoryMethods",Schema="log")]
		public partial class RepositoryMethods
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("RepositoryId",TypeName="int")] public int? RepositoryId {get; set;}
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
		}

		[Table("VW_ActionsToEntities",Schema="log")]
		public partial class VW_ActionsToEntities
		{
			[Column("ActionId",TypeName="tinyint")] public byte ActionId {get; set;}
			[Column("EntityId",TypeName="smallint")] public short EntityId {get; set;}
			[Column("ActionName",TypeName="nvarchar")] public string ActionName {get; set;}
			[Column("EntityName",TypeName="nvarchar")] public string EntityName {get; set;}
			[Column("Description",TypeName="nvarchar")] public string Description {get; set;}
		}

		[Table("VW_BothActionLogs",Schema="log")]
		public partial class VW_BothActionLogs
		{
			[Column("Id",TypeName="uniqueidentifier")] public Guid Id {get; set;}
			[Column("Date",TypeName="datetime2")] public DateTime Date {get; set;}
			[Column("Action",TypeName="nvarchar")] public string Action {get; set;}
			[Column("Entity",TypeName="nvarchar")] public string Entity {get; set;}
			[Column("ActionId",TypeName="tinyint")] public byte? ActionId {get; set;}
			[Column("EntityId",TypeName="smallint")] public short? EntityId {get; set;}
			[Column("Actor",TypeName="nvarchar")] public string Actor {get; set;}
			[Column("Mailbox",TypeName="nvarchar")] public string Mailbox {get; set;}
			[Column("Plan",TypeName="nvarchar")] public string Plan {get; set;}
			[Column("Domain",TypeName="nvarchar")] public string Domain {get; set;}
			[Column("User",TypeName="nvarchar")] public string User {get; set;}
			[Column("OldValue",TypeName="nvarchar")] public string OldValue {get; set;}
			[Column("NewValue",TypeName="nvarchar")] public string NewValue {get; set;}
			[Column("Comment",TypeName="nvarchar")] public string Comment {get; set;}
			[Column("ActionResultSatus",TypeName="int")] public int ActionResultSatus {get; set;}
			[Column("IsUserLog",TypeName="bit")] public bool? IsUserLog {get; set;}
		}

	}
	namespace mail
	{
		[Table("Context_Admin_Roles",Schema="mail")]
		public partial class Context_Admin_Roles
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("ContextId",TypeName="int")] public int ContextId {get; set;}
			[Column("AdminRoleId",TypeName="int")] public int AdminRoleId {get; set;}
		}

		[Table("Contexts",Schema="mail")]
		public partial class Contexts
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("OXQuota",TypeName="int")] public int OXQuota {get; set;}
			[Column("CreatedDate",TypeName="datetime")] public DateTime CreatedDate {get; set;}
			[Column("ModifiedDate",TypeName="datetime")] public DateTime? ModifiedDate {get; set;}
			[Column("OXContextAdminUserName",TypeName="nvarchar")] public string OXContextAdminUserName {get; set;}
			[Column("OXContextAdminPassword",TypeName="nvarchar")] public string OXContextAdminPassword {get; set;}
			[Column("OwnerUserName",TypeName="nvarchar")] public string OwnerUserName {get; set;}
			[Column("Domain",TypeName="nvarchar")] public string Domain {get; set;}
			[Column("authorizationEmail",TypeName="nvarchar")] public string authorizationEmail {get; set;}
			[Column("authorizationKey",TypeName="nvarchar")] public string authorizationKey {get; set;}
			[Column("authorizationInitiatedDateTime",TypeName="datetime")] public DateTime? authorizationInitiatedDateTime {get; set;}
			[Column("authorizationTryCount",TypeName="tinyint")] public byte? authorizationTryCount {get; set;}
			[Column("IsAuthorization",TypeName="bit")] public bool? IsAuthorization {get; set;}
			[Column("IsThirdPartyDomain",TypeName="bit")] public bool? IsThirdPartyDomain {get; set;}
			[Column("IsDeleted",TypeName="bit")] public bool? IsDeleted {get; set;}
			[Column("IsAuthorizationEmailFailed",TypeName="bit")] public bool? IsAuthorizationEmailFailed {get; set;}
			[Column("adminContactTryCount",TypeName="tinyint")] public byte? adminContactTryCount {get; set;}
			[Column("HomeDir",TypeName="nvarchar")] public string HomeDir {get; set;}
			[Column("Host",TypeName="nvarchar")] public string Host {get; set;}
			[Column("Port",TypeName="int")] public int? Port {get; set;}
			[Column("RootUser",TypeName="nvarchar")] public string RootUser {get; set;}
		}

		[Table("FeatureSets",Schema="mail")]
		public partial class FeatureSets
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("FilestoreQuota",TypeName="int")] public int FilestoreQuota {get; set;}
			[Column("MailboxDefaultQuota",TypeName="int")] public int MailboxDefaultQuota {get; set;}
			[Column("InitialMailboxCount",TypeName="int")] public int InitialMailboxCount {get; set;}
			[Column("access-calendar",TypeName="bit")] public bool access_calendar {get; set;}
			[Column("access-contacts",TypeName="bit")] public bool access_contacts {get; set;}
			[Column("access-delegate-tasks",TypeName="bit")] public bool access_delegate_tasks {get; set;}
			[Column("access-edit-public-folder",TypeName="bit")] public bool access_edit_public_folder {get; set;}
			[Column("access-forum",TypeName="bit")] public bool access_forum {get; set;}
			[Column("access-ical",TypeName="bit")] public bool access_ical {get; set;}
			[Column("access-infostore",TypeName="bit")] public bool access_infostore {get; set;}
			[Column("access-pinboard-write",TypeName="bit")] public bool access_pinboard_write {get; set;}
			[Column("access-projects",TypeName="bit")] public bool access_projects {get; set;}
			[Column("access-read-create-shared-Folders",TypeName="bit")] public bool access_read_create_shared_Folders {get; set;}
			[Column("access-rss-bookmarks",TypeName="bit")] public bool access_rss_bookmarks {get; set;}
			[Column("access-rss-portal",TypeName="bit")] public bool access_rss_portal {get; set;}
			[Column("access-syncml",TypeName="bit")] public bool access_syncml {get; set;}
			[Column("access-active-sync",TypeName="bit")] public bool access_active_sync {get; set;}
			[Column("access-usm",TypeName="bit")] public bool access_usm {get; set;}
			[Column("access-tasks",TypeName="bit")] public bool access_tasks {get; set;}
			[Column("access-vcard",TypeName="bit")] public bool access_vcard {get; set;}
			[Column("access-webdav",TypeName="bit")] public bool access_webdav {get; set;}
			[Column("access-webdav-xml",TypeName="bit")] public bool access_webdav_xml {get; set;}
			[Column("access-webmail",TypeName="bit")] public bool access_webmail {get; set;}
			[Column("access-publication",TypeName="bit")] public bool access_publication {get; set;}
			[Column("access-subscription",TypeName="bit")] public bool access_subscription {get; set;}
			[Column("access-edit-group",TypeName="bit")] public bool access_edit_group {get; set;}
			[Column("access-edit-resource",TypeName="bit")] public bool access_edit_resource {get; set;}
			[Column("access-edit-password",TypeName="bit")] public bool access_edit_password {get; set;}
			[Column("access-collect-email-addresses",TypeName="bit")] public bool access_collect_email_addresses {get; set;}
			[Column("access-multiple-mail-accounts",TypeName="bit")] public bool access_multiple_mail_accounts {get; set;}
			[Column("access-global-address-book-disabled",TypeName="bit")] public bool access_global_address_book_disabled {get; set;}
			[Column("access--voipnow",TypeName="bit")] public bool access__voipnow {get; set;}
			[Column("access-public-folder-editable",TypeName="bit")] public bool access_public_folder_editable {get; set;}
			[Column("AccessCombinationName",TypeName="nvarchar")] public string AccessCombinationName {get; set;}
			[Column("gui_spam_filter_capabilities_enabled",TypeName="bit")] public bool gui_spam_filter_capabilities_enabled {get; set;}
			[Column("access-olox20",TypeName="bit")] public bool access_olox20 {get; set;}
			[Column("access-collect-emai-addresses",TypeName="bit")] public bool access_collect_emai_addresses {get; set;}
			[Column("AccessText",TypeName="bit")] public bool AccessText {get; set;}
			[Column("AccessDocumentPreview",TypeName="bit")] public bool AccessDocumentPreview {get; set;}
		}

		[Table("IMAPSetting",Schema="mail")]
		public partial class IMAPSetting
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("HomeDir",TypeName="nvarchar")] public string HomeDir {get; set;}
			[Column("Host",TypeName="nvarchar")] public string Host {get; set;}
			[Column("Port",TypeName="int")] public int Port {get; set;}
			[Column("RootUser",TypeName="nvarchar")] public string RootUser {get; set;}
			[Column("IsCurrent",TypeName="bit")] public bool IsCurrent {get; set;}
		}

		[Table("Mailboxes",Schema="mail")]
		public partial class Mailboxes
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Username",TypeName="nvarchar")] public string Username {get; set;}
			[Column("Password",TypeName="nvarchar")] public string Password {get; set;}
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
			[Column("Quota",TypeName="int")] public int Quota {get; set;}
			[Column("Domain",TypeName="nvarchar")] public string Domain {get; set;}
			[Column("SubscriptionsId",TypeName="int")] public int SubscriptionsId {get; set;}
			[Column("Created",TypeName="datetime")] public DateTime Created {get; set;}
			[Column("Modified",TypeName="datetime")] public DateTime? Modified {get; set;}
			[Column("LocalPart",TypeName="nvarchar")] public string LocalPart {get; set;}
			[Column("UserDisabled",TypeName="bit")] public bool UserDisabled {get; set;}
			[Column("Locked",TypeName="bit")] public bool Locked {get; set;}
			[Column("Alias",TypeName="nvarchar")] public string Alias {get; set;}
			[Column("CatchAllAddress",TypeName="nvarchar")] public string CatchAllAddress {get; set;}
			[Column("HomeDir",TypeName="nvarchar")] public string HomeDir {get; set;}
			[Column("Host",TypeName="nvarchar")] public string Host {get; set;}
			[Column("Port",TypeName="int")] public int? Port {get; set;}
			[Column("RootUser",TypeName="nvarchar")] public string RootUser {get; set;}
		}

		[Table("MailboxesPending",Schema="mail")]
		public partial class MailboxesPending
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Username",TypeName="nvarchar")] public string Username {get; set;}
			[Column("Alias",TypeName="nvarchar")] public string Alias {get; set;}
			[Column("CatchAllAddress",TypeName="nvarchar")] public string CatchAllAddress {get; set;}
			[Column("Password",TypeName="nvarchar")] public string Password {get; set;}
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
			[Column("Quota",TypeName="int")] public int Quota {get; set;}
			[Column("Domain",TypeName="nvarchar")] public string Domain {get; set;}
			[Column("SubscriptionsId",TypeName="int")] public int SubscriptionsId {get; set;}
			[Column("Created",TypeName="datetime")] public DateTime Created {get; set;}
			[Column("Modified",TypeName="datetime")] public DateTime? Modified {get; set;}
			[Column("LocalPart",TypeName="nvarchar")] public string LocalPart {get; set;}
			[Column("UserDisabled",TypeName="bit")] public bool UserDisabled {get; set;}
			[Column("Locked",TypeName="bit")] public bool Locked {get; set;}
			[Column("HomeDir",TypeName="nvarchar")] public string HomeDir {get; set;}
			[Column("Host",TypeName="nvarchar")] public string Host {get; set;}
			[Column("Port",TypeName="int")] public int? Port {get; set;}
			[Column("RootUser",TypeName="nvarchar")] public string RootUser {get; set;}
		}

		[Table("MailDomains",Schema="mail")]
		public partial class MailDomains
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("OXQuota",TypeName="int")] public int OXQuota {get; set;}
			[Column("Domain",TypeName="nvarchar")] public string Domain {get; set;}
			[Column("OwnerUserName",TypeName="nvarchar")] public string OwnerUserName {get; set;}
			[Column("CreatedDate",TypeName="datetime")] public DateTime CreatedDate {get; set;}
			[Column("ModifiedDate",TypeName="datetime")] public DateTime? ModifiedDate {get; set;}
			[Column("OXContextAdminUserName",TypeName="nvarchar")] public string OXContextAdminUserName {get; set;}
			[Column("OXContextAdminPassword",TypeName="nvarchar")] public string OXContextAdminPassword {get; set;}
		}

		[Table("MoreMailBoxPlans",Schema="mail")]
		public partial class MoreMailBoxPlans
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
			[Column("Description",TypeName="nvarchar")] public string Description {get; set;}
			[Column("mailBoxCount",TypeName="int")] public int? mailBoxCount {get; set;}
			[Column("Deleted",TypeName="bit")] public bool? Deleted {get; set;}
			[Column("CreatedDate",TypeName="datetime")] public DateTime? CreatedDate {get; set;}
			[Column("ModifiedDate",TypeName="datetime")] public DateTime? ModifiedDate {get; set;}
			[Column("DeletedDate",TypeName="datetime")] public DateTime? DeletedDate {get; set;}
		}

		[Table("OXCommands",Schema="mail")]
		public partial class OXCommands
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("OXCommand",TypeName="nvarchar")] public string OXCommand {get; set;}
			[Column("OXApiCommand",TypeName="nvarchar")] public string OXApiCommand {get; set;}
			[Column("OXGroupCommandId",TypeName="int")] public int OXGroupCommandId {get; set;}
			[Column("Description",TypeName="nvarchar")] public string Description {get; set;}
		}

		[Table("OXGroupCommands",Schema="mail")]
		public partial class OXGroupCommands
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("OXGroupCommand",TypeName="nvarchar")] public string OXGroupCommand {get; set;}
			[Column("Description",TypeName="nvarchar")] public string Description {get; set;}
		}

		[Table("PendingMailBoxCreateList",Schema="mail")]
		public partial class PendingMailBoxCreateList
		{
			[Column("Id",TypeName="numeric")] public decimal Id {get; set;}
			[Column("SubscriptionId",TypeName="int")] public int SubscriptionId {get; set;}
			[Column("Domain",TypeName="nvarchar")] public string Domain {get; set;}
			[Column("MailBoxInfo",TypeName="nvarchar")] public string MailBoxInfo {get; set;}
			[Column("OwnerUserName",TypeName="nvarchar")] public string OwnerUserName {get; set;}
		}

		[Table("Plans",Schema="mail")]
		public partial class Plans
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
			[Column("Description",TypeName="nvarchar")] public string Description {get; set;}
			[Column("FeatureSetsId",TypeName="int")] public int FeatureSetsId {get; set;}
			[Column("Outdated",TypeName="bit")] public bool Outdated {get; set;}
			[Column("CreatedDate",TypeName="datetime")] public DateTime CreatedDate {get; set;}
			[Column("ModifiedDate",TypeName="datetime")] public DateTime? ModifiedDate {get; set;}
			[Column("DeletedDate",TypeName="datetime")] public DateTime? DeletedDate {get; set;}
			[Column("Title",TypeName="varchar")] public string Title {get; set;}
			[Column("MaxAliasCount",TypeName="int")] public int? MaxAliasCount {get; set;}
			[Column("TrialPeriod",TypeName="int")] public int? TrialPeriod {get; set;}
		}

		[Table("SchedulerMonitor",Schema="mail")]
		public partial class SchedulerMonitor
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("IsRunning",TypeName="bit")] public bool IsRunning {get; set;}
			[Column("LastTimeRunning",TypeName="datetime")] public DateTime? LastTimeRunning {get; set;}
			[Column("AppVersion",TypeName="nvarchar")] public string AppVersion {get; set;}
		}

		[Table("SchedulerParameter",Schema="mail")]
		public partial class SchedulerParameter
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("IsUseTimeWorkParameter",TypeName="bit")] public bool IsUseTimeWorkParameter {get; set;}
			[Column("MetaTimeZone",TypeName="nvarchar")] public string MetaTimeZone {get; set;}
			[Column("StartTime",TypeName="nvarchar")] public string StartTime {get; set;}
			[Column("EndTime",TypeName="nvarchar")] public string EndTime {get; set;}
			[Column("IsUseOperationParameter",TypeName="bit")] public bool IsUseOperationParameter {get; set;}
			[Column("TimeOutOperation",TypeName="int")] public int TimeOutOperation {get; set;}
			[Column("CountStepOperation",TypeName="int")] public int CountStepOperation {get; set;}
			[Column("IsStop",TypeName="bit")] public bool IsStop {get; set;}
		}

		[Table("SubscriptionHistory",Schema="mail")]
		public partial class SubscriptionHistory
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("SubscriptionId",TypeName="int")] public int SubscriptionId {get; set;}
			[Column("OldStatus",TypeName="tinyint")] public byte OldStatus {get; set;}
			[Column("NewStatus",TypeName="tinyint")] public byte NewStatus {get; set;}
			[Column("OldOrderId",TypeName="numeric")] public decimal? OldOrderId {get; set;}
			[Column("NewOrderId",TypeName="numeric")] public decimal? NewOrderId {get; set;}
			[Column("ChangeDate",TypeName="datetime")] public DateTime ChangeDate {get; set;}
		}

		[Table("Subscriptions",Schema="mail")]
		public partial class Subscriptions
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("ContextsId",TypeName="int")] public int ContextsId {get; set;}
			[Column("PlanId",TypeName="int")] public int PlanId {get; set;}
			[Column("Created",TypeName="datetime")] public DateTime Created {get; set;}
			[Column("Modified",TypeName="datetime")] public DateTime? Modified {get; set;}
			[Column("ExpirationDate",TypeName="datetime")] public DateTime ExpirationDate {get; set;}
			[Column("TotalMailbox",TypeName="int")] public int? TotalMailbox {get; set;}
			[Column("Status",TypeName="int")] public int Status {get; set;}
			[Column("OrderId",TypeName="numeric")] public decimal? OrderId {get; set;}
			[Column("OrderItemId",TypeName="numeric")] public decimal? OrderItemId {get; set;}
			[Column("BillingCycle",TypeName="int")] public int? BillingCycle {get; set;}
			[Column("SendBeforeDays",TypeName="int")] public int? SendBeforeDays {get; set;}
			[Column("IsTrialPlan",TypeName="bit")] public bool? IsTrialPlan {get; set;}
			[Column("AutoRenew",TypeName="bit")] public bool? AutoRenew {get; set;}
			[Column("TrialBillingCycle",TypeName="int")] public int? TrialBillingCycle {get; set;}
			[Column("StartExpiredDate",TypeName="datetime")] public DateTime? StartExpiredDate {get; set;}
			[Column("StartLockForAbuseDate",TypeName="datetime")] public DateTime? StartLockForAbuseDate {get; set;}
			[Column("IsIntentionally",TypeName="bit")] public bool? IsIntentionally {get; set;}
		}

		[Table("UpdateMailboxFeatureSetLog",Schema="mail")]
		public partial class UpdateMailboxFeatureSetLog
		{
			[Column("Id",TypeName="uniqueidentifier")] public Guid Id {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Domain",TypeName="nvarchar")] public string Domain {get; set;}
			[Column("PlanId",TypeName="int")] public int PlanId {get; set;}
			[Column("ContextId",TypeName="int")] public int ContextId {get; set;}
			[Column("ContextAdminUserName",TypeName="nvarchar")] public string ContextAdminUserName {get; set;}
			[Column("ContextAdminPassword",TypeName="nvarchar")] public string ContextAdminPassword {get; set;}
			[Column("OwnerUserName",TypeName="nvarchar")] public string OwnerUserName {get; set;}
			[Column("ErrorMessage",TypeName="nvarchar")] public string ErrorMessage {get; set;}
			[Column("IsSuccess",TypeName="int")] public int IsSuccess {get; set;}
		}

		[Table("UpdateMailboxFeatureSetTmp",Schema="mail")]
		public partial class UpdateMailboxFeatureSetTmp
		{
			[Column("Id",TypeName="uniqueidentifier")] public Guid Id {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("Domain",TypeName="nvarchar")] public string Domain {get; set;}
			[Column("PlanId",TypeName="int")] public int PlanId {get; set;}
			[Column("ContextId",TypeName="int")] public int ContextId {get; set;}
			[Column("ContextAdminUserName",TypeName="nvarchar")] public string ContextAdminUserName {get; set;}
			[Column("ContextAdminPassword",TypeName="nvarchar")] public string ContextAdminPassword {get; set;}
			[Column("OwnerUserName",TypeName="nvarchar")] public string OwnerUserName {get; set;}
			[Column("ErrorMessage",TypeName="nvarchar")] public string ErrorMessage {get; set;}
			[Column("IsSuccess",TypeName="int")] public int IsSuccess {get; set;}
		}

		[Table("VW_AdminMailDomains",Schema="mail")]
		public partial class VW_AdminMailDomains
		{
			[Column("Id",TypeName="int")] public int Id {get; set;}
			[Column("OXQuota",TypeName="int")] public int OXQuota {get; set;}
			[Column("Domain",TypeName="nvarchar")] public string Domain {get; set;}
			[Column("OwnerUserName",TypeName="nvarchar")] public string OwnerUserName {get; set;}
			[Column("CreatedDate",TypeName="datetime")] public DateTime CreatedDate {get; set;}
			[Column("ModifiedDate",TypeName="datetime")] public DateTime? ModifiedDate {get; set;}
			[Column("OXContextAdminUserName",TypeName="nvarchar")] public string OXContextAdminUserName {get; set;}
			[Column("OXContextAdminPassword",TypeName="nvarchar")] public string OXContextAdminPassword {get; set;}
		}

	}
	namespace messaging
	{
		[Table("CompanySettings",Schema="messaging")]
		public partial class CompanySettings
		{
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
			[Column("FromEmail",TypeName="nvarchar")] public string FromEmail {get; set;}
		}

		[Table("Destination",Schema="messaging")]
		public partial class Destination
		{
			[Column("Id",TypeName="uniqueidentifier")] public Guid Id {get; set;}
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
		}

		[Table("DestinationToCategoryToUser",Schema="messaging")]
		public partial class DestinationToCategoryToUser
		{
			[Column("Id",TypeName="uniqueidentifier")] public Guid Id {get; set;}
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("EventTypeCategoryId",TypeName="uniqueidentifier")] public Guid EventTypeCategoryId {get; set;}
			[Column("DestinationId",TypeName="uniqueidentifier")] public Guid DestinationId {get; set;}
		}

		[Table("EventType",Schema="messaging")]
		public partial class EventType
		{
			[Column("Id",TypeName="uniqueidentifier")] public Guid Id {get; set;}
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
			[Column("EventTypeCategoryId",TypeName="uniqueidentifier")] public Guid EventTypeCategoryId {get; set;}
		}

		[Table("EventTypeCategory",Schema="messaging")]
		public partial class EventTypeCategory
		{
			[Column("Id",TypeName="uniqueidentifier")] public Guid Id {get; set;}
			[Column("Name",TypeName="nvarchar")] public string Name {get; set;}
			[Column("Urgent",TypeName="bit")] public bool Urgent {get; set;}
		}

		[Table("TimeZone",Schema="messaging")]
		public partial class TimeZone
		{
			[Column("Id",TypeName="uniqueidentifier")] public Guid Id {get; set;}
			[Column("TimeZoneSystemId",TypeName="nvarchar")] public string TimeZoneSystemId {get; set;}
			[Column("DisplayName",TypeName="nvarchar")] public string DisplayName {get; set;}
			[Column("BaseUtcOffsetMinutes",TypeName="int")] public int BaseUtcOffsetMinutes {get; set;}
		}

		[Table("UserSettings",Schema="messaging")]
		public partial class UserSettings
		{
			[Column("UserName",TypeName="nvarchar")] public string UserName {get; set;}
			[Column("TimeZoneId",TypeName="uniqueidentifier")] public Guid? TimeZoneId {get; set;}
			[Column("Email",TypeName="nvarchar")] public string Email {get; set;}
			[Column("Phone",TypeName="nvarchar")] public string Phone {get; set;}
		}

	}
	namespace reports
	{
		[Table("TEMP_DOMAIN_WITH_ASSOCIATE_NAMESERVERS",Schema="reports")]
		public partial class TEMP_DOMAIN_WITH_ASSOCIATE_NAMESERVERS
		{
			[Column("UserName",TypeName="varchar")] public string UserName {get; set;}
			[Column("Domainname",TypeName="varchar")] public string Domainname {get; set;}
			[Column("Nameservers",TypeName="varchar")] public string Nameservers {get; set;}
			[Column("IsProcessed",TypeName="bit")] public bool? IsProcessed {get; set;}
		}

	}
	namespace temp
	{
		[Table("BLFixNCExpDate",Schema="temp")]
		public partial class BLFixNCExpDate
		{
			[Column("usernumid",TypeName="float")] public double? usernumid {get; set;}
			[Column("status",TypeName="nvarchar")] public string status {get; set;}
			[Column("FirstName",TypeName="nvarchar")] public string FirstName {get; set;}
			[Column("LastName",TypeName="nvarchar")] public string LastName {get; set;}
			[Column("EMail",TypeName="nvarchar")] public string EMail {get; set;}
			[Column("product",TypeName="nvarchar")] public string product {get; set;}
			[Column("productstatus",TypeName="nvarchar")] public string productstatus {get; set;}
			[Column("Product1",TypeName="datetime")] public DateTime? Product1 {get; set;}
			[Column("EXPMatcheseNom'sDB",TypeName="nvarchar")] public string EXPMatcheseNomsDB {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("Computed_Expire_Date_Time",TypeName="datetime")] public DateTime? Computed_Expire_Date_Time {get; set;}
			[Column("F12",TypeName="nvarchar")] public string F12 {get; set;}
			[Column("OneNomList",TypeName="nvarchar")] public string OneNomList {get; set;}
			[Column("DomainswithBusinessListing",TypeName="nvarchar")] public string DomainswithBusinessListing {get; set;}
			[Column("Status1",TypeName="nvarchar")] public string Status1 {get; set;}
			[Column("Expiration",TypeName="datetime")] public DateTime? Expiration {get; set;}
			[Column("Visibility",TypeName="nvarchar")] public string Visibility {get; set;}
			[Column("AutoRenew",TypeName="nvarchar")] public string AutoRenew {get; set;}
		}

		[Table("OrgPriceChange",Schema="temp")]
		public partial class OrgPriceChange
		{
			[Column("OptionName",TypeName="varchar")] public string OptionName {get; set;}
			[Column("Options",TypeName="char")] public string Options {get; set;}
			[Column("Duration",TypeName="tinyint")] public byte? Duration {get; set;}
			[Column("DurationType",TypeName="varchar")] public string DurationType {get; set;}
			[Column("Actionid",TypeName="varchar")] public string Actionid {get; set;}
			[Column("productname",TypeName="varchar")] public string productname {get; set;}
			[Column("price",TypeName="money")] public decimal? price {get; set;}
		}

		[Table("TRUSTeFixNCExpDateandStatus",Schema="temp")]
		public partial class TRUSTeFixNCExpDateandStatus
		{
			[Column("usernumid",TypeName="float")] public double? usernumid {get; set;}
			[Column("status",TypeName="nvarchar")] public string status {get; set;}
			[Column("FirstName",TypeName="nvarchar")] public string FirstName {get; set;}
			[Column("LastName",TypeName="nvarchar")] public string LastName {get; set;}
			[Column("EMail",TypeName="nvarchar")] public string EMail {get; set;}
			[Column("product",TypeName="nvarchar")] public string product {get; set;}
			[Column("productstatusatNC",TypeName="nvarchar")] public string productstatusatNC {get; set;}
			[Column("ProductexpirydateatNC",TypeName="datetime")] public DateTime? ProductexpirydateatNC {get; set;}
			[Column("DomainName",TypeName="nvarchar")] public string DomainName {get; set;}
			[Column("OneNom",TypeName="nvarchar")] public string OneNom {get; set;}
			[Column("Domain",TypeName="nvarchar")] public string Domain {get; set;}
			[Column("Type",TypeName="nvarchar")] public string Type {get; set;}
			[Column("StatusateNom",TypeName="nvarchar")] public string StatusateNom {get; set;}
			[Column("AutoRenewateNom",TypeName="nvarchar")] public string AutoRenewateNom {get; set;}
			[Column("ExpirationateNom",TypeName="datetime")] public DateTime? ExpirationateNom {get; set;}
			[Column("isexpirydatematched",TypeName="bit")] public bool isexpirydatematched {get; set;}
			[Column("isstatusmatched",TypeName="bit")] public bool isstatusmatched {get; set;}
			[Column("expirydate",TypeName="datetime")] public DateTime? expirydate {get; set;}
			[Column("enomstatus",TypeName="varchar")] public string enomstatus {get; set;}
		}

	}

	public abstract class NamecheapCoreProcedures
	{
		[Procedure("_SAVEBIG_COUPON_STATS", "dbo")] public abstract void _SAVEBIG_COUPON_STATS();
		[Procedure("_SAVEBIG_COUPON_STATS_v2", "dbo")] public abstract void _SAVEBIG_COUPON_STATS_v2();
		[Procedure("AddOrEditIpConfig", "dbo")] public abstract void AddOrEditIpConfig([Parameter("operationType", "varchar", ParameterDirection.Input)] string @operationType, [Parameter("autoID", "int", ParameterDirection.Input)] int? @autoID, [Parameter("applicationID", "int", ParameterDirection.Input)] int? @applicationID, [Parameter("startingIP", "bigint", ParameterDirection.Input)] long? @startingIP, [Parameter("endingIP", "bigint", ParameterDirection.Input)] long? @endingIP, [Parameter("minuteCounter", "smallint", ParameterDirection.Input)] short? @minuteCounter, [Parameter("hourCounter", "int", ParameterDirection.Input)] int? @hourCounter, [Parameter("dayCounter", "int", ParameterDirection.Input)] int? @dayCounter, [Parameter("isActive", "bit", ParameterDirection.Input)] bool? @isActive);
		[Procedure("AddOrEditKeyConfig", "dbo")] public abstract void AddOrEditKeyConfig([Parameter("operationType", "varchar", ParameterDirection.Input)] string @operationType, [Parameter("autoID", "int", ParameterDirection.Input)] int? @autoID, [Parameter("applicationID", "int", ParameterDirection.Input)] int? @applicationID, [Parameter("keyword", "nvarchar", ParameterDirection.Input)] string @keyword, [Parameter("minuteCounter", "smallint", ParameterDirection.Input)] short? @minuteCounter, [Parameter("hourCounter", "int", ParameterDirection.Input)] int? @hourCounter, [Parameter("dayCounter", "int", ParameterDirection.Input)] int? @dayCounter);
		[Procedure("adhoc_DisableAdminUser", "dbo")] public abstract void adhoc_DisableAdminUser([Parameter("AdminUserName", "varchar", ParameterDirection.Input)] string @AdminUserName, [Parameter("Secret", "varchar", ParameterDirection.Input)] string @Secret);
		[Procedure("Check_RenewMailNotice_IsDisabled_ForUser", "dbo")] public abstract void Check_RenewMailNotice_IsDisabled_ForUser([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("CheckIPsAlreadyConfigured", "dbo")] public abstract void CheckIPsAlreadyConfigured([Parameter("startIp", "bigint", ParameterDirection.Input)] long? @startIp, [Parameter("endIp", "bigint", ParameterDirection.Input)] long? @endIp, [Parameter("autoId", "int", ParameterDirection.Input)] int? @autoId);
		[Procedure("CheckKeyAlreadyConfigured", "dbo")] public abstract void CheckKeyAlreadyConfigured([Parameter("keyword", "nvarchar", ParameterDirection.Input)] string @keyword, [Parameter("autoId", "int", ParameterDirection.Input)] int? @autoId);
		[Procedure("DeleteIpConfig", "dbo")] public abstract void DeleteIpConfig([Parameter("autoId", "int", ParameterDirection.Input)] int? @autoId);
		[Procedure("DeleteKeyConfig", "dbo")] public abstract void DeleteKeyConfig([Parameter("autoId", "int", ParameterDirection.Input)] int? @autoId);
		[Procedure("DeleteMarkedAsDeletedEntries", "dbo")] public abstract void DeleteMarkedAsDeletedEntries([Parameter("applicationName", "nvarchar", ParameterDirection.Input)] string @applicationName, [Parameter("configType", "varchar", ParameterDirection.Input)] string @configType, [Parameter("lastUpdatedDateTime", "datetime", ParameterDirection.Input)] DateTime? @lastUpdatedDateTime);
		[Procedure("GetAllIPConfigurations", "dbo")] public abstract void GetAllIPConfigurations([Parameter("applicationName", "nvarchar", ParameterDirection.Input)] string @applicationName, [Parameter("lastUpdatedDateTime", "datetime", ParameterDirection.Input)] DateTime? @lastUpdatedDateTime);
		[Procedure("GetAllKeyConfigurations", "dbo")] public abstract void GetAllKeyConfigurations([Parameter("applicationName", "nvarchar", ParameterDirection.Input)] string @applicationName, [Parameter("lastUpdatedDateTime", "datetime", ParameterDirection.Input)] DateTime? @lastUpdatedDateTime);
		[Procedure("GetApplicaionList", "dbo")] public abstract void GetApplicaionList();
		[Procedure("GetGlobalConfiguration", "dbo")] public abstract void GetGlobalConfiguration([Parameter("applicationName", "nvarchar", ParameterDirection.Input)] string @applicationName);
		[Procedure("GetIPConfigurationList", "dbo")] public abstract void GetIPConfigurationList([Parameter("ipAddress", "bigint", ParameterDirection.Input)] long? @ipAddress, [Parameter("isActive", "bit", ParameterDirection.Input)] bool? @isActive, [Parameter("applicationID", "int", ParameterDirection.Input)] int? @applicationID, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize);
		[Procedure("GetIPConfigurationListex", "dbo")] public abstract void GetIPConfigurationListex([Parameter("ipAddress", "bigint", ParameterDirection.Input)] long? @ipAddress, [Parameter("isActive", "bit", ParameterDirection.Input)] bool? @isActive, [Parameter("applicationID", "int", ParameterDirection.Input)] int? @applicationID, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize);
		[Procedure("GetKeyConfigurationList", "dbo")] public abstract void GetKeyConfigurationList([Parameter("keyword", "nvarchar", ParameterDirection.Input)] string @keyword, [Parameter("applicationID", "int", ParameterDirection.Input)] int? @applicationID, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize);
		[Procedure("GetNamecheapDealsPartnerDetails", "dbo")] public abstract void GetNamecheapDealsPartnerDetails([Parameter("partnerName", "varchar", ParameterDirection.Input)] string @partnerName);
		[Procedure("PromotionDetailsTemplate", "dbo")] public abstract void PromotionDetailsTemplate([Parameter("PromotionCode", "varchar", ParameterDirection.Input)] string @PromotionCode, [Parameter("startDate", "datetime", ParameterDirection.Input)] DateTime? @startDate, [Parameter("enddate", "datetime", ParameterDirection.Input)] DateTime? @enddate);
		[Procedure("UDF_DOES_USER_HAVE_ANY_ORDER", "dbo")] public abstract void UDF_DOES_USER_HAVE_ANY_ORDER([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("userHasOrder", "bit", ParameterDirection.InputOutput)] bool? @userHasOrder);
		[Procedure("USP_ACT_OR_DEACT_SECURITY_SETTINGS", "dbo")] public abstract void USP_ACT_OR_DEACT_SECURITY_SETTINGS([Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName, [Parameter("sEnteredKey", "nvarchar", ParameterDirection.Input)] string @sEnteredKey);
		[Procedure("usp_Activate_Change_Reseller_Level", "dbo")] public abstract void usp_Activate_Change_Reseller_Level([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("UserId", "numeric", ParameterDirection.Input)] decimal? @UserId, [Parameter("LevelId", "int", ParameterDirection.Input)] int? @LevelId, [Parameter("Comment", "nvarchar", ParameterDirection.Input)] string @Comment, [Parameter("AdminComment", "nvarchar", ParameterDirection.Input)] string @AdminComment, [Parameter("ActionFlag", "varchar", ParameterDirection.Input)] string @ActionFlag, [Parameter("ActionStatus", "varchar", ParameterDirection.Input)] string @ActionStatus);
		[Procedure("usp_Activate_DeActivate_Reseller_Status", "dbo")] public abstract void usp_Activate_DeActivate_Reseller_Status([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("UserId", "numeric", ParameterDirection.Input)] decimal? @UserId, [Parameter("Comment", "nvarchar", ParameterDirection.Input)] string @Comment, [Parameter("AdminComment", "nvarchar", ParameterDirection.Input)] string @AdminComment, [Parameter("ActionFlag", "varchar", ParameterDirection.Input)] string @ActionFlag, [Parameter("ActionStatus", "varchar", ParameterDirection.Input)] string @ActionStatus);
		[Procedure("USP_ACTIVATE_DELETE_CATEGORY", "dbo")] public abstract void USP_ACTIVATE_DELETE_CATEGORY([Parameter("categoryid", "int", ParameterDirection.Input)] int? @categoryid, [Parameter("operation", "varchar", ParameterDirection.Input)] string @operation);
		[Procedure("usp_Activate_Namecheap_Bonus", "dbo")] public abstract void usp_Activate_Namecheap_Bonus([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("partnerType", "varchar", ParameterDirection.Input)] string @partnerType, [Parameter("amount", "money", ParameterDirection.Input)] decimal? @amount, [Parameter("userIp", "varchar", ParameterDirection.Input)] string @userIp, [Parameter("overideCouponValue", "int", ParameterDirection.Input)] int? @overideCouponValue);
		[Procedure("usp_ActivateNamecheapsDealsCoupon", "dbo")] public abstract void usp_ActivateNamecheapsDealsCoupon([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("partnerName", "varchar", ParameterDirection.Input)] string @partnerName, [Parameter("amountSpentTillDate", "money", ParameterDirection.Input)] decimal? @amountSpentTillDate, [Parameter("userIp", "varchar", ParameterDirection.Input)] string @userIp);
		[Procedure("USP_ADD_DestinationToCategoryToUser", "dbo")] public abstract void USP_ADD_DestinationToCategoryToUser([Parameter("categoryId", "uniqueidentifier", ParameterDirection.Input)] Guid? @categoryId, [Parameter("destinationId", "uniqueidentifier", ParameterDirection.Input)] Guid? @destinationId, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName);
		[Procedure("Usp_Add_Dnssec", "dbo")] public abstract void Usp_Add_Dnssec([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("xmlData", "xml", ParameterDirection.Input)] string @xmlData);
		[Procedure("USP_ADD_EDIT_PRICING", "dbo")] public abstract void USP_ADD_EDIT_PRICING([Parameter("sItem", "varchar", ParameterDirection.Input)] string @sItem, [Parameter("iStartYear", "int", ParameterDirection.Input)] int? @iStartYear, [Parameter("iEndYear", "int", ParameterDirection.Input)] int? @iEndYear, [Parameter("iMinQty", "int", ParameterDirection.Input)] int? @iMinQty, [Parameter("iMaxQty", "int", ParameterDirection.Input)] int? @iMaxQty, [Parameter("sActionID", "varchar", ParameterDirection.Input)] string @sActionID, [Parameter("iPricePerYear", "smallmoney", ParameterDirection.Input)] decimal? @iPricePerYear, [Parameter("ID", "int", ParameterDirection.Input)] int? @ID, [Parameter("sOperation", "varchar", ParameterDirection.Input)] string @sOperation);
		[Procedure("USP_ADD_EDIT_USERPRICING", "dbo")] public abstract void USP_ADD_EDIT_USERPRICING([Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName, [Parameter("iTLDID", "int", ParameterDirection.Input)] int? @iTLDID, [Parameter("UserPricePerYear", "smallmoney", ParameterDirection.Input)] decimal? @UserPricePerYear, [Parameter("PricingHint", "varchar", ParameterDirection.Input)] string @PricingHint, [Parameter("sOperation", "varchar", ParameterDirection.Input)] string @sOperation);
		[Procedure("USP_ADD_ENOMERROR_LOG", "dbo")] public abstract void USP_ADD_ENOMERROR_LOG([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("CommandName", "varchar", ParameterDirection.Input)] string @CommandName, [Parameter("ResponseCode", "nvarchar", ParameterDirection.Input)] string @ResponseCode, [Parameter("ResponseString", "nvarchar", ParameterDirection.Input)] string @ResponseString);
		[Procedure("USP_ADD_NEW_SSLPARTNER_USER", "dbo")] public abstract void USP_ADD_NEW_SSLPARTNER_USER([Parameter("userID", "numeric", ParameterDirection.Input)] decimal? @userID, [Parameter("Resellone_UserID", "int", ParameterDirection.Input)] int? @Resellone_UserID, [Parameter("Resellone_UserName", "nvarchar", ParameterDirection.Input)] string @Resellone_UserName, [Parameter("Resellone_Password", "nvarchar", ParameterDirection.Input)] string @Resellone_Password);
		[Procedure("USP_ADD_TRANSACTION", "dbo")] public abstract void USP_ADD_TRANSACTION([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Transaction_Type", "nvarchar", ParameterDirection.Input)] string @Transaction_Type, [Parameter("PayerEmail", "nvarchar", ParameterDirection.Input)] string @PayerEmail, [Parameter("GrossAmount", "money", ParameterDirection.Input)] decimal? @GrossAmount, [Parameter("Comments", "nvarchar", ParameterDirection.Input)] string @Comments, [Parameter("OrderRef_ID", "nvarchar", ParameterDirection.Input)] string @OrderRef_ID, [Parameter("CC_Trans_ID", "nvarchar", ParameterDirection.Input)] string @CC_Trans_ID, [Parameter("CC_Status", "nvarchar", ParameterDirection.Input)] string @CC_Status, [Parameter("PendingReason", "nvarchar", ParameterDirection.Input)] string @PendingReason, [Parameter("PaypalPaymentType", "nvarchar", ParameterDirection.Input)] string @PaypalPaymentType, [Parameter("ParentCC_Trans_ID", "nvarchar", ParameterDirection.Input)] string @ParentCC_Trans_ID);
		[Procedure("USP_ADD_VOUCHER", "dbo")] public abstract void USP_ADD_VOUCHER([Parameter("ExpirationDate", "datetime", ParameterDirection.Input)] DateTime? @ExpirationDate, [Parameter("isactive", "bit", ParameterDirection.Input)] bool? @isactive, [Parameter("productName", "varchar", ParameterDirection.Input)] string @productName, [Parameter("qty", "int", ParameterDirection.Input)] int? @qty);
		[Procedure("USP_ADD_WG_EMAIL_QUEUE", "dbo")] public abstract void USP_ADD_WG_EMAIL_QUEUE([Parameter("email", "varchar", ParameterDirection.Input)] string @email, [Parameter("forward_To_Email", "varchar", ParameterDirection.Input)] string @forward_To_Email, [Parameter("operation", "varchar", ParameterDirection.Input)] string @operation);
		[Procedure("usp_AddCardToUserOptions", "dbo")] public abstract void usp_AddCardToUserOptions([Parameter("creditCardId", "uniqueidentifier", ParameterDirection.Input)] Guid? @creditCardId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_ADDOREDIT_HOSTING_USER_DETAILS", "dbo")] public abstract void USP_ADDOREDIT_HOSTING_USER_DETAILS([Parameter("operationType", "varchar", ParameterDirection.Input)] string @operationType, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("autoId", "int", ParameterDirection.Input)] int? @autoId, [Parameter("clientID", "int", ParameterDirection.Input)] int? @clientID, [Parameter("isActive", "bit", ParameterDirection.Input)] bool? @isActive, [Parameter("hostingProvider", "varchar", ParameterDirection.Input)] string @hostingProvider);
		[Procedure("usp_AddOXSubscriptionTrialInOrderTable", "dbo")] public abstract void usp_AddOXSubscriptionTrialInOrderTable([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("trialPlanName", "varchar", ParameterDirection.Input)] string @trialPlanName, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip);
		[Procedure("usp_AddResellerInitialActivationDetails", "dbo")] public abstract void usp_AddResellerInitialActivationDetails([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("ActivationDate", "datetime", ParameterDirection.Input)] DateTime? @ActivationDate, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip, [Parameter("initialLevel", "varchar", ParameterDirection.Input)] string @initialLevel, [Parameter("source", "varchar", ParameterDirection.Input)] string @source);
		[Procedure("usp_AddTransaction", "dbo")] public abstract void usp_AddTransaction([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("TransactionType", "nvarchar", ParameterDirection.Input)] string @TransactionType, [Parameter("PaymentSource", "varchar", ParameterDirection.Input)] string @PaymentSource, [Parameter("AssociatedOrderID", "numeric", ParameterDirection.Input)] decimal? @AssociatedOrderID, [Parameter("PayerEMail", "varchar", ParameterDirection.Input)] string @PayerEMail, [Parameter("CCInitialAmount", "money", ParameterDirection.Input)] decimal? @CCInitialAmount, [Parameter("RefundAmount", "money", ParameterDirection.Input)] decimal? @RefundAmount, [Parameter("RefundYN", "bit", ParameterDirection.Input)] bool? @RefundYN, [Parameter("CompletedYN", "bit", ParameterDirection.Input)] bool? @CompletedYN, [Parameter("Comments", "nvarchar", ParameterDirection.Input)] string @Comments, [Parameter("OrderRefID", "varchar", ParameterDirection.Input)] string @OrderRefID, [Parameter("EndDateTime", "datetime", ParameterDirection.Input)] DateTime? @EndDateTime, [Parameter("CCOrderID", "varchar", ParameterDirection.Input)] string @CCOrderID, [Parameter("CCTransID", "varchar", ParameterDirection.Input)] string @CCTransID, [Parameter("CCStatus", "nvarchar", ParameterDirection.Input)] string @CCStatus, [Parameter("PaypalPendingReason", "nvarchar", ParameterDirection.Input)] string @PaypalPendingReason, [Parameter("PaypalPaymentType", "nvarchar", ParameterDirection.Input)] string @PaypalPaymentType, [Parameter("CCLast4", "nvarchar", ParameterDirection.Input)] string @CCLast4, [Parameter("CCNameOnCard", "nvarchar", ParameterDirection.Input)] string @CCNameOnCard, [Parameter("OrderIP", "nvarchar", ParameterDirection.Input)] string @OrderIP, [Parameter("OrderZip", "nvarchar", ParameterDirection.Input)] string @OrderZip, [Parameter("OrderError", "nvarchar", ParameterDirection.Input)] string @OrderError, [Parameter("RelatedTransactionID", "int", ParameterDirection.Input)] int? @RelatedTransactionID, [Parameter("IsAddedByAdmin", "bit", ParameterDirection.Input)] bool? @IsAddedByAdmin, [Parameter("DoNotRefund", "bit", ParameterDirection.Input)] bool? @DoNotRefund, [Parameter("PaymentProviderToken", "varchar", ParameterDirection.Input)] string @PaymentProviderToken, [Parameter("PaymentProviderStatus", "varchar", ParameterDirection.Input)] string @PaymentProviderStatus, [Parameter("ErrInfo", "varchar", ParameterDirection.Input)] string @ErrInfo, [Parameter("RawData", "text", ParameterDirection.Input)] string @RawData, [Parameter("CancelByRefundYN", "bit", ParameterDirection.Input)] bool? @CancelByRefundYN);
		[Procedure("usp_Adhoc_AddNewGeoTrustContract", "dbo")] public abstract void usp_Adhoc_AddNewGeoTrustContract([Parameter("New_Contract_Id", "varchar", ParameterDirection.Input)] string @New_Contract_Id);
		[Procedure("USP_ADHOC_CAPTCHA_ON_OFF", "dbo")] public abstract void USP_ADHOC_CAPTCHA_ON_OFF([Parameter("Signup_Captcha_On_Or_Off", "varchar", ParameterDirection.Input)] string @Signup_Captcha_On_Or_Off, [Parameter("Signup_Captcha_Type", "varchar", ParameterDirection.Input)] string @Signup_Captcha_Type, [Parameter("FirstOrder_Captcha_On_Or_Off", "varchar", ParameterDirection.Input)] string @FirstOrder_Captcha_On_Or_Off, [Parameter("FirstOrder_Captcha_Type", "varchar", ParameterDirection.Input)] string @FirstOrder_Captcha_Type);
		[Procedure("usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser", "dbo")] public abstract void usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser([Parameter("orderId", "bigint", ParameterDirection.Input)] long? @orderId);
		[Procedure("usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_Aug13LifeHackerPromo", "dbo")] public abstract void usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_Aug13LifeHackerPromo([Parameter("orderId", "bigint", ParameterDirection.Input)] long? @orderId);
		[Procedure("usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_August2012Promo", "dbo")] public abstract void usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_August2012Promo([Parameter("orderId", "bigint", ParameterDirection.Input)] long? @orderId);
		[Procedure("usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_Base", "dbo")] public abstract void usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_Base([Parameter("orderId", "bigint", ParameterDirection.Input)] long? @orderId, [Parameter("ParentPromotion", "varchar", ParameterDirection.Input)] string @ParentPromotion);
		[Procedure("usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_BirthdayRenewalPromo", "dbo")] public abstract void usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_BirthdayRenewalPromo([Parameter("orderId", "bigint", ParameterDirection.Input)] long? @orderId);
		[Procedure("usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_BlackFridayCyberMonday", "dbo")] public abstract void usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_BlackFridayCyberMonday([Parameter("orderId", "bigint", ParameterDirection.Input)] long? @orderId, [Parameter("ParentPromotion", "varchar", ParameterDirection.Input)] string @ParentPromotion);
		[Procedure("usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_Feb2013DomainPPC", "dbo")] public abstract void usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_Feb2013DomainPPC([Parameter("orderId", "bigint", ParameterDirection.Input)] long? @orderId);
		[Procedure("usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_InfoAutoPromo", "dbo")] public abstract void usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_InfoAutoPromo([Parameter("orderId", "bigint", ParameterDirection.Input)] long? @orderId);
		[Procedure("usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_July12RetweetPromo", "dbo")] public abstract void usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_July12RetweetPromo([Parameter("orderId", "bigint", ParameterDirection.Input)] long? @orderId);
		[Procedure("usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_Sep2012NCROCKS", "dbo")] public abstract void usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_Sep2012NCROCKS([Parameter("orderId", "bigint", ParameterDirection.Input)] long? @orderId);
		[Procedure("usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_WeloveU2012Promo", "dbo")] public abstract void usp_Adhoc_CheckIfPromotionAlreadyUsedByAnyOtherUser_WeloveU2012Promo([Parameter("orderId", "bigint", ParameterDirection.Input)] long? @orderId);
		[Procedure("usp_AdHoc_Find98CentPromotionDomainsPushHistory", "dbo")] public abstract void usp_AdHoc_Find98CentPromotionDomainsPushHistory([Parameter("OrderFromDate", "datetime", ParameterDirection.Input)] DateTime? @OrderFromDate, [Parameter("OrderToDate", "datetime", ParameterDirection.Input)] DateTime? @OrderToDate, [Parameter("SortBy_PUSHDATE_DOMAIN_FROMUSER_TOUSER_ORDERIP_PUSHIP", "varchar", ParameterDirection.Input)] string @SortBy_PUSHDATE_DOMAIN_FROMUSER_TOUSER_ORDERIP_PUSHIP);
		[Procedure("USP_ADHOC_FINDOUT_USERS_USING_ORDERID", "dbo")] public abstract void USP_ADHOC_FINDOUT_USERS_USING_ORDERID([Parameter("csvOrderIDs", "nvarchar", ParameterDirection.Input)] string @csvOrderIDs);
		[Procedure("USP_ADHOC_FREE_HOSTING_TRIAL_USER_TRACKING_REPORT", "dbo")] public abstract void USP_ADHOC_FREE_HOSTING_TRIAL_USER_TRACKING_REPORT([Parameter("StartDate", "datetime", ParameterDirection.Input)] DateTime? @StartDate, [Parameter("EndDate", "datetime", ParameterDirection.Input)] DateTime? @EndDate);
		[Procedure("USP_ADHOC_GET_ORG_REGISTRATIONS_WITH_OTHER_TLDS", "dbo")] public abstract void USP_ADHOC_GET_ORG_REGISTRATIONS_WITH_OTHER_TLDS([Parameter("BeginDate_MMslashDDslashYYYY", "datetime", ParameterDirection.Input)] DateTime? @BeginDate_MMslashDDslashYYYY, [Parameter("EndDate_MMslashDDslashYYYY", "datetime", ParameterDirection.Input)] DateTime? @EndDate_MMslashDDslashYYYY, [Parameter("ReturnOnlyOrgDomains_0_or_1", "bit", ParameterDirection.Input)] bool? @ReturnOnlyOrgDomains_0_or_1);
		[Procedure("usp_Adhoc_GetTemplateMonsterReportTool", "dbo")] public abstract void usp_Adhoc_GetTemplateMonsterReportTool([Parameter("startDateTime", "datetime", ParameterDirection.Input)] DateTime? @startDateTime, [Parameter("endDateTime", "datetime", ParameterDirection.Input)] DateTime? @endDateTime);
		[Procedure("usp_Adhoc_GetTopInfoRegistrationUsersByDate", "dbo")] public abstract void usp_Adhoc_GetTopInfoRegistrationUsersByDate([Parameter("startdate", "datetime", ParameterDirection.Input)] DateTime? @startdate, [Parameter("enddate", "datetime", ParameterDirection.Input)] DateTime? @enddate, [Parameter("NumberOfUsers", "int", ParameterDirection.Input)] int? @NumberOfUsers);
		[Procedure("usp_Adhoc_GetUsDotOrgRegistrationsByDate", "dbo")] public abstract void usp_Adhoc_GetUsDotOrgRegistrationsByDate([Parameter("Begin_Register_Date", "datetime", ParameterDirection.Input)] DateTime? @Begin_Register_Date, [Parameter("End_Register_Date", "datetime", ParameterDirection.Input)] DateTime? @End_Register_Date, [Parameter("Tld", "varchar", ParameterDirection.Input)] string @Tld);
		[Procedure("USP_ADHOC_SSL_CERTIFICATES_PURCHASED_BY_RESELLERS_REPORT", "dbo")] public abstract void USP_ADHOC_SSL_CERTIFICATES_PURCHASED_BY_RESELLERS_REPORT([Parameter("StartDate", "datetime", ParameterDirection.Input)] DateTime? @StartDate, [Parameter("EndDate", "datetime", ParameterDirection.Input)] DateTime? @EndDate, [Parameter("Username", "varchar", ParameterDirection.Input)] string @Username);
		[Procedure("USP_ADHOC_SSL_ORDER_REPORT", "dbo")] public abstract void USP_ADHOC_SSL_ORDER_REPORT([Parameter("StartDate", "datetime", ParameterDirection.Input)] DateTime? @StartDate, [Parameter("EndDate", "datetime", ParameterDirection.Input)] DateTime? @EndDate);
		[Procedure("USP_ADHOC_SSL_RESELLER_EVENTS_REPORT", "dbo")] public abstract void USP_ADHOC_SSL_RESELLER_EVENTS_REPORT([Parameter("StartDate", "datetime", ParameterDirection.Input)] DateTime? @StartDate, [Parameter("EndDate", "datetime", ParameterDirection.Input)] DateTime? @EndDate);
		[Procedure("USP_ADHOC_SSL_RESELLER_TOTAL_RECEIPTS_BY_RESELLER_REPORT", "dbo")] public abstract void USP_ADHOC_SSL_RESELLER_TOTAL_RECEIPTS_BY_RESELLER_REPORT([Parameter("Username", "varchar", ParameterDirection.Input)] string @Username);
		[Procedure("usp_Adhoc_ViewOrEditGeoTrustContract", "dbo")] public abstract void usp_Adhoc_ViewOrEditGeoTrustContract([Parameter("Add_Or_View_Or_Edit", "varchar", ParameterDirection.Input)] string @Add_Or_View_Or_Edit, [Parameter("Certificate_Type", "varchar", ParameterDirection.Input)] string @Certificate_Type, [Parameter("New_Contract_Id", "varchar", ParameterDirection.Input)] string @New_Contract_Id);
		[Procedure("usp_adhocGet2011BlackFridayPromotionCodeUsageWithRelatedUsers", "dbo")] public abstract void usp_adhocGet2011BlackFridayPromotionCodeUsageWithRelatedUsers([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("usp_AdhocGetCouponsRemainingForNamecheapDeals", "dbo")] public abstract void usp_AdhocGetCouponsRemainingForNamecheapDeals();
		[Procedure("usp_AdhocGetOrgDomainsDuringDec2011FreeOrgPromo", "dbo")] public abstract void usp_AdhocGetOrgDomainsDuringDec2011FreeOrgPromo();
		[Procedure("usp_AdhocHostingRenewalOrderReport", "dbo")] public abstract void usp_AdhocHostingRenewalOrderReport([Parameter("StartDate", "datetime", ParameterDirection.Input)] DateTime? @StartDate, [Parameter("EndDate", "datetime", ParameterDirection.Input)] DateTime? @EndDate);
		[Procedure("usp_AdhocReportDomainExpiration", "dbo")] public abstract void usp_AdhocReportDomainExpiration([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("usp_AdhocSetPromotionUsageForBlackFridayCyberMondayPromo", "dbo")] public abstract void usp_AdhocSetPromotionUsageForBlackFridayCyberMondayPromo([Parameter("OrderId", "bigint", ParameterDirection.Input)] long? @OrderId, [Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode);
		[Procedure("usp_AdhocSetPromotionUsageForEarthDayPromo", "dbo")] public abstract void usp_AdhocSetPromotionUsageForEarthDayPromo([Parameter("OrderId", "bigint", ParameterDirection.Input)] long? @OrderId, [Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode);
		[Procedure("usp_AdhocSetPromotionUsageForEasterPromo", "dbo")] public abstract void usp_AdhocSetPromotionUsageForEasterPromo([Parameter("OrderId", "bigint", ParameterDirection.Input)] long? @OrderId, [Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode);
		[Procedure("usp_AdhocSetPromotionUsageForLifeHackerPromo2013", "dbo")] public abstract void usp_AdhocSetPromotionUsageForLifeHackerPromo2013([Parameter("OrderId", "bigint", ParameterDirection.Input)] long? @OrderId);
		[Procedure("usp_AdhocSetPromotionUsageForMoveYourDomainPromo", "dbo")] public abstract void usp_AdhocSetPromotionUsageForMoveYourDomainPromo([Parameter("OrderId", "bigint", ParameterDirection.Input)] long? @OrderId, [Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode);
		[Procedure("usp_AdhocSetPromotionUsageForRenewalPromo", "dbo")] public abstract void usp_AdhocSetPromotionUsageForRenewalPromo([Parameter("OrderId", "bigint", ParameterDirection.Input)] long? @OrderId);
		[Procedure("usp_AdhocSetPromotionUsageForReTweetDeal_Jun2013", "dbo")] public abstract void usp_AdhocSetPromotionUsageForReTweetDeal_Jun2013([Parameter("OrderId", "bigint", ParameterDirection.Input)] long? @OrderId, [Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode);
		[Procedure("usp_AdhocSetPromotionUsageForSep2012NCROCKS", "dbo")] public abstract void usp_AdhocSetPromotionUsageForSep2012NCROCKS([Parameter("OrderId", "bigint", ParameterDirection.Input)] long? @OrderId);
		[Procedure("usp_AdhocSetPromotionUsageForUs98CentPromo", "dbo")] public abstract void usp_AdhocSetPromotionUsageForUs98CentPromo([Parameter("OrderId", "bigint", ParameterDirection.Input)] long? @OrderId);
		[Procedure("usp_AdhocSetPromotionUsageForWallStreetPromo", "dbo")] public abstract void usp_AdhocSetPromotionUsageForWallStreetPromo([Parameter("OrderId", "bigint", ParameterDirection.Input)] long? @OrderId);
		[Procedure("usp_AdhocSetPromotionUsageForWeLoveUPromo", "dbo")] public abstract void usp_AdhocSetPromotionUsageForWeLoveUPromo([Parameter("OrderId", "bigint", ParameterDirection.Input)] long? @OrderId);
		[Procedure("usp_AdhocSSLActivationExpireDateRemovalReport", "dbo")] public abstract void usp_AdhocSSLActivationExpireDateRemovalReport([Parameter("StartDate", "datetime", ParameterDirection.Input)] DateTime? @StartDate, [Parameter("EndDate", "datetime", ParameterDirection.Input)] DateTime? @EndDate, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("CertificateID", "bigint", ParameterDirection.Input)] long? @CertificateID, [Parameter("Note", "varchar", ParameterDirection.Input)] string @Note);
		[Procedure("USP_ADMIN_ACTIVATE_DELETE_NAVIGATION", "dbo")] public abstract void USP_ADMIN_ACTIVATE_DELETE_NAVIGATION([Parameter("navid", "int", ParameterDirection.Input)] int? @navid, [Parameter("operation", "varchar", ParameterDirection.Input)] string @operation);
		[Procedure("USP_ADMIN_AD_LIST", "dbo")] public abstract void USP_ADMIN_AD_LIST();
		[Procedure("USP_ADMIN_ADD_AFFILIATE_PROGRAM_USERS", "dbo")] public abstract void USP_ADMIN_ADD_AFFILIATE_PROGRAM_USERS([Parameter("programId", "int", ParameterDirection.Input)] int? @programId, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName, [Parameter("affiliateSpecific", "bit", ParameterDirection.Input)] bool? @affiliateSpecific);
		[Procedure("USP_ADMIN_ADD_API_COMMANDS", "dbo")] public abstract void USP_ADMIN_ADD_API_COMMANDS([Parameter("apiFunctionsBySemicolon", "nvarchar", ParameterDirection.Input)] string @apiFunctionsBySemicolon);
		[Procedure("USP_ADMIN_ADD_API_SCOPES", "dbo")] public abstract void USP_ADMIN_ADD_API_SCOPES([Parameter("spiScopesBySemicolon", "nvarchar", ParameterDirection.Input)] string @spiScopesBySemicolon);
		[Procedure("USP_ADMIN_ADD_CREDITCARD_REFUND_TRANSACTION", "dbo")] public abstract void USP_ADMIN_ADD_CREDITCARD_REFUND_TRANSACTION([Parameter("transactionId", "int", ParameterDirection.Input)] int? @transactionId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("transactionType", "nvarchar", ParameterDirection.Input)] string @transactionType, [Parameter("associatedOrderId", "int", ParameterDirection.Input)] int? @associatedOrderId, [Parameter("paymentSource", "nvarchar", ParameterDirection.Input)] string @paymentSource, [Parameter("payerEmail", "nvarchar", ParameterDirection.Input)] string @payerEmail, [Parameter("ccInitialAmount", "money", ParameterDirection.Input)] decimal? @ccInitialAmount, [Parameter("refundAmount", "money", ParameterDirection.Input)] decimal? @refundAmount, [Parameter("refundYN", "bit", ParameterDirection.Input)] bool? @refundYN, [Parameter("completedYN", "bit", ParameterDirection.Input)] bool? @completedYN, [Parameter("comments", "nvarchar", ParameterDirection.Input)] string @comments, [Parameter("orderRefId", "nvarchar", ParameterDirection.Input)] string @orderRefId, [Parameter("startDateTime", "datetime", ParameterDirection.Input)] DateTime? @startDateTime, [Parameter("endDateTime", "datetime", ParameterDirection.Input)] DateTime? @endDateTime, [Parameter("ccOrderId", "nvarchar", ParameterDirection.Input)] string @ccOrderId, [Parameter("ccTransId", "nvarchar", ParameterDirection.Input)] string @ccTransId, [Parameter("ccStatus", "nvarchar", ParameterDirection.Input)] string @ccStatus, [Parameter("paypalPendingReason", "nvarchar", ParameterDirection.Input)] string @paypalPendingReason, [Parameter("paypalPaymentType", "nvarchar", ParameterDirection.Input)] string @paypalPaymentType, [Parameter("ccLast4", "nvarchar", ParameterDirection.Input)] string @ccLast4, [Parameter("ccNameOnCard", "nvarchar", ParameterDirection.Input)] string @ccNameOnCard, [Parameter("orderIp", "nvarchar", ParameterDirection.Input)] string @orderIp, [Parameter("orderZip", "nvarchar", ParameterDirection.Input)] string @orderZip, [Parameter("orderError", "nvarchar", ParameterDirection.Input)] string @orderError, [Parameter("errorInfo", "varchar", ParameterDirection.Input)] string @errorInfo, [Parameter("rawData", "text", ParameterDirection.Input)] string @rawData, [Parameter("recordCreatedDateTime", "datetime", ParameterDirection.Input)] DateTime? @recordCreatedDateTime, [Parameter("relatedTransactionId", "int", ParameterDirection.Input)] int? @relatedTransactionId, [Parameter("isAddedByAdmin", "bit", ParameterDirection.Input)] bool? @isAddedByAdmin);
		[Procedure("USP_ADMIN_ADD_DOMAIN", "dbo")] public abstract void USP_ADMIN_ADD_DOMAIN([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("password", "nvarchar", ParameterDirection.Input)] string @password, [Parameter("payStatus", "nvarchar", ParameterDirection.Input)] string @payStatus, [Parameter("transactionId", "nvarchar", ParameterDirection.Input)] string @transactionId, [Parameter("orderId", "nvarchar", ParameterDirection.Input)] string @orderId, [Parameter("years", "int", ParameterDirection.Input)] int? @years, [Parameter("provider", "nvarchar", ParameterDirection.Input)] string @provider, [Parameter("expiresOn", "datetime", ParameterDirection.Input)] DateTime? @expiresOn);
		[Procedure("USP_ADMIN_ADD_DOMAINS_TO_BATCH", "dbo")] public abstract void USP_ADMIN_ADD_DOMAINS_TO_BATCH([Parameter("BulkDomains", "nvarchar", ParameterDirection.Input)] string @BulkDomains, [Parameter("adminUser", "varchar", ParameterDirection.Input)] string @adminUser, [Parameter("sessionId", "varchar", ParameterDirection.Input)] string @sessionId, [Parameter("objectType", "varchar", ParameterDirection.Input)] string @objectType, [Parameter("addedFromPage", "varchar", ParameterDirection.Input)] string @addedFromPage);
		[Procedure("USP_ADMIN_ADD_LOGIN_TOKENS", "dbo")] public abstract void USP_ADMIN_ADD_LOGIN_TOKENS([Parameter("ticketGuid", "nvarchar", ParameterDirection.Input)] string @ticketGuid, [Parameter("ticketDate", "datetime", ParameterDirection.Input)] DateTime? @ticketDate, [Parameter("adminIp", "varchar", ParameterDirection.Input)] string @adminIp, [Parameter("adminUser", "nvarchar", ParameterDirection.Input)] string @adminUser, [Parameter("reason", "nvarchar", ParameterDirection.Input)] string @reason, [Parameter("userToImpersonate", "int", ParameterDirection.Input)] int? @userToImpersonate);
		[Procedure("USP_ADMIN_ADD_NAVIGATION", "dbo")] public abstract void USP_ADMIN_ADD_NAVIGATION([Parameter("operationtype", "varchar", ParameterDirection.Input)] string @operationtype, [Parameter("navName", "varchar", ParameterDirection.Input)] string @navName, [Parameter("parNavID", "int", ParameterDirection.Input)] int? @parNavID, [Parameter("LinkTypeId", "int", ParameterDirection.Input)] int? @LinkTypeId, [Parameter("imgUrl", "varchar", ParameterDirection.Input)] string @imgUrl, [Parameter("imgHeight", "int", ParameterDirection.Input)] int? @imgHeight, [Parameter("imgWidth", "int", ParameterDirection.Input)] int? @imgWidth, [Parameter("navTitle", "varchar", ParameterDirection.Input)] string @navTitle, [Parameter("site", "varchar", ParameterDirection.Input)] string @site, [Parameter("isSectionYN", "bit", ParameterDirection.Input)] bool? @isSectionYN, [Parameter("navId", "int", ParameterDirection.Input)] int? @navId, [Parameter("isEnabledYN", "bit", ParameterDirection.Input)] bool? @isEnabledYN);
		[Procedure("USP_ADMIN_ADD_POSITIVESSL_FREE", "dbo")] public abstract void USP_ADMIN_ADD_POSITIVESSL_FREE([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("Ip", "nvarchar", ParameterDirection.Input)] string @Ip);
		[Procedure("USP_ADMIN_ADD_POSITIVESSL_FREE_BYORDERID", "dbo")] public abstract void USP_ADMIN_ADD_POSITIVESSL_FREE_BYORDERID([Parameter("Ip", "nvarchar", ParameterDirection.Input)] string @Ip, [Parameter("OrderId", "int", ParameterDirection.Input)] int? @OrderId, [Parameter("AutoId", "int", ParameterDirection.Input)] int? @AutoId);
		[Procedure("USP_ADMIN_ADD_PROMO_USERS", "dbo")] public abstract void USP_ADMIN_ADD_PROMO_USERS([Parameter("IPI_Promotion_Id", "int", ParameterDirection.Input)] int? @IPI_Promotion_Id, [Parameter("IPV_UserName", "varchar", ParameterDirection.Input)] string @IPV_UserName, [Parameter("IPB_User_specific_Promotion_YN", "bit", ParameterDirection.Input)] bool? @IPB_User_specific_Promotion_YN);
		[Procedure("USP_ADMIN_ADD_ROLE_USERS", "dbo")] public abstract void USP_ADMIN_ADD_ROLE_USERS([Parameter("roleID", "int", ParameterDirection.Input)] int? @roleID, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName, [Parameter("AdminUerName", "varchar", ParameterDirection.Input)] string @AdminUerName, [Parameter("AdminIP", "varchar", ParameterDirection.Input)] string @AdminIP);
		[Procedure("USP_ADMIN_AFFILIATES_EARNED_COMMISSIONS_LOG_HISTORY_REPORT", "dbo")] public abstract void USP_ADMIN_AFFILIATES_EARNED_COMMISSIONS_LOG_HISTORY_REPORT([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("statusname", "nvarchar", ParameterDirection.Input)] string @statusname, [Parameter("FromDate", "datetime", ParameterDirection.Input)] DateTime? @FromDate, [Parameter("ToDate", "datetime", ParameterDirection.Input)] DateTime? @ToDate, [Parameter("ProductName", "nvarchar", ParameterDirection.Input)] string @ProductName, [Parameter("OrderID", "int", ParameterDirection.Input)] int? @OrderID, [Parameter("OrderDetailID", "int", ParameterDirection.Input)] int? @OrderDetailID, [Parameter("IP", "bigint", ParameterDirection.Input)] long? @IP, [Parameter("HttpReferrer", "varchar", ParameterDirection.Input)] string @HttpReferrer, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Order", "varchar", ParameterDirection.Input)] string @Order, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("ReturnAllRows", "bit", ParameterDirection.Input)] bool? @ReturnAllRows);
		[Procedure("USP_ADMIN_AFFILIATES_USERS_REPORT", "dbo")] public abstract void USP_ADMIN_AFFILIATES_USERS_REPORT([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("AutoID", "int", ParameterDirection.Input)] int? @AutoID, [Parameter("FromDate", "datetime", ParameterDirection.Input)] DateTime? @FromDate, [Parameter("ToDate", "datetime", ParameterDirection.Input)] DateTime? @ToDate, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Order", "varchar", ParameterDirection.Input)] string @Order, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize);
		[Procedure("USP_ADMIN_ASSIGN_API_COMMANDS_TO_SCOPE_ID", "dbo")] public abstract void USP_ADMIN_ASSIGN_API_COMMANDS_TO_SCOPE_ID([Parameter("scopeId", "int", ParameterDirection.Input)] int? @scopeId, [Parameter("apiIdsBySemicolon", "nvarchar", ParameterDirection.Input)] string @apiIdsBySemicolon);
		[Procedure("USP_ADMIN_ASSIGN_API_SCOPES_TO_APP_ROLE_ID", "dbo")] public abstract void USP_ADMIN_ASSIGN_API_SCOPES_TO_APP_ROLE_ID([Parameter("appRoleId", "int", ParameterDirection.Input)] int? @appRoleId, [Parameter("scopeIdsBySemicolon", "nvarchar", ParameterDirection.Input)] string @scopeIdsBySemicolon);
		[Procedure("USP_ADMIN_ASSIGN_API_SCOPES_TO_ROLE_ID", "dbo")] public abstract void USP_ADMIN_ASSIGN_API_SCOPES_TO_ROLE_ID([Parameter("roleId", "int", ParameterDirection.Input)] int? @roleId, [Parameter("scopeIdsBySemicolon", "nvarchar", ParameterDirection.Input)] string @scopeIdsBySemicolon);
		[Procedure("USP_ADMIN_BATCH_CLEAR_LIST", "dbo")] public abstract void USP_ADMIN_BATCH_CLEAR_LIST([Parameter("objectType", "varchar", ParameterDirection.Input)] string @objectType, [Parameter("adminUserName", "varchar", ParameterDirection.Input)] string @adminUserName);
		[Procedure("USP_ADMIN_BATCH_DELETE_BATCH", "dbo")] public abstract void USP_ADMIN_BATCH_DELETE_BATCH([Parameter("autoId", "int", ParameterDirection.Input)] int? @autoId);
		[Procedure("USP_ADMIN_BATCH_GET_LIST", "dbo")] public abstract void USP_ADMIN_BATCH_GET_LIST([Parameter("batchType", "varchar", ParameterDirection.Input)] string @batchType, [Parameter("sessionId", "varchar", ParameterDirection.Input)] string @sessionId, [Parameter("username", "varchar", ParameterDirection.Input)] string @username, [Parameter("addedfrompage", "varchar", ParameterDirection.Input)] string @addedfrompage);
		[Procedure("USP_ADMIN_BATCH_SET_ACTION", "dbo")] public abstract void USP_ADMIN_BATCH_SET_ACTION([Parameter("addedFromPage", "varchar", ParameterDirection.Input)] string @addedFromPage, [Parameter("actionType", "varchar", ParameterDirection.Input)] string @actionType, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName, [Parameter("sessionId", "varchar", ParameterDirection.Input)] string @sessionId, [Parameter("reason", "varchar", ParameterDirection.Input)] string @reason, [Parameter("reasonForAdmin", "varchar", ParameterDirection.Input)] string @reasonForAdmin, [Parameter("namecheapLock", "bit", ParameterDirection.Input)] bool? @namecheapLock, [Parameter("clientUpdateProhibited", "bit", ParameterDirection.Input)] bool? @clientUpdateProhibited, [Parameter("registrarLock", "bit", ParameterDirection.Input)] bool? @registrarLock, [Parameter("clientDeleteProhibited", "bit", ParameterDirection.Input)] bool? @clientDeleteProhibited, [Parameter("clientHold", "bit", ParameterDirection.Input)] bool? @clientHold, [Parameter("disableAutoRenew", "bit", ParameterDirection.Input)] bool? @disableAutoRenew);
		[Procedure("usp_Admin_Bulk_Insert_CouponCodes", "dbo")] public abstract void usp_Admin_Bulk_Insert_CouponCodes([Parameter("csvCouponCodes", "varchar", ParameterDirection.Input)] string @csvCouponCodes, [Parameter("GoogleAdWords_Or_Pixmac", "varchar", ParameterDirection.Input)] string @GoogleAdWords_Or_Pixmac, [Parameter("startRange", "money", ParameterDirection.Input)] decimal? @startRange, [Parameter("endRange", "money", ParameterDirection.Input)] decimal? @endRange, [Parameter("couponValue", "money", ParameterDirection.Input)] decimal? @couponValue, [Parameter("expiryDateTime", "datetime", ParameterDirection.Input)] DateTime? @expiryDateTime);
		[Procedure("USP_ADMIN_CHANGE_IP_OF_URL_FORWARDING", "dbo")] public abstract void USP_ADMIN_CHANGE_IP_OF_URL_FORWARDING([Parameter("fromIp", "varchar", ParameterDirection.Input)] string @fromIp, [Parameter("toIp", "varchar", ParameterDirection.Input)] string @toIp);
		[Procedure("USP_ADMIN_CHANGE_PASSWORD", "dbo")] public abstract void USP_ADMIN_CHANGE_PASSWORD([Parameter("Admin_UserName", "varchar", ParameterDirection.Input)] string @Admin_UserName, [Parameter("Old_Password", "varchar", ParameterDirection.Input)] string @Old_Password, [Parameter("New_Password", "varchar", ParameterDirection.Input)] string @New_Password);
		[Procedure("USP_ADMIN_CHECK_DOMAIN_TO_UNLOCK", "dbo")] public abstract void USP_ADMIN_CHECK_DOMAIN_TO_UNLOCK([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId);
		[Procedure("USP_ADMIN_CHECK_LOGIN_TOKEN_LOG", "dbo")] public abstract void USP_ADMIN_CHECK_LOGIN_TOKEN_LOG([Parameter("tokenId", "int", ParameterDirection.Input)] int? @tokenId, [Parameter("ticketGuid", "nvarchar", ParameterDirection.Input)] string @ticketGuid, [Parameter("ticketDate", "datetime", ParameterDirection.Input)] DateTime? @ticketDate, [Parameter("currentIp", "varchar", ParameterDirection.Input)] string @currentIp);
		[Procedure("USP_ADMIN_CHECK_PASSWORD", "dbo")] public abstract void USP_ADMIN_CHECK_PASSWORD([Parameter("Admin_UserName", "varchar", ParameterDirection.Input)] string @Admin_UserName, [Parameter("Admin_Password", "varchar", ParameterDirection.Input)] string @Admin_Password);
		[Procedure("USP_ADMIN_CHECK_WHOISGUARD_STATUS_FOR_DOMAIN", "dbo")] public abstract void USP_ADMIN_CHECK_WHOISGUARD_STATUS_FOR_DOMAIN([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("USP_ADMIN_CREATE_FREE_ORDER", "dbo")] public abstract void USP_ADMIN_CREATE_FREE_ORDER([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("IPV_RequestIP", "nvarchar", ParameterDirection.Input)] string @IPV_RequestIP, [Parameter("SLD", "nvarchar", ParameterDirection.Input)] string @SLD, [Parameter("TLD", "nvarchar", ParameterDirection.Input)] string @TLD, [Parameter("ActionId", "nvarchar", ParameterDirection.Input)] string @ActionId, [Parameter("NumYears", "int", ParameterDirection.Input)] int? @NumYears, [Parameter("Qty", "int", ParameterDirection.Input)] int? @Qty, [Parameter("TransID", "int", ParameterDirection.Input)] int? @TransID, [Parameter("PromoCode", "nvarchar", ParameterDirection.Input)] string @PromoCode);
		[Procedure("USP_ADMIN_DELETE_API_COMMAND", "dbo")] public abstract void USP_ADMIN_DELETE_API_COMMAND([Parameter("apiId", "int", ParameterDirection.Input)] int? @apiId);
		[Procedure("USP_ADMIN_DELETE_API_SCOPE", "dbo")] public abstract void USP_ADMIN_DELETE_API_SCOPE([Parameter("scopeId", "int", ParameterDirection.Input)] int? @scopeId);
		[Procedure("USP_ADMIN_DELETE_BANNED_PASSWORD", "dbo")] public abstract void USP_ADMIN_DELETE_BANNED_PASSWORD([Parameter("banID", "int", ParameterDirection.Input)] int? @banID);
		[Procedure("USP_ADMIN_DELETE_PAGE_NAVIGATION", "dbo")] public abstract void USP_ADMIN_DELETE_PAGE_NAVIGATION([Parameter("autoId", "int", ParameterDirection.Input)] int? @autoId);
		[Procedure("USP_ADMIN_DELETE_PROMOTION_TLD", "dbo")] public abstract void USP_ADMIN_DELETE_PROMOTION_TLD([Parameter("Promotion_ID", "int", ParameterDirection.Input)] int? @Promotion_ID, [Parameter("sActionID", "varchar", ParameterDirection.Input)] string @sActionID, [Parameter("TLDName", "varchar", ParameterDirection.Input)] string @TLDName);
		[Procedure("USP_ADMIN_DELETE_ROLE_USERS", "dbo")] public abstract void USP_ADMIN_DELETE_ROLE_USERS([Parameter("roleID", "int", ParameterDirection.Input)] int? @roleID, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName, [Parameter("AdminUerName", "varchar", ParameterDirection.Input)] string @AdminUerName, [Parameter("AdminIP", "varchar", ParameterDirection.Input)] string @AdminIP);
		[Procedure("USP_ADMIN_DELETE_USER_TLD", "dbo")] public abstract void USP_ADMIN_DELETE_USER_TLD([Parameter("User_Name", "varchar", ParameterDirection.Input)] string @User_Name, [Parameter("sActionID", "varchar", ParameterDirection.Input)] string @sActionID, [Parameter("TLDName", "varchar", ParameterDirection.Input)] string @TLDName);
		[Procedure("USP_ADMIN_DISABLE_WHOISGUARD_AUTORENEW", "dbo")] public abstract void USP_ADMIN_DISABLE_WHOISGUARD_AUTORENEW([Parameter("domainList_CSV", "varchar", ParameterDirection.Input)] string @domainList_CSV, [Parameter("comment", "nvarchar", ParameterDirection.Input)] string @comment, [Parameter("ipaddress", "varchar", ParameterDirection.Input)] string @ipaddress, [Parameter("adminUser", "varchar", ParameterDirection.Input)] string @adminUser);
		[Procedure("USP_ADMIN_DISCARD_WHOISGUARD", "dbo")] public abstract void USP_ADMIN_DISCARD_WHOISGUARD([Parameter("slotid", "int", ParameterDirection.Input)] int? @slotid);
		[Procedure("USP_ADMIN_DNS_ALLOW_DISALLOW_FREEDNS", "dbo")] public abstract void USP_ADMIN_DNS_ALLOW_DISALLOW_FREEDNS([Parameter("IsDisallow", "bit", ParameterDirection.Input)] bool? @IsDisallow, [Parameter("DomainName", "varchar", ParameterDirection.Input)] string @DomainName, [Parameter("Reason", "varchar", ParameterDirection.Input)] string @Reason, [Parameter("AdminReason", "varchar", ParameterDirection.Input)] string @AdminReason);
		[Procedure("USP_ADMIN_EDIT_DEFAULT_URL_IN_NAVIGATION", "dbo")] public abstract void USP_ADMIN_EDIT_DEFAULT_URL_IN_NAVIGATION([Parameter("pageId", "int", ParameterDirection.Input)] int? @pageId, [Parameter("navId", "int", ParameterDirection.Input)] int? @navId);
		[Procedure("USP_ADMIN_EDIT_DOMAIN", "dbo")] public abstract void USP_ADMIN_EDIT_DOMAIN([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("registeredOn", "datetime", ParameterDirection.Input)] DateTime? @registeredOn, [Parameter("numberOfYears", "int", ParameterDirection.Input)] int? @numberOfYears, [Parameter("expiresOn", "datetime", ParameterDirection.Input)] DateTime? @expiresOn, [Parameter("payStatus", "nvarchar", ParameterDirection.Input)] string @payStatus, [Parameter("transId", "nvarchar", ParameterDirection.Input)] string @transId, [Parameter("orderId", "nvarchar", ParameterDirection.Input)] string @orderId);
		[Procedure("USP_ADMIN_EXPIRED_DELETE_DOMAINS", "dbo")] public abstract void USP_ADMIN_EXPIRED_DELETE_DOMAINS([Parameter("IPV_PeriodType", "varchar", ParameterDirection.Input)] string @IPV_PeriodType, [Parameter("IPV_Period", "varchar", ParameterDirection.Input)] string @IPV_Period, [Parameter("IPDT_StartDate", "datetime", ParameterDirection.Input)] DateTime? @IPDT_StartDate, [Parameter("IPDT_EndDate", "datetime", ParameterDirection.Input)] DateTime? @IPDT_EndDate, [Parameter("IPV_Show", "varchar", ParameterDirection.Input)] string @IPV_Show, [Parameter("IPNV_UserName", "nvarchar", ParameterDirection.Input)] string @IPNV_UserName, [Parameter("IPNV_Domainname", "nvarchar", ParameterDirection.Input)] string @IPNV_Domainname);
		[Procedure("USP_ADMIN_GET_ACTION_PRODUCT_LIST", "dbo")] public abstract void USP_ADMIN_GET_ACTION_PRODUCT_LIST([Parameter("sType", "varchar", ParameterDirection.Input)] string @sType, [Parameter("sActionID", "varchar", ParameterDirection.Input)] string @sActionID);
		[Procedure("USP_ADMIN_GET_AD_INFO", "dbo")] public abstract void USP_ADMIN_GET_AD_INFO([Parameter("IPI_Ad_Id", "int", ParameterDirection.Input)] int? @IPI_Ad_Id);
		[Procedure("USP_ADMIN_GET_ADGROUP_INFO", "dbo")] public abstract void USP_ADMIN_GET_ADGROUP_INFO([Parameter("IPI_Ad_Group_Id", "int", ParameterDirection.Input)] int? @IPI_Ad_Group_Id);
		[Procedure("USP_ADMIN_GET_ADMIN_NOTIFICATION_LIST", "dbo")] public abstract void USP_ADMIN_GET_ADMIN_NOTIFICATION_LIST([Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("USP_ADMIN_GET_AFFILIATE_PROGRAM_BY_ID", "dbo")] public abstract void USP_ADMIN_GET_AFFILIATE_PROGRAM_BY_ID([Parameter("affiliateProgramId", "int", ParameterDirection.Input)] int? @affiliateProgramId);
		[Procedure("USP_ADMIN_GET_AFFILIATE_PROGRAM_COMMISSION_LIST", "dbo")] public abstract void USP_ADMIN_GET_AFFILIATE_PROGRAM_COMMISSION_LIST([Parameter("programId", "int", ParameterDirection.Input)] int? @programId, [Parameter("actionId", "varchar", ParameterDirection.Input)] string @actionId, [Parameter("tldName", "varchar", ParameterDirection.Input)] string @tldName, [Parameter("includeHosting", "bit", ParameterDirection.Input)] bool? @includeHosting);
		[Procedure("USP_ADMIN_GET_AFFILIATE_PROGRAM_USERS", "dbo")] public abstract void USP_ADMIN_GET_AFFILIATE_PROGRAM_USERS([Parameter("programId", "int", ParameterDirection.Input)] int? @programId, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_ADMIN_GET_ALL_BANNED_PASSWORDS", "dbo")] public abstract void USP_ADMIN_GET_ALL_BANNED_PASSWORDS();
		[Procedure("USP_ADMIN_GET_ALLOWED_DOMAIN_LIST", "dbo")] public abstract void USP_ADMIN_GET_ALLOWED_DOMAIN_LIST([Parameter("userName", "varchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_ADMIN_GET_API_COMMANDS", "dbo")] public abstract void USP_ADMIN_GET_API_COMMANDS([Parameter("commandFilter", "nvarchar", ParameterDirection.Input)] string @commandFilter);
		[Procedure("USP_ADMIN_GET_API_COMMANDS_BY_SCOPE_ID", "dbo")] public abstract void USP_ADMIN_GET_API_COMMANDS_BY_SCOPE_ID([Parameter("scopeId", "int", ParameterDirection.Input)] int? @scopeId);
		[Procedure("USP_ADMIN_GET_API_SCOPE_BY_ID", "dbo")] public abstract void USP_ADMIN_GET_API_SCOPE_BY_ID([Parameter("scopeId", "int", ParameterDirection.Input)] int? @scopeId);
		[Procedure("USP_ADMIN_GET_API_SCOPES", "dbo")] public abstract void USP_ADMIN_GET_API_SCOPES();
		[Procedure("USP_ADMIN_GET_API_SCOPES_BY_APP_ROLE_ID", "dbo")] public abstract void USP_ADMIN_GET_API_SCOPES_BY_APP_ROLE_ID([Parameter("appRoleId", "int", ParameterDirection.Input)] int? @appRoleId);
		[Procedure("USP_ADMIN_GET_API_SCOPES_BY_ROLE_ID", "dbo")] public abstract void USP_ADMIN_GET_API_SCOPES_BY_ROLE_ID([Parameter("roleId", "int", ParameterDirection.Input)] int? @roleId);
		[Procedure("USP_ADMIN_GET_APP_ROLE_BY_ID", "dbo")] public abstract void USP_ADMIN_GET_APP_ROLE_BY_ID([Parameter("appRoleId", "int", ParameterDirection.Input)] int? @appRoleId);
		[Procedure("USP_ADMIN_GET_APP_ROLE_LIST", "dbo")] public abstract void USP_ADMIN_GET_APP_ROLE_LIST([Parameter("roleid", "int", ParameterDirection.Input)] int? @roleid, [Parameter("roleName", "varchar", ParameterDirection.Input)] string @roleName, [Parameter("filterType", "varchar", ParameterDirection.Input)] string @filterType);
		[Procedure("USP_ADMIN_GET_AUTORENEW_LOG", "dbo")] public abstract void USP_ADMIN_GET_AUTORENEW_LOG([Parameter("FilterByDomain", "nvarchar", ParameterDirection.Input)] string @FilterByDomain, [Parameter("FilterByUsername", "nvarchar", ParameterDirection.Input)] string @FilterByUsername);
		[Procedure("USP_ADMIN_GET_BANNED_PASSWORD_DETAILS", "dbo")] public abstract void USP_ADMIN_GET_BANNED_PASSWORD_DETAILS([Parameter("banID", "int", ParameterDirection.Input)] int? @banID);
		[Procedure("USP_ADMIN_GET_COMPLETE_PAGE_NAV_ATTRIBUTES", "dbo")] public abstract void USP_ADMIN_GET_COMPLETE_PAGE_NAV_ATTRIBUTES();
		[Procedure("USP_ADMIN_GET_COMPLETED_SALE_LIST", "dbo")] public abstract void USP_ADMIN_GET_COMPLETED_SALE_LIST([Parameter("Domainname", "nvarchar", ParameterDirection.Input)] string @Domainname, [Parameter("Buyer", "nvarchar", ParameterDirection.Input)] string @Buyer, [Parameter("Seller", "nvarchar", ParameterDirection.Input)] string @Seller, [Parameter("BuyerOrSeller", "nvarchar", ParameterDirection.Input)] string @BuyerOrSeller, [Parameter("Fromdate", "datetime", ParameterDirection.Input)] DateTime? @Fromdate, [Parameter("Todate", "datetime", ParameterDirection.Input)] DateTime? @Todate, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Order", "varchar", ParameterDirection.Input)] string @Order, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("IsSaleVerified", "bit", ParameterDirection.Input)] bool? @IsSaleVerified);
		[Procedure("USP_ADMIN_GET_CONTACTDETAILS_FOR_SLOTID", "dbo")] public abstract void USP_ADMIN_GET_CONTACTDETAILS_FOR_SLOTID([Parameter("slotid", "int", ParameterDirection.Input)] int? @slotid);
		[Procedure("USP_ADMIN_GET_DOMAIN_ABUSED_DETAILS", "dbo")] public abstract void USP_ADMIN_GET_DOMAIN_ABUSED_DETAILS([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("USP_ADMIN_GET_DOMAIN_GRANT_RIGHTS", "dbo")] public abstract void USP_ADMIN_GET_DOMAIN_GRANT_RIGHTS([Parameter("IPN_Domain_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Domain_ID);
		[Procedure("USP_ADMIN_GET_DOMAIN_GRANTED_RIGHT_LIST", "dbo")] public abstract void USP_ADMIN_GET_DOMAIN_GRANTED_RIGHT_LIST([Parameter("IPN_Domain_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Domain_ID, [Parameter("IPN_User_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_User_ID);
		[Procedure("USP_ADMIN_GET_DOMAIN_INFO_FOR_DELETE", "dbo")] public abstract void USP_ADMIN_GET_DOMAIN_INFO_FOR_DELETE([Parameter("DomainList_CSV", "varchar", ParameterDirection.Input)] string @DomainList_CSV);
		[Procedure("USP_ADMIN_GET_DOMAIN_LOCK_STATUS", "dbo")] public abstract void USP_ADMIN_GET_DOMAIN_LOCK_STATUS([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("USP_ADMIN_GET_DOMAINNAME_AND_SLOTID", "dbo")] public abstract void USP_ADMIN_GET_DOMAINNAME_AND_SLOTID([Parameter("domainIds", "nvarchar", ParameterDirection.Input)] string @domainIds);
		[Procedure("USP_ADMIN_GET_DOMAINNAME_BY_DOMAIN_ID", "dbo")] public abstract void USP_ADMIN_GET_DOMAINNAME_BY_DOMAIN_ID([Parameter("domainIds", "nvarchar", ParameterDirection.Input)] string @domainIds);
		[Procedure("USP_ADMIN_GET_DOMAINNAME_FOR_SLOTID", "dbo")] public abstract void USP_ADMIN_GET_DOMAINNAME_FOR_SLOTID([Parameter("slotid", "int", ParameterDirection.Input)] int? @slotid);
		[Procedure("USP_ADMIN_GET_FAVOURITE_LIST", "dbo")] public abstract void USP_ADMIN_GET_FAVOURITE_LIST([Parameter("adminUserName", "varchar", ParameterDirection.Input)] string @adminUserName);
		[Procedure("USP_ADMIN_GET_INFO", "dbo")] public abstract void USP_ADMIN_GET_INFO([Parameter("AdminUserName", "nvarchar", ParameterDirection.Input)] string @AdminUserName);
		[Procedure("USP_ADMIN_GET_LINKTYPE", "dbo")] public abstract void USP_ADMIN_GET_LINKTYPE();
		[Procedure("USP_ADMIN_GET_MESSAGE_LIST", "dbo")] public abstract void USP_ADMIN_GET_MESSAGE_LIST([Parameter("SearchTerm", "varchar", ParameterDirection.Input)] string @SearchTerm, [Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName, [Parameter("Associateddomain", "varchar", ParameterDirection.Input)] string @Associateddomain, [Parameter("MsgType", "varchar", ParameterDirection.Input)] string @MsgType);
		[Procedure("USP_ADMIN_GET_MP_OFFERACCEPTED_FOR_DOMAIN", "dbo")] public abstract void USP_ADMIN_GET_MP_OFFERACCEPTED_FOR_DOMAIN([Parameter("MPListID", "int", ParameterDirection.Input)] int? @MPListID);
		[Procedure("USP_ADMIN_GET_NAV_SEQUENCE", "dbo")] public abstract void USP_ADMIN_GET_NAV_SEQUENCE([Parameter("CharUsed", "varchar", ParameterDirection.Input)] string @CharUsed, [Parameter("ForPage", "bit", ParameterDirection.Input)] bool? @ForPage, [Parameter("NavPageId", "int", ParameterDirection.Input)] int? @NavPageId, [Parameter("SiteName", "varchar", ParameterDirection.Input)] string @SiteName);
		[Procedure("USP_ADMIN_GET_NAVIGATION_ENABLED", "dbo")] public abstract void USP_ADMIN_GET_NAVIGATION_ENABLED([Parameter("CharUsed", "varchar", ParameterDirection.Input)] string @CharUsed, [Parameter("ActiveOnly", "bit", ParameterDirection.Input)] bool? @ActiveOnly, [Parameter("Type", "varchar", ParameterDirection.Input)] string @Type, [Parameter("site", "varchar", ParameterDirection.Input)] string @site);
		[Procedure("USP_ADMIN_GET_NAVIGATION_INFO", "dbo")] public abstract void USP_ADMIN_GET_NAVIGATION_INFO([Parameter("NavId", "int", ParameterDirection.Input)] int? @NavId);
		[Procedure("USP_ADMIN_GET_NAVIGATION_LIST", "dbo")] public abstract void USP_ADMIN_GET_NAVIGATION_LIST([Parameter("navId", "int", ParameterDirection.Input)] int? @navId);
		[Procedure("USP_ADMIN_GET_NAVIGATION_SEQUENCE", "dbo")] public abstract void USP_ADMIN_GET_NAVIGATION_SEQUENCE([Parameter("CharUsed", "varchar", ParameterDirection.Input)] string @CharUsed, [Parameter("ActiveOnly", "bit", ParameterDirection.Input)] bool? @ActiveOnly, [Parameter("site", "varchar", ParameterDirection.Input)] string @site);
		[Procedure("USP_ADMIN_GET_ORDER_ITEMS_DETAILS", "dbo")] public abstract void USP_ADMIN_GET_ORDER_ITEMS_DETAILS([Parameter("OrderID", "int", ParameterDirection.Input)] int? @OrderID);
		[Procedure("USP_ADMIN_GET_PARTNERS", "dbo")] public abstract void USP_ADMIN_GET_PARTNERS();
		[Procedure("USP_ADMIN_GET_PRODUCT_INFO", "dbo")] public abstract void USP_ADMIN_GET_PRODUCT_INFO([Parameter("IPI_Group_Type_ID", "int", ParameterDirection.Input)] int? @IPI_Group_Type_ID);
		[Procedure("USP_ADMIN_GET_PROMOTION_LIST", "dbo")] public abstract void USP_ADMIN_GET_PROMOTION_LIST([Parameter("PromotionID", "int", ParameterDirection.Input)] int? @PromotionID);
		[Procedure("USP_ADMIN_GET_PROMOTION_LIST_BY_CODE", "dbo")] public abstract void USP_ADMIN_GET_PROMOTION_LIST_BY_CODE([Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode);
		[Procedure("USP_ADMIN_GET_PROMOTION_LIST_BY_PAGE", "dbo")] public abstract void USP_ADMIN_GET_PROMOTION_LIST_BY_PAGE([Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode, [Parameter("filterType", "varchar", ParameterDirection.Input)] string @filterType, [Parameter("pageNumber", "int", ParameterDirection.Input)] int? @pageNumber, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize, [Parameter("sortBy", "varchar", ParameterDirection.Input)] string @sortBy, [Parameter("sortDesc", "bit", ParameterDirection.Input)] bool? @sortDesc);
		[Procedure("USP_ADMIN_GET_PROMOTION_PRICING_DETAILS", "dbo")] public abstract void USP_ADMIN_GET_PROMOTION_PRICING_DETAILS([Parameter("sPromotionID", "int", ParameterDirection.Input)] int? @sPromotionID, [Parameter("sActionID", "varchar", ParameterDirection.Input)] string @sActionID, [Parameter("TLDName", "varchar", ParameterDirection.Input)] string @TLDName);
		[Procedure("USP_ADMIN_GET_PROMOTION_PRICING_LIST", "dbo")] public abstract void USP_ADMIN_GET_PROMOTION_PRICING_LIST([Parameter("sPromotionID", "int", ParameterDirection.Input)] int? @sPromotionID, [Parameter("sActionID", "varchar", ParameterDirection.Input)] string @sActionID, [Parameter("TLDName", "varchar", ParameterDirection.Input)] string @TLDName);
		[Procedure("USP_ADMIN_GET_PROMOTION_PRICING_LIST_FOR_HOSTING", "dbo")] public abstract void USP_ADMIN_GET_PROMOTION_PRICING_LIST_FOR_HOSTING([Parameter("sPromotionID", "int", ParameterDirection.Input)] int? @sPromotionID, [Parameter("sActionID", "varchar", ParameterDirection.Input)] string @sActionID, [Parameter("TLDName", "varchar", ParameterDirection.Input)] string @TLDName);
		[Procedure("USP_ADMIN_GET_PROMOTION_USERS", "dbo")] public abstract void USP_ADMIN_GET_PROMOTION_USERS([Parameter("Promotion_Id", "int", ParameterDirection.Input)] int? @Promotion_Id, [Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_ADMIN_GET_ROLE_BY_ID", "dbo")] public abstract void USP_ADMIN_GET_ROLE_BY_ID([Parameter("roleId", "int", ParameterDirection.Input)] int? @roleId);
		[Procedure("USP_ADMIN_GET_ROLE_LIST", "dbo")] public abstract void USP_ADMIN_GET_ROLE_LIST([Parameter("roleid", "int", ParameterDirection.Input)] int? @roleid, [Parameter("roleName", "varchar", ParameterDirection.Input)] string @roleName, [Parameter("filterType", "varchar", ParameterDirection.Input)] string @filterType);
		[Procedure("USP_ADMIN_GET_ROLE_USERS", "dbo")] public abstract void USP_ADMIN_GET_ROLE_USERS([Parameter("roleId", "int", ParameterDirection.Input)] int? @roleId, [Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_ADMIN_GET_ROLES_AND_USER_ROLES", "dbo")] public abstract void USP_ADMIN_GET_ROLES_AND_USER_ROLES([Parameter("UserId", "int", ParameterDirection.Input)] int? @UserId);
		[Procedure("USP_ADMIN_GET_SSL_CERTIFICATE_DETAILS", "dbo")] public abstract void USP_ADMIN_GET_SSL_CERTIFICATE_DETAILS([Parameter("certificateId", "int", ParameterDirection.Input)] int? @certificateId);
		[Procedure("USP_ADMIN_GET_SSL_STATUS", "dbo")] public abstract void USP_ADMIN_GET_SSL_STATUS();
		[Procedure("USP_ADMIN_GET_SSL_TYPE", "dbo")] public abstract void USP_ADMIN_GET_SSL_TYPE();
		[Procedure("USP_ADMIN_GET_STATUS_OF_WHOISGUARD", "dbo")] public abstract void USP_ADMIN_GET_STATUS_OF_WHOISGUARD([Parameter("slotid", "int", ParameterDirection.Input)] int? @slotid);
		[Procedure("USP_ADMIN_GET_TLD_USERS", "dbo")] public abstract void USP_ADMIN_GET_TLD_USERS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_ADMIN_GET_USER_LOG_LIST", "dbo")] public abstract void USP_ADMIN_GET_USER_LOG_LIST([Parameter("Username", "varchar", ParameterDirection.Input)] string @Username, [Parameter("Domainname", "varchar", ParameterDirection.Input)] string @Domainname, [Parameter("Logtype", "varchar", ParameterDirection.Input)] string @Logtype, [Parameter("Fromdate", "datetime", ParameterDirection.Input)] DateTime? @Fromdate, [Parameter("Todate", "datetime", ParameterDirection.Input)] DateTime? @Todate, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize);
		[Procedure("USP_ADMIN_GET_USER_PRICING_DETAILS", "dbo")] public abstract void USP_ADMIN_GET_USER_PRICING_DETAILS([Parameter("Username", "varchar", ParameterDirection.Input)] string @Username, [Parameter("sActionID", "varchar", ParameterDirection.Input)] string @sActionID, [Parameter("TLDName", "varchar", ParameterDirection.Input)] string @TLDName);
		[Procedure("USP_ADMIN_GET_USER_PRICING_LIST", "dbo")] public abstract void USP_ADMIN_GET_USER_PRICING_LIST([Parameter("Username", "varchar", ParameterDirection.Input)] string @Username, [Parameter("sActionID", "varchar", ParameterDirection.Input)] string @sActionID, [Parameter("TLDName", "varchar", ParameterDirection.Input)] string @TLDName);
		[Procedure("USP_ADMIN_GET_USER_PRICING_LIST_FOR_HOSTING", "dbo")] public abstract void USP_ADMIN_GET_USER_PRICING_LIST_FOR_HOSTING([Parameter("Username", "varchar", ParameterDirection.Input)] string @Username, [Parameter("sActionID", "varchar", ParameterDirection.Input)] string @sActionID, [Parameter("TLDName", "varchar", ParameterDirection.Input)] string @TLDName);
		[Procedure("USP_ADMIN_GET_WHOISGUARD_AUTORENEW_BY_DOMAIN_ID", "dbo")] public abstract void USP_ADMIN_GET_WHOISGUARD_AUTORENEW_BY_DOMAIN_ID([Parameter("domainIds", "nvarchar", ParameterDirection.Input)] string @domainIds);
		[Procedure("USP_ADMIN_GET_WHOISGUARD_BY_DOMAIN_ID", "dbo")] public abstract void USP_ADMIN_GET_WHOISGUARD_BY_DOMAIN_ID([Parameter("domainIds", "nvarchar", ParameterDirection.Input)] string @domainIds);
		[Procedure("usp_Admin_GetFraudScoreDetails", "dbo")] public abstract void usp_Admin_GetFraudScoreDetails([Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId);
		[Procedure("USP_ADMIN_INSERT_OR_UPDATE_BANNED_PASSWORD", "dbo")] public abstract void USP_ADMIN_INSERT_OR_UPDATE_BANNED_PASSWORD([Parameter("banID", "int", ParameterDirection.Input)] int? @banID, [Parameter("bannedPassword", "varchar", ParameterDirection.Input)] string @bannedPassword, [Parameter("bannedAdminComments", "varchar", ParameterDirection.Input)] string @bannedAdminComments, [Parameter("adminUser", "varchar", ParameterDirection.Input)] string @adminUser);
		[Procedure("USP_ADMIN_IS_USER_LOCKED", "dbo")] public abstract void USP_ADMIN_IS_USER_LOCKED([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_ADMIN_ITEMS_ADDED_TO_BATCH", "dbo")] public abstract void USP_ADMIN_ITEMS_ADDED_TO_BATCH([Parameter("adminUser", "varchar", ParameterDirection.Input)] string @adminUser, [Parameter("sessionId", "varchar", ParameterDirection.Input)] string @sessionId, [Parameter("objectType", "varchar", ParameterDirection.Input)] string @objectType, [Parameter("addedFromPage", "varchar", ParameterDirection.Input)] string @addedFromPage, [Parameter("batchObjectItemsXml", "xml", ParameterDirection.Input)] string @batchObjectItemsXml);
		[Procedure("USP_ADMIN_IUD_AD", "dbo")] public abstract void USP_ADMIN_IUD_AD([Parameter("IPV_Operation_Type", "varchar", ParameterDirection.Input)] string @IPV_Operation_Type, [Parameter("IPI_Ad_Id", "int", ParameterDirection.Input)] int? @IPI_Ad_Id, [Parameter("IPV_Title", "varchar", ParameterDirection.Input)] string @IPV_Title, [Parameter("IPV_Image_URL", "varchar", ParameterDirection.Input)] string @IPV_Image_URL, [Parameter("IPI_Image_Width", "smallint", ParameterDirection.Input)] short? @IPI_Image_Width, [Parameter("IPI_Image_Height", "smallint", ParameterDirection.Input)] short? @IPI_Image_Height, [Parameter("IPV_Target_Link", "varchar", ParameterDirection.Input)] string @IPV_Target_Link, [Parameter("IPT_Description", "text", ParameterDirection.Input)] string @IPT_Description, [Parameter("IPB_TextType_YN", "bit", ParameterDirection.Input)] bool? @IPB_TextType_YN);
		[Procedure("USP_ADMIN_IUD_ADGROUP", "dbo")] public abstract void USP_ADMIN_IUD_ADGROUP([Parameter("IPV_Operation_Type", "varchar", ParameterDirection.Input)] string @IPV_Operation_Type, [Parameter("IPI_Ad_Group_Id", "int", ParameterDirection.Input)] int? @IPI_Ad_Group_Id, [Parameter("IPI_Ad_Group_Name", "varchar", ParameterDirection.Input)] string @IPI_Ad_Group_Name, [Parameter("IPT_Description", "text", ParameterDirection.Input)] string @IPT_Description, [Parameter("IPI_Group_Type_Id", "int", ParameterDirection.Input)] int? @IPI_Group_Type_Id, [Parameter("IPT_Ad_List", "varchar", ParameterDirection.Input)] string @IPT_Ad_List);
		[Procedure("USP_ADMIN_IUD_AFFILIATE_PROGRAM", "dbo")] public abstract void USP_ADMIN_IUD_AFFILIATE_PROGRAM([Parameter("sActionType", "varchar", ParameterDirection.Input)] string @sActionType, [Parameter("affiliateProgramName", "varchar", ParameterDirection.Input)] string @affiliateProgramName, [Parameter("affiliateProgramDescription", "varchar", ParameterDirection.Input)] string @affiliateProgramDescription, [Parameter("createdDateTime", "datetime", ParameterDirection.Input)] DateTime? @createdDateTime, [Parameter("expiryDateTime", "datetime", ParameterDirection.Input)] DateTime? @expiryDateTime, [Parameter("numberOfOrdersCommissionAppliedFor", "int", ParameterDirection.Input)] int? @numberOfOrdersCommissionAppliedFor, [Parameter("canUseAfflCodeForOwnAccount", "bit", ParameterDirection.Input)] bool? @canUseAfflCodeForOwnAccount, [Parameter("programLandingPage", "varchar", ParameterDirection.Input)] string @programLandingPage, [Parameter("grantCommissionForSpecifiedProductsOnly", "bit", ParameterDirection.Input)] bool? @grantCommissionForSpecifiedProductsOnly, [Parameter("affilitateSpecificYN", "bit", ParameterDirection.Input)] bool? @affilitateSpecificYN, [Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode, [Parameter("affiliateProgramID", "int", ParameterDirection.Input)] int? @affiliateProgramID);
		[Procedure("USP_ADMIN_IUD_PRODUCT", "dbo")] public abstract void USP_ADMIN_IUD_PRODUCT([Parameter("IPV_Operation_Type", "varchar", ParameterDirection.Input)] string @IPV_Operation_Type, [Parameter("IPI_Group_Type_ID", "int", ParameterDirection.Input)] int? @IPI_Group_Type_ID, [Parameter("IPV_Product_Name", "varchar", ParameterDirection.Input)] string @IPV_Product_Name);
		[Procedure("USP_ADMIN_IUD_PROMOTION_PRICING", "dbo")] public abstract void USP_ADMIN_IUD_PROMOTION_PRICING([Parameter("sActionType", "varchar", ParameterDirection.Input)] string @sActionType, [Parameter("Promotion_ID", "int", ParameterDirection.Input)] int? @Promotion_ID, [Parameter("nPromotioncode", "varchar", ParameterDirection.Input)] string @nPromotioncode, [Parameter("PromotionName", "varchar", ParameterDirection.Input)] string @PromotionName, [Parameter("Description", "varchar", ParameterDirection.Input)] string @Description, [Parameter("Start_Date", "datetime", ParameterDirection.Input)] DateTime? @Start_Date, [Parameter("End_Date", "datetime", ParameterDirection.Input)] DateTime? @End_Date, [Parameter("MaxCount", "int", ParameterDirection.Input)] int? @MaxCount, [Parameter("MaxAmount", "money", ParameterDirection.Input)] decimal? @MaxAmount, [Parameter("bUserSpecificPromotion_YN", "bit", ParameterDirection.Input)] bool? @bUserSpecificPromotion_YN);
		[Procedure("USP_ADMIN_IUD_ROLE_MANAGEMENT", "dbo")] public abstract void USP_ADMIN_IUD_ROLE_MANAGEMENT([Parameter("sActionType", "varchar", ParameterDirection.Input)] string @sActionType, [Parameter("roleID", "int", ParameterDirection.Input)] int? @roleID, [Parameter("roleName", "varchar", ParameterDirection.Input)] string @roleName, [Parameter("description", "varchar", ParameterDirection.Input)] string @description, [Parameter("disabled", "bit", ParameterDirection.Input)] bool? @disabled);
		[Procedure("USP_ADMIN_LIST_NAVIGATION", "dbo")] public abstract void USP_ADMIN_LIST_NAVIGATION([Parameter("operationtype", "varchar", ParameterDirection.Input)] string @operationtype, [Parameter("pageURL", "varchar", ParameterDirection.Input)] string @pageURL, [Parameter("pagename", "varchar", ParameterDirection.Input)] string @pagename, [Parameter("Id", "int", ParameterDirection.Input)] int? @Id, [Parameter("siteName", "varchar", ParameterDirection.Input)] string @siteName);
		[Procedure("USP_ADMIN_LOCK_UNLOCK_ADD_LOG", "dbo")] public abstract void USP_ADMIN_LOCK_UNLOCK_ADD_LOG([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("lockType", "varchar", ParameterDirection.Input)] string @lockType, [Parameter("reason", "nvarchar", ParameterDirection.Input)] string @reason, [Parameter("reasonForAdmin", "varchar", ParameterDirection.Input)] string @reasonForAdmin, [Parameter("lock", "bit", ParameterDirection.Input)] bool? @lock, [Parameter("adminUser", "varchar", ParameterDirection.Input)] string @adminUser);
		[Procedure("USP_ADMIN_LOCK_UNLOCK_DOMAIN_BY_ID", "dbo")] public abstract void USP_ADMIN_LOCK_UNLOCK_DOMAIN_BY_ID([Parameter("domainIds", "nvarchar", ParameterDirection.Input)] string @domainIds, [Parameter("reason", "nvarchar", ParameterDirection.Input)] string @reason, [Parameter("reasonForAdmin", "varchar", ParameterDirection.Input)] string @reasonForAdmin, [Parameter("lock", "bit", ParameterDirection.Input)] bool? @lock, [Parameter("alreadyLockedDomain", "bit", ParameterDirection.Input)] bool? @alreadyLockedDomain, [Parameter("adminUser", "varchar", ParameterDirection.Input)] string @adminUser, [Parameter("namecheapLock", "bit", ParameterDirection.Input)] bool? @namecheapLock, [Parameter("disableAutoRenew", "bit", ParameterDirection.Input)] bool? @disableAutoRenew);
		[Procedure("USP_ADMIN_LOG_CREDITCARD_REFUNDS", "dbo")] public abstract void USP_ADMIN_LOG_CREDITCARD_REFUNDS([Parameter("logId", "int", ParameterDirection.Input)] int? @logId, [Parameter("adminUserName", "nvarchar", ParameterDirection.Input)] string @adminUserName, [Parameter("transactionId", "int", ParameterDirection.Input)] int? @transactionId, [Parameter("status", "nvarchar", ParameterDirection.Input)] string @status, [Parameter("description", "nvarchar", ParameterDirection.Input)] string @description, [Parameter("comments", "nvarchar", ParameterDirection.Input)] string @comments);
		[Procedure("USP_ADMIN_LOG_LOCKORUNLOCK_REASONS", "dbo")] public abstract void USP_ADMIN_LOG_LOCKORUNLOCK_REASONS([Parameter("lockUnlockUserId", "smallint", ParameterDirection.Input)] short? @lockUnlockUserId, [Parameter("lockUnlockBy", "varchar", ParameterDirection.Input)] string @lockUnlockBy, [Parameter("lockOrUnlock", "varchar", ParameterDirection.Input)] string @lockOrUnlock, [Parameter("reason", "varchar", ParameterDirection.Input)] string @reason);
		[Procedure("USP_ADMIN_LOG_LOGOFF", "dbo")] public abstract void USP_ADMIN_LOG_LOGOFF([Parameter("adminUserName", "varchar", ParameterDirection.Input)] string @adminUserName, [Parameter("IPClassA", "tinyint", ParameterDirection.Input)] byte? @IPClassA, [Parameter("IPClassB", "tinyint", ParameterDirection.Input)] byte? @IPClassB, [Parameter("IPClassC", "tinyint", ParameterDirection.Input)] byte? @IPClassC, [Parameter("IPClassD", "tinyint", ParameterDirection.Input)] byte? @IPClassD);
		[Procedure("USP_ADMIN_MP_CHANGE_NAVIGATION_SEQUENCE", "dbo")] public abstract void USP_ADMIN_MP_CHANGE_NAVIGATION_SEQUENCE([Parameter("NavID", "int", ParameterDirection.Input)] int? @NavID, [Parameter("MoveType", "bit", ParameterDirection.Input)] bool? @MoveType);
		[Procedure("USP_ADMIN_MP_UPDATE_DLIST", "dbo")] public abstract void USP_ADMIN_MP_UPDATE_DLIST([Parameter("MPListID", "int", ParameterDirection.Input)] int? @MPListID, [Parameter("AdminDescription", "text", ParameterDirection.Input)] string @AdminDescription);
		[Procedure("usp_Admin_Namecheap_Bonus_List", "dbo")] public abstract void usp_Admin_Namecheap_Bonus_List([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("couponCode", "varchar", ParameterDirection.Input)] string @couponCode, [Parameter("startDate", "datetime", ParameterDirection.Input)] DateTime? @startDate, [Parameter("endDate", "datetime", ParameterDirection.Input)] DateTime? @endDate, [Parameter("pageNumber", "int", ParameterDirection.Input)] int? @pageNumber, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize);
		[Procedure("usp_Admin_Namecheap_Bonus_Statistics", "dbo")] public abstract void usp_Admin_Namecheap_Bonus_Statistics();
		[Procedure("usp_Admin_Namecheap_Bonus_Unlink", "dbo")] public abstract void usp_Admin_Namecheap_Bonus_Unlink([Parameter("autoId", "int", ParameterDirection.Input)] int? @autoId, [Parameter("adminUser", "nvarchar", ParameterDirection.Input)] string @adminUser, [Parameter("adminDesc", "varchar", ParameterDirection.Input)] string @adminDesc);
		[Procedure("usp_Admin_Namecheap_Deals_GetDetails", "dbo")] public abstract void usp_Admin_Namecheap_Deals_GetDetails([Parameter("autoId", "int", ParameterDirection.Input)] int? @autoId);
		[Procedure("usp_Admin_Namecheap_Deals_List", "dbo")] public abstract void usp_Admin_Namecheap_Deals_List([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("couponCode", "varchar", ParameterDirection.Input)] string @couponCode, [Parameter("startDate", "datetime", ParameterDirection.Input)] DateTime? @startDate, [Parameter("endDate", "datetime", ParameterDirection.Input)] DateTime? @endDate, [Parameter("pageNumber", "int", ParameterDirection.Input)] int? @pageNumber, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize);
		[Procedure("usp_Admin_Namecheap_Deals_Statistics", "dbo")] public abstract void usp_Admin_Namecheap_Deals_Statistics();
		[Procedure("usp_Admin_Namecheap_Deals_Unlink", "dbo")] public abstract void usp_Admin_Namecheap_Deals_Unlink([Parameter("autoId", "int", ParameterDirection.Input)] int? @autoId, [Parameter("adminUser", "nvarchar", ParameterDirection.Input)] string @adminUser, [Parameter("adminDesc", "varchar", ParameterDirection.Input)] string @adminDesc);
		[Procedure("USP_ADMIN_PLACE_BULK_TRANSFER", "dbo")] public abstract void USP_ADMIN_PLACE_BULK_TRANSFER([Parameter("IPV_Bulk_Domains", "nvarchar", ParameterDirection.Input)] string @IPV_Bulk_Domains, [Parameter("IPV_User_Name", "nvarchar", ParameterDirection.Input)] string @IPV_User_Name, [Parameter("IPV_Admin_User", "nvarchar", ParameterDirection.Input)] string @IPV_Admin_User, [Parameter("IPV_Admin_User_password", "varchar", ParameterDirection.Input)] string @IPV_Admin_User_password, [Parameter("IPB_Remove_FundsYN", "bit", ParameterDirection.Input)] bool? @IPB_Remove_FundsYN, [Parameter("IPV_RequestIP", "varchar", ParameterDirection.Input)] string @IPV_RequestIP, [Parameter("IPV_PromoCode", "varchar", ParameterDirection.Input)] string @IPV_PromoCode, [Parameter("IPN_TransactionID", "numeric", ParameterDirection.Input)] decimal? @IPN_TransactionID, [Parameter("IPN_WGOption", "varchar", ParameterDirection.Input)] string @IPN_WGOption);
		[Procedure("USP_ADMIN_POSITIVESSL_CHECKBYORDERID", "dbo")] public abstract void USP_ADMIN_POSITIVESSL_CHECKBYORDERID([Parameter("OrderId", "int", ParameterDirection.Input)] int? @OrderId);
		[Procedure("USP_ADMIN_PURCHASE_TRANSACTION", "dbo")] public abstract void USP_ADMIN_PURCHASE_TRANSACTION([Parameter("IPNV_UserName", "nvarchar", ParameterDirection.Input)] string @IPNV_UserName, [Parameter("IPM_Transaction_Amt", "money", ParameterDirection.Input)] decimal? @IPM_Transaction_Amt, [Parameter("IPV_Transaction_Operator", "varchar", ParameterDirection.Input)] string @IPV_Transaction_Operator, [Parameter("IPV_Exceeded", "varchar", ParameterDirection.Input)] string @IPV_Exceeded, [Parameter("IPV_Start_Date", "datetime", ParameterDirection.Input)] DateTime? @IPV_Start_Date, [Parameter("IPV_End_Date", "datetime", ParameterDirection.Input)] DateTime? @IPV_End_Date, [Parameter("IPV_Timeperiod", "varchar", ParameterDirection.Input)] string @IPV_Timeperiod, [Parameter("IPV_Period_Type", "varchar", ParameterDirection.Input)] string @IPV_Period_Type);
		[Procedure("USP_ADMIN_REMOVE_FUND_FOR_RESUBMIT", "dbo")] public abstract void USP_ADMIN_REMOVE_FUND_FOR_RESUBMIT([Parameter("IPN_TransferID", "numeric", ParameterDirection.Input)] decimal? @IPN_TransferID, [Parameter("IPV_RequestIP", "varchar", ParameterDirection.Input)] string @IPV_RequestIP);
		[Procedure("USP_ADMIN_REMOVE_WHOISGUARD", "dbo")] public abstract void USP_ADMIN_REMOVE_WHOISGUARD([Parameter("slotid", "int", ParameterDirection.Input)] int? @slotid);
		[Procedure("USP_ADMIN_REVEAL_USER_PWD", "dbo")] public abstract void USP_ADMIN_REVEAL_USER_PWD([Parameter("adminUserName", "varchar", ParameterDirection.Input)] string @adminUserName);
		[Procedure("USP_ADMIN_REVERT_FUND_FOR_CANCELED_TRANSFER", "dbo")] public abstract void USP_ADMIN_REVERT_FUND_FOR_CANCELED_TRANSFER([Parameter("IPN_TransferID", "numeric", ParameterDirection.Input)] decimal? @IPN_TransferID);
		[Procedure("USP_ADMIN_REVIEW_MAXMIND", "dbo")] public abstract void USP_ADMIN_REVIEW_MAXMIND([Parameter("maxmindAutoIds", "nvarchar", ParameterDirection.Input)] string @maxmindAutoIds, [Parameter("adminName", "varchar", ParameterDirection.Input)] string @adminName, [Parameter("reviewFlag", "bit", ParameterDirection.Input)] bool? @reviewFlag);
		[Procedure("USP_ADMIN_SaveMessage", "dbo")] public abstract void USP_ADMIN_SaveMessage([Parameter("MessageTypeId", "int", ParameterDirection.Input)] int? @MessageTypeId, [Parameter("UserNameTo", "varchar", ParameterDirection.Input)] string @UserNameTo, [Parameter("Title", "varchar", ParameterDirection.Input)] string @Title, [Parameter("Message", "varchar", ParameterDirection.Input)] string @Message);
		[Procedure("USP_ADMIN_SET_AFFILIATE_PROGRAM_COMMISSION_DETAIL", "dbo")] public abstract void USP_ADMIN_SET_AFFILIATE_PROGRAM_COMMISSION_DETAIL([Parameter("programId", "int", ParameterDirection.Input)] int? @programId, [Parameter("programCommissionXml", "xml", ParameterDirection.Input)] string @programCommissionXml);
		[Procedure("USP_ADMIN_SET_AUTORENEW_BY_DOMAIN_ID", "dbo")] public abstract void USP_ADMIN_SET_AUTORENEW_BY_DOMAIN_ID([Parameter("DomainIds", "nvarchar", ParameterDirection.Input)] string @DomainIds, [Parameter("EnableAutoRenew", "bit", ParameterDirection.Input)] bool? @EnableAutoRenew, [Parameter("AdminLogin", "varchar", ParameterDirection.Input)] string @AdminLogin, [Parameter("ReasonForAdmin", "varchar", ParameterDirection.Input)] string @ReasonForAdmin);
		[Procedure("USP_ADMIN_SET_AUTORENEW_WG_BY_DOMAIN_ID", "dbo")] public abstract void USP_ADMIN_SET_AUTORENEW_WG_BY_DOMAIN_ID([Parameter("DomainIds", "nvarchar", ParameterDirection.Input)] string @DomainIds, [Parameter("EnableAutoRenewWG", "bit", ParameterDirection.Input)] bool? @EnableAutoRenewWG, [Parameter("AdminLogin", "varchar", ParameterDirection.Input)] string @AdminLogin, [Parameter("ReasonForAdmin", "varchar", ParameterDirection.Input)] string @ReasonForAdmin);
		[Procedure("USP_ADMIN_SET_BATCH_ENABLE_DISABLE_WHOISGUARD", "dbo")] public abstract void USP_ADMIN_SET_BATCH_ENABLE_DISABLE_WHOISGUARD([Parameter("IPV_AutoId", "nvarchar", ParameterDirection.Input)] string @IPV_AutoId, [Parameter("IPV_ObjectName", "nvarchar", ParameterDirection.Input)] string @IPV_ObjectName, [Parameter("IPV_Status", "varchar", ParameterDirection.Input)] string @IPV_Status, [Parameter("IPV_Action", "varchar", ParameterDirection.Input)] string @IPV_Action, [Parameter("IPV_admin_UserName", "varchar", ParameterDirection.Input)] string @IPV_admin_UserName, [Parameter("IPV_Reason", "nvarchar", ParameterDirection.Input)] string @IPV_Reason, [Parameter("IPV_ReasonForAdmin", "varchar", ParameterDirection.Input)] string @IPV_ReasonForAdmin, [Parameter("Is_Enabled", "bit", ParameterDirection.Input)] bool? @Is_Enabled, [Parameter("IPV_Status_Description", "varchar", ParameterDirection.Input)] string @IPV_Status_Description);
		[Procedure("USP_ADMIN_SET_BATCH_LOCK_UNLOCK_DOMAIN", "dbo")] public abstract void USP_ADMIN_SET_BATCH_LOCK_UNLOCK_DOMAIN([Parameter("IPV_AutoId", "nvarchar", ParameterDirection.Input)] string @IPV_AutoId, [Parameter("IPV_ObjectName", "nvarchar", ParameterDirection.Input)] string @IPV_ObjectName, [Parameter("IPV_Status", "varchar", ParameterDirection.Input)] string @IPV_Status, [Parameter("IPV_Action", "varchar", ParameterDirection.Input)] string @IPV_Action, [Parameter("IPV_admin_UserName", "varchar", ParameterDirection.Input)] string @IPV_admin_UserName, [Parameter("IPV_Reason", "nvarchar", ParameterDirection.Input)] string @IPV_Reason, [Parameter("IPV_ReasonForAdmin", "varchar", ParameterDirection.Input)] string @IPV_ReasonForAdmin, [Parameter("IPB_isLocked", "bit", ParameterDirection.Input)] bool? @IPB_isLocked, [Parameter("IPV_Status_Description", "varchar", ParameterDirection.Input)] string @IPV_Status_Description, [Parameter("namecheapLock", "bit", ParameterDirection.Input)] bool? @namecheapLock, [Parameter("disableAutoRenew", "bit", ParameterDirection.Input)] bool? @disableAutoRenew);
		[Procedure("USP_ADMIN_SET_BATCH_STATUS", "dbo")] public abstract void USP_ADMIN_SET_BATCH_STATUS([Parameter("IPV_AutoId", "nvarchar", ParameterDirection.Input)] string @IPV_AutoId, [Parameter("IPV_ObjectName", "nvarchar", ParameterDirection.Input)] string @IPV_ObjectName, [Parameter("IPV_Status", "varchar", ParameterDirection.Input)] string @IPV_Status, [Parameter("IPV_Action", "varchar", ParameterDirection.Input)] string @IPV_Action, [Parameter("IPV_Status_Description", "varchar", ParameterDirection.Input)] string @IPV_Status_Description);
		[Procedure("USP_ADMIN_SET_COPY_USER_PRICING", "dbo")] public abstract void USP_ADMIN_SET_COPY_USER_PRICING([Parameter("IPV_CopyUserName", "varchar", ParameterDirection.Input)] string @IPV_CopyUserName, [Parameter("IPV_Username", "varchar", ParameterDirection.Input)] string @IPV_Username);
		[Procedure("USP_ADMIN_SET_DO_NOT_REFUND_FOR_TRANSACTION", "dbo")] public abstract void USP_ADMIN_SET_DO_NOT_REFUND_FOR_TRANSACTION([Parameter("currentOrderId", "int", ParameterDirection.Input)] int? @currentOrderId, [Parameter("doNotRefundFlag", "bit", ParameterDirection.Input)] bool? @doNotRefundFlag, [Parameter("currentTransactionId", "int", ParameterDirection.Input)] int? @currentTransactionId);
		[Procedure("USP_ADMIN_SET_DOMAIN_ABUSED_DETAILS", "dbo")] public abstract void USP_ADMIN_SET_DOMAIN_ABUSED_DETAILS([Parameter("abuseType", "varchar", ParameterDirection.Input)] string @abuseType, [Parameter("complainant", "varchar", ParameterDirection.Input)] string @complainant, [Parameter("ticketID", "varchar", ParameterDirection.Input)] string @ticketID, [Parameter("domainID", "int", ParameterDirection.Input)] int? @domainID, [Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("status", "varchar", ParameterDirection.Input)] string @status, [Parameter("description", "varchar", ParameterDirection.Input)] string @description, [Parameter("adminUserName", "varchar", ParameterDirection.Input)] string @adminUserName);
		[Procedure("USP_ADMIN_SET_MESSAGES", "dbo")] public abstract void USP_ADMIN_SET_MESSAGES([Parameter("IPV_Message_Title", "varchar", ParameterDirection.Input)] string @IPV_Message_Title, [Parameter("IPV_Message_Body", "varchar", ParameterDirection.Input)] string @IPV_Message_Body, [Parameter("IPV_Deliver_After_Date", "datetime", ParameterDirection.Input)] DateTime? @IPV_Deliver_After_Date, [Parameter("IPV_UserName", "varchar", ParameterDirection.Input)] string @IPV_UserName, [Parameter("IPV_Associated_Domains", "varchar", ParameterDirection.Input)] string @IPV_Associated_Domains, [Parameter("IPV_Associated_OrderID", "varchar", ParameterDirection.Input)] string @IPV_Associated_OrderID, [Parameter("IPV_Additional_Info", "text", ParameterDirection.Input)] string @IPV_Additional_Info, [Parameter("IPV_ReplyTo_Mail", "varchar", ParameterDirection.Input)] string @IPV_ReplyTo_Mail, [Parameter("IPV_Modified_By", "varchar", ParameterDirection.Input)] string @IPV_Modified_By, [Parameter("IPN_Reference_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Reference_ID);
		[Procedure("USP_ADMIN_SET_NAV_ATTRIBUTES", "dbo")] public abstract void USP_ADMIN_SET_NAV_ATTRIBUTES([Parameter("navId", "int", ParameterDirection.Input)] int? @navId, [Parameter("attributeChildNavIdsValues", "varchar", ParameterDirection.Input)] string @attributeChildNavIdsValues, [Parameter("applyToChild", "bit", ParameterDirection.Input)] bool? @applyToChild);
		[Procedure("USP_ADMIN_SET_NAV_PAGE_ATTRIBUTES", "dbo")] public abstract void USP_ADMIN_SET_NAV_PAGE_ATTRIBUTES([Parameter("pageId", "int", ParameterDirection.Input)] int? @pageId, [Parameter("attributeNavIdsValues", "varchar", ParameterDirection.Input)] string @attributeNavIdsValues);
		[Procedure("USP_ADMIN_SET_PROMOTION_PRICING", "dbo")] public abstract void USP_ADMIN_SET_PROMOTION_PRICING([Parameter("PromotionID", "int", ParameterDirection.Input)] int? @PromotionID, [Parameter("1_yr_id", "smallint", ParameterDirection.Input)] short? @_1_yr_id, [Parameter("1_yr_price", "money", ParameterDirection.Input)] decimal? @_1_yr_price, [Parameter("2_yr_id", "smallint", ParameterDirection.Input)] short? @_2_yr_id, [Parameter("2_yr_price", "money", ParameterDirection.Input)] decimal? @_2_yr_price, [Parameter("3_yr_id", "smallint", ParameterDirection.Input)] short? @_3_yr_id, [Parameter("3_yr_price", "money", ParameterDirection.Input)] decimal? @_3_yr_price, [Parameter("4_yr_id", "smallint", ParameterDirection.Input)] short? @_4_yr_id, [Parameter("4_yr_price", "money", ParameterDirection.Input)] decimal? @_4_yr_price, [Parameter("5_yr_id", "smallint", ParameterDirection.Input)] short? @_5_yr_id, [Parameter("5_yr_price", "money", ParameterDirection.Input)] decimal? @_5_yr_price, [Parameter("6_yr_id", "smallint", ParameterDirection.Input)] short? @_6_yr_id, [Parameter("6_yr_price", "money", ParameterDirection.Input)] decimal? @_6_yr_price, [Parameter("7_yr_id", "smallint", ParameterDirection.Input)] short? @_7_yr_id, [Parameter("7_yr_price", "money", ParameterDirection.Input)] decimal? @_7_yr_price, [Parameter("8_yr_id", "smallint", ParameterDirection.Input)] short? @_8_yr_id, [Parameter("8_yr_price", "money", ParameterDirection.Input)] decimal? @_8_yr_price, [Parameter("9_yr_id", "smallint", ParameterDirection.Input)] short? @_9_yr_id, [Parameter("9_yr_price", "money", ParameterDirection.Input)] decimal? @_9_yr_price, [Parameter("10_yr_id", "smallint", ParameterDirection.Input)] short? @_10_yr_id, [Parameter("10_yr_price", "money", ParameterDirection.Input)] decimal? @_10_yr_price);
		[Procedure("USP_ADMIN_SET_PROMOTION_TLD_PRICING_DETAIL", "dbo")] public abstract void USP_ADMIN_SET_PROMOTION_TLD_PRICING_DETAIL([Parameter("iPromotionID", "int", ParameterDirection.Input)] int? @iPromotionID, [Parameter("Pricing_Hint", "varchar", ParameterDirection.Input)] string @Pricing_Hint, [Parameter("Addtional_Cost_Hint", "varchar", ParameterDirection.Input)] string @Addtional_Cost_Hint, [Parameter("promotionTldPricingXml", "xml", ParameterDirection.Input)] string @promotionTldPricingXml);
		[Procedure("USP_ADMIN_SET_USER_PRICING", "dbo")] public abstract void USP_ADMIN_SET_USER_PRICING([Parameter("Username", "varchar", ParameterDirection.Input)] string @Username, [Parameter("Pricing_Hint", "varchar", ParameterDirection.Input)] string @Pricing_Hint, [Parameter("1_yr_id", "smallint", ParameterDirection.Input)] short? @_1_yr_id, [Parameter("1_yr_price", "money", ParameterDirection.Input)] decimal? @_1_yr_price, [Parameter("2_yr_id", "smallint", ParameterDirection.Input)] short? @_2_yr_id, [Parameter("2_yr_price", "money", ParameterDirection.Input)] decimal? @_2_yr_price, [Parameter("3_yr_id", "smallint", ParameterDirection.Input)] short? @_3_yr_id, [Parameter("3_yr_price", "money", ParameterDirection.Input)] decimal? @_3_yr_price, [Parameter("4_yr_id", "smallint", ParameterDirection.Input)] short? @_4_yr_id, [Parameter("4_yr_price", "money", ParameterDirection.Input)] decimal? @_4_yr_price, [Parameter("5_yr_id", "smallint", ParameterDirection.Input)] short? @_5_yr_id, [Parameter("5_yr_price", "money", ParameterDirection.Input)] decimal? @_5_yr_price, [Parameter("6_yr_id", "smallint", ParameterDirection.Input)] short? @_6_yr_id, [Parameter("6_yr_price", "money", ParameterDirection.Input)] decimal? @_6_yr_price, [Parameter("7_yr_id", "smallint", ParameterDirection.Input)] short? @_7_yr_id, [Parameter("7_yr_price", "money", ParameterDirection.Input)] decimal? @_7_yr_price, [Parameter("8_yr_id", "smallint", ParameterDirection.Input)] short? @_8_yr_id, [Parameter("8_yr_price", "money", ParameterDirection.Input)] decimal? @_8_yr_price, [Parameter("9_yr_id", "smallint", ParameterDirection.Input)] short? @_9_yr_id, [Parameter("9_yr_price", "money", ParameterDirection.Input)] decimal? @_9_yr_price, [Parameter("10_yr_id", "smallint", ParameterDirection.Input)] short? @_10_yr_id, [Parameter("10_yr_price", "money", ParameterDirection.Input)] decimal? @_10_yr_price);
		[Procedure("USP_ADMIN_SET_USER_TLD_PRICING_DETAIL", "dbo")] public abstract void USP_ADMIN_SET_USER_TLD_PRICING_DETAIL([Parameter("User_Name", "varchar", ParameterDirection.Input)] string @User_Name, [Parameter("Pricing_Hint", "varchar", ParameterDirection.Input)] string @Pricing_Hint, [Parameter("Addtional_Cost_Hint", "varchar", ParameterDirection.Input)] string @Addtional_Cost_Hint, [Parameter("Pricing_Start_Date", "datetime", ParameterDirection.Input)] DateTime? @Pricing_Start_Date, [Parameter("Pricing_End_Date", "datetime", ParameterDirection.Input)] DateTime? @Pricing_End_Date, [Parameter("userTldPricingXml", "xml", ParameterDirection.Input)] string @userTldPricingXml);
		[Procedure("USP_ADMIN_SSL_ADD_REFUND_EMAIL_QUEUE", "dbo")] public abstract void USP_ADMIN_SSL_ADD_REFUND_EMAIL_QUEUE([Parameter("certificateId", "int", ParameterDirection.Input)] int? @certificateId, [Parameter("adminUserName", "varchar", ParameterDirection.Input)] string @adminUserName, [Parameter("adminIp", "varchar", ParameterDirection.Input)] string @adminIp, [Parameter("cancelledDateTime", "datetime", ParameterDirection.Input)] DateTime? @cancelledDateTime, [Parameter("cancelledReason", "varchar", ParameterDirection.Input)] string @cancelledReason, [Parameter("IsParent", "bit", ParameterDirection.Input)] bool? @IsParent);
		[Procedure("USP_ADMIN_SSL_CANCEL_NEWREPLACE", "dbo")] public abstract void USP_ADMIN_SSL_CANCEL_NEWREPLACE([Parameter("certificateId", "int", ParameterDirection.Input)] int? @certificateId);
		[Procedure("USP_ADMIN_SSL_DETAIL", "dbo")] public abstract void USP_ADMIN_SSL_DETAIL([Parameter("PartnerOrderID", "numeric", ParameterDirection.Input)] decimal? @PartnerOrderID);
		[Procedure("USP_ADMIN_SSL_ERROR_INFO", "dbo")] public abstract void USP_ADMIN_SSL_ERROR_INFO([Parameter("CertificateID", "varchar", ParameterDirection.Input)] string @CertificateID);
		[Procedure("USP_ADMIN_SSL_ERROR_LIST", "dbo")] public abstract void USP_ADMIN_SSL_ERROR_LIST([Parameter("IPV_UserName", "nvarchar", ParameterDirection.Input)] string @IPV_UserName, [Parameter("IPV_CertificateID", "nvarchar", ParameterDirection.Input)] string @IPV_CertificateID);
		[Procedure("USP_ADMIN_SSL_GET_CURRENT_RESELLER_LEVEL", "dbo")] public abstract void USP_ADMIN_SSL_GET_CURRENT_RESELLER_LEVEL([Parameter("UserId", "numeric", ParameterDirection.Input)] decimal? @UserId);
		[Procedure("USP_ADMIN_SSL_GET_DETAILS_IN_HIERARCHY", "dbo")] public abstract void USP_ADMIN_SSL_GET_DETAILS_IN_HIERARCHY([Parameter("certificateId", "int", ParameterDirection.Input)] int? @certificateId, [Parameter("flag", "varchar", ParameterDirection.Input)] string @flag);
		[Procedure("USP_ADMIN_SSL_GET_PARENT_INFO", "dbo")] public abstract void USP_ADMIN_SSL_GET_PARENT_INFO([Parameter("certificateID", "int", ParameterDirection.Input)] int? @certificateID);
		[Procedure("USP_ADMIN_SSL_GET_REFID", "dbo")] public abstract void USP_ADMIN_SSL_GET_REFID([Parameter("PartnerOrderID", "numeric", ParameterDirection.Input)] decimal? @PartnerOrderID);
		[Procedure("USP_ADMIN_SSL_GET_STATUS", "dbo")] public abstract void USP_ADMIN_SSL_GET_STATUS([Parameter("certificateId", "int", ParameterDirection.Input)] int? @certificateId);
		[Procedure("USP_ADMIN_SSL_LIST", "dbo")] public abstract void USP_ADMIN_SSL_LIST([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("HostName", "varchar", ParameterDirection.Input)] string @HostName, [Parameter("StartDate", "datetime", ParameterDirection.Input)] DateTime? @StartDate, [Parameter("EndDate", "datetime", ParameterDirection.Input)] DateTime? @EndDate, [Parameter("PartnerName", "varchar", ParameterDirection.Input)] string @PartnerName, [Parameter("SSLType", "varchar", ParameterDirection.Input)] string @SSLType, [Parameter("PartnerOrderId", "varchar", ParameterDirection.Input)] string @PartnerOrderId, [Parameter("OurOrderId", "nvarchar", ParameterDirection.Input)] string @OurOrderId, [Parameter("EmailId", "nvarchar", ParameterDirection.Input)] string @EmailId, [Parameter("Status", "varchar", ParameterDirection.Input)] string @Status);
		[Procedure("USP_ADMIN_SSL_RESELLER_EMAIL_DETAIL", "dbo")] public abstract void USP_ADMIN_SSL_RESELLER_EMAIL_DETAIL([Parameter("AutoId", "varchar", ParameterDirection.Input)] string @AutoId);
		[Procedure("USP_ADMIN_SSL_RESELLER_LEVEL_DETAIL", "dbo")] public abstract void USP_ADMIN_SSL_RESELLER_LEVEL_DETAIL([Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_ADMIN_SSL_RESELLER_LEVEL_LOG_DETAIL", "dbo")] public abstract void USP_ADMIN_SSL_RESELLER_LEVEL_LOG_DETAIL([Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_ADMIN_SSL_STATUS_UPDATE", "dbo")] public abstract void USP_ADMIN_SSL_STATUS_UPDATE([Parameter("CertificateID", "int", ParameterDirection.Input)] int? @CertificateID, [Parameter("NewStatus", "varchar", ParameterDirection.Input)] string @NewStatus, [Parameter("NewStatusDesc", "varchar", ParameterDirection.Input)] string @NewStatusDesc, [Parameter("PartnerID", "varchar", ParameterDirection.Input)] string @PartnerID);
		[Procedure("USP_ADMIN_SSL_UPDATE_STATUS_TO_CANCEL", "dbo")] public abstract void USP_ADMIN_SSL_UPDATE_STATUS_TO_CANCEL([Parameter("CertificateID", "int", ParameterDirection.Input)] int? @CertificateID, [Parameter("NewStatus", "varchar", ParameterDirection.Input)] string @NewStatus, [Parameter("NewStatusDesc", "varchar", ParameterDirection.Input)] string @NewStatusDesc, [Parameter("PartnerID", "varchar", ParameterDirection.Input)] string @PartnerID, [Parameter("IsParent", "bit", ParameterDirection.Input)] bool? @IsParent);
		[Procedure("USP_ADMIN_SYNCHRONIZE_EXPIRYDATE", "dbo")] public abstract void USP_ADMIN_SYNCHRONIZE_EXPIRYDATE([Parameter("slotid", "nvarchar", ParameterDirection.Input)] string @slotid);
		[Procedure("USP_ADMIN_TOGGLE_FAVOURITE_LIST", "dbo")] public abstract void USP_ADMIN_TOGGLE_FAVOURITE_LIST([Parameter("adminUserName", "varchar", ParameterDirection.Input)] string @adminUserName, [Parameter("linkId", "varchar", ParameterDirection.Input)] string @linkId);
		[Procedure("USP_ADMIN_UNASSIGN_API_COMMANDS_FROM_SCOPE_ID", "dbo")] public abstract void USP_ADMIN_UNASSIGN_API_COMMANDS_FROM_SCOPE_ID([Parameter("scopeId", "int", ParameterDirection.Input)] int? @scopeId, [Parameter("apiIdsBySemicolon", "nvarchar", ParameterDirection.Input)] string @apiIdsBySemicolon);
		[Procedure("USP_ADMIN_UNASSIGN_API_SCOPES_FROM_APP_ROLE_ID", "dbo")] public abstract void USP_ADMIN_UNASSIGN_API_SCOPES_FROM_APP_ROLE_ID([Parameter("appRoleId", "int", ParameterDirection.Input)] int? @appRoleId, [Parameter("scopeIdsBySemicolon", "nvarchar", ParameterDirection.Input)] string @scopeIdsBySemicolon);
		[Procedure("USP_ADMIN_UNASSIGN_API_SCOPES_FROM_ROLE_ID", "dbo")] public abstract void USP_ADMIN_UNASSIGN_API_SCOPES_FROM_ROLE_ID([Parameter("roleId", "int", ParameterDirection.Input)] int? @roleId, [Parameter("scopeIdsBySemicolon", "nvarchar", ParameterDirection.Input)] string @scopeIdsBySemicolon);
		[Procedure("USP_ADMIN_UNLOCK_EXTERNAL_LOGIN_USER", "dbo")] public abstract void USP_ADMIN_UNLOCK_EXTERNAL_LOGIN_USER([Parameter("userID", "numeric", ParameterDirection.Input)] decimal? @userID, [Parameter("adminComments", "varchar", ParameterDirection.Input)] string @adminComments, [Parameter("adminUser", "varchar", ParameterDirection.Input)] string @adminUser);
		[Procedure("USP_ADMIN_UPDATE_CHANGE_IN_PRICING", "dbo")] public abstract void USP_ADMIN_UPDATE_CHANGE_IN_PRICING([Parameter("sPromotionID", "int", ParameterDirection.Input)] int? @sPromotionID, [Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName, [Parameter("sActionID", "varchar", ParameterDirection.Input)] string @sActionID, [Parameter("TLDName", "varchar", ParameterDirection.Input)] string @TLDName, [Parameter("ForAmountOrCost", "varchar", ParameterDirection.Input)] string @ForAmountOrCost, [Parameter("ToAmountOrCost", "varchar", ParameterDirection.Input)] string @ToAmountOrCost, [Parameter("CompareType", "varchar", ParameterDirection.Input)] string @CompareType, [Parameter("IncreaseOrDecrease", "varchar", ParameterDirection.Input)] string @IncreaseOrDecrease, [Parameter("PercentOrDollar", "varchar", ParameterDirection.Input)] string @PercentOrDollar, [Parameter("CompareAmount", "float", ParameterDirection.Input)] double? @CompareAmount, [Parameter("UpdateAmount", "float", ParameterDirection.Input)] double? @UpdateAmount);
		[Procedure("USP_ADMIN_UPDATE_DETAILS_FOR_TRANSFER_DOMAINS", "dbo")] public abstract void USP_ADMIN_UPDATE_DETAILS_FOR_TRANSFER_DOMAINS([Parameter("updateString", "varchar", ParameterDirection.Input)] string @updateString, [Parameter("type", "varchar", ParameterDirection.Input)] string @type);
		[Procedure("USP_ADMIN_UPDATE_DOMAIN_ORDER_ITEM", "dbo")] public abstract void USP_ADMIN_UPDATE_DOMAIN_ORDER_ITEM([Parameter("orderItemId", "int", ParameterDirection.Input)] int? @orderItemId, [Parameter("isSuccess", "bit", ParameterDirection.Input)] bool? @isSuccess, [Parameter("orderMessage", "nvarchar", ParameterDirection.Input)] string @orderMessage);
		[Procedure("USP_ADMIN_UPDATE_FAVOURITES_SEQ_NO", "dbo")] public abstract void USP_ADMIN_UPDATE_FAVOURITES_SEQ_NO([Parameter("adminUserName", "varchar", ParameterDirection.Input)] string @adminUserName, [Parameter("data", "varchar", ParameterDirection.Input)] string @data);
		[Procedure("USP_ADMIN_UPDATE_ONEPAGER_SUBSCRIPTION_STATUS", "dbo")] public abstract void USP_ADMIN_UPDATE_ONEPAGER_SUBSCRIPTION_STATUS([Parameter("subscriptionId", "numeric", ParameterDirection.Input)] decimal? @subscriptionId, [Parameter("status", "bit", ParameterDirection.Input)] bool? @status, [Parameter("statusChangeDateTime", "varchar", ParameterDirection.Input)] string @statusChangeDateTime, [Parameter("adminUserName", "varchar", ParameterDirection.Input)] string @adminUserName, [Parameter("comments", "varchar", ParameterDirection.Input)] string @comments, [Parameter("adminComments", "varchar", ParameterDirection.Input)] string @adminComments);
		[Procedure("USP_ADMIN_UPDATE_TLD_ORDER", "dbo")] public abstract void USP_ADMIN_UPDATE_TLD_ORDER([Parameter("PrimaryTlds_OrderedCSV", "varchar", ParameterDirection.Input)] string @PrimaryTlds_OrderedCSV, [Parameter("SecondaryTlds_OrderedCSV", "varchar", ParameterDirection.Input)] string @SecondaryTlds_OrderedCSV);
		[Procedure("USP_ADMIN_UPDATE_USER_ROLES", "dbo")] public abstract void USP_ADMIN_UPDATE_USER_ROLES([Parameter("UserID", "int", ParameterDirection.Input)] int? @UserID, [Parameter("AssociatedRoles", "varchar", ParameterDirection.Input)] string @AssociatedRoles, [Parameter("AdminUerName", "varchar", ParameterDirection.Input)] string @AdminUerName, [Parameter("AdminIP", "varchar", ParameterDirection.Input)] string @AdminIP);
		[Procedure("USP_ADMIN_WHOISGUARD_HISTORY_DETAILS", "dbo")] public abstract void USP_ADMIN_WHOISGUARD_HISTORY_DETAILS([Parameter("SlotId", "int", ParameterDirection.Input)] int? @SlotId, [Parameter("AdminUser", "varchar", ParameterDirection.Input)] string @AdminUser, [Parameter("LogDateTime", "datetime", ParameterDirection.Input)] DateTime? @LogDateTime, [Parameter("Action", "varchar", ParameterDirection.Input)] string @Action, [Parameter("Reason", "nvarchar", ParameterDirection.Input)] string @Reason);
		[Procedure("usp_AdminAddOXSubscriptiontoOrderTable", "dbo")] public abstract void usp_AdminAddOXSubscriptiontoOrderTable([Parameter("SubscriptionID", "int", ParameterDirection.Input)] int? @SubscriptionID, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("PlanName", "varchar", ParameterDirection.Input)] string @PlanName, [Parameter("OrderPrice", "money", ParameterDirection.Input)] decimal? @OrderPrice, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip, [Parameter("outOrderId", "int", ParameterDirection.InputOutput)] int? @outOrderId, [Parameter("outOrderDetailId", "int", ParameterDirection.InputOutput)] int? @outOrderDetailId);
		[Procedure("usp_AdminAddSupportVerification", "dbo")] public abstract void usp_AdminAddSupportVerification([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("pin", "varchar", ParameterDirection.Input)] string @pin, [Parameter("profileEmail", "nvarchar", ParameterDirection.Input)] string @profileEmail, [Parameter("adminUser", "varchar", ParameterDirection.Input)] string @adminUser, [Parameter("adminIp", "varchar", ParameterDirection.Input)] string @adminIp, [Parameter("comments", "varchar", ParameterDirection.Input)] string @comments);
		[Procedure("usp_AdminCheckSufficientRefundAmountForUser", "dbo")] public abstract void usp_AdminCheckSufficientRefundAmountForUser([Parameter("transactionIds", "nvarchar", ParameterDirection.Input)] string @transactionIds);
		[Procedure("usp_AdminEnableDisableTransferMate", "dbo")] public abstract void usp_AdminEnableDisableTransferMate([Parameter("transferId", "numeric", ParameterDirection.Input)] decimal? @transferId, [Parameter("transferMateEnabled", "bit", ParameterDirection.Input)] bool? @transferMateEnabled, [Parameter("adminComments", "varchar", ParameterDirection.Input)] string @adminComments);
		[Procedure("usp_AdminGetDomainDetails", "dbo")] public abstract void usp_AdminGetDomainDetails([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("usp_AdminGetInitialAmountForTransaction", "dbo")] public abstract void usp_AdminGetInitialAmountForTransaction([Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId);
		[Procedure("usp_AdminGetInitiatedTransactionByTransactionId", "dbo")] public abstract void usp_AdminGetInitiatedTransactionByTransactionId([Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId);
		[Procedure("USP_AdminGetLinkpointOrderIdByTransactionId", "dbo")] public abstract void USP_AdminGetLinkpointOrderIdByTransactionId([Parameter("transactionId", "int", ParameterDirection.Input)] int? @transactionId);
		[Procedure("usp_AdminGetLogMessageDepartments", "dbo")] public abstract void usp_AdminGetLogMessageDepartments([Parameter("adminUserName", "varchar", ParameterDirection.Input)] string @adminUserName);
		[Procedure("usp_AdminGetParticularDomainDetails", "dbo")] public abstract void usp_AdminGetParticularDomainDetails([Parameter("DomainStatusAutoId", "bigint", ParameterDirection.Input)] long? @DomainStatusAutoId);
		[Procedure("usp_AdminGetPreviousRefundToFundsTransactions", "dbo")] public abstract void usp_AdminGetPreviousRefundToFundsTransactions([Parameter("orderId", "numeric", ParameterDirection.Input)] decimal? @orderId, [Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId);
		[Procedure("usp_AdminGetTransferDetails", "dbo")] public abstract void usp_AdminGetTransferDetails([Parameter("transferId", "numeric", ParameterDirection.Input)] decimal? @transferId);
		[Procedure("usp_AdminGetUserEmailAddress", "dbo")] public abstract void usp_AdminGetUserEmailAddress([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_AdminGetUserSupportPinDetails", "dbo")] public abstract void usp_AdminGetUserSupportPinDetails([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("usp_AdminGetUserVerifiedStatus", "dbo")] public abstract void usp_AdminGetUserVerifiedStatus([Parameter("autoID", "int", ParameterDirection.Input)] int? @autoID);
		[Procedure("USP_AFFILIATE_ACTIVATE_PROGRAM", "dbo")] public abstract void USP_AFFILIATE_ACTIVATE_PROGRAM([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("password", "varchar", ParameterDirection.Input)] string @password, [Parameter("passwordNoCase", "varchar", ParameterDirection.Input)] string @passwordNoCase, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip, [Parameter("skipPasswordCheck", "bit", ParameterDirection.Input)] bool? @skipPasswordCheck);
		[Procedure("USP_AFFILIATE_ADD_CANCELLED_ORDER", "dbo")] public abstract void USP_AFFILIATE_ADD_CANCELLED_ORDER([Parameter("orderID", "int", ParameterDirection.Input)] int? @orderID, [Parameter("orderDetailID", "int", ParameterDirection.Input)] int? @orderDetailID, [Parameter("IsCancelledByAdmin", "bit", ParameterDirection.Input)] bool? @IsCancelledByAdmin, [Parameter("ProcessedYN", "bit", ParameterDirection.Input)] bool? @ProcessedYN, [Parameter("Details", "varchar", ParameterDirection.Input)] string @Details);
		[Procedure("USP_AFFILIATE_ENABLE", "dbo")] public abstract void USP_AFFILIATE_ENABLE([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Password", "varchar", ParameterDirection.Input)] string @Password, [Parameter("PasswordNoCase", "varchar", ParameterDirection.Input)] string @PasswordNoCase);
		[Procedure("USP_AFFILIATE_GET_ALL_INFO", "dbo")] public abstract void USP_AFFILIATE_GET_ALL_INFO([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_AFFILIATE_GET_COMMISSION_STATUS_FOR_ORDERITEM", "dbo")] public abstract void USP_AFFILIATE_GET_COMMISSION_STATUS_FOR_ORDERITEM([Parameter("orderID", "int", ParameterDirection.Input)] int? @orderID, [Parameter("orderDetailID", "int", ParameterDirection.Input)] int? @orderDetailID);
		[Procedure("USP_AFFILIATE_GET_DETAILS_FOR_AUTO_REFERENCE_ID", "dbo")] public abstract void USP_AFFILIATE_GET_DETAILS_FOR_AUTO_REFERENCE_ID([Parameter("autoReferenceID", "int", ParameterDirection.Input)] int? @autoReferenceID);
		[Procedure("USP_AFFILIATE_GET_ID", "dbo")] public abstract void USP_AFFILIATE_GET_ID([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_AFFILIATE_GET_ORDER_DETAILS", "dbo")] public abstract void USP_AFFILIATE_GET_ORDER_DETAILS([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("USP_AFFILIATE_GET_ORDERITEMID_BY_TRANSFERID", "dbo")] public abstract void USP_AFFILIATE_GET_ORDERITEMID_BY_TRANSFERID([Parameter("transferID", "int", ParameterDirection.Input)] int? @transferID);
		[Procedure("USP_AFFILIATE_GET_PROMOTION_CODE_FOR_REFERENCE", "dbo")] public abstract void USP_AFFILIATE_GET_PROMOTION_CODE_FOR_REFERENCE([Parameter("autoReferenceID", "int", ParameterDirection.Input)] int? @autoReferenceID);
		[Procedure("USP_AFFILIATE_GET_USER_AFFILIATE_STATUS", "dbo")] public abstract void USP_AFFILIATE_GET_USER_AFFILIATE_STATUS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_AFFILIATE_LOG_REFERRAL_TRAFFIC", "dbo")] public abstract void USP_AFFILIATE_LOG_REFERRAL_TRAFFIC([Parameter("affiliateID", "int", ParameterDirection.Input)] int? @affiliateID, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip, [Parameter("affiliateProgramID", "int", ParameterDirection.Input)] int? @affiliateProgramID, [Parameter("httpReferrer", "varchar", ParameterDirection.Input)] string @httpReferrer);
		[Procedure("USP_AFFILIATE_PROCESS_EARNED_COMMISSION_PERDAY", "dbo")] public abstract void USP_AFFILIATE_PROCESS_EARNED_COMMISSION_PERDAY([Parameter("affiliateID", "int", ParameterDirection.Input)] int? @affiliateID, [Parameter("saleDate", "datetime", ParameterDirection.Input)] DateTime? @saleDate);
		[Procedure("USP_AFFILIATE_PROCESS_ORDER_ITEMS", "dbo")] public abstract void USP_AFFILIATE_PROCESS_ORDER_ITEMS([Parameter("orderID", "int", ParameterDirection.Input)] int? @orderID, [Parameter("orderDetailID", "int", ParameterDirection.Input)] int? @orderDetailID, [Parameter("ignoreOldCreditYN", "bit", ParameterDirection.Input)] bool? @ignoreOldCreditYN, [Parameter("logDetails", "varchar", ParameterDirection.Input)] string @logDetails);
		[Procedure("USP_AFFILIATE_PROCESS_ORDER_ITEMS_20100731", "dbo")] public abstract void USP_AFFILIATE_PROCESS_ORDER_ITEMS_20100731([Parameter("orderID", "int", ParameterDirection.Input)] int? @orderID, [Parameter("orderDetailID", "int", ParameterDirection.Input)] int? @orderDetailID, [Parameter("ignoreOldCreditYN", "bit", ParameterDirection.Input)] bool? @ignoreOldCreditYN, [Parameter("logDetails", "varchar", ParameterDirection.Input)] string @logDetails);
		[Procedure("USP_AFFILIATE_PROCESS_ORDER_ITEMS_MANUAL", "dbo")] public abstract void USP_AFFILIATE_PROCESS_ORDER_ITEMS_MANUAL([Parameter("orderID", "int", ParameterDirection.Input)] int? @orderID, [Parameter("orderDetailID", "int", ParameterDirection.Input)] int? @orderDetailID, [Parameter("ignoreOldCreditYN", "bit", ParameterDirection.Input)] bool? @ignoreOldCreditYN, [Parameter("logDetails", "varchar", ParameterDirection.Input)] string @logDetails, [Parameter("IgnoreOrderCountCheck", "bit", ParameterDirection.Input)] bool? @IgnoreOrderCountCheck, [Parameter("IgnorePromotionCode", "bit", ParameterDirection.Input)] bool? @IgnorePromotionCode);
		[Procedure("USP_AFFILIATE_PROCESS_ORDER_ITEMS_old", "dbo")] public abstract void USP_AFFILIATE_PROCESS_ORDER_ITEMS_old([Parameter("orderID", "int", ParameterDirection.Input)] int? @orderID, [Parameter("orderDetailID", "int", ParameterDirection.Input)] int? @orderDetailID, [Parameter("ignoreOldCreditYN", "bit", ParameterDirection.Input)] bool? @ignoreOldCreditYN, [Parameter("logDetails", "varchar", ParameterDirection.Input)] string @logDetails);
		[Procedure("USP_AFFILIATE_REVERT_COMMISSION_FOR_ORDERITEM", "dbo")] public abstract void USP_AFFILIATE_REVERT_COMMISSION_FOR_ORDERITEM([Parameter("orderID", "int", ParameterDirection.Input)] int? @orderID, [Parameter("orderDetailID", "int", ParameterDirection.Input)] int? @orderDetailID, [Parameter("level", "varchar", ParameterDirection.Input)] string @level, [Parameter("reason", "varchar", ParameterDirection.Input)] string @reason, [Parameter("adminCancelledYN", "bit", ParameterDirection.Input)] bool? @adminCancelledYN, [Parameter("qtyToCancel", "int", ParameterDirection.Input)] int? @qtyToCancel);
		[Procedure("USP_AFFILIATES_ADMIN_COPY_USER_COMMISSION_DETAILS", "dbo")] public abstract void USP_AFFILIATES_ADMIN_COPY_USER_COMMISSION_DETAILS([Parameter("fromUserName", "nvarchar", ParameterDirection.Input)] string @fromUserName, [Parameter("toUserName", "nvarchar", ParameterDirection.Input)] string @toUserName);
		[Procedure("USP_AFFILIATES_ADMIN_GET_ACTION_PRODUCT_LIST_FOR_USER", "dbo")] public abstract void USP_AFFILIATES_ADMIN_GET_ACTION_PRODUCT_LIST_FOR_USER([Parameter("sType", "varchar", ParameterDirection.Input)] string @sType, [Parameter("sActionID", "varchar", ParameterDirection.Input)] string @sActionID);
		[Procedure("USP_AFFILIATES_ADMIN_GET_GLOBAL_COMMISSION_PRICING_DETAILS", "dbo")] public abstract void USP_AFFILIATES_ADMIN_GET_GLOBAL_COMMISSION_PRICING_DETAILS([Parameter("actionID", "varchar", ParameterDirection.Input)] string @actionID, [Parameter("tldName", "varchar", ParameterDirection.Input)] string @tldName);
		[Procedure("USP_AFFILIATES_ADMIN_GET_GLOBAL_COMMISSIONS", "dbo")] public abstract void USP_AFFILIATES_ADMIN_GET_GLOBAL_COMMISSIONS([Parameter("actionID", "varchar", ParameterDirection.Input)] string @actionID, [Parameter("tldName", "varchar", ParameterDirection.Input)] string @tldName, [Parameter("explicitMaximum", "int", ParameterDirection.Input)] int? @explicitMaximum, [Parameter("recordsPerPage", "int", ParameterDirection.Input)] int? @recordsPerPage, [Parameter("chosenPage", "int", ParameterDirection.Input)] int? @chosenPage, [Parameter("isHosting", "bit", ParameterDirection.Input)] bool? @isHosting);
		[Procedure("USP_AFFILIATES_ADMIN_GET_USER_COMMISSION_PRICING_DETAILS", "dbo")] public abstract void USP_AFFILIATES_ADMIN_GET_USER_COMMISSION_PRICING_DETAILS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("actionID", "varchar", ParameterDirection.Input)] string @actionID, [Parameter("tldName", "varchar", ParameterDirection.Input)] string @tldName);
		[Procedure("USP_AFFILIATES_ADMIN_GET_USER_COMMISSIONS_DETAILS", "dbo")] public abstract void USP_AFFILIATES_ADMIN_GET_USER_COMMISSIONS_DETAILS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("explicitMaximum", "int", ParameterDirection.Input)] int? @explicitMaximum, [Parameter("recordsPerPage", "int", ParameterDirection.Input)] int? @recordsPerPage, [Parameter("chosenPage", "int", ParameterDirection.Input)] int? @chosenPage, [Parameter("isHosting", "bit", ParameterDirection.Input)] bool? @isHosting);
		[Procedure("USP_AFFILIATES_ADMIN_GET_USER_STATUS", "dbo")] public abstract void USP_AFFILIATES_ADMIN_GET_USER_STATUS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_AFFILIATES_ADMIN_GET_USERS_COMMISSION_LIST", "dbo")] public abstract void USP_AFFILIATES_ADMIN_GET_USERS_COMMISSION_LIST([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_AFFILIATES_ADMIN_SAVE_CONFIG_INFO_FOR_USER", "dbo")] public abstract void USP_AFFILIATES_ADMIN_SAVE_CONFIG_INFO_FOR_USER([Parameter("affiliateID", "int", ParameterDirection.Input)] int? @affiliateID, [Parameter("numberOfOrdersCommissionAppliedFor", "int", ParameterDirection.Input)] int? @numberOfOrdersCommissionAppliedFor, [Parameter("canUseAfflCodeForOwnAccount", "bit", ParameterDirection.Input)] bool? @canUseAfflCodeForOwnAccount);
		[Procedure("USP_AFFILIATES_ADMIN_SET_GLOBAL_COMMISSION_PRICING_DETAIL", "dbo")] public abstract void USP_AFFILIATES_ADMIN_SET_GLOBAL_COMMISSION_PRICING_DETAIL([Parameter("actionID", "varchar", ParameterDirection.Input)] string @actionID, [Parameter("tldName", "varchar", ParameterDirection.Input)] string @tldName, [Parameter("globalCommissionPricingXML", "xml", ParameterDirection.Input)] string @globalCommissionPricingXML);
		[Procedure("USP_AFFILIATES_ADMIN_SET_USER_COMMISSION_PRICING_DETAIL", "dbo")] public abstract void USP_AFFILIATES_ADMIN_SET_USER_COMMISSION_PRICING_DETAIL([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("actionID", "varchar", ParameterDirection.Input)] string @actionID, [Parameter("tldName", "varchar", ParameterDirection.Input)] string @tldName, [Parameter("userCommissionPricingXML", "xml", ParameterDirection.Input)] string @userCommissionPricingXML);
		[Procedure("USP_AFFILIATES_CHECKTO_WITHDRAW_COMMISSION", "dbo")] public abstract void USP_AFFILIATES_CHECKTO_WITHDRAW_COMMISSION([Parameter("userName", "varchar", ParameterDirection.Input)] string @userName, [Parameter("affiliateId", "int", ParameterDirection.Input)] int? @affiliateId);
		[Procedure("USP_AFFILIATES_COMPLETE_OR_CANCEL_WITHDRAW_COMMISSION", "dbo")] public abstract void USP_AFFILIATES_COMPLETE_OR_CANCEL_WITHDRAW_COMMISSION([Parameter("requestId", "int", ParameterDirection.Input)] int? @requestId, [Parameter("cancelOrComplete", "varchar", ParameterDirection.Input)] string @cancelOrComplete, [Parameter("description", "nvarchar", ParameterDirection.Input)] string @description, [Parameter("amount", "numeric", ParameterDirection.Input)] decimal? @amount, [Parameter("paypalEmail", "varchar", ParameterDirection.Input)] string @paypalEmail);
		[Procedure("USP_AFFILIATES_DELETE_GLOBAL_COMMISSION", "dbo")] public abstract void USP_AFFILIATES_DELETE_GLOBAL_COMMISSION([Parameter("actionID", "varchar", ParameterDirection.Input)] string @actionID, [Parameter("tldName", "varchar", ParameterDirection.Input)] string @tldName);
		[Procedure("USP_AFFILIATES_DELETE_USER_COMMISSION", "dbo")] public abstract void USP_AFFILIATES_DELETE_USER_COMMISSION([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_AFFILIATES_DELETE_USER_COMMISSION_FOR_TLD_ACTION", "dbo")] public abstract void USP_AFFILIATES_DELETE_USER_COMMISSION_FOR_TLD_ACTION([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("actionID", "varchar", ParameterDirection.Input)] string @actionID, [Parameter("tldName", "varchar", ParameterDirection.Input)] string @tldName);
		[Procedure("USP_AFFILIATES_EARNED_COMMISSIONS_HISTORY_REPORT", "dbo")] public abstract void USP_AFFILIATES_EARNED_COMMISSIONS_HISTORY_REPORT([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("FromDate", "datetime", ParameterDirection.Input)] DateTime? @FromDate, [Parameter("ToDate", "datetime", ParameterDirection.Input)] DateTime? @ToDate, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Order", "varchar", ParameterDirection.Input)] string @Order, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("ReturnAllRows", "bit", ParameterDirection.Input)] bool? @ReturnAllRows);
		[Procedure("USP_AFFILIATES_EARNED_COMMISSIONS_LOG_HISTORY_REPORT", "dbo")] public abstract void USP_AFFILIATES_EARNED_COMMISSIONS_LOG_HISTORY_REPORT([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("statusname", "varchar", ParameterDirection.Input)] string @statusname, [Parameter("FromDate", "datetime", ParameterDirection.Input)] DateTime? @FromDate, [Parameter("ToDate", "datetime", ParameterDirection.Input)] DateTime? @ToDate, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Order", "varchar", ParameterDirection.Input)] string @Order, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("ReturnAllRows", "bit", ParameterDirection.Input)] bool? @ReturnAllRows);
		[Procedure("USP_AFFILIATES_ENABLE_DISABLE_USER", "dbo")] public abstract void USP_AFFILIATES_ENABLE_DISABLE_USER([Parameter("affiliateID", "int", ParameterDirection.Input)] int? @affiliateID, [Parameter("isDeleted", "bit", ParameterDirection.Input)] bool? @isDeleted, [Parameter("adminIP", "varchar", ParameterDirection.Input)] string @adminIP, [Parameter("adminUser", "varchar", ParameterDirection.Input)] string @adminUser, [Parameter("deletedReason", "varchar", ParameterDirection.Input)] string @deletedReason, [Parameter("deletedInternalReason", "varchar", ParameterDirection.Input)] string @deletedInternalReason);
		[Procedure("USP_AFFILIATES_GET_USER_DETAILS", "dbo")] public abstract void USP_AFFILIATES_GET_USER_DETAILS([Parameter("affiliateID", "int", ParameterDirection.Input)] int? @affiliateID);
		[Procedure("USP_AFFILIATES_LOCK_UNLOCK_USER", "dbo")] public abstract void USP_AFFILIATES_LOCK_UNLOCK_USER([Parameter("affiliateID", "int", ParameterDirection.Input)] int? @affiliateID, [Parameter("lockedByAdminYN", "bit", ParameterDirection.Input)] bool? @lockedByAdminYN, [Parameter("reason", "varchar", ParameterDirection.Input)] string @reason, [Parameter("internalReason", "varchar", ParameterDirection.Input)] string @internalReason, [Parameter("adminIP", "varchar", ParameterDirection.Input)] string @adminIP, [Parameter("adminUser", "varchar", ParameterDirection.Input)] string @adminUser);
		[Procedure("USP_AFFILIATES_UPDATE_ORDER_PROCESS_PARMAS", "dbo")] public abstract void USP_AFFILIATES_UPDATE_ORDER_PROCESS_PARMAS([Parameter("lastUpdatedOrderID", "int", ParameterDirection.Input)] int? @lastUpdatedOrderID);
		[Procedure("USP_AFFILIATES_USERS_REPORT", "dbo")] public abstract void USP_AFFILIATES_USERS_REPORT([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("FromDate", "datetime", ParameterDirection.Input)] DateTime? @FromDate, [Parameter("ToDate", "datetime", ParameterDirection.Input)] DateTime? @ToDate, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Order", "varchar", ParameterDirection.Input)] string @Order, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("ReturnAllRows", "bit", ParameterDirection.Input)] bool? @ReturnAllRows);
		[Procedure("USP_AFFILIATES_WITHDRAW_COMMISSION", "dbo")] public abstract void USP_AFFILIATES_WITHDRAW_COMMISSION([Parameter("IPNV_UserName", "nvarchar", ParameterDirection.Input)] string @IPNV_UserName, [Parameter("IPV_PayMode", "varchar", ParameterDirection.Input)] string @IPV_PayMode, [Parameter("IPM_Amount", "smallmoney", ParameterDirection.Input)] decimal? @IPM_Amount, [Parameter("IPNV_Paypal_ID", "nvarchar", ParameterDirection.Input)] string @IPNV_Paypal_ID, [Parameter("IPNV_Check_To", "nvarchar", ParameterDirection.Input)] string @IPNV_Check_To, [Parameter("IPT_Check_Address", "text", ParameterDirection.Input)] string @IPT_Check_Address, [Parameter("IPNV_Password", "varchar", ParameterDirection.Input)] string @IPNV_Password, [Parameter("IPNV_PasswordNoCase", "varchar", ParameterDirection.Input)] string @IPNV_PasswordNoCase, [Parameter("Affiliate_ID", "int", ParameterDirection.Input)] int? @Affiliate_ID);
		[Procedure("USP_API_ACCESS_DISABLE", "dbo")] public abstract void USP_API_ACCESS_DISABLE([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Password", "varchar", ParameterDirection.Input)] string @Password, [Parameter("PasswordNoCase", "varchar", ParameterDirection.Input)] string @PasswordNoCase);
		[Procedure("USP_API_ACCESS_ENABLE", "dbo")] public abstract void USP_API_ACCESS_ENABLE([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Password", "varchar", ParameterDirection.Input)] string @Password, [Parameter("PasswordNoCase", "varchar", ParameterDirection.Input)] string @PasswordNoCase);
		[Procedure("USP_API_ADD_DOMAIN_TO_USER", "dbo")] public abstract void USP_API_ADD_DOMAIN_TO_USER([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("NumYears", "smallint", ParameterDirection.Input)] short? @NumYears, [Parameter("PayStatus", "nvarchar", ParameterDirection.Input)] string @PayStatus, [Parameter("NumericOrderID", "nvarchar", ParameterDirection.Input)] string @NumericOrderID, [Parameter("OrderID", "nvarchar", ParameterDirection.Input)] string @OrderID, [Parameter("TransID", "nvarchar", ParameterDirection.Input)] string @TransID, [Parameter("EnomTransId", "nvarchar", ParameterDirection.Input)] string @EnomTransId, [Parameter("IsAddToRegistrationQueue", "bit", ParameterDirection.Input)] bool? @IsAddToRegistrationQueue, [Parameter("ProviderName", "varchar", ParameterDirection.Input)] string @ProviderName, [Parameter("OrderDetailID", "numeric", ParameterDirection.Input)] decimal? @OrderDetailID, [Parameter("dnsProviderType", "varchar", ParameterDirection.Input)] string @dnsProviderType, [Parameter("expiryDateTime", "datetime", ParameterDirection.Input)] DateTime? @expiryDateTime);
		[Procedure("USP_API_ADD_FREE_PRODUCTS_IN_ORDER_DETAILS", "dbo")] public abstract void USP_API_ADD_FREE_PRODUCTS_IN_ORDER_DETAILS([Parameter("orderId", "int", ParameterDirection.Input)] int? @orderId, [Parameter("sld", "nvarchar", ParameterDirection.Input)] string @sld, [Parameter("tld", "nvarchar", ParameterDirection.Input)] string @tld, [Parameter("numYears", "smallint", ParameterDirection.Input)] short? @numYears, [Parameter("pricePerYear", "money", ParameterDirection.Input)] decimal? @pricePerYear, [Parameter("regPricePerYear", "money", ParameterDirection.Input)] decimal? @regPricePerYear, [Parameter("specialPrice", "money", ParameterDirection.Input)] decimal? @specialPrice, [Parameter("qty", "int", ParameterDirection.Input)] int? @qty, [Parameter("actionId", "varchar", ParameterDirection.Input)] string @actionId, [Parameter("actionSuccess", "bit", ParameterDirection.Input)] bool? @actionSuccess, [Parameter("errInfo", "varchar", ParameterDirection.Input)] string @errInfo, [Parameter("orderDetailId", "int", ParameterDirection.InputOutput)] int? @orderDetailId, [Parameter("productType", "varchar", ParameterDirection.Input)] string @productType, [Parameter("title", "varchar", ParameterDirection.Input)] string @title);
		[Procedure("USP_API_ADD_FREE_SSL", "dbo")] public abstract void USP_API_ADD_FREE_SSL([Parameter("ActionID", "varchar", ParameterDirection.Input)] string @ActionID, [Parameter("sSLD", "varchar", ParameterDirection.Input)] string @sSLD, [Parameter("sTLD", "varchar", ParameterDirection.Input)] string @sTLD, [Parameter("NumofYears", "smallint", ParameterDirection.Input)] short? @NumofYears, [Parameter("Qty", "int", ParameterDirection.Input)] int? @Qty, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName, [Parameter("sTransactionID", "nvarchar", ParameterDirection.Input)] string @sTransactionID, [Parameter("sOrderID", "nvarchar", ParameterDirection.Input)] string @sOrderID, [Parameter("sNumericOrderID", "numeric", ParameterDirection.Input)] decimal? @sNumericOrderID);
		[Procedure("USP_API_ADD_FUNDS_REQUEST", "dbo")] public abstract void USP_API_ADD_FUNDS_REQUEST([Parameter("tokenId", "varchar", ParameterDirection.Input)] string @tokenId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("requestorUserName", "nvarchar", ParameterDirection.Input)] string @requestorUserName, [Parameter("requestorUserType", "nvarchar", ParameterDirection.Input)] string @requestorUserType, [Parameter("createdByEndUserIP", "varchar", ParameterDirection.Input)] string @createdByEndUserIP, [Parameter("createdDateTime", "datetime", ParameterDirection.Input)] DateTime? @createdDateTime, [Parameter("status", "varchar", ParameterDirection.Input)] string @status, [Parameter("requestedAmount", "money", ParameterDirection.Input)] decimal? @requestedAmount, [Parameter("createdByRequestIp", "varchar", ParameterDirection.Input)] string @createdByRequestIp, [Parameter("returnUrl", "varchar", ParameterDirection.Input)] string @returnUrl);
		[Procedure("USP_API_ADD_REMOVE_ALLOWED_IPS", "dbo")] public abstract void USP_API_ADD_REMOVE_ALLOWED_IPS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Password", "varchar", ParameterDirection.Input)] string @Password, [Parameter("PasswordNoCase", "varchar", ParameterDirection.Input)] string @PasswordNoCase, [Parameter("Action", "varchar", ParameterDirection.Input)] string @Action, [Parameter("IP", "varchar", ParameterDirection.Input)] string @IP);
		[Procedure("USP_API_ADD_TO_TRANSFER_QUEUE", "dbo")] public abstract void USP_API_ADD_TO_TRANSFER_QUEUE([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("NumOfYears", "smallint", ParameterDirection.Input)] short? @NumOfYears, [Parameter("EppCode", "varchar", ParameterDirection.Input)] string @EppCode, [Parameter("TransID", "nvarchar", ParameterDirection.Input)] string @TransID, [Parameter("TransactionID", "numeric", ParameterDirection.Input)] decimal? @TransactionID, [Parameter("AssociatedOrderID", "numeric", ParameterDirection.Input)] decimal? @AssociatedOrderID, [Parameter("ClientIP", "varchar", ParameterDirection.Input)] string @ClientIP, [Parameter("option1", "varchar", ParameterDirection.Input)] string @option1, [Parameter("providerName", "nvarchar", ParameterDirection.Input)] string @providerName);
		[Procedure("USP_API_ADMIN_GET_DOMAIN_INFO_BY_DOMAINNAME", "dbo")] public abstract void USP_API_ADMIN_GET_DOMAIN_INFO_BY_DOMAINNAME([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname);
		[Procedure("usp_Api_Admin_Onepager_ChangeHostName", "dbo")] public abstract void usp_Api_Admin_Onepager_ChangeHostName([Parameter("SubscriptionId", "numeric", ParameterDirection.Input)] decimal? @SubscriptionId, [Parameter("AdminUserName", "nvarchar", ParameterDirection.Input)] string @AdminUserName, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("NewHostName", "nvarchar", ParameterDirection.Input)] string @NewHostName, [Parameter("OnepagerActionType", "varchar", ParameterDirection.Input)] string @OnepagerActionType, [Parameter("Comments", "varchar", ParameterDirection.Input)] string @Comments);
		[Procedure("usp_Api_Admin_Onepager_Create", "dbo")] public abstract void usp_Api_Admin_Onepager_Create([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("EmailAddress", "nvarchar", ParameterDirection.Input)] string @EmailAddress, [Parameter("HostName", "nvarchar", ParameterDirection.Input)] string @HostName, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("DomainId", "int", ParameterDirection.Input)] int? @DomainId, [Parameter("PartnerSubscriptionId", "numeric", ParameterDirection.Input)] decimal? @PartnerSubscriptionId, [Parameter("ExpirationDateTime", "datetime", ParameterDirection.Input)] DateTime? @ExpirationDateTime, [Parameter("IsEnabled", "bit", ParameterDirection.Input)] bool? @IsEnabled, [Parameter("Comments", "varchar", ParameterDirection.Input)] string @Comments, [Parameter("IsAutoRenew", "bit", ParameterDirection.Input)] bool? @IsAutoRenew, [Parameter("CreatedOrderId", "numeric", ParameterDirection.Input)] decimal? @CreatedOrderId, [Parameter("ActionType", "varchar", ParameterDirection.Input)] string @ActionType, [Parameter("Duration", "int", ParameterDirection.Input)] int? @Duration, [Parameter("Duration_Type", "varchar", ParameterDirection.Input)] string @Duration_Type);
		[Procedure("usp_Api_Admin_Onepager_Disable", "dbo")] public abstract void usp_Api_Admin_Onepager_Disable([Parameter("SubscriptionId", "numeric", ParameterDirection.Input)] decimal? @SubscriptionId, [Parameter("AdminUserName", "nvarchar", ParameterDirection.Input)] string @AdminUserName, [Parameter("Comments", "varchar", ParameterDirection.Input)] string @Comments, [Parameter("InternalComments", "varchar", ParameterDirection.Input)] string @InternalComments, [Parameter("DisableStatusType", "varchar", ParameterDirection.Input)] string @DisableStatusType, [Parameter("DisableStatus", "varchar", ParameterDirection.Input)] string @DisableStatus);
		[Procedure("usp_Api_Admin_Onepager_Enable", "dbo")] public abstract void usp_Api_Admin_Onepager_Enable([Parameter("SubscriptionId", "numeric", ParameterDirection.Input)] decimal? @SubscriptionId, [Parameter("AdminComments", "varchar", ParameterDirection.Input)] string @AdminComments, [Parameter("Comments", "varchar", ParameterDirection.Input)] string @Comments, [Parameter("StatusType", "varchar", ParameterDirection.Input)] string @StatusType, [Parameter("AdminUserName", "nvarchar", ParameterDirection.Input)] string @AdminUserName);
		[Procedure("usp_Api_Admin_Onepager_GetList", "dbo")] public abstract void usp_Api_Admin_Onepager_GetList([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("ListType", "int", ParameterDirection.Input)] int? @ListType, [Parameter("SearchTerm", "nvarchar", ParameterDirection.Input)] string @SearchTerm, [Parameter("SortExpression", "varchar", ParameterDirection.Input)] string @SortExpression, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize);
		[Procedure("usp_Api_Admin_PrivacyPolicy_CancelRenewal", "dbo")] public abstract void usp_Api_Admin_PrivacyPolicy_CancelRenewal([Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("policyStatusId", "int", ParameterDirection.Input)] int? @policyStatusId, [Parameter("logXml", "xml", ParameterDirection.Input)] string @logXml);
		[Procedure("usp_Api_Admin_PrivacyPolicy_ChangeUser", "dbo")] public abstract void usp_Api_Admin_PrivacyPolicy_ChangeUser([Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("ownerUserName", "nvarchar", ParameterDirection.Input)] string @ownerUserName, [Parameter("targetUserName", "nvarchar", ParameterDirection.Input)] string @targetUserName);
		[Procedure("usp_Api_Admin_PrivacyPolicy_Configure", "dbo")] public abstract void usp_Api_Admin_PrivacyPolicy_Configure([Parameter("PartnerSubscriptionId", "int", ParameterDirection.Input)] int? @PartnerSubscriptionId, [Parameter("ExpirationDatetime", "datetime", ParameterDirection.Input)] DateTime? @ExpirationDatetime, [Parameter("PolicyStatus", "varchar", ParameterDirection.Input)] string @PolicyStatus, [Parameter("StatusId", "int", ParameterDirection.Input)] int? @StatusId, [Parameter("MoreInfoLog", "xml", ParameterDirection.Input)] string @MoreInfoLog);
		[Procedure("usp_Api_Admin_PrivacyPolicy_Create", "dbo")] public abstract void usp_Api_Admin_PrivacyPolicy_Create([Parameter("PartnerSubscriptionId", "numeric", ParameterDirection.Input)] decimal? @PartnerSubscriptionId, [Parameter("SubscriptionType", "varchar", ParameterDirection.Input)] string @SubscriptionType, [Parameter("CreatedOrderId", "numeric", ParameterDirection.Input)] decimal? @CreatedOrderId, [Parameter("PartnerOrderId", "numeric", ParameterDirection.Input)] decimal? @PartnerOrderId, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("EmailAddress", "nvarchar", ParameterDirection.Input)] string @EmailAddress, [Parameter("NumOfYears", "int", ParameterDirection.Input)] int? @NumOfYears, [Parameter("Password", "nvarchar", ParameterDirection.Input)] string @Password, [Parameter("PrivacypolicyLogOrderId", "nvarchar", ParameterDirection.Input)] string @PrivacypolicyLogOrderId, [Parameter("CreatedOrderItemId", "numeric", ParameterDirection.Input)] decimal? @CreatedOrderItemId, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("NextBillingDateTime", "datetime", ParameterDirection.Input)] DateTime? @NextBillingDateTime, [Parameter("IsUpgradeConfirm", "bit", ParameterDirection.Input)] bool? @IsUpgradeConfirm, [Parameter("StatusId", "int", ParameterDirection.Input)] int? @StatusId, [Parameter("MoreInfoLog", "xml", ParameterDirection.Input)] string @MoreInfoLog);
		[Procedure("usp_Api_Admin_PrivacyPolicy_GetInfo", "dbo")] public abstract void usp_Api_Admin_PrivacyPolicy_GetInfo([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId);
		[Procedure("usp_Api_Admin_PrivacyPolicy_GetList", "dbo")] public abstract void usp_Api_Admin_PrivacyPolicy_GetList([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("EmailAddress", "nvarchar", ParameterDirection.Input)] string @EmailAddress, [Parameter("SortExpression", "varchar", ParameterDirection.Input)] string @SortExpression, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize);
		[Procedure("usp_Api_Admin_PrivacyPolicy_UpdateEmailAddress", "dbo")] public abstract void usp_Api_Admin_PrivacyPolicy_UpdateEmailAddress([Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("emailAddress", "nvarchar", ParameterDirection.Input)] string @emailAddress, [Parameter("policyStatusId", "int", ParameterDirection.Input)] int? @policyStatusId, [Parameter("logXml", "xml", ParameterDirection.Input)] string @logXml);
		[Procedure("usp_Api_Admin_PrivacyPolicy_UpdateRenew", "dbo")] public abstract void usp_Api_Admin_PrivacyPolicy_UpdateRenew([Parameter("SubscriptionId", "numeric", ParameterDirection.Input)] decimal? @SubscriptionId, [Parameter("OrderId", "numeric", ParameterDirection.Input)] decimal? @OrderId, [Parameter("OrderItemId", "numeric", ParameterDirection.Input)] decimal? @OrderItemId, [Parameter("ExpiryDateTime", "datetime", ParameterDirection.Input)] DateTime? @ExpiryDateTime, [Parameter("RenewalStatus", "varchar", ParameterDirection.Input)] string @RenewalStatus);
		[Procedure("usp_Api_Admin_PrivacyPolicyUpdate", "dbo")] public abstract void usp_Api_Admin_PrivacyPolicyUpdate([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("PartnerSubscriptionId", "numeric", ParameterDirection.Input)] decimal? @PartnerSubscriptionId, [Parameter("SubscriptionType", "varchar", ParameterDirection.Input)] string @SubscriptionType, [Parameter("CreatedOrderId", "numeric", ParameterDirection.Input)] decimal? @CreatedOrderId, [Parameter("PartnerOrderId", "numeric", ParameterDirection.Input)] decimal? @PartnerOrderId, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("EmailAddress", "nvarchar", ParameterDirection.Input)] string @EmailAddress, [Parameter("NumOfYears", "int", ParameterDirection.Input)] int? @NumOfYears, [Parameter("Password", "nvarchar", ParameterDirection.Input)] string @Password, [Parameter("CreatedOrderItemId", "numeric", ParameterDirection.Input)] decimal? @CreatedOrderItemId, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("NextBillingDateTime", "datetime", ParameterDirection.Input)] DateTime? @NextBillingDateTime, [Parameter("IsUpgradeConfirm", "bit", ParameterDirection.Input)] bool? @IsUpgradeConfirm, [Parameter("StatusId", "int", ParameterDirection.Input)] int? @StatusId, [Parameter("MoreInfoLog", "xml", ParameterDirection.Input)] string @MoreInfoLog);
		[Procedure("USP_API_APIUSER_GETROLE", "dbo")] public abstract void USP_API_APIUSER_GETROLE([Parameter("ApiUser", "nvarchar", ParameterDirection.Input)] string @ApiUser);
		[Procedure("USP_API_AUTHENTICATE_AND_AUTHORIZE", "dbo")] public abstract void USP_API_AUTHENTICATE_AND_AUTHORIZE([Parameter("ApiUser", "varchar", ParameterDirection.Input)] string @ApiUser, [Parameter("ApiKey", "varchar", ParameterDirection.Input)] string @ApiKey, [Parameter("ApiPassword", "varchar", ParameterDirection.Input)] string @ApiPassword, [Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName, [Parameter("Command", "varchar", ParameterDirection.Input)] string @Command, [Parameter("RequestIp", "varchar", ParameterDirection.Input)] string @RequestIp, [Parameter("ClientIp", "varchar", ParameterDirection.Input)] string @ClientIp);
		[Procedure("USP_API_AUTHENTICATE_APIUSER", "dbo")] public abstract void USP_API_AUTHENTICATE_APIUSER([Parameter("ApiUser", "nvarchar", ParameterDirection.Input)] string @ApiUser, [Parameter("ApiKey", "varchar", ParameterDirection.Input)] string @ApiKey, [Parameter("RequestIp", "varchar", ParameterDirection.Input)] string @RequestIp, [Parameter("ClientIp", "varchar", ParameterDirection.Input)] string @ClientIp);
		[Procedure("USP_API_CHANGE_PASSWORD", "dbo")] public abstract void USP_API_CHANGE_PASSWORD([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("password", "varchar", ParameterDirection.Input)] string @password, [Parameter("passwordNoCase", "varchar", ParameterDirection.Input)] string @passwordNoCase, [Parameter("newPassword", "varchar", ParameterDirection.Input)] string @newPassword, [Parameter("newPasswordNoCase", "varchar", ParameterDirection.Input)] string @newPasswordNoCase, [Parameter("newPasswordLog", "varchar", ParameterDirection.Input)] string @newPasswordLog, [Parameter("Ip", "varchar", ParameterDirection.Input)] string @Ip);
		[Procedure("USP_API_CHANGE_PASSWORD_USING_RESETCODE", "dbo")] public abstract void USP_API_CHANGE_PASSWORD_USING_RESETCODE([Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName, [Parameter("RequestGuid", "nvarchar", ParameterDirection.Input)] string @RequestGuid, [Parameter("NewPassword", "varchar", ParameterDirection.Input)] string @NewPassword, [Parameter("NewPasswordNoCase", "varchar", ParameterDirection.Input)] string @NewPasswordNoCase, [Parameter("NewPasswordLog", "varchar", ParameterDirection.Input)] string @NewPasswordLog, [Parameter("Ip", "varchar", ParameterDirection.Input)] string @Ip);
		[Procedure("USP_API_CHECK_DOMAIN_AVAILABLITY", "dbo")] public abstract void USP_API_CHECK_DOMAIN_AVAILABLITY([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("USP_API_CHECK_DOMAIN_EXPIRE", "dbo")] public abstract void USP_API_CHECK_DOMAIN_EXPIRE([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname);
		[Procedure("USP_API_CHECK_EMAIL_FOR_WHOISGUARD", "dbo")] public abstract void USP_API_CHECK_EMAIL_FOR_WHOISGUARD([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("email", "nvarchar", ParameterDirection.Input)] string @email);
		[Procedure("USP_API_CHECK_SSL_PURCHASEVALIDATIONID", "dbo")] public abstract void USP_API_CHECK_SSL_PURCHASEVALIDATIONID([Parameter("purchaseValidationId", "varchar", ParameterDirection.Input)] string @purchaseValidationId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_API_CHECK_TOKEN_ID_AND_GET_STATUS", "dbo")] public abstract void USP_API_CHECK_TOKEN_ID_AND_GET_STATUS([Parameter("tokenId", "varchar", ParameterDirection.Input)] string @tokenId, [Parameter("requestorUserName", "varchar", ParameterDirection.Input)] string @requestorUserName, [Parameter("requestorUserType", "varchar", ParameterDirection.Input)] string @requestorUserType);
		[Procedure("USP_API_CHECK_USER_EDIT_CAPABILITIES_FOR_DOMAIN", "dbo")] public abstract void USP_API_CHECK_USER_EDIT_CAPABILITIES_FOR_DOMAIN([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("actionType", "varchar", ParameterDirection.Input)] string @actionType);
		[Procedure("USP_API_CHECK_USER_LIST", "dbo")] public abstract void USP_API_CHECK_USER_LIST([Parameter("UserList_CSV", "varchar", ParameterDirection.Input)] string @UserList_CSV);
		[Procedure("USP_API_CHECK_VALID_SSL_FOR_RENEW", "dbo")] public abstract void USP_API_CHECK_VALID_SSL_FOR_RENEW([Parameter("certificateID", "numeric", ParameterDirection.Input)] decimal? @certificateID, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("USP_API_CREATE_DOMAIN_PURCHASE_ORDER", "dbo")] public abstract void USP_API_CREATE_DOMAIN_PURCHASE_ORDER([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ClientIP", "nvarchar", ParameterDirection.Input)] string @ClientIP, [Parameter("PromotionCode", "varchar", ParameterDirection.Input)] string @PromotionCode, [Parameter("SLD", "nvarchar", ParameterDirection.Input)] string @SLD, [Parameter("TLD", "nvarchar", ParameterDirection.Input)] string @TLD, [Parameter("NumYears", "smallint", ParameterDirection.Input)] short? @NumYears, [Parameter("RegistrantOrganizationName", "nvarchar", ParameterDirection.Input)] string @RegistrantOrganizationName, [Parameter("RegistrantJobTitle", "nvarchar", ParameterDirection.Input)] string @RegistrantJobTitle, [Parameter("RegistrantFirstName", "nvarchar", ParameterDirection.Input)] string @RegistrantFirstName, [Parameter("RegistrantLastName", "nvarchar", ParameterDirection.Input)] string @RegistrantLastName, [Parameter("RegistrantAddress1", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress1, [Parameter("RegistrantAddress2", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress2, [Parameter("RegistrantCity", "nvarchar", ParameterDirection.Input)] string @RegistrantCity, [Parameter("RegistrantStateProvince", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvince, [Parameter("RegistrantStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvinceChoice, [Parameter("RegistrantPostalCode", "nvarchar", ParameterDirection.Input)] string @RegistrantPostalCode, [Parameter("RegistrantCountry", "nvarchar", ParameterDirection.Input)] string @RegistrantCountry, [Parameter("RegistrantPhone", "nvarchar", ParameterDirection.Input)] string @RegistrantPhone, [Parameter("RegistrantPhoneExt", "varchar", ParameterDirection.Input)] string @RegistrantPhoneExt, [Parameter("RegistrantFax", "nvarchar", ParameterDirection.Input)] string @RegistrantFax, [Parameter("RegistrantEmailAddress", "nvarchar", ParameterDirection.Input)] string @RegistrantEmailAddress, [Parameter("TechOrganizationName", "nvarchar", ParameterDirection.Input)] string @TechOrganizationName, [Parameter("TechJobTitle", "nvarchar", ParameterDirection.Input)] string @TechJobTitle, [Parameter("TechFirstName", "nvarchar", ParameterDirection.Input)] string @TechFirstName, [Parameter("TechLastName", "nvarchar", ParameterDirection.Input)] string @TechLastName, [Parameter("TechAddress1", "nvarchar", ParameterDirection.Input)] string @TechAddress1, [Parameter("TechAddress2", "nvarchar", ParameterDirection.Input)] string @TechAddress2, [Parameter("TechCity", "nvarchar", ParameterDirection.Input)] string @TechCity, [Parameter("TechStateProvince", "nvarchar", ParameterDirection.Input)] string @TechStateProvince, [Parameter("TechStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @TechStateProvinceChoice, [Parameter("TechPostalCode", "nvarchar", ParameterDirection.Input)] string @TechPostalCode, [Parameter("TechCountry", "nvarchar", ParameterDirection.Input)] string @TechCountry, [Parameter("TechPhone", "nvarchar", ParameterDirection.Input)] string @TechPhone, [Parameter("TechPhoneExt", "varchar", ParameterDirection.Input)] string @TechPhoneExt, [Parameter("TechFax", "nvarchar", ParameterDirection.Input)] string @TechFax, [Parameter("TechEmailAddress", "nvarchar", ParameterDirection.Input)] string @TechEmailAddress, [Parameter("AdminOrganizationName", "nvarchar", ParameterDirection.Input)] string @AdminOrganizationName, [Parameter("AdminJobTitle", "nvarchar", ParameterDirection.Input)] string @AdminJobTitle, [Parameter("AdminFirstName", "nvarchar", ParameterDirection.Input)] string @AdminFirstName, [Parameter("AdminLastName", "nvarchar", ParameterDirection.Input)] string @AdminLastName, [Parameter("AdminAddress1", "nvarchar", ParameterDirection.Input)] string @AdminAddress1, [Parameter("AdminAddress2", "nvarchar", ParameterDirection.Input)] string @AdminAddress2, [Parameter("AdminCity", "nvarchar", ParameterDirection.Input)] string @AdminCity, [Parameter("AdminStateProvince", "nvarchar", ParameterDirection.Input)] string @AdminStateProvince, [Parameter("AdminStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AdminStateProvinceChoice, [Parameter("AdminPostalCode", "nvarchar", ParameterDirection.Input)] string @AdminPostalCode, [Parameter("AdminCountry", "nvarchar", ParameterDirection.Input)] string @AdminCountry, [Parameter("AdminPhone", "nvarchar", ParameterDirection.Input)] string @AdminPhone, [Parameter("AdminPhoneExt", "varchar", ParameterDirection.Input)] string @AdminPhoneExt, [Parameter("AdminFax", "nvarchar", ParameterDirection.Input)] string @AdminFax, [Parameter("AdminEmailAddress", "nvarchar", ParameterDirection.Input)] string @AdminEmailAddress, [Parameter("AuxBillingOrganizationName", "nvarchar", ParameterDirection.Input)] string @AuxBillingOrganizationName, [Parameter("AuxBillingJobTitle", "nvarchar", ParameterDirection.Input)] string @AuxBillingJobTitle, [Parameter("AuxBillingFirstName", "nvarchar", ParameterDirection.Input)] string @AuxBillingFirstName, [Parameter("AuxBillingLastName", "nvarchar", ParameterDirection.Input)] string @AuxBillingLastName, [Parameter("AuxBillingAddress1", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress1, [Parameter("AuxBillingAddress2", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress2, [Parameter("AuxBillingCity", "nvarchar", ParameterDirection.Input)] string @AuxBillingCity, [Parameter("AuxBillingStateProvince", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvince, [Parameter("AuxBillingStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvinceChoice, [Parameter("AuxBillingPostalCode", "nvarchar", ParameterDirection.Input)] string @AuxBillingPostalCode, [Parameter("AuxBillingCountry", "nvarchar", ParameterDirection.Input)] string @AuxBillingCountry, [Parameter("AuxBillingPhone", "nvarchar", ParameterDirection.Input)] string @AuxBillingPhone, [Parameter("AuxBillingPhoneext", "varchar", ParameterDirection.Input)] string @AuxBillingPhoneext, [Parameter("AuxBillingFax", "nvarchar", ParameterDirection.Input)] string @AuxBillingFax, [Parameter("AuxBillingEmailAddress", "nvarchar", ParameterDirection.Input)] string @AuxBillingEmailAddress, [Parameter("UseNameServer", "nvarchar", ParameterDirection.Input)] string @UseNameServer, [Parameter("NS1", "nvarchar", ParameterDirection.Input)] string @NS1, [Parameter("NS2", "nvarchar", ParameterDirection.Input)] string @NS2, [Parameter("NS3", "nvarchar", ParameterDirection.Input)] string @NS3, [Parameter("NS4", "nvarchar", ParameterDirection.Input)] string @NS4, [Parameter("NS5", "nvarchar", ParameterDirection.Input)] string @NS5, [Parameter("FwdEMailUser", "nvarchar", ParameterDirection.Input)] string @FwdEMailUser, [Parameter("FwdToEMail", "nvarchar", ParameterDirection.Input)] string @FwdToEMail, [Parameter("Submit", "nvarchar", ParameterDirection.Input)] string @Submit, [Parameter("ForwardingURL", "varchar", ParameterDirection.Input)] string @ForwardingURL, [Parameter("ForwardingType", "varchar", ParameterDirection.Input)] string @ForwardingType, [Parameter("RegistrantNexus", "varchar", ParameterDirection.Input)] string @RegistrantNexus, [Parameter("RegistrantNexusCountry", "varchar", ParameterDirection.Input)] string @RegistrantNexusCountry, [Parameter("RegistrantPurpose", "varchar", ParameterDirection.Input)] string @RegistrantPurpose, [Parameter("CIRAType", "varchar", ParameterDirection.Input)] string @CIRAType, [Parameter("COUKLegalType", "varchar", ParameterDirection.Input)] string @COUKLegalType, [Parameter("COUKCompanyID", "varchar", ParameterDirection.Input)] string @COUKCompanyID, [Parameter("COUKRegisteredfor", "varchar", ParameterDirection.Input)] string @COUKRegisteredfor, [Parameter("COUKRegOptOut", "varchar", ParameterDirection.Input)] string @COUKRegOptOut, [Parameter("ORGUKRegisteredfor", "varchar", ParameterDirection.Input)] string @ORGUKRegisteredfor, [Parameter("ORGUKRegOptOut", "varchar", ParameterDirection.Input)] string @ORGUKRegOptOut, [Parameter("ORGUKLegalType", "varchar", ParameterDirection.Input)] string @ORGUKLegalType, [Parameter("ORGUKCompanyID", "varchar", ParameterDirection.Input)] string @ORGUKCompanyID, [Parameter("DEconfirmAddress", "bit", ParameterDirection.Input)] bool? @DEconfirmAddress, [Parameter("Eu_adr_lang", "varchar", ParameterDirection.Input)] string @Eu_adr_lang, [Parameter("Eu_agreedelete", "bit", ParameterDirection.Input)] bool? @Eu_agreedelete, [Parameter("MEUKLegalType", "varchar", ParameterDirection.Input)] string @MEUKLegalType, [Parameter("MEUKCompanyID", "varchar", ParameterDirection.Input)] string @MEUKCompanyID, [Parameter("MEUKRegisteredfor", "varchar", ParameterDirection.Input)] string @MEUKRegisteredfor, [Parameter("MEUKRegOptOut", "varchar", ParameterDirection.Input)] string @MEUKRegOptOut, [Parameter("Cira_Registrant", "varchar", ParameterDirection.Input)] string @Cira_Registrant, [Parameter("Cira_Registrant_desc", "varchar", ParameterDirection.Input)] string @Cira_Registrant_desc, [Parameter("Cira_trademark_no", "varchar", ParameterDirection.Input)] string @Cira_trademark_no, [Parameter("Cira_org_registered_in", "varchar", ParameterDirection.Input)] string @Cira_org_registered_in);
		[Procedure("USP_API_CREATE_DOMAIN_RENEW_PURCHASE", "dbo")] public abstract void USP_API_CREATE_DOMAIN_RENEW_PURCHASE([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("NumYears", "smallint", ParameterDirection.Input)] short? @NumYears, [Parameter("SLD", "nvarchar", ParameterDirection.Input)] string @SLD, [Parameter("TLD", "nvarchar", ParameterDirection.Input)] string @TLD, [Parameter("PromotionCode", "varchar", ParameterDirection.Input)] string @PromotionCode, [Parameter("ClientIP", "nvarchar", ParameterDirection.Input)] string @ClientIP);
		[Procedure("USP_API_CREATE_NEW_USER", "dbo")] public abstract void USP_API_CREATE_NEW_USER([Parameter("ParentUserName", "nvarchar", ParameterDirection.Input)] string @ParentUserName, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ClientIp", "varchar", ParameterDirection.Input)] string @ClientIp, [Parameter("Email", "varchar", ParameterDirection.Input)] string @Email, [Parameter("FirstName", "varchar", ParameterDirection.Input)] string @FirstName, [Parameter("LastName", "varchar", ParameterDirection.Input)] string @LastName, [Parameter("AcceptTerms", "bit", ParameterDirection.Input)] bool? @AcceptTerms, [Parameter("AcceptNews", "bit", ParameterDirection.Input)] bool? @AcceptNews, [Parameter("JobTitle", "varchar", ParameterDirection.Input)] string @JobTitle, [Parameter("Organization", "varchar", ParameterDirection.Input)] string @Organization, [Parameter("StreetAddress", "varchar", ParameterDirection.Input)] string @StreetAddress, [Parameter("StreetAddress2", "varchar", ParameterDirection.Input)] string @StreetAddress2, [Parameter("City", "varchar", ParameterDirection.Input)] string @City, [Parameter("State", "varchar", ParameterDirection.Input)] string @State, [Parameter("StateProvinceChoice", "varchar", ParameterDirection.Input)] string @StateProvinceChoice, [Parameter("Zip", "varchar", ParameterDirection.Input)] string @Zip, [Parameter("Country", "varchar", ParameterDirection.Input)] string @Country, [Parameter("Phone", "varchar", ParameterDirection.Input)] string @Phone, [Parameter("PhoneExt", "varchar", ParameterDirection.Input)] string @PhoneExt, [Parameter("Fax", "varchar", ParameterDirection.Input)] string @Fax, [Parameter("Password", "nvarchar", ParameterDirection.Input)] string @Password, [Parameter("isAppUser", "bit", ParameterDirection.Input)] bool? @isAppUser);
		[Procedure("USP_API_CREATE_ORDER", "dbo")] public abstract void USP_API_CREATE_ORDER([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("SLD", "nvarchar", ParameterDirection.Input)] string @SLD, [Parameter("TLD", "nvarchar", ParameterDirection.Input)] string @TLD, [Parameter("NumYears", "smallint", ParameterDirection.Input)] short? @NumYears, [Parameter("Qty", "int", ParameterDirection.Input)] int? @Qty, [Parameter("ActionID", "varchar", ParameterDirection.Input)] string @ActionID, [Parameter("PromotionCode", "varchar", ParameterDirection.Input)] string @PromotionCode, [Parameter("ClientIP", "nvarchar", ParameterDirection.Input)] string @ClientIP, [Parameter("OrderRefID", "nvarchar", ParameterDirection.Input)] string @OrderRefID, [Parameter("RegistrantOrganizationName", "nvarchar", ParameterDirection.Input)] string @RegistrantOrganizationName, [Parameter("RegistrantJobTitle", "nvarchar", ParameterDirection.Input)] string @RegistrantJobTitle, [Parameter("RegistrantFirstName", "nvarchar", ParameterDirection.Input)] string @RegistrantFirstName, [Parameter("RegistrantLastName", "nvarchar", ParameterDirection.Input)] string @RegistrantLastName, [Parameter("RegistrantAddress1", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress1, [Parameter("RegistrantAddress2", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress2, [Parameter("RegistrantCity", "nvarchar", ParameterDirection.Input)] string @RegistrantCity, [Parameter("RegistrantStateProvince", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvince, [Parameter("RegistrantStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvinceChoice, [Parameter("RegistrantPostalCode", "nvarchar", ParameterDirection.Input)] string @RegistrantPostalCode, [Parameter("RegistrantCountry", "nvarchar", ParameterDirection.Input)] string @RegistrantCountry, [Parameter("RegistrantPhone", "nvarchar", ParameterDirection.Input)] string @RegistrantPhone, [Parameter("RegistrantPhoneExt", "varchar", ParameterDirection.Input)] string @RegistrantPhoneExt, [Parameter("RegistrantFax", "nvarchar", ParameterDirection.Input)] string @RegistrantFax, [Parameter("RegistrantEmailAddress", "nvarchar", ParameterDirection.Input)] string @RegistrantEmailAddress, [Parameter("TechOrganizationName", "nvarchar", ParameterDirection.Input)] string @TechOrganizationName, [Parameter("TechJobTitle", "nvarchar", ParameterDirection.Input)] string @TechJobTitle, [Parameter("TechFirstName", "nvarchar", ParameterDirection.Input)] string @TechFirstName, [Parameter("TechLastName", "nvarchar", ParameterDirection.Input)] string @TechLastName, [Parameter("TechAddress1", "nvarchar", ParameterDirection.Input)] string @TechAddress1, [Parameter("TechAddress2", "nvarchar", ParameterDirection.Input)] string @TechAddress2, [Parameter("TechCity", "nvarchar", ParameterDirection.Input)] string @TechCity, [Parameter("TechStateProvince", "nvarchar", ParameterDirection.Input)] string @TechStateProvince, [Parameter("TechStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @TechStateProvinceChoice, [Parameter("TechPostalCode", "nvarchar", ParameterDirection.Input)] string @TechPostalCode, [Parameter("TechCountry", "nvarchar", ParameterDirection.Input)] string @TechCountry, [Parameter("TechPhone", "nvarchar", ParameterDirection.Input)] string @TechPhone, [Parameter("TechPhoneExt", "varchar", ParameterDirection.Input)] string @TechPhoneExt, [Parameter("TechFax", "nvarchar", ParameterDirection.Input)] string @TechFax, [Parameter("TechEmailAddress", "nvarchar", ParameterDirection.Input)] string @TechEmailAddress, [Parameter("AdminOrganizationName", "nvarchar", ParameterDirection.Input)] string @AdminOrganizationName, [Parameter("AdminJobTitle", "nvarchar", ParameterDirection.Input)] string @AdminJobTitle, [Parameter("AdminFirstName", "nvarchar", ParameterDirection.Input)] string @AdminFirstName, [Parameter("AdminLastName", "nvarchar", ParameterDirection.Input)] string @AdminLastName, [Parameter("AdminAddress1", "nvarchar", ParameterDirection.Input)] string @AdminAddress1, [Parameter("AdminAddress2", "nvarchar", ParameterDirection.Input)] string @AdminAddress2, [Parameter("AdminCity", "nvarchar", ParameterDirection.Input)] string @AdminCity, [Parameter("AdminStateProvince", "nvarchar", ParameterDirection.Input)] string @AdminStateProvince, [Parameter("AdminStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AdminStateProvinceChoice, [Parameter("AdminPostalCode", "nvarchar", ParameterDirection.Input)] string @AdminPostalCode, [Parameter("AdminCountry", "nvarchar", ParameterDirection.Input)] string @AdminCountry, [Parameter("AdminPhone", "nvarchar", ParameterDirection.Input)] string @AdminPhone, [Parameter("AdminPhoneExt", "varchar", ParameterDirection.Input)] string @AdminPhoneExt, [Parameter("AdminFax", "nvarchar", ParameterDirection.Input)] string @AdminFax, [Parameter("AdminEmailAddress", "nvarchar", ParameterDirection.Input)] string @AdminEmailAddress, [Parameter("AuxBillingOrganizationName", "nvarchar", ParameterDirection.Input)] string @AuxBillingOrganizationName, [Parameter("AuxBillingJobTitle", "nvarchar", ParameterDirection.Input)] string @AuxBillingJobTitle, [Parameter("AuxBillingFirstName", "nvarchar", ParameterDirection.Input)] string @AuxBillingFirstName, [Parameter("AuxBillingLastName", "nvarchar", ParameterDirection.Input)] string @AuxBillingLastName, [Parameter("AuxBillingAddress1", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress1, [Parameter("AuxBillingAddress2", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress2, [Parameter("AuxBillingCity", "nvarchar", ParameterDirection.Input)] string @AuxBillingCity, [Parameter("AuxBillingStateProvince", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvince, [Parameter("AuxBillingStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvinceChoice, [Parameter("AuxBillingPostalCode", "nvarchar", ParameterDirection.Input)] string @AuxBillingPostalCode, [Parameter("AuxBillingCountry", "nvarchar", ParameterDirection.Input)] string @AuxBillingCountry, [Parameter("AuxBillingPhone", "nvarchar", ParameterDirection.Input)] string @AuxBillingPhone, [Parameter("AuxBillingPhoneext", "varchar", ParameterDirection.Input)] string @AuxBillingPhoneext, [Parameter("AuxBillingFax", "nvarchar", ParameterDirection.Input)] string @AuxBillingFax, [Parameter("AuxBillingEmailAddress", "nvarchar", ParameterDirection.Input)] string @AuxBillingEmailAddress, [Parameter("UseNameServer", "nvarchar", ParameterDirection.Input)] string @UseNameServer, [Parameter("NS1", "nvarchar", ParameterDirection.Input)] string @NS1, [Parameter("NS2", "nvarchar", ParameterDirection.Input)] string @NS2, [Parameter("NS3", "nvarchar", ParameterDirection.Input)] string @NS3, [Parameter("NS4", "nvarchar", ParameterDirection.Input)] string @NS4, [Parameter("NS5", "nvarchar", ParameterDirection.Input)] string @NS5, [Parameter("FwdEMailUser", "nvarchar", ParameterDirection.Input)] string @FwdEMailUser, [Parameter("FwdToEMail", "nvarchar", ParameterDirection.Input)] string @FwdToEMail, [Parameter("Submit", "nvarchar", ParameterDirection.Input)] string @Submit, [Parameter("ForwardingURL", "varchar", ParameterDirection.Input)] string @ForwardingURL, [Parameter("ForwardingType", "varchar", ParameterDirection.Input)] string @ForwardingType, [Parameter("RegistrantNexus", "varchar", ParameterDirection.Input)] string @RegistrantNexus, [Parameter("RegistrantNexusCountry", "varchar", ParameterDirection.Input)] string @RegistrantNexusCountry, [Parameter("RegistrantPurpose", "varchar", ParameterDirection.Input)] string @RegistrantPurpose, [Parameter("CIRAType", "varchar", ParameterDirection.Input)] string @CIRAType, [Parameter("COUKLegalType", "varchar", ParameterDirection.Input)] string @COUKLegalType, [Parameter("COUKCompanyID", "varchar", ParameterDirection.Input)] string @COUKCompanyID, [Parameter("COUKRegisteredfor", "varchar", ParameterDirection.Input)] string @COUKRegisteredfor, [Parameter("COUKRegOptOut", "varchar", ParameterDirection.Input)] string @COUKRegOptOut, [Parameter("ORGUKRegisteredfor", "varchar", ParameterDirection.Input)] string @ORGUKRegisteredfor, [Parameter("ORGUKRegOptOut", "varchar", ParameterDirection.Input)] string @ORGUKRegOptOut, [Parameter("ORGUKLegalType", "varchar", ParameterDirection.Input)] string @ORGUKLegalType, [Parameter("ORGUKCompanyID", "varchar", ParameterDirection.Input)] string @ORGUKCompanyID, [Parameter("DEconfirmAddress", "bit", ParameterDirection.Input)] bool? @DEconfirmAddress, [Parameter("Eu_adr_lang", "varchar", ParameterDirection.Input)] string @Eu_adr_lang, [Parameter("Eu_agreedelete", "bit", ParameterDirection.Input)] bool? @Eu_agreedelete, [Parameter("MEUKLegalType", "varchar", ParameterDirection.Input)] string @MEUKLegalType, [Parameter("MEUKCompanyID", "varchar", ParameterDirection.Input)] string @MEUKCompanyID, [Parameter("MEUKRegisteredfor", "varchar", ParameterDirection.Input)] string @MEUKRegisteredfor, [Parameter("MEUKRegOptOut", "varchar", ParameterDirection.Input)] string @MEUKRegOptOut, [Parameter("Cira_Registrant", "varchar", ParameterDirection.Input)] string @Cira_Registrant, [Parameter("Cira_Registrant_desc", "varchar", ParameterDirection.Input)] string @Cira_Registrant_desc, [Parameter("Cira_trademark_no", "varchar", ParameterDirection.Input)] string @Cira_trademark_no, [Parameter("Cira_org_registered_in", "varchar", ParameterDirection.Input)] string @Cira_org_registered_in, [Parameter("Option1", "varchar", ParameterDirection.Input)] string @Option1, [Parameter("Option2", "varchar", ParameterDirection.Input)] string @Option2);
		[Procedure("USP_API_CREATE_ORDER_FOR_MARKETPLACE_WITH_CUSTOM_PRICE", "dbo")] public abstract void USP_API_CREATE_ORDER_FOR_MARKETPLACE_WITH_CUSTOM_PRICE([Parameter("Username", "nvarchar", ParameterDirection.Input)] string @Username, [Parameter("MPListingId", "numeric", ParameterDirection.Input)] decimal? @MPListingId, [Parameter("PromotionCode", "varchar", ParameterDirection.Input)] string @PromotionCode, [Parameter("ClientIP", "nvarchar", ParameterDirection.Input)] string @ClientIP, [Parameter("IsBilling", "bit", ParameterDirection.Input)] bool? @IsBilling, [Parameter("AffliateId", "int", ParameterDirection.Input)] int? @AffliateId, [Parameter("AffliateProgramId", "int", ParameterDirection.Input)] int? @AffliateProgramId, [Parameter("OrderRefID", "nvarchar", ParameterDirection.Input)] string @OrderRefID, [Parameter("BillingOrganizationName", "nvarchar", ParameterDirection.Input)] string @BillingOrganizationName, [Parameter("BillingJobTitle", "nvarchar", ParameterDirection.Input)] string @BillingJobTitle, [Parameter("BillingFirstName", "nvarchar", ParameterDirection.Input)] string @BillingFirstName, [Parameter("BillingLastName", "nvarchar", ParameterDirection.Input)] string @BillingLastName, [Parameter("BillingAddress1", "nvarchar", ParameterDirection.Input)] string @BillingAddress1, [Parameter("BillingAddress2", "nvarchar", ParameterDirection.Input)] string @BillingAddress2, [Parameter("BillingCity", "nvarchar", ParameterDirection.Input)] string @BillingCity, [Parameter("BillingStateProvince", "nvarchar", ParameterDirection.Input)] string @BillingStateProvince, [Parameter("BillingStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @BillingStateProvinceChoice, [Parameter("BillingPostalCode", "nvarchar", ParameterDirection.Input)] string @BillingPostalCode, [Parameter("BillingCountry", "nvarchar", ParameterDirection.Input)] string @BillingCountry, [Parameter("BillingPhone", "nvarchar", ParameterDirection.Input)] string @BillingPhone, [Parameter("BillingPhoneext", "varchar", ParameterDirection.Input)] string @BillingPhoneext, [Parameter("BillingFax", "nvarchar", ParameterDirection.Input)] string @BillingFax, [Parameter("BillingEmailAddress", "nvarchar", ParameterDirection.Input)] string @BillingEmailAddress, [Parameter("Price", "money", ParameterDirection.Input)] decimal? @Price, [Parameter("RegularPrice", "money", ParameterDirection.Input)] decimal? @RegularPrice, [Parameter("ProviderType", "varchar", ParameterDirection.Input)] string @ProviderType);
		[Procedure("USP_API_CREATE_ORDER_WITH_CUSTOM_INVOICE", "dbo")] public abstract void USP_API_CREATE_ORDER_WITH_CUSTOM_INVOICE([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("SLD", "nvarchar", ParameterDirection.Input)] string @SLD, [Parameter("TLD", "nvarchar", ParameterDirection.Input)] string @TLD, [Parameter("NumYears", "smallint", ParameterDirection.Input)] short? @NumYears, [Parameter("Qty", "int", ParameterDirection.Input)] int? @Qty, [Parameter("ActionID", "varchar", ParameterDirection.Input)] string @ActionID, [Parameter("PromotionCode", "varchar", ParameterDirection.Input)] string @PromotionCode, [Parameter("ClientIP", "nvarchar", ParameterDirection.Input)] string @ClientIP, [Parameter("IsBilling", "bit", ParameterDirection.Input)] bool? @IsBilling, [Parameter("AffliateId", "int", ParameterDirection.Input)] int? @AffliateId, [Parameter("AffliateProgramId", "int", ParameterDirection.Input)] int? @AffliateProgramId, [Parameter("OrderRefID", "nvarchar", ParameterDirection.Input)] string @OrderRefID, [Parameter("RegistrantOrganizationName", "nvarchar", ParameterDirection.Input)] string @RegistrantOrganizationName, [Parameter("RegistrantJobTitle", "nvarchar", ParameterDirection.Input)] string @RegistrantJobTitle, [Parameter("RegistrantFirstName", "nvarchar", ParameterDirection.Input)] string @RegistrantFirstName, [Parameter("RegistrantLastName", "nvarchar", ParameterDirection.Input)] string @RegistrantLastName, [Parameter("RegistrantAddress1", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress1, [Parameter("RegistrantAddress2", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress2, [Parameter("RegistrantCity", "nvarchar", ParameterDirection.Input)] string @RegistrantCity, [Parameter("RegistrantStateProvince", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvince, [Parameter("RegistrantStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvinceChoice, [Parameter("RegistrantPostalCode", "nvarchar", ParameterDirection.Input)] string @RegistrantPostalCode, [Parameter("RegistrantCountry", "nvarchar", ParameterDirection.Input)] string @RegistrantCountry, [Parameter("RegistrantPhone", "nvarchar", ParameterDirection.Input)] string @RegistrantPhone, [Parameter("RegistrantPhoneExt", "varchar", ParameterDirection.Input)] string @RegistrantPhoneExt, [Parameter("RegistrantFax", "nvarchar", ParameterDirection.Input)] string @RegistrantFax, [Parameter("RegistrantEmailAddress", "nvarchar", ParameterDirection.Input)] string @RegistrantEmailAddress, [Parameter("TechOrganizationName", "nvarchar", ParameterDirection.Input)] string @TechOrganizationName, [Parameter("TechJobTitle", "nvarchar", ParameterDirection.Input)] string @TechJobTitle, [Parameter("TechFirstName", "nvarchar", ParameterDirection.Input)] string @TechFirstName, [Parameter("TechLastName", "nvarchar", ParameterDirection.Input)] string @TechLastName, [Parameter("TechAddress1", "nvarchar", ParameterDirection.Input)] string @TechAddress1, [Parameter("TechAddress2", "nvarchar", ParameterDirection.Input)] string @TechAddress2, [Parameter("TechCity", "nvarchar", ParameterDirection.Input)] string @TechCity, [Parameter("TechStateProvince", "nvarchar", ParameterDirection.Input)] string @TechStateProvince, [Parameter("TechStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @TechStateProvinceChoice, [Parameter("TechPostalCode", "nvarchar", ParameterDirection.Input)] string @TechPostalCode, [Parameter("TechCountry", "nvarchar", ParameterDirection.Input)] string @TechCountry, [Parameter("TechPhone", "nvarchar", ParameterDirection.Input)] string @TechPhone, [Parameter("TechPhoneExt", "varchar", ParameterDirection.Input)] string @TechPhoneExt, [Parameter("TechFax", "nvarchar", ParameterDirection.Input)] string @TechFax, [Parameter("TechEmailAddress", "nvarchar", ParameterDirection.Input)] string @TechEmailAddress, [Parameter("AdminOrganizationName", "nvarchar", ParameterDirection.Input)] string @AdminOrganizationName, [Parameter("AdminJobTitle", "nvarchar", ParameterDirection.Input)] string @AdminJobTitle, [Parameter("AdminFirstName", "nvarchar", ParameterDirection.Input)] string @AdminFirstName, [Parameter("AdminLastName", "nvarchar", ParameterDirection.Input)] string @AdminLastName, [Parameter("AdminAddress1", "nvarchar", ParameterDirection.Input)] string @AdminAddress1, [Parameter("AdminAddress2", "nvarchar", ParameterDirection.Input)] string @AdminAddress2, [Parameter("AdminCity", "nvarchar", ParameterDirection.Input)] string @AdminCity, [Parameter("AdminStateProvince", "nvarchar", ParameterDirection.Input)] string @AdminStateProvince, [Parameter("AdminStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AdminStateProvinceChoice, [Parameter("AdminPostalCode", "nvarchar", ParameterDirection.Input)] string @AdminPostalCode, [Parameter("AdminCountry", "nvarchar", ParameterDirection.Input)] string @AdminCountry, [Parameter("AdminPhone", "nvarchar", ParameterDirection.Input)] string @AdminPhone, [Parameter("AdminPhoneExt", "varchar", ParameterDirection.Input)] string @AdminPhoneExt, [Parameter("AdminFax", "nvarchar", ParameterDirection.Input)] string @AdminFax, [Parameter("AdminEmailAddress", "nvarchar", ParameterDirection.Input)] string @AdminEmailAddress, [Parameter("AuxBillingOrganizationName", "nvarchar", ParameterDirection.Input)] string @AuxBillingOrganizationName, [Parameter("AuxBillingJobTitle", "nvarchar", ParameterDirection.Input)] string @AuxBillingJobTitle, [Parameter("AuxBillingFirstName", "nvarchar", ParameterDirection.Input)] string @AuxBillingFirstName, [Parameter("AuxBillingLastName", "nvarchar", ParameterDirection.Input)] string @AuxBillingLastName, [Parameter("AuxBillingAddress1", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress1, [Parameter("AuxBillingAddress2", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress2, [Parameter("AuxBillingCity", "nvarchar", ParameterDirection.Input)] string @AuxBillingCity, [Parameter("AuxBillingStateProvince", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvince, [Parameter("AuxBillingStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvinceChoice, [Parameter("AuxBillingPostalCode", "nvarchar", ParameterDirection.Input)] string @AuxBillingPostalCode, [Parameter("AuxBillingCountry", "nvarchar", ParameterDirection.Input)] string @AuxBillingCountry, [Parameter("AuxBillingPhone", "nvarchar", ParameterDirection.Input)] string @AuxBillingPhone, [Parameter("AuxBillingPhoneext", "varchar", ParameterDirection.Input)] string @AuxBillingPhoneext, [Parameter("AuxBillingFax", "nvarchar", ParameterDirection.Input)] string @AuxBillingFax, [Parameter("AuxBillingEmailAddress", "nvarchar", ParameterDirection.Input)] string @AuxBillingEmailAddress, [Parameter("BillingOrganizationName", "nvarchar", ParameterDirection.Input)] string @BillingOrganizationName, [Parameter("BillingJobTitle", "nvarchar", ParameterDirection.Input)] string @BillingJobTitle, [Parameter("BillingFirstName", "nvarchar", ParameterDirection.Input)] string @BillingFirstName, [Parameter("BillingLastName", "nvarchar", ParameterDirection.Input)] string @BillingLastName, [Parameter("BillingAddress1", "nvarchar", ParameterDirection.Input)] string @BillingAddress1, [Parameter("BillingAddress2", "nvarchar", ParameterDirection.Input)] string @BillingAddress2, [Parameter("BillingCity", "nvarchar", ParameterDirection.Input)] string @BillingCity, [Parameter("BillingStateProvince", "nvarchar", ParameterDirection.Input)] string @BillingStateProvince, [Parameter("BillingStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @BillingStateProvinceChoice, [Parameter("BillingPostalCode", "nvarchar", ParameterDirection.Input)] string @BillingPostalCode, [Parameter("BillingCountry", "nvarchar", ParameterDirection.Input)] string @BillingCountry, [Parameter("BillingPhone", "nvarchar", ParameterDirection.Input)] string @BillingPhone, [Parameter("BillingPhoneext", "varchar", ParameterDirection.Input)] string @BillingPhoneext, [Parameter("BillingFax", "nvarchar", ParameterDirection.Input)] string @BillingFax, [Parameter("BillingEmailAddress", "nvarchar", ParameterDirection.Input)] string @BillingEmailAddress, [Parameter("UseNameServer", "nvarchar", ParameterDirection.Input)] string @UseNameServer, [Parameter("NS1", "nvarchar", ParameterDirection.Input)] string @NS1, [Parameter("NS2", "nvarchar", ParameterDirection.Input)] string @NS2, [Parameter("NS3", "nvarchar", ParameterDirection.Input)] string @NS3, [Parameter("NS4", "nvarchar", ParameterDirection.Input)] string @NS4, [Parameter("NS5", "nvarchar", ParameterDirection.Input)] string @NS5, [Parameter("FwdEMailUser", "nvarchar", ParameterDirection.Input)] string @FwdEMailUser, [Parameter("FwdToEMail", "nvarchar", ParameterDirection.Input)] string @FwdToEMail, [Parameter("Submit", "nvarchar", ParameterDirection.Input)] string @Submit, [Parameter("ForwardingURL", "varchar", ParameterDirection.Input)] string @ForwardingURL, [Parameter("ForwardingType", "varchar", ParameterDirection.Input)] string @ForwardingType, [Parameter("RegistrantNexus", "varchar", ParameterDirection.Input)] string @RegistrantNexus, [Parameter("RegistrantNexusCountry", "varchar", ParameterDirection.Input)] string @RegistrantNexusCountry, [Parameter("RegistrantPurpose", "varchar", ParameterDirection.Input)] string @RegistrantPurpose, [Parameter("COUKLegalType", "varchar", ParameterDirection.Input)] string @COUKLegalType, [Parameter("COUKCompanyID", "varchar", ParameterDirection.Input)] string @COUKCompanyID, [Parameter("COUKRegisteredfor", "varchar", ParameterDirection.Input)] string @COUKRegisteredfor, [Parameter("COUKRegOptOut", "varchar", ParameterDirection.Input)] string @COUKRegOptOut, [Parameter("ORGUKRegisteredfor", "varchar", ParameterDirection.Input)] string @ORGUKRegisteredfor, [Parameter("ORGUKRegOptOut", "varchar", ParameterDirection.Input)] string @ORGUKRegOptOut, [Parameter("ORGUKLegalType", "varchar", ParameterDirection.Input)] string @ORGUKLegalType, [Parameter("ORGUKCompanyID", "varchar", ParameterDirection.Input)] string @ORGUKCompanyID, [Parameter("DEconfirmAddress", "bit", ParameterDirection.Input)] bool? @DEconfirmAddress, [Parameter("Eu_adr_lang", "varchar", ParameterDirection.Input)] string @Eu_adr_lang, [Parameter("Eu_agreedelete", "bit", ParameterDirection.Input)] bool? @Eu_agreedelete, [Parameter("MEUKLegalType", "varchar", ParameterDirection.Input)] string @MEUKLegalType, [Parameter("MEUKCompanyID", "varchar", ParameterDirection.Input)] string @MEUKCompanyID, [Parameter("MEUKRegisteredfor", "varchar", ParameterDirection.Input)] string @MEUKRegisteredfor, [Parameter("MEUKRegOptOut", "varchar", ParameterDirection.Input)] string @MEUKRegOptOut, [Parameter("CIRA_Legal_Type", "varchar", ParameterDirection.Input)] string @CIRA_Legal_Type, [Parameter("CIRA_Whois_Display", "varchar", ParameterDirection.Input)] string @CIRA_Whois_Display, [Parameter("CIRA_Agreement_Value", "varchar", ParameterDirection.Input)] string @CIRA_Agreement_Value, [Parameter("CIRA_Agreement_Version", "varchar", ParameterDirection.Input)] string @CIRA_Agreement_Version, [Parameter("CIRA_Language", "varchar", ParameterDirection.Input)] string @CIRA_Language, [Parameter("Option1", "varchar", ParameterDirection.Input)] string @Option1, [Parameter("Option2", "varchar", ParameterDirection.Input)] string @Option2);
		[Procedure("USP_API_CREATE_ORDER_WITH_CUSTOM_INVOICE_AND_PRICE", "dbo")] public abstract void USP_API_CREATE_ORDER_WITH_CUSTOM_INVOICE_AND_PRICE([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("SLD", "nvarchar", ParameterDirection.Input)] string @SLD, [Parameter("TLD", "nvarchar", ParameterDirection.Input)] string @TLD, [Parameter("NumYears", "smallint", ParameterDirection.Input)] short? @NumYears, [Parameter("Duration", "smallint", ParameterDirection.Input)] short? @Duration, [Parameter("Qty", "int", ParameterDirection.Input)] int? @Qty, [Parameter("ActionID", "varchar", ParameterDirection.Input)] string @ActionID, [Parameter("userId", "int", ParameterDirection.Input)] int? @userId, [Parameter("durationType", "varchar", ParameterDirection.Input)] string @durationType, [Parameter("PromotionCode", "varchar", ParameterDirection.Input)] string @PromotionCode, [Parameter("ClientIP", "nvarchar", ParameterDirection.Input)] string @ClientIP, [Parameter("IsBilling", "bit", ParameterDirection.Input)] bool? @IsBilling, [Parameter("AffliateId", "int", ParameterDirection.Input)] int? @AffliateId, [Parameter("AffliateProgramId", "int", ParameterDirection.Input)] int? @AffliateProgramId, [Parameter("OrderRefID", "nvarchar", ParameterDirection.Input)] string @OrderRefID, [Parameter("RegistrantOrganizationName", "nvarchar", ParameterDirection.Input)] string @RegistrantOrganizationName, [Parameter("RegistrantJobTitle", "nvarchar", ParameterDirection.Input)] string @RegistrantJobTitle, [Parameter("RegistrantFirstName", "nvarchar", ParameterDirection.Input)] string @RegistrantFirstName, [Parameter("RegistrantLastName", "nvarchar", ParameterDirection.Input)] string @RegistrantLastName, [Parameter("RegistrantAddress1", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress1, [Parameter("RegistrantAddress2", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress2, [Parameter("RegistrantCity", "nvarchar", ParameterDirection.Input)] string @RegistrantCity, [Parameter("RegistrantStateProvince", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvince, [Parameter("RegistrantStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvinceChoice, [Parameter("RegistrantPostalCode", "nvarchar", ParameterDirection.Input)] string @RegistrantPostalCode, [Parameter("RegistrantCountry", "nvarchar", ParameterDirection.Input)] string @RegistrantCountry, [Parameter("RegistrantPhone", "nvarchar", ParameterDirection.Input)] string @RegistrantPhone, [Parameter("RegistrantPhoneExt", "varchar", ParameterDirection.Input)] string @RegistrantPhoneExt, [Parameter("RegistrantFax", "nvarchar", ParameterDirection.Input)] string @RegistrantFax, [Parameter("RegistrantEmailAddress", "nvarchar", ParameterDirection.Input)] string @RegistrantEmailAddress, [Parameter("TechOrganizationName", "nvarchar", ParameterDirection.Input)] string @TechOrganizationName, [Parameter("TechJobTitle", "nvarchar", ParameterDirection.Input)] string @TechJobTitle, [Parameter("TechFirstName", "nvarchar", ParameterDirection.Input)] string @TechFirstName, [Parameter("TechLastName", "nvarchar", ParameterDirection.Input)] string @TechLastName, [Parameter("TechAddress1", "nvarchar", ParameterDirection.Input)] string @TechAddress1, [Parameter("TechAddress2", "nvarchar", ParameterDirection.Input)] string @TechAddress2, [Parameter("TechCity", "nvarchar", ParameterDirection.Input)] string @TechCity, [Parameter("TechStateProvince", "nvarchar", ParameterDirection.Input)] string @TechStateProvince, [Parameter("TechStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @TechStateProvinceChoice, [Parameter("TechPostalCode", "nvarchar", ParameterDirection.Input)] string @TechPostalCode, [Parameter("TechCountry", "nvarchar", ParameterDirection.Input)] string @TechCountry, [Parameter("TechPhone", "nvarchar", ParameterDirection.Input)] string @TechPhone, [Parameter("TechPhoneExt", "varchar", ParameterDirection.Input)] string @TechPhoneExt, [Parameter("TechFax", "nvarchar", ParameterDirection.Input)] string @TechFax, [Parameter("TechEmailAddress", "nvarchar", ParameterDirection.Input)] string @TechEmailAddress, [Parameter("AdminOrganizationName", "nvarchar", ParameterDirection.Input)] string @AdminOrganizationName, [Parameter("AdminJobTitle", "nvarchar", ParameterDirection.Input)] string @AdminJobTitle, [Parameter("AdminFirstName", "nvarchar", ParameterDirection.Input)] string @AdminFirstName, [Parameter("AdminLastName", "nvarchar", ParameterDirection.Input)] string @AdminLastName, [Parameter("AdminAddress1", "nvarchar", ParameterDirection.Input)] string @AdminAddress1, [Parameter("AdminAddress2", "nvarchar", ParameterDirection.Input)] string @AdminAddress2, [Parameter("AdminCity", "nvarchar", ParameterDirection.Input)] string @AdminCity, [Parameter("AdminStateProvince", "nvarchar", ParameterDirection.Input)] string @AdminStateProvince, [Parameter("AdminStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AdminStateProvinceChoice, [Parameter("AdminPostalCode", "nvarchar", ParameterDirection.Input)] string @AdminPostalCode, [Parameter("AdminCountry", "nvarchar", ParameterDirection.Input)] string @AdminCountry, [Parameter("AdminPhone", "nvarchar", ParameterDirection.Input)] string @AdminPhone, [Parameter("AdminPhoneExt", "varchar", ParameterDirection.Input)] string @AdminPhoneExt, [Parameter("AdminFax", "nvarchar", ParameterDirection.Input)] string @AdminFax, [Parameter("AdminEmailAddress", "nvarchar", ParameterDirection.Input)] string @AdminEmailAddress, [Parameter("AuxBillingOrganizationName", "nvarchar", ParameterDirection.Input)] string @AuxBillingOrganizationName, [Parameter("AuxBillingJobTitle", "nvarchar", ParameterDirection.Input)] string @AuxBillingJobTitle, [Parameter("AuxBillingFirstName", "nvarchar", ParameterDirection.Input)] string @AuxBillingFirstName, [Parameter("AuxBillingLastName", "nvarchar", ParameterDirection.Input)] string @AuxBillingLastName, [Parameter("AuxBillingAddress1", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress1, [Parameter("AuxBillingAddress2", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress2, [Parameter("AuxBillingCity", "nvarchar", ParameterDirection.Input)] string @AuxBillingCity, [Parameter("AuxBillingStateProvince", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvince, [Parameter("AuxBillingStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvinceChoice, [Parameter("AuxBillingPostalCode", "nvarchar", ParameterDirection.Input)] string @AuxBillingPostalCode, [Parameter("AuxBillingCountry", "nvarchar", ParameterDirection.Input)] string @AuxBillingCountry, [Parameter("AuxBillingPhone", "nvarchar", ParameterDirection.Input)] string @AuxBillingPhone, [Parameter("AuxBillingPhoneext", "varchar", ParameterDirection.Input)] string @AuxBillingPhoneext, [Parameter("AuxBillingFax", "nvarchar", ParameterDirection.Input)] string @AuxBillingFax, [Parameter("AuxBillingEmailAddress", "nvarchar", ParameterDirection.Input)] string @AuxBillingEmailAddress, [Parameter("BillingOrganizationName", "nvarchar", ParameterDirection.Input)] string @BillingOrganizationName, [Parameter("BillingJobTitle", "nvarchar", ParameterDirection.Input)] string @BillingJobTitle, [Parameter("BillingFirstName", "nvarchar", ParameterDirection.Input)] string @BillingFirstName, [Parameter("BillingLastName", "nvarchar", ParameterDirection.Input)] string @BillingLastName, [Parameter("BillingAddress1", "nvarchar", ParameterDirection.Input)] string @BillingAddress1, [Parameter("BillingAddress2", "nvarchar", ParameterDirection.Input)] string @BillingAddress2, [Parameter("BillingCity", "nvarchar", ParameterDirection.Input)] string @BillingCity, [Parameter("BillingStateProvince", "nvarchar", ParameterDirection.Input)] string @BillingStateProvince, [Parameter("BillingStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @BillingStateProvinceChoice, [Parameter("BillingPostalCode", "nvarchar", ParameterDirection.Input)] string @BillingPostalCode, [Parameter("BillingCountry", "nvarchar", ParameterDirection.Input)] string @BillingCountry, [Parameter("BillingPhone", "nvarchar", ParameterDirection.Input)] string @BillingPhone, [Parameter("BillingPhoneext", "varchar", ParameterDirection.Input)] string @BillingPhoneext, [Parameter("BillingFax", "nvarchar", ParameterDirection.Input)] string @BillingFax, [Parameter("BillingEmailAddress", "nvarchar", ParameterDirection.Input)] string @BillingEmailAddress, [Parameter("UseNameServer", "nvarchar", ParameterDirection.Input)] string @UseNameServer, [Parameter("NS1", "nvarchar", ParameterDirection.Input)] string @NS1, [Parameter("NS2", "nvarchar", ParameterDirection.Input)] string @NS2, [Parameter("NS3", "nvarchar", ParameterDirection.Input)] string @NS3, [Parameter("NS4", "nvarchar", ParameterDirection.Input)] string @NS4, [Parameter("NS5", "nvarchar", ParameterDirection.Input)] string @NS5, [Parameter("FwdEMailUser", "nvarchar", ParameterDirection.Input)] string @FwdEMailUser, [Parameter("FwdToEMail", "nvarchar", ParameterDirection.Input)] string @FwdToEMail, [Parameter("Submit", "nvarchar", ParameterDirection.Input)] string @Submit, [Parameter("ForwardingURL", "varchar", ParameterDirection.Input)] string @ForwardingURL, [Parameter("ForwardingType", "varchar", ParameterDirection.Input)] string @ForwardingType, [Parameter("RegistrantNexus", "varchar", ParameterDirection.Input)] string @RegistrantNexus, [Parameter("RegistrantNexusCountry", "varchar", ParameterDirection.Input)] string @RegistrantNexusCountry, [Parameter("RegistrantPurpose", "varchar", ParameterDirection.Input)] string @RegistrantPurpose, [Parameter("COUKLegalType", "varchar", ParameterDirection.Input)] string @COUKLegalType, [Parameter("COUKCompanyID", "varchar", ParameterDirection.Input)] string @COUKCompanyID, [Parameter("COUKRegisteredfor", "varchar", ParameterDirection.Input)] string @COUKRegisteredfor, [Parameter("COUKRegOptOut", "varchar", ParameterDirection.Input)] string @COUKRegOptOut, [Parameter("ORGUKRegisteredfor", "varchar", ParameterDirection.Input)] string @ORGUKRegisteredfor, [Parameter("ORGUKRegOptOut", "varchar", ParameterDirection.Input)] string @ORGUKRegOptOut, [Parameter("ORGUKLegalType", "varchar", ParameterDirection.Input)] string @ORGUKLegalType, [Parameter("ORGUKCompanyID", "varchar", ParameterDirection.Input)] string @ORGUKCompanyID, [Parameter("DEconfirmAddress", "bit", ParameterDirection.Input)] bool? @DEconfirmAddress, [Parameter("Eu_adr_lang", "varchar", ParameterDirection.Input)] string @Eu_adr_lang, [Parameter("Eu_agreedelete", "bit", ParameterDirection.Input)] bool? @Eu_agreedelete, [Parameter("MEUKLegalType", "varchar", ParameterDirection.Input)] string @MEUKLegalType, [Parameter("MEUKCompanyID", "varchar", ParameterDirection.Input)] string @MEUKCompanyID, [Parameter("MEUKRegisteredfor", "varchar", ParameterDirection.Input)] string @MEUKRegisteredfor, [Parameter("MEUKRegOptOut", "varchar", ParameterDirection.Input)] string @MEUKRegOptOut, [Parameter("CIRA_Legal_Type", "varchar", ParameterDirection.Input)] string @CIRA_Legal_Type, [Parameter("CIRA_Whois_Display", "varchar", ParameterDirection.Input)] string @CIRA_Whois_Display, [Parameter("CIRA_Agreement_Value", "varchar", ParameterDirection.Input)] string @CIRA_Agreement_Value, [Parameter("CIRA_Agreement_Version", "varchar", ParameterDirection.Input)] string @CIRA_Agreement_Version, [Parameter("CIRA_Language", "varchar", ParameterDirection.Input)] string @CIRA_Language, [Parameter("Option1", "varchar", ParameterDirection.Input)] string @Option1, [Parameter("Option2", "varchar", ParameterDirection.Input)] string @Option2, [Parameter("PricePerYear", "money", ParameterDirection.Input)] decimal? @PricePerYear, [Parameter("RegPricePerYear", "money", ParameterDirection.Input)] decimal? @RegPricePerYear, [Parameter("SpecialPrice", "money", ParameterDirection.Input)] decimal? @SpecialPrice, [Parameter("AdditionalCostPerYear", "money", ParameterDirection.Input)] decimal? @AdditionalCostPerYear, [Parameter("RegAdditionalCostPerYear", "money", ParameterDirection.Input)] decimal? @RegAdditionalCostPerYear, [Parameter("SpecialAdditionalCost", "money", ParameterDirection.Input)] decimal? @SpecialAdditionalCost, [Parameter("IsPricePerDuration", "bit", ParameterDirection.Input)] bool? @IsPricePerDuration, [Parameter("IsAdditionalCostOneTime", "bit", ParameterDirection.Input)] bool? @IsAdditionalCostOneTime, [Parameter("OrderRefIP", "varchar", ParameterDirection.Input)] string @OrderRefIP, [Parameter("tierpricingid", "int", ParameterDirection.Input)] int? @tierpricingid);
		[Procedure("USP_API_CREATE_ORDER_WITH_CUSTOM_INVOICE_AND_PRICE_new", "dbo")] public abstract void USP_API_CREATE_ORDER_WITH_CUSTOM_INVOICE_AND_PRICE_new([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("SLD", "nvarchar", ParameterDirection.Input)] string @SLD, [Parameter("TLD", "nvarchar", ParameterDirection.Input)] string @TLD, [Parameter("NumYears", "smallint", ParameterDirection.Input)] short? @NumYears, [Parameter("Duration", "smallint", ParameterDirection.Input)] short? @Duration, [Parameter("Qty", "int", ParameterDirection.Input)] int? @Qty, [Parameter("ActionID", "varchar", ParameterDirection.Input)] string @ActionID, [Parameter("userId", "int", ParameterDirection.Input)] int? @userId, [Parameter("durationType", "varchar", ParameterDirection.Input)] string @durationType, [Parameter("PromotionCode", "varchar", ParameterDirection.Input)] string @PromotionCode, [Parameter("ClientIP", "nvarchar", ParameterDirection.Input)] string @ClientIP, [Parameter("IsBilling", "bit", ParameterDirection.Input)] bool? @IsBilling, [Parameter("AffliateId", "int", ParameterDirection.Input)] int? @AffliateId, [Parameter("AffliateProgramId", "int", ParameterDirection.Input)] int? @AffliateProgramId, [Parameter("OrderRefID", "nvarchar", ParameterDirection.Input)] string @OrderRefID, [Parameter("RegistrantOrganizationName", "nvarchar", ParameterDirection.Input)] string @RegistrantOrganizationName, [Parameter("RegistrantJobTitle", "nvarchar", ParameterDirection.Input)] string @RegistrantJobTitle, [Parameter("RegistrantFirstName", "nvarchar", ParameterDirection.Input)] string @RegistrantFirstName, [Parameter("RegistrantLastName", "nvarchar", ParameterDirection.Input)] string @RegistrantLastName, [Parameter("RegistrantAddress1", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress1, [Parameter("RegistrantAddress2", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress2, [Parameter("RegistrantCity", "nvarchar", ParameterDirection.Input)] string @RegistrantCity, [Parameter("RegistrantStateProvince", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvince, [Parameter("RegistrantStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvinceChoice, [Parameter("RegistrantPostalCode", "nvarchar", ParameterDirection.Input)] string @RegistrantPostalCode, [Parameter("RegistrantCountry", "nvarchar", ParameterDirection.Input)] string @RegistrantCountry, [Parameter("RegistrantPhone", "nvarchar", ParameterDirection.Input)] string @RegistrantPhone, [Parameter("RegistrantPhoneExt", "varchar", ParameterDirection.Input)] string @RegistrantPhoneExt, [Parameter("RegistrantFax", "nvarchar", ParameterDirection.Input)] string @RegistrantFax, [Parameter("RegistrantEmailAddress", "nvarchar", ParameterDirection.Input)] string @RegistrantEmailAddress, [Parameter("TechOrganizationName", "nvarchar", ParameterDirection.Input)] string @TechOrganizationName, [Parameter("TechJobTitle", "nvarchar", ParameterDirection.Input)] string @TechJobTitle, [Parameter("TechFirstName", "nvarchar", ParameterDirection.Input)] string @TechFirstName, [Parameter("TechLastName", "nvarchar", ParameterDirection.Input)] string @TechLastName, [Parameter("TechAddress1", "nvarchar", ParameterDirection.Input)] string @TechAddress1, [Parameter("TechAddress2", "nvarchar", ParameterDirection.Input)] string @TechAddress2, [Parameter("TechCity", "nvarchar", ParameterDirection.Input)] string @TechCity, [Parameter("TechStateProvince", "nvarchar", ParameterDirection.Input)] string @TechStateProvince, [Parameter("TechStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @TechStateProvinceChoice, [Parameter("TechPostalCode", "nvarchar", ParameterDirection.Input)] string @TechPostalCode, [Parameter("TechCountry", "nvarchar", ParameterDirection.Input)] string @TechCountry, [Parameter("TechPhone", "nvarchar", ParameterDirection.Input)] string @TechPhone, [Parameter("TechPhoneExt", "varchar", ParameterDirection.Input)] string @TechPhoneExt, [Parameter("TechFax", "nvarchar", ParameterDirection.Input)] string @TechFax, [Parameter("TechEmailAddress", "nvarchar", ParameterDirection.Input)] string @TechEmailAddress, [Parameter("AdminOrganizationName", "nvarchar", ParameterDirection.Input)] string @AdminOrganizationName, [Parameter("AdminJobTitle", "nvarchar", ParameterDirection.Input)] string @AdminJobTitle, [Parameter("AdminFirstName", "nvarchar", ParameterDirection.Input)] string @AdminFirstName, [Parameter("AdminLastName", "nvarchar", ParameterDirection.Input)] string @AdminLastName, [Parameter("AdminAddress1", "nvarchar", ParameterDirection.Input)] string @AdminAddress1, [Parameter("AdminAddress2", "nvarchar", ParameterDirection.Input)] string @AdminAddress2, [Parameter("AdminCity", "nvarchar", ParameterDirection.Input)] string @AdminCity, [Parameter("AdminStateProvince", "nvarchar", ParameterDirection.Input)] string @AdminStateProvince, [Parameter("AdminStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AdminStateProvinceChoice, [Parameter("AdminPostalCode", "nvarchar", ParameterDirection.Input)] string @AdminPostalCode, [Parameter("AdminCountry", "nvarchar", ParameterDirection.Input)] string @AdminCountry, [Parameter("AdminPhone", "nvarchar", ParameterDirection.Input)] string @AdminPhone, [Parameter("AdminPhoneExt", "varchar", ParameterDirection.Input)] string @AdminPhoneExt, [Parameter("AdminFax", "nvarchar", ParameterDirection.Input)] string @AdminFax, [Parameter("AdminEmailAddress", "nvarchar", ParameterDirection.Input)] string @AdminEmailAddress, [Parameter("AuxBillingOrganizationName", "nvarchar", ParameterDirection.Input)] string @AuxBillingOrganizationName, [Parameter("AuxBillingJobTitle", "nvarchar", ParameterDirection.Input)] string @AuxBillingJobTitle, [Parameter("AuxBillingFirstName", "nvarchar", ParameterDirection.Input)] string @AuxBillingFirstName, [Parameter("AuxBillingLastName", "nvarchar", ParameterDirection.Input)] string @AuxBillingLastName, [Parameter("AuxBillingAddress1", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress1, [Parameter("AuxBillingAddress2", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress2, [Parameter("AuxBillingCity", "nvarchar", ParameterDirection.Input)] string @AuxBillingCity, [Parameter("AuxBillingStateProvince", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvince, [Parameter("AuxBillingStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvinceChoice, [Parameter("AuxBillingPostalCode", "nvarchar", ParameterDirection.Input)] string @AuxBillingPostalCode, [Parameter("AuxBillingCountry", "nvarchar", ParameterDirection.Input)] string @AuxBillingCountry, [Parameter("AuxBillingPhone", "nvarchar", ParameterDirection.Input)] string @AuxBillingPhone, [Parameter("AuxBillingPhoneext", "varchar", ParameterDirection.Input)] string @AuxBillingPhoneext, [Parameter("AuxBillingFax", "nvarchar", ParameterDirection.Input)] string @AuxBillingFax, [Parameter("AuxBillingEmailAddress", "nvarchar", ParameterDirection.Input)] string @AuxBillingEmailAddress, [Parameter("BillingOrganizationName", "nvarchar", ParameterDirection.Input)] string @BillingOrganizationName, [Parameter("BillingJobTitle", "nvarchar", ParameterDirection.Input)] string @BillingJobTitle, [Parameter("BillingFirstName", "nvarchar", ParameterDirection.Input)] string @BillingFirstName, [Parameter("BillingLastName", "nvarchar", ParameterDirection.Input)] string @BillingLastName, [Parameter("BillingAddress1", "nvarchar", ParameterDirection.Input)] string @BillingAddress1, [Parameter("BillingAddress2", "nvarchar", ParameterDirection.Input)] string @BillingAddress2, [Parameter("BillingCity", "nvarchar", ParameterDirection.Input)] string @BillingCity, [Parameter("BillingStateProvince", "nvarchar", ParameterDirection.Input)] string @BillingStateProvince, [Parameter("BillingStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @BillingStateProvinceChoice, [Parameter("BillingPostalCode", "nvarchar", ParameterDirection.Input)] string @BillingPostalCode, [Parameter("BillingCountry", "nvarchar", ParameterDirection.Input)] string @BillingCountry, [Parameter("BillingPhone", "nvarchar", ParameterDirection.Input)] string @BillingPhone, [Parameter("BillingPhoneext", "varchar", ParameterDirection.Input)] string @BillingPhoneext, [Parameter("BillingFax", "nvarchar", ParameterDirection.Input)] string @BillingFax, [Parameter("BillingEmailAddress", "nvarchar", ParameterDirection.Input)] string @BillingEmailAddress, [Parameter("UseNameServer", "nvarchar", ParameterDirection.Input)] string @UseNameServer, [Parameter("NS1", "nvarchar", ParameterDirection.Input)] string @NS1, [Parameter("NS2", "nvarchar", ParameterDirection.Input)] string @NS2, [Parameter("NS3", "nvarchar", ParameterDirection.Input)] string @NS3, [Parameter("NS4", "nvarchar", ParameterDirection.Input)] string @NS4, [Parameter("NS5", "nvarchar", ParameterDirection.Input)] string @NS5, [Parameter("FwdEMailUser", "nvarchar", ParameterDirection.Input)] string @FwdEMailUser, [Parameter("FwdToEMail", "nvarchar", ParameterDirection.Input)] string @FwdToEMail, [Parameter("Submit", "nvarchar", ParameterDirection.Input)] string @Submit, [Parameter("ForwardingURL", "varchar", ParameterDirection.Input)] string @ForwardingURL, [Parameter("ForwardingType", "varchar", ParameterDirection.Input)] string @ForwardingType, [Parameter("RegistrantNexus", "varchar", ParameterDirection.Input)] string @RegistrantNexus, [Parameter("RegistrantNexusCountry", "varchar", ParameterDirection.Input)] string @RegistrantNexusCountry, [Parameter("RegistrantPurpose", "varchar", ParameterDirection.Input)] string @RegistrantPurpose, [Parameter("COUKLegalType", "varchar", ParameterDirection.Input)] string @COUKLegalType, [Parameter("COUKCompanyID", "varchar", ParameterDirection.Input)] string @COUKCompanyID, [Parameter("COUKRegisteredfor", "varchar", ParameterDirection.Input)] string @COUKRegisteredfor, [Parameter("COUKRegOptOut", "varchar", ParameterDirection.Input)] string @COUKRegOptOut, [Parameter("ORGUKRegisteredfor", "varchar", ParameterDirection.Input)] string @ORGUKRegisteredfor, [Parameter("ORGUKRegOptOut", "varchar", ParameterDirection.Input)] string @ORGUKRegOptOut, [Parameter("ORGUKLegalType", "varchar", ParameterDirection.Input)] string @ORGUKLegalType, [Parameter("ORGUKCompanyID", "varchar", ParameterDirection.Input)] string @ORGUKCompanyID, [Parameter("DEconfirmAddress", "bit", ParameterDirection.Input)] bool? @DEconfirmAddress, [Parameter("Eu_adr_lang", "varchar", ParameterDirection.Input)] string @Eu_adr_lang, [Parameter("Eu_agreedelete", "bit", ParameterDirection.Input)] bool? @Eu_agreedelete, [Parameter("MEUKLegalType", "varchar", ParameterDirection.Input)] string @MEUKLegalType, [Parameter("MEUKCompanyID", "varchar", ParameterDirection.Input)] string @MEUKCompanyID, [Parameter("MEUKRegisteredfor", "varchar", ParameterDirection.Input)] string @MEUKRegisteredfor, [Parameter("MEUKRegOptOut", "varchar", ParameterDirection.Input)] string @MEUKRegOptOut, [Parameter("CIRA_Legal_Type", "varchar", ParameterDirection.Input)] string @CIRA_Legal_Type, [Parameter("CIRA_Whois_Display", "varchar", ParameterDirection.Input)] string @CIRA_Whois_Display, [Parameter("CIRA_Agreement_Value", "varchar", ParameterDirection.Input)] string @CIRA_Agreement_Value, [Parameter("CIRA_Agreement_Version", "varchar", ParameterDirection.Input)] string @CIRA_Agreement_Version, [Parameter("CIRA_Language", "varchar", ParameterDirection.Input)] string @CIRA_Language, [Parameter("Option1", "varchar", ParameterDirection.Input)] string @Option1, [Parameter("Option2", "varchar", ParameterDirection.Input)] string @Option2, [Parameter("PricePerYear", "money", ParameterDirection.Input)] decimal? @PricePerYear, [Parameter("RegPricePerYear", "money", ParameterDirection.Input)] decimal? @RegPricePerYear, [Parameter("SpecialPrice", "money", ParameterDirection.Input)] decimal? @SpecialPrice, [Parameter("AdditionalCostPerYear", "money", ParameterDirection.Input)] decimal? @AdditionalCostPerYear, [Parameter("RegAdditionalCostPerYear", "money", ParameterDirection.Input)] decimal? @RegAdditionalCostPerYear, [Parameter("SpecialAdditionalCost", "money", ParameterDirection.Input)] decimal? @SpecialAdditionalCost, [Parameter("IsPricePerDuration", "bit", ParameterDirection.Input)] bool? @IsPricePerDuration, [Parameter("IsAdditionalCostOneTime", "bit", ParameterDirection.Input)] bool? @IsAdditionalCostOneTime, [Parameter("AddonName", "varchar", ParameterDirection.Input)] string @AddonName, [Parameter("AddonGroupName", "varchar", ParameterDirection.Input)] string @AddonGroupName, [Parameter("AddonPrice", "money", ParameterDirection.Input)] decimal? @AddonPrice, [Parameter("AddonRegularPrice", "money", ParameterDirection.Input)] decimal? @AddonRegularPrice, [Parameter("AddonSpecialPrice", "money", ParameterDirection.Input)] decimal? @AddonSpecialPrice, [Parameter("AddonAdditionalCost", "money", ParameterDirection.Input)] decimal? @AddonAdditionalCost, [Parameter("AddonRegularAdditionalCost", "money", ParameterDirection.Input)] decimal? @AddonRegularAdditionalCost, [Parameter("AddonSpecialAdditionalCost", "money", ParameterDirection.Input)] decimal? @AddonSpecialAdditionalCost, [Parameter("IsAddonRegularPricingTypeMultiple", "bit", ParameterDirection.Input)] bool? @IsAddonRegularPricingTypeMultiple, [Parameter("IsAddonSpecialPricingTypeMultiple", "bit", ParameterDirection.Input)] bool? @IsAddonSpecialPricingTypeMultiple, [Parameter("IsAddonPricingTypeMultiple", "bit", ParameterDirection.Input)] bool? @IsAddonPricingTypeMultiple, [Parameter("IsAddonRegularAdditionalCostTypeMultiple", "bit", ParameterDirection.Input)] bool? @IsAddonRegularAdditionalCostTypeMultiple, [Parameter("IsAddonSpecialAdditionalCostTypeMultiple", "bit", ParameterDirection.Input)] bool? @IsAddonSpecialAdditionalCostTypeMultiple, [Parameter("IsAddonAdditionalCostTypeMultiple", "bit", ParameterDirection.Input)] bool? @IsAddonAdditionalCostTypeMultiple, [Parameter("AddonQty", "int", ParameterDirection.Input)] int? @AddonQty, [Parameter("OrderRefIP", "varchar", ParameterDirection.Input)] string @OrderRefIP, [Parameter("tierpricingid", "int", ParameterDirection.Input)] int? @tierpricingid);
		[Procedure("USP_API_CREATE_USER", "dbo")] public abstract void USP_API_CREATE_USER([Parameter("ParentUserName", "nvarchar", ParameterDirection.Input)] string @ParentUserName, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Password", "varchar", ParameterDirection.Input)] string @Password, [Parameter("PasswordNoCase", "varchar", ParameterDirection.Input)] string @PasswordNoCase, [Parameter("PasswordLog", "varchar", ParameterDirection.Input)] string @PasswordLog, [Parameter("ClientIp", "varchar", ParameterDirection.Input)] string @ClientIp, [Parameter("Email", "varchar", ParameterDirection.Input)] string @Email, [Parameter("FirstName", "varchar", ParameterDirection.Input)] string @FirstName, [Parameter("LastName", "varchar", ParameterDirection.Input)] string @LastName, [Parameter("AcceptTerms", "bit", ParameterDirection.Input)] bool? @AcceptTerms, [Parameter("AcceptNews", "bit", ParameterDirection.Input)] bool? @AcceptNews, [Parameter("JobTitle", "varchar", ParameterDirection.Input)] string @JobTitle, [Parameter("Organization", "varchar", ParameterDirection.Input)] string @Organization, [Parameter("StreetAddress", "varchar", ParameterDirection.Input)] string @StreetAddress, [Parameter("StreetAddress2", "varchar", ParameterDirection.Input)] string @StreetAddress2, [Parameter("City", "varchar", ParameterDirection.Input)] string @City, [Parameter("State", "varchar", ParameterDirection.Input)] string @State, [Parameter("StateProvinceChoice", "varchar", ParameterDirection.Input)] string @StateProvinceChoice, [Parameter("Zip", "varchar", ParameterDirection.Input)] string @Zip, [Parameter("Country", "varchar", ParameterDirection.Input)] string @Country, [Parameter("Phone", "varchar", ParameterDirection.Input)] string @Phone, [Parameter("PhoneExt", "varchar", ParameterDirection.Input)] string @PhoneExt, [Parameter("Fax", "varchar", ParameterDirection.Input)] string @Fax, [Parameter("isAppUser", "bit", ParameterDirection.Input)] bool? @isAppUser);
		[Procedure("USP_API_CREATE_USER_ADDRESS", "dbo")] public abstract void USP_API_CREATE_USER_ADDRESS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("AddressName", "varchar", ParameterDirection.Input)] string @AddressName, [Parameter("DefaultYN", "bit", ParameterDirection.Input)] bool? @DefaultYN, [Parameter("FirstName", "nvarchar", ParameterDirection.Input)] string @FirstName, [Parameter("LastName", "nvarchar", ParameterDirection.Input)] string @LastName, [Parameter("JobTitle", "nvarchar", ParameterDirection.Input)] string @JobTitle, [Parameter("Organization", "nvarchar", ParameterDirection.Input)] string @Organization, [Parameter("StreetAddress", "nvarchar", ParameterDirection.Input)] string @StreetAddress, [Parameter("Address2", "nvarchar", ParameterDirection.Input)] string @Address2, [Parameter("City", "nvarchar", ParameterDirection.Input)] string @City, [Parameter("State", "nvarchar", ParameterDirection.Input)] string @State, [Parameter("StateProvince", "nvarchar", ParameterDirection.Input)] string @StateProvince, [Parameter("Zip", "nvarchar", ParameterDirection.Input)] string @Zip, [Parameter("Country", "nvarchar", ParameterDirection.Input)] string @Country, [Parameter("Phone", "nvarchar", ParameterDirection.Input)] string @Phone, [Parameter("Fax", "nvarchar", ParameterDirection.Input)] string @Fax, [Parameter("PhoneExt", "nvarchar", ParameterDirection.Input)] string @PhoneExt, [Parameter("Email", "nvarchar", ParameterDirection.Input)] string @Email);
		[Procedure("USP_API_DELETE_USER_ADDRESS", "dbo")] public abstract void USP_API_DELETE_USER_ADDRESS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("AddressId", "numeric", ParameterDirection.Input)] decimal? @AddressId);
		[Procedure("USP_API_GET_ALL_AUTORENEW_STATUS", "dbo")] public abstract void USP_API_GET_ALL_AUTORENEW_STATUS([Parameter("DomainName", "varchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("USP_API_GET_ALL_EDIT_CAPABILITY", "dbo")] public abstract void USP_API_GET_ALL_EDIT_CAPABILITY();
		[Procedure("USP_API_GET_ALL_INFO", "dbo")] public abstract void USP_API_GET_ALL_INFO([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_API_GET_ALL_TLD_INFO", "dbo")] public abstract void USP_API_GET_ALL_TLD_INFO();
		[Procedure("USP_API_GET_APPUSER_KEY_DETAILS", "dbo")] public abstract void USP_API_GET_APPUSER_KEY_DETAILS([Parameter("AppUser", "varchar", ParameterDirection.Input)] string @AppUser, [Parameter("KeyVersion", "varchar", ParameterDirection.Input)] string @KeyVersion, [Parameter("RequestIP", "varchar", ParameterDirection.Input)] string @RequestIP);
		[Procedure("USP_API_GET_COUPON_DETAILS", "dbo")] public abstract void USP_API_GET_COUPON_DETAILS([Parameter("IPV_PromoCode", "varchar", ParameterDirection.Input)] string @IPV_PromoCode, [Parameter("IPV_UserName", "varchar", ParameterDirection.Input)] string @IPV_UserName, [Parameter("isUserLoggedIN", "bit", ParameterDirection.Input)] bool? @isUserLoggedIN);
		[Procedure("USP_API_GET_DOMAIN_CONTACTS_BY_DOMAINNAME", "dbo")] public abstract void USP_API_GET_DOMAIN_CONTACTS_BY_DOMAINNAME([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname);
		[Procedure("USP_API_GET_DOMAIN_EDIT_CAPABILITIES", "dbo")] public abstract void USP_API_GET_DOMAIN_EDIT_CAPABILITIES([Parameter("IPN_Reseller_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Reseller_ID, [Parameter("IPN_User_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_User_ID, [Parameter("IPN_Domain_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Domain_ID);
		[Procedure("USP_API_GET_DOMAIN_INFO", "dbo")] public abstract void USP_API_GET_DOMAIN_INFO([Parameter("domainname", "varchar", ParameterDirection.Input)] string @domainname);
		[Procedure("USP_API_GET_DOMAIN_INFO_BY_DOMAINNAME", "dbo")] public abstract void USP_API_GET_DOMAIN_INFO_BY_DOMAINNAME([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("USP_API_GET_DOMAIN_LIST", "dbo")] public abstract void USP_API_GET_DOMAIN_LIST([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ListType", "varchar", ParameterDirection.Input)] string @ListType, [Parameter("SearchTerm", "varchar", ParameterDirection.Input)] string @SearchTerm, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy);
		[Procedure("USP_API_GET_DOMAIN_LOCK_REASON", "dbo")] public abstract void USP_API_GET_DOMAIN_LOCK_REASON([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("USP_API_GET_MARKETPLACE_LISTING", "dbo")] public abstract void USP_API_GET_MARKETPLACE_LISTING([Parameter("Keyword", "nvarchar", ParameterDirection.Input)] string @Keyword, [Parameter("StartingLetter", "nvarchar", ParameterDirection.Input)] string @StartingLetter, [Parameter("SubcategoryId", "int", ParameterDirection.Input)] int? @SubcategoryId, [Parameter("AdultListing", "bit", ParameterDirection.Input)] bool? @AdultListing, [Parameter("AcceptOfferOnly", "bit", ParameterDirection.Input)] bool? @AcceptOfferOnly, [Parameter("FixedPriceOnly", "bit", ParameterDirection.Input)] bool? @FixedPriceOnly, [Parameter("Extensions", "nvarchar", ParameterDirection.Input)] string @Extensions, [Parameter("CategoryID", "varchar", ParameterDirection.Input)] string @CategoryID, [Parameter("MaximumLength", "int", ParameterDirection.Input)] int? @MaximumLength, [Parameter("MinPriceRange", "money", ParameterDirection.Input)] decimal? @MinPriceRange, [Parameter("MaxPriceRange", "money", ParameterDirection.Input)] decimal? @MaxPriceRange, [Parameter("ClosingInterval", "int", ParameterDirection.Input)] int? @ClosingInterval, [Parameter("ExcludeHypen", "bit", ParameterDirection.Input)] bool? @ExcludeHypen, [Parameter("ExcludeNumber", "bit", ParameterDirection.Input)] bool? @ExcludeNumber, [Parameter("FeaturedYN", "bit", ParameterDirection.Input)] bool? @FeaturedYN, [Parameter("optsearch", "varchar", ParameterDirection.Input)] string @optsearch, [Parameter("SellerUserName", "nvarchar", ParameterDirection.Input)] string @SellerUserName, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("SortExpression", "varchar", ParameterDirection.Input)] string @SortExpression, [Parameter("PremiumDomains", "varchar", ParameterDirection.Input)] string @PremiumDomains, [Parameter("Sld", "varchar", ParameterDirection.Input)] string @Sld);
		[Procedure("USP_API_GET_MARKETPLACE_LISTING_MV", "dbo")] public abstract void USP_API_GET_MARKETPLACE_LISTING_MV([Parameter("Keyword", "nvarchar", ParameterDirection.Input)] string @Keyword, [Parameter("StartingLetter", "nvarchar", ParameterDirection.Input)] string @StartingLetter, [Parameter("SubcategoryId", "int", ParameterDirection.Input)] int? @SubcategoryId, [Parameter("AdultListing", "bit", ParameterDirection.Input)] bool? @AdultListing, [Parameter("AcceptOfferOnly", "bit", ParameterDirection.Input)] bool? @AcceptOfferOnly, [Parameter("FixedPriceOnly", "bit", ParameterDirection.Input)] bool? @FixedPriceOnly, [Parameter("Extensions", "nvarchar", ParameterDirection.Input)] string @Extensions, [Parameter("CategoryID", "varchar", ParameterDirection.Input)] string @CategoryID, [Parameter("MaximumLength", "int", ParameterDirection.Input)] int? @MaximumLength, [Parameter("MinPriceRange", "money", ParameterDirection.Input)] decimal? @MinPriceRange, [Parameter("MaxPriceRange", "money", ParameterDirection.Input)] decimal? @MaxPriceRange, [Parameter("ClosingInterval", "int", ParameterDirection.Input)] int? @ClosingInterval, [Parameter("ExcludeHypen", "bit", ParameterDirection.Input)] bool? @ExcludeHypen, [Parameter("ExcludeNumber", "bit", ParameterDirection.Input)] bool? @ExcludeNumber, [Parameter("FeaturedYN", "bit", ParameterDirection.Input)] bool? @FeaturedYN, [Parameter("optsearch", "varchar", ParameterDirection.Input)] string @optsearch, [Parameter("SellerUserName", "nvarchar", ParameterDirection.Input)] string @SellerUserName, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("SortExpression", "varchar", ParameterDirection.Input)] string @SortExpression, [Parameter("PremiumDomains", "varchar", ParameterDirection.Input)] string @PremiumDomains);
		[Procedure("USP_API_GET_MARKETPLACE_LISTING_NEW", "dbo")] public abstract void USP_API_GET_MARKETPLACE_LISTING_NEW([Parameter("Keyword", "nvarchar", ParameterDirection.Input)] string @Keyword, [Parameter("StartingLetter", "nvarchar", ParameterDirection.Input)] string @StartingLetter, [Parameter("SubcategoryId", "int", ParameterDirection.Input)] int? @SubcategoryId, [Parameter("AdultListing", "bit", ParameterDirection.Input)] bool? @AdultListing, [Parameter("AcceptOfferOnly", "bit", ParameterDirection.Input)] bool? @AcceptOfferOnly, [Parameter("FixedPriceOnly", "bit", ParameterDirection.Input)] bool? @FixedPriceOnly, [Parameter("Extensions", "nvarchar", ParameterDirection.Input)] string @Extensions, [Parameter("CategoryID", "varchar", ParameterDirection.Input)] string @CategoryID, [Parameter("MaximumLength", "int", ParameterDirection.Input)] int? @MaximumLength, [Parameter("MinPriceRange", "money", ParameterDirection.Input)] decimal? @MinPriceRange, [Parameter("MaxPriceRange", "money", ParameterDirection.Input)] decimal? @MaxPriceRange, [Parameter("ClosingInterval", "int", ParameterDirection.Input)] int? @ClosingInterval, [Parameter("ExcludeHypen", "bit", ParameterDirection.Input)] bool? @ExcludeHypen, [Parameter("ExcludeNumber", "bit", ParameterDirection.Input)] bool? @ExcludeNumber, [Parameter("FeaturedYN", "bit", ParameterDirection.Input)] bool? @FeaturedYN, [Parameter("optsearch", "varchar", ParameterDirection.Input)] string @optsearch, [Parameter("SellerUserName", "nvarchar", ParameterDirection.Input)] string @SellerUserName, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("SortExpression", "varchar", ParameterDirection.Input)] string @SortExpression, [Parameter("PremiumDomains", "varchar", ParameterDirection.Input)] string @PremiumDomains);
		[Procedure("USP_API_GET_MARKETPLACE_LISTING_OLD", "dbo")] public abstract void USP_API_GET_MARKETPLACE_LISTING_OLD([Parameter("Keyword", "nvarchar", ParameterDirection.Input)] string @Keyword, [Parameter("StartingLetter", "nvarchar", ParameterDirection.Input)] string @StartingLetter, [Parameter("SubcategoryId", "int", ParameterDirection.Input)] int? @SubcategoryId, [Parameter("AdultListing", "bit", ParameterDirection.Input)] bool? @AdultListing, [Parameter("AcceptOfferOnly", "bit", ParameterDirection.Input)] bool? @AcceptOfferOnly, [Parameter("FixedPriceOnly", "bit", ParameterDirection.Input)] bool? @FixedPriceOnly, [Parameter("Extensions", "nvarchar", ParameterDirection.Input)] string @Extensions, [Parameter("CategoryID", "varchar", ParameterDirection.Input)] string @CategoryID, [Parameter("MaximumLength", "int", ParameterDirection.Input)] int? @MaximumLength, [Parameter("MinPriceRange", "money", ParameterDirection.Input)] decimal? @MinPriceRange, [Parameter("MaxPriceRange", "money", ParameterDirection.Input)] decimal? @MaxPriceRange, [Parameter("ClosingInterval", "int", ParameterDirection.Input)] int? @ClosingInterval, [Parameter("ExcludeHypen", "bit", ParameterDirection.Input)] bool? @ExcludeHypen, [Parameter("ExcludeNumber", "bit", ParameterDirection.Input)] bool? @ExcludeNumber, [Parameter("FeaturedYN", "bit", ParameterDirection.Input)] bool? @FeaturedYN, [Parameter("optsearch", "varchar", ParameterDirection.Input)] string @optsearch, [Parameter("SellerUserName", "nvarchar", ParameterDirection.Input)] string @SellerUserName, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("SortExpression", "varchar", ParameterDirection.Input)] string @SortExpression, [Parameter("PremiumDomains", "varchar", ParameterDirection.Input)] string @PremiumDomains);
		[Procedure("USP_API_GET_MARKETPLACE_LISTING1", "dbo")] public abstract void USP_API_GET_MARKETPLACE_LISTING1([Parameter("Keyword", "nvarchar", ParameterDirection.Input)] string @Keyword, [Parameter("StartingLetter", "nvarchar", ParameterDirection.Input)] string @StartingLetter, [Parameter("SubcategoryId", "int", ParameterDirection.Input)] int? @SubcategoryId, [Parameter("AdultListing", "bit", ParameterDirection.Input)] bool? @AdultListing, [Parameter("AcceptOfferOnly", "bit", ParameterDirection.Input)] bool? @AcceptOfferOnly, [Parameter("FixedPriceOnly", "bit", ParameterDirection.Input)] bool? @FixedPriceOnly, [Parameter("Extensions", "nvarchar", ParameterDirection.Input)] string @Extensions, [Parameter("CategoryID", "varchar", ParameterDirection.Input)] string @CategoryID, [Parameter("MaximumLength", "int", ParameterDirection.Input)] int? @MaximumLength, [Parameter("MinPriceRange", "money", ParameterDirection.Input)] decimal? @MinPriceRange, [Parameter("MaxPriceRange", "money", ParameterDirection.Input)] decimal? @MaxPriceRange, [Parameter("ClosingInterval", "int", ParameterDirection.Input)] int? @ClosingInterval, [Parameter("ExcludeHypen", "bit", ParameterDirection.Input)] bool? @ExcludeHypen, [Parameter("ExcludeNumber", "bit", ParameterDirection.Input)] bool? @ExcludeNumber, [Parameter("FeaturedYN", "bit", ParameterDirection.Input)] bool? @FeaturedYN, [Parameter("optsearch", "varchar", ParameterDirection.Input)] string @optsearch, [Parameter("SellerUserName", "nvarchar", ParameterDirection.Input)] string @SellerUserName, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("SortExpression", "varchar", ParameterDirection.Input)] string @SortExpression, [Parameter("PremiumDomains", "varchar", ParameterDirection.Input)] string @PremiumDomains);
		[Procedure("USP_API_GET_NONREALTIME_DOMAIN_STATUS", "dbo")] public abstract void USP_API_GET_NONREALTIME_DOMAIN_STATUS([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("OrderId", "int", ParameterDirection.Input)] int? @OrderId);
		[Procedure("USP_API_GET_PRODUCT_DETAILS", "dbo")] public abstract void USP_API_GET_PRODUCT_DETAILS();
		[Procedure("USP_API_GET_PRODUCT_PRICING_LIST", "dbo")] public abstract void USP_API_GET_PRODUCT_PRICING_LIST([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("productType", "varchar", ParameterDirection.Input)] string @productType, [Parameter("productCategory", "varchar", ParameterDirection.Input)] string @productCategory, [Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode);
		[Procedure("USP_API_GET_SSL_INFO", "dbo")] public abstract void USP_API_GET_SSL_INFO([Parameter("sslIds", "varchar", ParameterDirection.Input)] string @sslIds);
		[Procedure("USP_API_GET_SSL_LIST", "dbo")] public abstract void USP_API_GET_SSL_LIST([Parameter("List_Type", "varchar", ParameterDirection.Input)] string @List_Type, [Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName, [Parameter("Search_Term", "varchar", ParameterDirection.Input)] string @Search_Term, [Parameter("sortBy", "varchar", ParameterDirection.Input)] string @sortBy, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize);
		[Procedure("USP_API_GET_TLD_INFO", "dbo")] public abstract void USP_API_GET_TLD_INFO();
		[Procedure("USP_API_GET_TLD_MODCONTACT_STATUS", "dbo")] public abstract void USP_API_GET_TLD_MODCONTACT_STATUS([Parameter("tld", "varchar", ParameterDirection.Input)] string @tld);
		[Procedure("USP_API_GET_TOTAL_HOURS_TO_CHECK_TOKENID", "dbo")] public abstract void USP_API_GET_TOTAL_HOURS_TO_CHECK_TOKENID([Parameter("tokenId", "varchar", ParameterDirection.Input)] string @tokenId);
		[Procedure("USP_API_GET_TRANSFER_LIST", "dbo")] public abstract void USP_API_GET_TRANSFER_LIST([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ListType", "varchar", ParameterDirection.Input)] string @ListType, [Parameter("SearchTerm", "varchar", ParameterDirection.Input)] string @SearchTerm, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy);
		[Procedure("USP_API_GET_TRNASFER_STATUS", "dbo")] public abstract void USP_API_GET_TRNASFER_STATUS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("TransferID", "numeric", ParameterDirection.Input)] decimal? @TransferID);
		[Procedure("USP_API_GET_USER_ADDRESS_INFO", "dbo")] public abstract void USP_API_GET_USER_ADDRESS_INFO([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("AddressId", "numeric", ParameterDirection.Input)] decimal? @AddressId);
		[Procedure("USP_API_GET_USER_BALANCES", "dbo")] public abstract void USP_API_GET_USER_BALANCES([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_API_GET_USER_CHECKOUT_SETTINGS", "dbo")] public abstract void USP_API_GET_USER_CHECKOUT_SETTINGS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_API_GET_USERNAME_FROM_TOKENID_IN_ADD_FUNDS", "dbo")] public abstract void USP_API_GET_USERNAME_FROM_TOKENID_IN_ADD_FUNDS([Parameter("tokenId", "varchar", ParameterDirection.Input)] string @tokenId);
		[Procedure("USP_API_GET_USERS_WITH_ACCESS_TO_DOMAIN", "dbo")] public abstract void USP_API_GET_USERS_WITH_ACCESS_TO_DOMAIN([Parameter("RequestingUserName", "varchar", ParameterDirection.Input)] string @RequestingUserName, [Parameter("DomainName", "varchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("USP_API_GET_WHOIGUARD_STATUS_FOR_DOMAIN", "dbo")] public abstract void USP_API_GET_WHOIGUARD_STATUS_FOR_DOMAIN([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname);
		[Procedure("USP_API_GET_WHOISGUARD_INFO", "dbo")] public abstract void USP_API_GET_WHOISGUARD_INFO([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname, [Parameter("whoisguardId", "int", ParameterDirection.Input)] int? @whoisguardId, [Parameter("tld", "varchar", ParameterDirection.Input)] string @tld, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("USP_API_GET_WHOISGUARD_STATUS", "dbo")] public abstract void USP_API_GET_WHOISGUARD_STATUS([Parameter("whoisguardId", "int", ParameterDirection.Input)] int? @whoisguardId, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("type", "varchar", ParameterDirection.Input)] string @type);
		[Procedure("USP_API_LIST_USER_ADDRESS", "dbo")] public abstract void USP_API_LIST_USER_ADDRESS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_API_LOG_AUTORENEW", "dbo")] public abstract void USP_API_LOG_AUTORENEW([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_API_MP_VALIDATE_USERNAME_FOR_MAKEOFFER", "dbo")] public abstract void USP_API_MP_VALIDATE_USERNAME_FOR_MAKEOFFER([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("mp_listing_id", "numeric", ParameterDirection.Input)] decimal? @mp_listing_id);
		[Procedure("usp_Api_Onepager_GetEmail", "dbo")] public abstract void usp_Api_Onepager_GetEmail([Parameter("SubscriptionId", "numeric", ParameterDirection.Input)] decimal? @SubscriptionId);
		[Procedure("usp_Api_Onepager_Getinfo", "dbo")] public abstract void usp_Api_Onepager_Getinfo([Parameter("SubscriptionId", "numeric", ParameterDirection.Input)] decimal? @SubscriptionId, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("usp_Api_Onepager_GetList", "dbo")] public abstract void usp_Api_Onepager_GetList([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("ListType", "int", ParameterDirection.Input)] int? @ListType, [Parameter("SearchTerm", "nvarchar", ParameterDirection.Input)] string @SearchTerm, [Parameter("SortExpression", "varchar", ParameterDirection.Input)] string @SortExpression, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize);
		[Procedure("usp_Api_Onepager_GetPartnerSubscriptionId", "dbo")] public abstract void usp_Api_Onepager_GetPartnerSubscriptionId([Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName, [Parameter("SubscriptionId", "numeric", ParameterDirection.Input)] decimal? @SubscriptionId);
		[Procedure("usp_Api_Onepager_Renew", "dbo")] public abstract void usp_Api_Onepager_Renew([Parameter("SubscriptionId", "numeric", ParameterDirection.Input)] decimal? @SubscriptionId, [Parameter("ExpirationDateTime", "datetime", ParameterDirection.Input)] DateTime? @ExpirationDateTime, [Parameter("RenewedOrderId", "numeric", ParameterDirection.Input)] decimal? @RenewedOrderId, [Parameter("ActionType", "varchar", ParameterDirection.Input)] string @ActionType, [Parameter("Duration", "int", ParameterDirection.Input)] int? @Duration, [Parameter("Duration_Type", "varchar", ParameterDirection.Input)] string @Duration_Type);
		[Procedure("usp_Api_Onepager_SetAutoRenew", "dbo")] public abstract void usp_Api_Onepager_SetAutoRenew([Parameter("SubscriptionId", "numeric", ParameterDirection.Input)] decimal? @SubscriptionId, [Parameter("IsAutoRenew", "bit", ParameterDirection.Input)] bool? @IsAutoRenew, [Parameter("Status", "varchar", ParameterDirection.Input)] string @Status, [Parameter("StatusType", "varchar", ParameterDirection.Input)] string @StatusType);
		[Procedure("usp_Api_Onepager_ValidateHostName", "dbo")] public abstract void usp_Api_Onepager_ValidateHostName([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("HostName", "nvarchar", ParameterDirection.Input)] string @HostName, [Parameter("Subscriptionid", "numeric", ParameterDirection.Input)] decimal? @Subscriptionid);
		[Procedure("USP_API_ORDER_UPDATE_STATUS", "dbo")] public abstract void USP_API_ORDER_UPDATE_STATUS([Parameter("OrderID", "int", ParameterDirection.Input)] int? @OrderID, [Parameter("IsActionsuccess", "bit", ParameterDirection.Input)] bool? @IsActionsuccess, [Parameter("ErrInfo", "varchar", ParameterDirection.Input)] string @ErrInfo, [Parameter("option2", "varchar", ParameterDirection.Input)] string @option2, [Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode);
		[Procedure("usp_Api_PrivacyPolicy_Cancel", "dbo")] public abstract void usp_Api_PrivacyPolicy_Cancel([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("StatusId", "int", ParameterDirection.Input)] int? @StatusId, [Parameter("MoreInfoLog", "xml", ParameterDirection.Input)] string @MoreInfoLog);
		[Procedure("usp_Api_PrivacyPolicy_Configure", "dbo")] public abstract void usp_Api_PrivacyPolicy_Configure([Parameter("PartnerSubscriptionId", "int", ParameterDirection.Input)] int? @PartnerSubscriptionId, [Parameter("ExpirationDatetime", "datetime", ParameterDirection.Input)] DateTime? @ExpirationDatetime, [Parameter("PolicyStatus", "varchar", ParameterDirection.Input)] string @PolicyStatus, [Parameter("StatusId", "int", ParameterDirection.Input)] int? @StatusId, [Parameter("MoreInfoLog", "xml", ParameterDirection.Input)] string @MoreInfoLog);
		[Procedure("usp_Api_PrivacyPolicy_Create", "dbo")] public abstract void usp_Api_PrivacyPolicy_Create([Parameter("PartnerSubscriptionId", "numeric", ParameterDirection.Input)] decimal? @PartnerSubscriptionId, [Parameter("SubscriptionType", "varchar", ParameterDirection.Input)] string @SubscriptionType, [Parameter("CreatedOrderId", "numeric", ParameterDirection.Input)] decimal? @CreatedOrderId, [Parameter("PartnerOrderId", "numeric", ParameterDirection.Input)] decimal? @PartnerOrderId, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("EmailAddress", "nvarchar", ParameterDirection.Input)] string @EmailAddress, [Parameter("NumOfYears", "int", ParameterDirection.Input)] int? @NumOfYears, [Parameter("Password", "nvarchar", ParameterDirection.Input)] string @Password, [Parameter("PrivacypolicyLogOrderId", "nvarchar", ParameterDirection.Input)] string @PrivacypolicyLogOrderId, [Parameter("CreatedOrderItemId", "numeric", ParameterDirection.Input)] decimal? @CreatedOrderItemId, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("NextBillingDateTime", "datetime", ParameterDirection.Input)] DateTime? @NextBillingDateTime, [Parameter("IsUpgradeConfirm", "bit", ParameterDirection.Input)] bool? @IsUpgradeConfirm, [Parameter("StatusId", "int", ParameterDirection.Input)] int? @StatusId, [Parameter("MoreInfoLog", "xml", ParameterDirection.Input)] string @MoreInfoLog);
		[Procedure("usp_Api_PrivacyPolicy_Getinfo", "dbo")] public abstract void usp_Api_PrivacyPolicy_Getinfo([Parameter("PartnerSubscriptionId", "numeric", ParameterDirection.Input)] decimal? @PartnerSubscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Api_PrivacyPolicy_Getlist", "dbo")] public abstract void usp_Api_PrivacyPolicy_Getlist([Parameter("OwnerUserName", "varchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("SearchTerm", "varchar", ParameterDirection.Input)] string @SearchTerm, [Parameter("ListType", "varchar", ParameterDirection.Input)] string @ListType, [Parameter("Category", "int", ParameterDirection.Input)] int? @Category);
		[Procedure("usp_Api_PrivacyPolicy_GetSubscriptionId", "dbo")] public abstract void usp_Api_PrivacyPolicy_GetSubscriptionId([Parameter("OwnerUserName", "varchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId);
		[Procedure("usp_Api_PrivacyPolicy_Renew", "dbo")] public abstract void usp_Api_PrivacyPolicy_Renew([Parameter("SubscriptionId", "numeric", ParameterDirection.Input)] decimal? @SubscriptionId, [Parameter("NumOfYears", "int", ParameterDirection.Input)] int? @NumOfYears, [Parameter("ExpiryDateTime", "datetime", ParameterDirection.Input)] DateTime? @ExpiryDateTime, [Parameter("RenewalStatus", "varchar", ParameterDirection.Input)] string @RenewalStatus);
		[Procedure("usp_Api_PrivacyPolicy_RenewalValid", "dbo")] public abstract void usp_Api_PrivacyPolicy_RenewalValid([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("RenewStatus", "varchar", ParameterDirection.Input)] string @RenewStatus);
		[Procedure("usp_Api_PrivacyPolicy_UpdateEmailAddress", "dbo")] public abstract void usp_Api_PrivacyPolicy_UpdateEmailAddress([Parameter("OwnerUserName", "varchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("EmailAddress", "nvarchar", ParameterDirection.Input)] string @EmailAddress, [Parameter("PartnerSubscriptionId", "numeric", ParameterDirection.Input)] decimal? @PartnerSubscriptionId, [Parameter("StatusId", "int", ParameterDirection.Input)] int? @StatusId, [Parameter("MoreInfoLog", "xml", ParameterDirection.Input)] string @MoreInfoLog);
		[Procedure("usp_Api_PrivacyPolicy_UpdatePassword", "dbo")] public abstract void usp_Api_PrivacyPolicy_UpdatePassword([Parameter("OwnerUserName", "varchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("OwnerPassword", "nvarchar", ParameterDirection.Input)] string @OwnerPassword, [Parameter("DomainName", "varchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("usp_Api_PrivacyPolicy_UpdateRenew", "dbo")] public abstract void usp_Api_PrivacyPolicy_UpdateRenew([Parameter("SubscriptionId", "numeric", ParameterDirection.Input)] decimal? @SubscriptionId, [Parameter("OrderId", "numeric", ParameterDirection.Input)] decimal? @OrderId, [Parameter("OrderItemId", "numeric", ParameterDirection.Input)] decimal? @OrderItemId, [Parameter("TransactionId", "numeric", ParameterDirection.Input)] decimal? @TransactionId, [Parameter("ExpiryDateTime", "datetime", ParameterDirection.Input)] DateTime? @ExpiryDateTime, [Parameter("RenewalStatus", "varchar", ParameterDirection.Input)] string @RenewalStatus);
		[Procedure("usp_Api_PrivacyPolicy_ValidateDomainName", "dbo")] public abstract void usp_Api_PrivacyPolicy_ValidateDomainName([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Api_PrivacyPolicyUpdate", "dbo")] public abstract void usp_Api_PrivacyPolicyUpdate([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("PartnerSubscriptionId", "numeric", ParameterDirection.Input)] decimal? @PartnerSubscriptionId, [Parameter("SubscriptionType", "varchar", ParameterDirection.Input)] string @SubscriptionType, [Parameter("CreatedOrderId", "numeric", ParameterDirection.Input)] decimal? @CreatedOrderId, [Parameter("PartnerOrderId", "numeric", ParameterDirection.Input)] decimal? @PartnerOrderId, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("EmailAddress", "nvarchar", ParameterDirection.Input)] string @EmailAddress, [Parameter("NumOfYears", "int", ParameterDirection.Input)] int? @NumOfYears, [Parameter("Password", "nvarchar", ParameterDirection.Input)] string @Password, [Parameter("PrivacypolicyLogOrderId", "nvarchar", ParameterDirection.Input)] string @PrivacypolicyLogOrderId, [Parameter("CreatedOrderItemId", "numeric", ParameterDirection.Input)] decimal? @CreatedOrderItemId, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("NextBillingDateTime", "datetime", ParameterDirection.Input)] DateTime? @NextBillingDateTime, [Parameter("IsUpgradeConfirm", "bit", ParameterDirection.Input)] bool? @IsUpgradeConfirm, [Parameter("StatusId", "int", ParameterDirection.Input)] int? @StatusId, [Parameter("MoreInfoLog", "xml", ParameterDirection.Input)] string @MoreInfoLog);
		[Procedure("USP_API_PROCESS_REFUND", "dbo")] public abstract void USP_API_PROCESS_REFUND([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("InitialAmount", "money", ParameterDirection.Input)] decimal? @InitialAmount, [Parameter("OrderID", "numeric", ParameterDirection.Input)] decimal? @OrderID, [Parameter("ClientIP", "varchar", ParameterDirection.Input)] string @ClientIP, [Parameter("RelatedTransactionId", "numeric", ParameterDirection.Input)] decimal? @RelatedTransactionId, [Parameter("OrderRefId", "nvarchar", ParameterDirection.Input)] string @OrderRefId);
		[Procedure("USP_API_PURCHASE_RENEW_SSL", "dbo")] public abstract void USP_API_PURCHASE_RENEW_SSL([Parameter("ActionID", "varchar", ParameterDirection.Input)] string @ActionID, [Parameter("RefID", "varchar", ParameterDirection.Input)] string @RefID, [Parameter("sSLD", "varchar", ParameterDirection.Input)] string @sSLD, [Parameter("sTLD", "varchar", ParameterDirection.Input)] string @sTLD, [Parameter("NumofYears", "smallint", ParameterDirection.Input)] short? @NumofYears, [Parameter("Qty", "int", ParameterDirection.Input)] int? @Qty, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName, [Parameter("domainUsed", "varchar", ParameterDirection.Input)] string @domainUsed, [Parameter("sTransactionID", "nvarchar", ParameterDirection.Input)] string @sTransactionID, [Parameter("sOrderID", "nvarchar", ParameterDirection.Input)] string @sOrderID, [Parameter("sOrderDetailID", "nvarchar", ParameterDirection.Input)] string @sOrderDetailID, [Parameter("sPayStatus", "nvarchar", ParameterDirection.Input)] string @sPayStatus, [Parameter("sNumericOrderID", "numeric", ParameterDirection.Input)] decimal? @sNumericOrderID, [Parameter("sPurchaseValidationID", "varchar", ParameterDirection.Input)] string @sPurchaseValidationID);
		[Procedure("USP_API_PURCHASE_RENEW_SSL_WITH_PRICE", "dbo")] public abstract void USP_API_PURCHASE_RENEW_SSL_WITH_PRICE([Parameter("ActionID", "varchar", ParameterDirection.Input)] string @ActionID, [Parameter("RefID", "varchar", ParameterDirection.Input)] string @RefID, [Parameter("sSLD", "varchar", ParameterDirection.Input)] string @sSLD, [Parameter("sTLD", "varchar", ParameterDirection.Input)] string @sTLD, [Parameter("NumofYears", "smallint", ParameterDirection.Input)] short? @NumofYears, [Parameter("Qty", "int", ParameterDirection.Input)] int? @Qty, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName, [Parameter("domainUsed", "varchar", ParameterDirection.Input)] string @domainUsed, [Parameter("sTransactionID", "nvarchar", ParameterDirection.Input)] string @sTransactionID, [Parameter("sOrderID", "nvarchar", ParameterDirection.Input)] string @sOrderID, [Parameter("sOrderDetailID", "nvarchar", ParameterDirection.Input)] string @sOrderDetailID, [Parameter("sPayStatus", "nvarchar", ParameterDirection.Input)] string @sPayStatus, [Parameter("sNumericOrderID", "numeric", ParameterDirection.Input)] decimal? @sNumericOrderID, [Parameter("sPurchaseValidationID", "varchar", ParameterDirection.Input)] string @sPurchaseValidationID, [Parameter("userId", "numeric", ParameterDirection.Input)] decimal? @userId, [Parameter("durationType", "varchar", ParameterDirection.Input)] string @durationType, [Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode, [Parameter("PurchasePrice", "money", ParameterDirection.Input)] decimal? @PurchasePrice, [Parameter("RetailPrice", "money", ParameterDirection.Input)] decimal? @RetailPrice);
		[Procedure("USP_API_REACTIVATE_DOMAIN", "dbo")] public abstract void USP_API_REACTIVATE_DOMAIN([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("NumYears", "smallint", ParameterDirection.Input)] short? @NumYears, [Parameter("OrderID", "nvarchar", ParameterDirection.Input)] string @OrderID, [Parameter("TransID", "nvarchar", ParameterDirection.Input)] string @TransID, [Parameter("OrderDetailID", "numeric", ParameterDirection.Input)] decimal? @OrderDetailID);
		[Procedure("USP_API_RENEW_DOMAIN", "dbo")] public abstract void USP_API_RENEW_DOMAIN([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("NumYears", "int", ParameterDirection.Input)] int? @NumYears, [Parameter("TransactionID", "nvarchar", ParameterDirection.Input)] string @TransactionID, [Parameter("OrderID", "nvarchar", ParameterDirection.Input)] string @OrderID, [Parameter("OrderDetailID", "numeric", ParameterDirection.Input)] decimal? @OrderDetailID, [Parameter("NewExpiryDateTime", "datetime", ParameterDirection.Input)] DateTime? @NewExpiryDateTime);
		[Procedure("USP_API_RESET_KEY", "dbo")] public abstract void USP_API_RESET_KEY([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Password", "varchar", ParameterDirection.Input)] string @Password, [Parameter("PasswordNoCase", "varchar", ParameterDirection.Input)] string @PasswordNoCase);
		[Procedure("USP_API_SET_AUTO_RENEW_STATUS", "dbo")] public abstract void USP_API_SET_AUTO_RENEW_STATUS([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("DomainRenew", "bit", ParameterDirection.Input)] bool? @DomainRenew, [Parameter("WGRenew", "bit", ParameterDirection.Input)] bool? @WGRenew, [Parameter("POP3Renew", "bit", ParameterDirection.Input)] bool? @POP3Renew);
		[Procedure("USP_API_SET_DEFAULT_USER_ADDRESS", "dbo")] public abstract void USP_API_SET_DEFAULT_USER_ADDRESS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("AddressId", "numeric", ParameterDirection.Input)] decimal? @AddressId);
		[Procedure("USP_API_SET_DOMAIN_EDIT_CAPABILITIES", "dbo")] public abstract void USP_API_SET_DOMAIN_EDIT_CAPABILITIES([Parameter("ResellerID", "numeric", ParameterDirection.Input)] decimal? @ResellerID, [Parameter("CurrentUserName", "varchar", ParameterDirection.Input)] string @CurrentUserName, [Parameter("TargetUserName", "varchar", ParameterDirection.Input)] string @TargetUserName, [Parameter("DomainName", "varchar", ParameterDirection.Input)] string @DomainName, [Parameter("CapabilitiesCSV", "varchar", ParameterDirection.Input)] string @CapabilitiesCSV);
		[Procedure("USP_API_TRANSFERMATE_UPDATE_ORIGINALEMAIL", "dbo")] public abstract void USP_API_TRANSFERMATE_UPDATE_ORIGINALEMAIL([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("TransferID", "int", ParameterDirection.Input)] int? @TransferID, [Parameter("OriginalEmail", "varchar", ParameterDirection.Input)] string @OriginalEmail);
		[Procedure("USP_API_TRANSFERMATE_UPDATE_STATUS", "dbo")] public abstract void USP_API_TRANSFERMATE_UPDATE_STATUS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("TransferID", "int", ParameterDirection.Input)] int? @TransferID, [Parameter("StatusDescription", "ntext", ParameterDirection.Input)] string @StatusDescription);
		[Procedure("USP_API_UPDATE_DOMAIN_CONTACTS", "dbo")] public abstract void USP_API_UPDATE_DOMAIN_CONTACTS([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname, [Parameter("RegistrantFirstName", "nvarchar", ParameterDirection.Input)] string @RegistrantFirstName, [Parameter("RegistrantLastName", "nvarchar", ParameterDirection.Input)] string @RegistrantLastName, [Parameter("RegistrantJobTitle", "nvarchar", ParameterDirection.Input)] string @RegistrantJobTitle, [Parameter("RegistrantOrganization", "nvarchar", ParameterDirection.Input)] string @RegistrantOrganization, [Parameter("RegistrantStreetAddress", "nvarchar", ParameterDirection.Input)] string @RegistrantStreetAddress, [Parameter("RegistrantAddress2", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress2, [Parameter("RegistrantCity", "nvarchar", ParameterDirection.Input)] string @RegistrantCity, [Parameter("RegistrantState", "nvarchar", ParameterDirection.Input)] string @RegistrantState, [Parameter("RegistrantStateProvince", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvince, [Parameter("RegistrantZip", "nvarchar", ParameterDirection.Input)] string @RegistrantZip, [Parameter("RegistrantCountry", "nvarchar", ParameterDirection.Input)] string @RegistrantCountry, [Parameter("RegistrantPhone", "nvarchar", ParameterDirection.Input)] string @RegistrantPhone, [Parameter("RegistrantFax", "nvarchar", ParameterDirection.Input)] string @RegistrantFax, [Parameter("RegistrantEmail", "nvarchar", ParameterDirection.Input)] string @RegistrantEmail, [Parameter("RegistrantPhoneext", "varchar", ParameterDirection.Input)] string @RegistrantPhoneext, [Parameter("TechFirstName", "nvarchar", ParameterDirection.Input)] string @TechFirstName, [Parameter("TechLastName", "nvarchar", ParameterDirection.Input)] string @TechLastName, [Parameter("TechJobTitle", "nvarchar", ParameterDirection.Input)] string @TechJobTitle, [Parameter("TechOrganization", "nvarchar", ParameterDirection.Input)] string @TechOrganization, [Parameter("TechStreetAddress", "nvarchar", ParameterDirection.Input)] string @TechStreetAddress, [Parameter("TechAddress2", "nvarchar", ParameterDirection.Input)] string @TechAddress2, [Parameter("TechCity", "nvarchar", ParameterDirection.Input)] string @TechCity, [Parameter("TechState", "nvarchar", ParameterDirection.Input)] string @TechState, [Parameter("TechStateProvince", "nvarchar", ParameterDirection.Input)] string @TechStateProvince, [Parameter("TechZip", "nvarchar", ParameterDirection.Input)] string @TechZip, [Parameter("TechCountry", "nvarchar", ParameterDirection.Input)] string @TechCountry, [Parameter("TechPhone", "nvarchar", ParameterDirection.Input)] string @TechPhone, [Parameter("TechFax", "nvarchar", ParameterDirection.Input)] string @TechFax, [Parameter("TechEmail", "nvarchar", ParameterDirection.Input)] string @TechEmail, [Parameter("TechPhoneext", "varchar", ParameterDirection.Input)] string @TechPhoneext, [Parameter("AdminFirstName", "nvarchar", ParameterDirection.Input)] string @AdminFirstName, [Parameter("AdminLastName", "nvarchar", ParameterDirection.Input)] string @AdminLastName, [Parameter("AdminJobTitle", "nvarchar", ParameterDirection.Input)] string @AdminJobTitle, [Parameter("AdminOrganization", "nvarchar", ParameterDirection.Input)] string @AdminOrganization, [Parameter("AdminStreetAddress", "nvarchar", ParameterDirection.Input)] string @AdminStreetAddress, [Parameter("AdminAddress2", "nvarchar", ParameterDirection.Input)] string @AdminAddress2, [Parameter("AdminCity", "nvarchar", ParameterDirection.Input)] string @AdminCity, [Parameter("AdminState", "nvarchar", ParameterDirection.Input)] string @AdminState, [Parameter("AdminStateProvince", "nvarchar", ParameterDirection.Input)] string @AdminStateProvince, [Parameter("AdminZip", "nvarchar", ParameterDirection.Input)] string @AdminZip, [Parameter("AdminCountry", "nvarchar", ParameterDirection.Input)] string @AdminCountry, [Parameter("AdminPhone", "nvarchar", ParameterDirection.Input)] string @AdminPhone, [Parameter("AdminFax", "nvarchar", ParameterDirection.Input)] string @AdminFax, [Parameter("AdminEmail", "nvarchar", ParameterDirection.Input)] string @AdminEmail, [Parameter("AdminPhoneext", "varchar", ParameterDirection.Input)] string @AdminPhoneext, [Parameter("BillingFirstName", "nvarchar", ParameterDirection.Input)] string @BillingFirstName, [Parameter("BillingLastName", "nvarchar", ParameterDirection.Input)] string @BillingLastName, [Parameter("BillingJobTitle", "nvarchar", ParameterDirection.Input)] string @BillingJobTitle, [Parameter("BillingOrganization", "nvarchar", ParameterDirection.Input)] string @BillingOrganization, [Parameter("BillingStreetAddress", "nvarchar", ParameterDirection.Input)] string @BillingStreetAddress, [Parameter("BillingAddress2", "nvarchar", ParameterDirection.Input)] string @BillingAddress2, [Parameter("BillingCity", "nvarchar", ParameterDirection.Input)] string @BillingCity, [Parameter("BillingState", "nvarchar", ParameterDirection.Input)] string @BillingState, [Parameter("BillingStateProvince", "nvarchar", ParameterDirection.Input)] string @BillingStateProvince, [Parameter("BillingZip", "nvarchar", ParameterDirection.Input)] string @BillingZip, [Parameter("BillingCountry", "nvarchar", ParameterDirection.Input)] string @BillingCountry, [Parameter("BillingPhone", "nvarchar", ParameterDirection.Input)] string @BillingPhone, [Parameter("BillingFax", "nvarchar", ParameterDirection.Input)] string @BillingFax, [Parameter("BillingEmail", "nvarchar", ParameterDirection.Input)] string @BillingEmail, [Parameter("BillingPhoneext", "varchar", ParameterDirection.Input)] string @BillingPhoneext, [Parameter("RegistrantNexus", "varchar", ParameterDirection.Input)] string @RegistrantNexus, [Parameter("RegisrantNexusCountry", "nvarchar", ParameterDirection.Input)] string @RegisrantNexusCountry, [Parameter("RegistrantPurpose", "varchar", ParameterDirection.Input)] string @RegistrantPurpose, [Parameter("ciraLegalType", "varchar", ParameterDirection.Input)] string @ciraLegalType, [Parameter("ciraWhoisDisplay", "varchar", ParameterDirection.Input)] string @ciraWhoisDisplay, [Parameter("ciraAgreementVersion", "varchar", ParameterDirection.Input)] string @ciraAgreementVersion, [Parameter("ciraLanguage", "varchar", ParameterDirection.Input)] string @ciraLanguage, [Parameter("COUKLegalType", "varchar", ParameterDirection.Input)] string @COUKLegalType, [Parameter("COUKCompanyID", "varchar", ParameterDirection.Input)] string @COUKCompanyID, [Parameter("COUKRegisteredfor", "varchar", ParameterDirection.Input)] string @COUKRegisteredfor, [Parameter("COUKRegOptOut", "varchar", ParameterDirection.Input)] string @COUKRegOptOut, [Parameter("ORGUKLegalType", "varchar", ParameterDirection.Input)] string @ORGUKLegalType, [Parameter("ORGUKCompanyID", "varchar", ParameterDirection.Input)] string @ORGUKCompanyID, [Parameter("ORGUKRegisteredfor", "varchar", ParameterDirection.Input)] string @ORGUKRegisteredfor, [Parameter("ORGUKRegOptOut", "varchar", ParameterDirection.Input)] string @ORGUKRegOptOut, [Parameter("MEUKLegalType", "varchar", ParameterDirection.Input)] string @MEUKLegalType, [Parameter("MEUKCompanyID", "varchar", ParameterDirection.Input)] string @MEUKCompanyID, [Parameter("MEUKRegisteredfor", "varchar", ParameterDirection.Input)] string @MEUKRegisteredfor, [Parameter("MEUKRegOptOut", "varchar", ParameterDirection.Input)] string @MEUKRegOptOut, [Parameter("FRLegalType", "varchar", ParameterDirection.Input)] string @FRLegalType, [Parameter("FRRegistrantBirthdate", "datetime", ParameterDirection.Input)] DateTime? @FRRegistrantBirthdate, [Parameter("FRRegistrantBirthPlace", "varchar", ParameterDirection.Input)] string @FRRegistrantBirthPlace, [Parameter("FRRegistrantLegalId", "varchar", ParameterDirection.Input)] string @FRRegistrantLegalId, [Parameter("FRRegistrantDunsNumber", "varchar", ParameterDirection.Input)] string @FRRegistrantDunsNumber, [Parameter("FRRegistrantLocalId", "varchar", ParameterDirection.Input)] string @FRRegistrantLocalId, [Parameter("FRRegistrantJoDateDec", "datetime", ParameterDirection.Input)] DateTime? @FRRegistrantJoDateDec, [Parameter("FRRegistrantJoDatePub", "datetime", ParameterDirection.Input)] DateTime? @FRRegistrantJoDatePub, [Parameter("FRRegistrantJoNumber", "varchar", ParameterDirection.Input)] string @FRRegistrantJoNumber, [Parameter("FRRegistrantJoPage", "varchar", ParameterDirection.Input)] string @FRRegistrantJoPage, [Parameter("FRRegistrantTradeNumber", "varchar", ParameterDirection.Input)] string @FRRegistrantTradeNumber);
		[Procedure("USP_API_UPDATE_DOMAIN_PURCHASE_ORDER", "dbo")] public abstract void USP_API_UPDATE_DOMAIN_PURCHASE_ORDER([Parameter("IsActionSuccess", "bit", ParameterDirection.Input)] bool? @IsActionSuccess, [Parameter("ErrInfo", "varchar", ParameterDirection.Input)] string @ErrInfo, [Parameter("OrderID", "int", ParameterDirection.Input)] int? @OrderID, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("USP_API_UPDATE_DOMAIN_RENEW_ORDER", "dbo")] public abstract void USP_API_UPDATE_DOMAIN_RENEW_ORDER([Parameter("IsActionSuccess", "bit", ParameterDirection.Input)] bool? @IsActionSuccess, [Parameter("ErrInfo", "varchar", ParameterDirection.Input)] string @ErrInfo, [Parameter("OrderID", "int", ParameterDirection.Input)] int? @OrderID, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("USP_API_UPDATE_EMAIL", "dbo")] public abstract void USP_API_UPDATE_EMAIL([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("resetcode", "nvarchar", ParameterDirection.Input)] string @resetcode, [Parameter("Ip", "varchar", ParameterDirection.Input)] string @Ip);
		[Procedure("USP_API_UPDATE_RESET_EMAIL", "dbo")] public abstract void USP_API_UPDATE_RESET_EMAIL([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("emailKey", "varchar", ParameterDirection.Input)] string @emailKey, [Parameter("email", "varchar", ParameterDirection.Input)] string @email);
		[Procedure("USP_API_UPDATE_STATUS_FOR_REQUEST_FUNDS", "dbo")] public abstract void USP_API_UPDATE_STATUS_FOR_REQUEST_FUNDS([Parameter("tokenId", "varchar", ParameterDirection.Input)] string @tokenId);
		[Procedure("USP_API_UPDATE_TRANSFER_STATUS", "dbo")] public abstract void USP_API_UPDATE_TRANSFER_STATUS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("TransferID", "int", ParameterDirection.Input)] int? @TransferID, [Parameter("StatusID", "int", ParameterDirection.Input)] int? @StatusID, [Parameter("StatusDesc", "nvarchar", ParameterDirection.Input)] string @StatusDesc);
		[Procedure("USP_API_UPDATE_USER", "dbo")] public abstract void USP_API_UPDATE_USER([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ClientIp", "varchar", ParameterDirection.Input)] string @ClientIp, [Parameter("Email", "varchar", ParameterDirection.Input)] string @Email, [Parameter("FirstName", "varchar", ParameterDirection.Input)] string @FirstName, [Parameter("LastName", "varchar", ParameterDirection.Input)] string @LastName, [Parameter("JobTitle", "varchar", ParameterDirection.Input)] string @JobTitle, [Parameter("Organization", "varchar", ParameterDirection.Input)] string @Organization, [Parameter("StreetAddress", "varchar", ParameterDirection.Input)] string @StreetAddress, [Parameter("StreetAddress2", "varchar", ParameterDirection.Input)] string @StreetAddress2, [Parameter("City", "varchar", ParameterDirection.Input)] string @City, [Parameter("State", "varchar", ParameterDirection.Input)] string @State, [Parameter("Zip", "varchar", ParameterDirection.Input)] string @Zip, [Parameter("Country", "varchar", ParameterDirection.Input)] string @Country, [Parameter("Phone", "varchar", ParameterDirection.Input)] string @Phone, [Parameter("PhoneExt", "varchar", ParameterDirection.Input)] string @PhoneExt, [Parameter("Fax", "varchar", ParameterDirection.Input)] string @Fax);
		[Procedure("USP_API_UPDATE_USER_ADDRESS", "dbo")] public abstract void USP_API_UPDATE_USER_ADDRESS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("AddressName", "varchar", ParameterDirection.Input)] string @AddressName, [Parameter("DefaultYN", "bit", ParameterDirection.Input)] bool? @DefaultYN, [Parameter("FirstName", "nvarchar", ParameterDirection.Input)] string @FirstName, [Parameter("LastName", "nvarchar", ParameterDirection.Input)] string @LastName, [Parameter("JobTitle", "nvarchar", ParameterDirection.Input)] string @JobTitle, [Parameter("Organization", "nvarchar", ParameterDirection.Input)] string @Organization, [Parameter("StreetAddress", "nvarchar", ParameterDirection.Input)] string @StreetAddress, [Parameter("Address2", "nvarchar", ParameterDirection.Input)] string @Address2, [Parameter("City", "nvarchar", ParameterDirection.Input)] string @City, [Parameter("State", "nvarchar", ParameterDirection.Input)] string @State, [Parameter("StateProvince", "nvarchar", ParameterDirection.Input)] string @StateProvince, [Parameter("Zip", "nvarchar", ParameterDirection.Input)] string @Zip, [Parameter("Country", "nvarchar", ParameterDirection.Input)] string @Country, [Parameter("Phone", "nvarchar", ParameterDirection.Input)] string @Phone, [Parameter("Fax", "nvarchar", ParameterDirection.Input)] string @Fax, [Parameter("PhoneExt", "nvarchar", ParameterDirection.Input)] string @PhoneExt, [Parameter("Email", "nvarchar", ParameterDirection.Input)] string @Email, [Parameter("AddressId", "numeric", ParameterDirection.Input)] decimal? @AddressId);
		[Procedure("USP_API_USER_CREATE_CHECK_EMAIL_FOR_DUPLICATE", "dbo")] public abstract void USP_API_USER_CREATE_CHECK_EMAIL_FOR_DUPLICATE([Parameter("Email", "nvarchar", ParameterDirection.Input)] string @Email);
		[Procedure("USP_API_USER_HAS_DOMAIN_ACCESS", "dbo")] public abstract void USP_API_USER_HAS_DOMAIN_ACCESS([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_API_USER_HAS_DOMAINS_ACCESS", "dbo")] public abstract void USP_API_USER_HAS_DOMAINS_ACCESS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("DomainList", "nvarchar", ParameterDirection.Input)] string @DomainList);
		[Procedure("USP_API_VALIDATE_FOR_RESET_PASSWORD", "dbo")] public abstract void USP_API_VALIDATE_FOR_RESET_PASSWORD([Parameter("FindBy", "varchar", ParameterDirection.Input)] string @FindBy, [Parameter("FindByValue", "nvarchar", ParameterDirection.Input)] string @FindByValue);
		[Procedure("USP_API_VALIDATE_USER_CREDENTIALS", "dbo")] public abstract void USP_API_VALIDATE_USER_CREDENTIALS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("password", "varchar", ParameterDirection.Input)] string @password, [Parameter("passwordNoCase", "varchar", ParameterDirection.Input)] string @passwordNoCase, [Parameter("loginIp", "varchar", ParameterDirection.Input)] string @loginIp, [Parameter("loginFrom", "varchar", ParameterDirection.Input)] string @loginFrom, [Parameter("isMasterPasswordMatch", "bit", ParameterDirection.Input)] bool? @isMasterPasswordMatch, [Parameter("kayakologin", "bit", ParameterDirection.Input)] bool? @kayakologin, [Parameter("isExternalLogin", "bit", ParameterDirection.Input)] bool? @isExternalLogin);
		[Procedure("USP_API_VALIDATE_USERNAME_AND_AUTHORIZE_APIUSER", "dbo")] public abstract void USP_API_VALIDATE_USERNAME_AND_AUTHORIZE_APIUSER([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ApiUser", "nvarchar", ParameterDirection.Input)] string @ApiUser);
		[Procedure("USP_API_WHOIGUARD_GET_MAXYEARS_OF_QUANTITY", "dbo")] public abstract void USP_API_WHOIGUARD_GET_MAXYEARS_OF_QUANTITY([Parameter("productName", "varchar", ParameterDirection.Input)] string @productName);
		[Procedure("USP_API_WHOISGUARD_ADD_WITH_ADDRESS_OPTIONAL", "dbo")] public abstract void USP_API_WHOISGUARD_ADD_WITH_ADDRESS_OPTIONAL([Parameter("IPV_UserName", "nvarchar", ParameterDirection.Input)] string @IPV_UserName, [Parameter("IPI_Num_Years", "tinyint", ParameterDirection.Input)] byte? @IPI_Num_Years, [Parameter("EnableWG", "bit", ParameterDirection.Input)] bool? @EnableWG, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("AssociatedOrderId", "numeric", ParameterDirection.Input)] decimal? @AssociatedOrderId, [Parameter("AssociatedOrderItemId", "numeric", ParameterDirection.Input)] decimal? @AssociatedOrderItemId, [Parameter("IPV_Action_ID", "varchar", ParameterDirection.Input)] string @IPV_Action_ID, [Parameter("IPV_WGEmailId", "nvarchar", ParameterDirection.Input)] string @IPV_WGEmailId, [Parameter("RegistrantFirstName", "nvarchar", ParameterDirection.Input)] string @RegistrantFirstName, [Parameter("RegistrantLastName", "nvarchar", ParameterDirection.Input)] string @RegistrantLastName, [Parameter("RegistrantJobTitle", "nvarchar", ParameterDirection.Input)] string @RegistrantJobTitle, [Parameter("RegistrantOrganizationName", "nvarchar", ParameterDirection.Input)] string @RegistrantOrganizationName, [Parameter("RegistrantAddress1", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress1, [Parameter("RegistrantAddress2", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress2, [Parameter("RegistrantCity", "nvarchar", ParameterDirection.Input)] string @RegistrantCity, [Parameter("RegistrantStateProvince", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvince, [Parameter("RegistrantStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvinceChoice, [Parameter("RegistrantPostalCode", "nvarchar", ParameterDirection.Input)] string @RegistrantPostalCode, [Parameter("RegistrantCountry", "nvarchar", ParameterDirection.Input)] string @RegistrantCountry, [Parameter("RegistrantPhone", "nvarchar", ParameterDirection.Input)] string @RegistrantPhone, [Parameter("RegistrantFax", "nvarchar", ParameterDirection.Input)] string @RegistrantFax, [Parameter("RegistrantEmailAddress", "nvarchar", ParameterDirection.Input)] string @RegistrantEmailAddress, [Parameter("AdminFirstName", "nvarchar", ParameterDirection.Input)] string @AdminFirstName, [Parameter("AdminLastName", "nvarchar", ParameterDirection.Input)] string @AdminLastName, [Parameter("AdminJobTitle", "nvarchar", ParameterDirection.Input)] string @AdminJobTitle, [Parameter("AdminOrganizationName", "nvarchar", ParameterDirection.Input)] string @AdminOrganizationName, [Parameter("AdminAddress1", "nvarchar", ParameterDirection.Input)] string @AdminAddress1, [Parameter("AdminAddress2", "nvarchar", ParameterDirection.Input)] string @AdminAddress2, [Parameter("AdminCity", "nvarchar", ParameterDirection.Input)] string @AdminCity, [Parameter("AdminStateProvince", "nvarchar", ParameterDirection.Input)] string @AdminStateProvince, [Parameter("AdminStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AdminStateProvinceChoice, [Parameter("AdminPostalCode", "nvarchar", ParameterDirection.Input)] string @AdminPostalCode, [Parameter("AdminCountry", "nvarchar", ParameterDirection.Input)] string @AdminCountry, [Parameter("AdminPhone", "nvarchar", ParameterDirection.Input)] string @AdminPhone, [Parameter("AdminFax", "nvarchar", ParameterDirection.Input)] string @AdminFax, [Parameter("AdminEmailAddress", "nvarchar", ParameterDirection.Input)] string @AdminEmailAddress, [Parameter("TechFirstName", "nvarchar", ParameterDirection.Input)] string @TechFirstName, [Parameter("TechLastName", "nvarchar", ParameterDirection.Input)] string @TechLastName, [Parameter("TechJobTitle", "nvarchar", ParameterDirection.Input)] string @TechJobTitle, [Parameter("TechOrganizationName", "nvarchar", ParameterDirection.Input)] string @TechOrganizationName, [Parameter("TechAddress1", "nvarchar", ParameterDirection.Input)] string @TechAddress1, [Parameter("TechAddress2", "nvarchar", ParameterDirection.Input)] string @TechAddress2, [Parameter("TechCity", "nvarchar", ParameterDirection.Input)] string @TechCity, [Parameter("TechStateProvince", "nvarchar", ParameterDirection.Input)] string @TechStateProvince, [Parameter("TechStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @TechStateProvinceChoice, [Parameter("TechPostalCode", "nvarchar", ParameterDirection.Input)] string @TechPostalCode, [Parameter("TechCountry", "nvarchar", ParameterDirection.Input)] string @TechCountry, [Parameter("TechPhone", "nvarchar", ParameterDirection.Input)] string @TechPhone, [Parameter("TechFax", "nvarchar", ParameterDirection.Input)] string @TechFax, [Parameter("TechEmailAddress", "nvarchar", ParameterDirection.Input)] string @TechEmailAddress, [Parameter("AuxBillingFirstName", "nvarchar", ParameterDirection.Input)] string @AuxBillingFirstName, [Parameter("AuxBillingLastName", "nvarchar", ParameterDirection.Input)] string @AuxBillingLastName, [Parameter("AuxBillingJobTitle", "nvarchar", ParameterDirection.Input)] string @AuxBillingJobTitle, [Parameter("AuxBillingOrganizationName", "nvarchar", ParameterDirection.Input)] string @AuxBillingOrganizationName, [Parameter("AuxBillingAddress1", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress1, [Parameter("AuxBillingAddress2", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress2, [Parameter("AuxBillingCity", "nvarchar", ParameterDirection.Input)] string @AuxBillingCity, [Parameter("AuxBillingStateProvince", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvince, [Parameter("AuxBillingStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvinceChoice, [Parameter("AuxBillingPostalCode", "nvarchar", ParameterDirection.Input)] string @AuxBillingPostalCode, [Parameter("AuxBillingCountry", "nvarchar", ParameterDirection.Input)] string @AuxBillingCountry, [Parameter("AuxBillingPhone", "nvarchar", ParameterDirection.Input)] string @AuxBillingPhone, [Parameter("AuxBillingFax", "nvarchar", ParameterDirection.Input)] string @AuxBillingFax, [Parameter("AuxBillingEmailAddress", "nvarchar", ParameterDirection.Input)] string @AuxBillingEmailAddress, [Parameter("RegistrantPhoneext", "nvarchar", ParameterDirection.Input)] string @RegistrantPhoneext, [Parameter("AdminPhoneext", "nvarchar", ParameterDirection.Input)] string @AdminPhoneext, [Parameter("TechPhoneext", "nvarchar", ParameterDirection.Input)] string @TechPhoneext, [Parameter("AuxBillingPhoneext", "nvarchar", ParameterDirection.Input)] string @AuxBillingPhoneext, [Parameter("RegistrantNexus", "nvarchar", ParameterDirection.Input)] string @RegistrantNexus, [Parameter("RegistrantNexusCountry", "nvarchar", ParameterDirection.Input)] string @RegistrantNexusCountry, [Parameter("RegistrantPurpose", "nvarchar", ParameterDirection.Input)] string @RegistrantPurpose, [Parameter("COUKLegalType", "nvarchar", ParameterDirection.Input)] string @COUKLegalType, [Parameter("COUKCompanyID", "nvarchar", ParameterDirection.Input)] string @COUKCompanyID, [Parameter("COUKRegisteredFor", "nvarchar", ParameterDirection.Input)] string @COUKRegisteredFor, [Parameter("COUKRegOptOut", "nvarchar", ParameterDirection.Input)] string @COUKRegOptOut, [Parameter("ORGUKLegalType", "nvarchar", ParameterDirection.Input)] string @ORGUKLegalType, [Parameter("ORGUKCompanyID", "nvarchar", ParameterDirection.Input)] string @ORGUKCompanyID, [Parameter("ORGUKRegisteredFor", "nvarchar", ParameterDirection.Input)] string @ORGUKRegisteredFor, [Parameter("ORGUKRegOptOut", "nvarchar", ParameterDirection.Input)] string @ORGUKRegOptOut, [Parameter("MEUKLegalType", "nvarchar", ParameterDirection.Input)] string @MEUKLegalType, [Parameter("MEUKCompanyID", "nvarchar", ParameterDirection.Input)] string @MEUKCompanyID, [Parameter("MEUKRegisteredFor", "nvarchar", ParameterDirection.Input)] string @MEUKRegisteredFor, [Parameter("MEUKRegOptOut", "nvarchar", ParameterDirection.Input)] string @MEUKRegOptOut, [Parameter("CACIRALegalType", "varchar", ParameterDirection.Input)] string @CACIRALegalType, [Parameter("CACIRAWhoisDisplay", "varchar", ParameterDirection.Input)] string @CACIRAWhoisDisplay, [Parameter("CACIRAAgreementVersion", "varchar", ParameterDirection.Input)] string @CACIRAAgreementVersion, [Parameter("CACIRAAgreementValue", "varchar", ParameterDirection.Input)] string @CACIRAAgreementValue, [Parameter("CACIRALanguage", "varchar", ParameterDirection.Input)] string @CACIRALanguage, [Parameter("ASIACCLocality", "varchar", ParameterDirection.Input)] string @ASIACCLocality, [Parameter("ASIALocalityCity", "nvarchar", ParameterDirection.Input)] string @ASIALocalityCity, [Parameter("ASIALocalitySP", "nvarchar", ParameterDirection.Input)] string @ASIALocalitySP, [Parameter("ASIALegalEntity", "varchar", ParameterDirection.Input)] string @ASIALegalEntity, [Parameter("ASIAIdentForm", "varchar", ParameterDirection.Input)] string @ASIAIdentForm, [Parameter("ASIAIdentNumber", "varchar", ParameterDirection.Input)] string @ASIAIdentNumber, [Parameter("ASIAOtherLeType", "varchar", ParameterDirection.Input)] string @ASIAOtherLeType, [Parameter("ASIAOtherIdentForm", "varchar", ParameterDirection.Input)] string @ASIAOtherIdentForm, [Parameter("EUAdrLang", "varchar", ParameterDirection.Input)] string @EUAdrLang, [Parameter("XXXMemberID", "varchar", ParameterDirection.Input)] string @XXXMemberID, [Parameter("XXXResolving", "bit", ParameterDirection.Input)] bool? @XXXResolving, [Parameter("FRLegalType", "varchar", ParameterDirection.Input)] string @FRLegalType, [Parameter("FRRegistrantBirthdate", "datetime", ParameterDirection.Input)] DateTime? @FRRegistrantBirthdate, [Parameter("FRRegistrantBirthPlace", "varchar", ParameterDirection.Input)] string @FRRegistrantBirthPlace, [Parameter("FRRegistrantLegalId", "varchar", ParameterDirection.Input)] string @FRRegistrantLegalId, [Parameter("FRRegistrantDunsNumber", "varchar", ParameterDirection.Input)] string @FRRegistrantDunsNumber, [Parameter("FRRegistrantLocalId", "varchar", ParameterDirection.Input)] string @FRRegistrantLocalId, [Parameter("FRRegistrantJoDateDec", "datetime", ParameterDirection.Input)] DateTime? @FRRegistrantJoDateDec, [Parameter("FRRegistrantJoDatePub", "datetime", ParameterDirection.Input)] DateTime? @FRRegistrantJoDatePub, [Parameter("FRRegistrantJoNumber", "varchar", ParameterDirection.Input)] string @FRRegistrantJoNumber, [Parameter("FRRegistrantJoPage", "varchar", ParameterDirection.Input)] string @FRRegistrantJoPage, [Parameter("FRRegistrantTradeNumber", "varchar", ParameterDirection.Input)] string @FRRegistrantTradeNumber);
		[Procedure("USP_API_WHOISGUARD_ALLOT", "dbo")] public abstract void USP_API_WHOISGUARD_ALLOT([Parameter("nWGID", "numeric", ParameterDirection.Input)] decimal? @nWGID, [Parameter("sDomain", "nvarchar", ParameterDirection.Input)] string @sDomain, [Parameter("ForwardToEmail", "nvarchar", ParameterDirection.Input)] string @ForwardToEmail, [Parameter("RegistrantFirstName", "nvarchar", ParameterDirection.Input)] string @RegistrantFirstName, [Parameter("RegistrantLastName", "nvarchar", ParameterDirection.Input)] string @RegistrantLastName, [Parameter("RegistrantJobTitle", "nvarchar", ParameterDirection.Input)] string @RegistrantJobTitle, [Parameter("RegistrantOrganizationName", "nvarchar", ParameterDirection.Input)] string @RegistrantOrganizationName, [Parameter("RegistrantAddress1", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress1, [Parameter("RegistrantAddress2", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress2, [Parameter("RegistrantCity", "nvarchar", ParameterDirection.Input)] string @RegistrantCity, [Parameter("RegistrantStateProvince", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvince, [Parameter("RegistrantStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvinceChoice, [Parameter("RegistrantPostalCode", "nvarchar", ParameterDirection.Input)] string @RegistrantPostalCode, [Parameter("RegistrantCountry", "nvarchar", ParameterDirection.Input)] string @RegistrantCountry, [Parameter("RegistrantPhone", "nvarchar", ParameterDirection.Input)] string @RegistrantPhone, [Parameter("RegistrantFax", "nvarchar", ParameterDirection.Input)] string @RegistrantFax, [Parameter("RegistrantEmailAddress", "nvarchar", ParameterDirection.Input)] string @RegistrantEmailAddress, [Parameter("AdminFirstName", "nvarchar", ParameterDirection.Input)] string @AdminFirstName, [Parameter("AdminLastName", "nvarchar", ParameterDirection.Input)] string @AdminLastName, [Parameter("AdminJobTitle", "nvarchar", ParameterDirection.Input)] string @AdminJobTitle, [Parameter("AdminOrganizationName", "nvarchar", ParameterDirection.Input)] string @AdminOrganizationName, [Parameter("AdminAddress1", "nvarchar", ParameterDirection.Input)] string @AdminAddress1, [Parameter("AdminAddress2", "nvarchar", ParameterDirection.Input)] string @AdminAddress2, [Parameter("AdminCity", "nvarchar", ParameterDirection.Input)] string @AdminCity, [Parameter("AdminStateProvince", "nvarchar", ParameterDirection.Input)] string @AdminStateProvince, [Parameter("AdminStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AdminStateProvinceChoice, [Parameter("AdminPostalCode", "nvarchar", ParameterDirection.Input)] string @AdminPostalCode, [Parameter("AdminCountry", "nvarchar", ParameterDirection.Input)] string @AdminCountry, [Parameter("AdminPhone", "nvarchar", ParameterDirection.Input)] string @AdminPhone, [Parameter("AdminFax", "nvarchar", ParameterDirection.Input)] string @AdminFax, [Parameter("AdminEmailAddress", "nvarchar", ParameterDirection.Input)] string @AdminEmailAddress, [Parameter("TechFirstName", "nvarchar", ParameterDirection.Input)] string @TechFirstName, [Parameter("TechLastName", "nvarchar", ParameterDirection.Input)] string @TechLastName, [Parameter("TechJobTitle", "nvarchar", ParameterDirection.Input)] string @TechJobTitle, [Parameter("TechOrganizationName", "nvarchar", ParameterDirection.Input)] string @TechOrganizationName, [Parameter("TechAddress1", "nvarchar", ParameterDirection.Input)] string @TechAddress1, [Parameter("TechAddress2", "nvarchar", ParameterDirection.Input)] string @TechAddress2, [Parameter("TechCity", "nvarchar", ParameterDirection.Input)] string @TechCity, [Parameter("TechStateProvince", "nvarchar", ParameterDirection.Input)] string @TechStateProvince, [Parameter("TechStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @TechStateProvinceChoice, [Parameter("TechPostalCode", "nvarchar", ParameterDirection.Input)] string @TechPostalCode, [Parameter("TechCountry", "nvarchar", ParameterDirection.Input)] string @TechCountry, [Parameter("TechPhone", "nvarchar", ParameterDirection.Input)] string @TechPhone, [Parameter("TechFax", "nvarchar", ParameterDirection.Input)] string @TechFax, [Parameter("TechEmailAddress", "nvarchar", ParameterDirection.Input)] string @TechEmailAddress, [Parameter("AuxBillingFirstName", "nvarchar", ParameterDirection.Input)] string @AuxBillingFirstName, [Parameter("AuxBillingLastName", "nvarchar", ParameterDirection.Input)] string @AuxBillingLastName, [Parameter("AuxBillingJobTitle", "nvarchar", ParameterDirection.Input)] string @AuxBillingJobTitle, [Parameter("AuxBillingOrganizationName", "nvarchar", ParameterDirection.Input)] string @AuxBillingOrganizationName, [Parameter("AuxBillingAddress1", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress1, [Parameter("AuxBillingAddress2", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress2, [Parameter("AuxBillingCity", "nvarchar", ParameterDirection.Input)] string @AuxBillingCity, [Parameter("AuxBillingStateProvince", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvince, [Parameter("AuxBillingStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvinceChoice, [Parameter("AuxBillingPostalCode", "nvarchar", ParameterDirection.Input)] string @AuxBillingPostalCode, [Parameter("AuxBillingCountry", "nvarchar", ParameterDirection.Input)] string @AuxBillingCountry, [Parameter("AuxBillingPhone", "nvarchar", ParameterDirection.Input)] string @AuxBillingPhone, [Parameter("AuxBillingFax", "nvarchar", ParameterDirection.Input)] string @AuxBillingFax, [Parameter("AuxBillingEmailAddress", "nvarchar", ParameterDirection.Input)] string @AuxBillingEmailAddress, [Parameter("RegistrantNexus", "nvarchar", ParameterDirection.Input)] string @RegistrantNexus, [Parameter("RegistrantNexusCountry", "nvarchar", ParameterDirection.Input)] string @RegistrantNexusCountry, [Parameter("RegistrantPurpose", "nvarchar", ParameterDirection.Input)] string @RegistrantPurpose, [Parameter("CIRALegalType", "nvarchar", ParameterDirection.Input)] string @CIRALegalType, [Parameter("COUKLegalType", "nvarchar", ParameterDirection.Input)] string @COUKLegalType, [Parameter("COUKCompanyID", "nvarchar", ParameterDirection.Input)] string @COUKCompanyID, [Parameter("ORGUKLegalType", "nvarchar", ParameterDirection.Input)] string @ORGUKLegalType, [Parameter("ORGUKCompanyID", "nvarchar", ParameterDirection.Input)] string @ORGUKCompanyID, [Parameter("RegistrantPhoneext", "nvarchar", ParameterDirection.Input)] string @RegistrantPhoneext, [Parameter("AdminPhoneext", "nvarchar", ParameterDirection.Input)] string @AdminPhoneext, [Parameter("TechPhoneext", "nvarchar", ParameterDirection.Input)] string @TechPhoneext, [Parameter("AuxBillingPhoneext", "nvarchar", ParameterDirection.Input)] string @AuxBillingPhoneext, [Parameter("COUKRegisteredFor", "nvarchar", ParameterDirection.Input)] string @COUKRegisteredFor, [Parameter("COUKRegOptOut", "nvarchar", ParameterDirection.Input)] string @COUKRegOptOut, [Parameter("ORGUKRegisteredFor", "nvarchar", ParameterDirection.Input)] string @ORGUKRegisteredFor, [Parameter("ORGUKRegOptOut", "nvarchar", ParameterDirection.Input)] string @ORGUKRegOptOut, [Parameter("EUAdrLang", "varchar", ParameterDirection.Input)] string @EUAdrLang, [Parameter("MEUKLegalType", "nvarchar", ParameterDirection.Input)] string @MEUKLegalType, [Parameter("MEUKCompanyID", "nvarchar", ParameterDirection.Input)] string @MEUKCompanyID, [Parameter("MEUKRegisteredFor", "nvarchar", ParameterDirection.Input)] string @MEUKRegisteredFor, [Parameter("MEUKRegOptOut", "nvarchar", ParameterDirection.Input)] string @MEUKRegOptOut, [Parameter("CIRARegistrant", "varchar", ParameterDirection.Input)] string @CIRARegistrant, [Parameter("CIRARegistrantDesc", "varchar", ParameterDirection.Input)] string @CIRARegistrantDesc, [Parameter("CIRATrademarkNo", "varchar", ParameterDirection.Input)] string @CIRATrademarkNo, [Parameter("CIRAOrgRegisteredIn", "varchar", ParameterDirection.Input)] string @CIRAOrgRegisteredIn);
		[Procedure("USP_API_WHOISGUARD_CHECK_AVAILABLITY", "dbo")] public abstract void USP_API_WHOISGUARD_CHECK_AVAILABLITY([Parameter("whoisguardId", "int", ParameterDirection.Input)] int? @whoisguardId, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("USP_API_WHOISGUARD_DISCARD", "dbo")] public abstract void USP_API_WHOISGUARD_DISCARD([Parameter("whoisguardId", "int", ParameterDirection.Input)] int? @whoisguardId);
		[Procedure("USP_API_WHOISGUARD_GET_ASSOCIATE_EMAIL", "dbo")] public abstract void USP_API_WHOISGUARD_GET_ASSOCIATE_EMAIL([Parameter("slotId", "numeric", ParameterDirection.Input)] decimal? @slotId);
		[Procedure("USP_API_WHOISGUARD_GET_INFO", "dbo")] public abstract void USP_API_WHOISGUARD_GET_INFO([Parameter("whoisguardId", "int", ParameterDirection.Input)] int? @whoisguardId);
		[Procedure("USP_API_WHOISGUARD_GET_ITEMS", "dbo")] public abstract void USP_API_WHOISGUARD_GET_ITEMS([Parameter("productName", "varchar", ParameterDirection.Input)] string @productName);
		[Procedure("USP_API_WHOISGUARD_LOG_RENEW", "dbo")] public abstract void USP_API_WHOISGUARD_LOG_RENEW([Parameter("actionSuccess", "bit", ParameterDirection.Input)] bool? @actionSuccess, [Parameter("errInfo", "nvarchar", ParameterDirection.Input)] string @errInfo, [Parameter("regId", "varchar", ParameterDirection.Input)] string @regId, [Parameter("sld", "nvarchar", ParameterDirection.Input)] string @sld, [Parameter("tld", "nvarchar", ParameterDirection.Input)] string @tld, [Parameter("actionId", "nvarchar", ParameterDirection.Input)] string @actionId, [Parameter("registrarRawData", "text", ParameterDirection.Input)] string @registrarRawData, [Parameter("orderId", "int", ParameterDirection.Input)] int? @orderId);
		[Procedure("USP_API_WHOISGUARD_PURCHASE_AND_AUTOMATIC_ENABLE", "dbo")] public abstract void USP_API_WHOISGUARD_PURCHASE_AND_AUTOMATIC_ENABLE([Parameter("IPV_UserName", "nvarchar", ParameterDirection.Input)] string @IPV_UserName, [Parameter("IPI_Num_Years", "tinyint", ParameterDirection.Input)] byte? @IPI_Num_Years, [Parameter("IPV_Option1", "nvarchar", ParameterDirection.Input)] string @IPV_Option1, [Parameter("IPV_Option2", "nvarchar", ParameterDirection.Input)] string @IPV_Option2, [Parameter("IPV_BatchId", "varchar", ParameterDirection.Input)] string @IPV_BatchId, [Parameter("IPV_ID", "nvarchar", ParameterDirection.Input)] string @IPV_ID, [Parameter("IPV_Action_ID", "varchar", ParameterDirection.Input)] string @IPV_Action_ID, [Parameter("IPV_WGEmailId", "nvarchar", ParameterDirection.Input)] string @IPV_WGEmailId, [Parameter("RegistrantFirstName", "nvarchar", ParameterDirection.Input)] string @RegistrantFirstName, [Parameter("RegistrantLastName", "nvarchar", ParameterDirection.Input)] string @RegistrantLastName, [Parameter("RegistrantJobTitle", "nvarchar", ParameterDirection.Input)] string @RegistrantJobTitle, [Parameter("RegistrantOrganizationName", "nvarchar", ParameterDirection.Input)] string @RegistrantOrganizationName, [Parameter("RegistrantAddress1", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress1, [Parameter("RegistrantAddress2", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress2, [Parameter("RegistrantCity", "nvarchar", ParameterDirection.Input)] string @RegistrantCity, [Parameter("RegistrantStateProvince", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvince, [Parameter("RegistrantStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvinceChoice, [Parameter("RegistrantPostalCode", "nvarchar", ParameterDirection.Input)] string @RegistrantPostalCode, [Parameter("RegistrantCountry", "nvarchar", ParameterDirection.Input)] string @RegistrantCountry, [Parameter("RegistrantPhone", "nvarchar", ParameterDirection.Input)] string @RegistrantPhone, [Parameter("RegistrantFax", "nvarchar", ParameterDirection.Input)] string @RegistrantFax, [Parameter("RegistrantEmailAddress", "nvarchar", ParameterDirection.Input)] string @RegistrantEmailAddress, [Parameter("AdminFirstName", "nvarchar", ParameterDirection.Input)] string @AdminFirstName, [Parameter("AdminLastName", "nvarchar", ParameterDirection.Input)] string @AdminLastName, [Parameter("AdminJobTitle", "nvarchar", ParameterDirection.Input)] string @AdminJobTitle, [Parameter("AdminOrganizationName", "nvarchar", ParameterDirection.Input)] string @AdminOrganizationName, [Parameter("AdminAddress1", "nvarchar", ParameterDirection.Input)] string @AdminAddress1, [Parameter("AdminAddress2", "nvarchar", ParameterDirection.Input)] string @AdminAddress2, [Parameter("AdminCity", "nvarchar", ParameterDirection.Input)] string @AdminCity, [Parameter("AdminStateProvince", "nvarchar", ParameterDirection.Input)] string @AdminStateProvince, [Parameter("AdminStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AdminStateProvinceChoice, [Parameter("AdminPostalCode", "nvarchar", ParameterDirection.Input)] string @AdminPostalCode, [Parameter("AdminCountry", "nvarchar", ParameterDirection.Input)] string @AdminCountry, [Parameter("AdminPhone", "nvarchar", ParameterDirection.Input)] string @AdminPhone, [Parameter("AdminFax", "nvarchar", ParameterDirection.Input)] string @AdminFax, [Parameter("AdminEmailAddress", "nvarchar", ParameterDirection.Input)] string @AdminEmailAddress, [Parameter("TechFirstName", "nvarchar", ParameterDirection.Input)] string @TechFirstName, [Parameter("TechLastName", "nvarchar", ParameterDirection.Input)] string @TechLastName, [Parameter("TechJobTitle", "nvarchar", ParameterDirection.Input)] string @TechJobTitle, [Parameter("TechOrganizationName", "nvarchar", ParameterDirection.Input)] string @TechOrganizationName, [Parameter("TechAddress1", "nvarchar", ParameterDirection.Input)] string @TechAddress1, [Parameter("TechAddress2", "nvarchar", ParameterDirection.Input)] string @TechAddress2, [Parameter("TechCity", "nvarchar", ParameterDirection.Input)] string @TechCity, [Parameter("TechStateProvince", "nvarchar", ParameterDirection.Input)] string @TechStateProvince, [Parameter("TechStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @TechStateProvinceChoice, [Parameter("TechPostalCode", "nvarchar", ParameterDirection.Input)] string @TechPostalCode, [Parameter("TechCountry", "nvarchar", ParameterDirection.Input)] string @TechCountry, [Parameter("TechPhone", "nvarchar", ParameterDirection.Input)] string @TechPhone, [Parameter("TechFax", "nvarchar", ParameterDirection.Input)] string @TechFax, [Parameter("TechEmailAddress", "nvarchar", ParameterDirection.Input)] string @TechEmailAddress, [Parameter("AuxBillingFirstName", "nvarchar", ParameterDirection.Input)] string @AuxBillingFirstName, [Parameter("AuxBillingLastName", "nvarchar", ParameterDirection.Input)] string @AuxBillingLastName, [Parameter("AuxBillingJobTitle", "nvarchar", ParameterDirection.Input)] string @AuxBillingJobTitle, [Parameter("AuxBillingOrganizationName", "nvarchar", ParameterDirection.Input)] string @AuxBillingOrganizationName, [Parameter("AuxBillingAddress1", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress1, [Parameter("AuxBillingAddress2", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress2, [Parameter("AuxBillingCity", "nvarchar", ParameterDirection.Input)] string @AuxBillingCity, [Parameter("AuxBillingStateProvince", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvince, [Parameter("AuxBillingStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvinceChoice, [Parameter("AuxBillingPostalCode", "nvarchar", ParameterDirection.Input)] string @AuxBillingPostalCode, [Parameter("AuxBillingCountry", "nvarchar", ParameterDirection.Input)] string @AuxBillingCountry, [Parameter("AuxBillingPhone", "nvarchar", ParameterDirection.Input)] string @AuxBillingPhone, [Parameter("AuxBillingFax", "nvarchar", ParameterDirection.Input)] string @AuxBillingFax, [Parameter("AuxBillingEmailAddress", "nvarchar", ParameterDirection.Input)] string @AuxBillingEmailAddress, [Parameter("RegistrantNexus", "nvarchar", ParameterDirection.Input)] string @RegistrantNexus, [Parameter("RegistrantNexusCountry", "nvarchar", ParameterDirection.Input)] string @RegistrantNexusCountry, [Parameter("RegistrantPurpose", "nvarchar", ParameterDirection.Input)] string @RegistrantPurpose, [Parameter("CIRALegalType", "nvarchar", ParameterDirection.Input)] string @CIRALegalType, [Parameter("COUKLegalType", "nvarchar", ParameterDirection.Input)] string @COUKLegalType, [Parameter("COUKCompanyID", "nvarchar", ParameterDirection.Input)] string @COUKCompanyID, [Parameter("ORGUKLegalType", "nvarchar", ParameterDirection.Input)] string @ORGUKLegalType, [Parameter("ORGUKCompanyID", "nvarchar", ParameterDirection.Input)] string @ORGUKCompanyID, [Parameter("RegistrantPhoneext", "nvarchar", ParameterDirection.Input)] string @RegistrantPhoneext, [Parameter("AdminPhoneext", "nvarchar", ParameterDirection.Input)] string @AdminPhoneext, [Parameter("TechPhoneext", "nvarchar", ParameterDirection.Input)] string @TechPhoneext, [Parameter("AuxBillingPhoneext", "nvarchar", ParameterDirection.Input)] string @AuxBillingPhoneext, [Parameter("COUKRegisteredFor", "nvarchar", ParameterDirection.Input)] string @COUKRegisteredFor, [Parameter("COUKRegOptOut", "nvarchar", ParameterDirection.Input)] string @COUKRegOptOut, [Parameter("ORGUKRegisteredFor", "nvarchar", ParameterDirection.Input)] string @ORGUKRegisteredFor, [Parameter("ORGUKRegOptOut", "nvarchar", ParameterDirection.Input)] string @ORGUKRegOptOut, [Parameter("EUAdrLang", "varchar", ParameterDirection.Input)] string @EUAdrLang, [Parameter("MEUKLegalType", "nvarchar", ParameterDirection.Input)] string @MEUKLegalType, [Parameter("MEUKCompanyID", "nvarchar", ParameterDirection.Input)] string @MEUKCompanyID, [Parameter("MEUKRegisteredFor", "nvarchar", ParameterDirection.Input)] string @MEUKRegisteredFor, [Parameter("MEUKRegOptOut", "nvarchar", ParameterDirection.Input)] string @MEUKRegOptOut, [Parameter("CIRARegistrant", "varchar", ParameterDirection.Input)] string @CIRARegistrant, [Parameter("CIRARegistrantDesc", "varchar", ParameterDirection.Input)] string @CIRARegistrantDesc, [Parameter("CIRATrademarkNo", "varchar", ParameterDirection.Input)] string @CIRATrademarkNo, [Parameter("CIRAOrgRegisteredIn", "varchar", ParameterDirection.Input)] string @CIRAOrgRegisteredIn);
		[Procedure("USP_API_WHOISGUARD_RENEW", "dbo")] public abstract void USP_API_WHOISGUARD_RENEW([Parameter("whoisguardId", "int", ParameterDirection.Input)] int? @whoisguardId, [Parameter("numOfYears", "tinyint", ParameterDirection.Input)] byte? @numOfYears);
		[Procedure("USP_API_WHOISGUARD_UPDATE_ASSOCIATED_EMAIL", "dbo")] public abstract void USP_API_WHOISGUARD_UPDATE_ASSOCIATED_EMAIL([Parameter("whoisguardId", "numeric", ParameterDirection.Input)] decimal? @whoisguardId, [Parameter("newEmailID", "varchar", ParameterDirection.Input)] string @newEmailID, [Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname);
		[Procedure("USP_API_WHOISGUARD_UPDATE_EMAIL_CHANGE_DUARATION", "dbo")] public abstract void USP_API_WHOISGUARD_UPDATE_EMAIL_CHANGE_DUARATION([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname, [Parameter("emailChangeDuration", "int", ParameterDirection.Input)] int? @emailChangeDuration);
		[Procedure("USP_API_WHOISGUARD_UPDATE_FORWARDED_EMAIL", "dbo")] public abstract void USP_API_WHOISGUARD_UPDATE_FORWARDED_EMAIL([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname, [Parameter("forwardedEmail", "nvarchar", ParameterDirection.Input)] string @forwardedEmail);
		[Procedure("USP_API_WHOISGUARD_UPDATE_STATUS", "dbo")] public abstract void USP_API_WHOISGUARD_UPDATE_STATUS([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("associate_domainId", "int", ParameterDirection.Input)] int? @associate_domainId, [Parameter("associate_Email_Forwarded_To", "nvarchar", ParameterDirection.Input)] string @associate_Email_Forwarded_To, [Parameter("isError", "bit", ParameterDirection.Input)] bool? @isError);
		[Procedure("USP_API_WHOISGUARD_UPDATE_STATUS_BY_DOMAIN", "dbo")] public abstract void USP_API_WHOISGUARD_UPDATE_STATUS_BY_DOMAIN([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname, [Parameter("forwardedTo", "nvarchar", ParameterDirection.Input)] string @forwardedTo, [Parameter("actionType", "varchar", ParameterDirection.Input)] string @actionType);
		[Procedure("usp_APICheckMeTLDOrderToRegisterInREProvider", "dbo")] public abstract void usp_APICheckMeTLDOrderToRegisterInREProvider([Parameter("orderId", "int", ParameterDirection.Input)] int? @orderId, [Parameter("orderItemId", "numeric", ParameterDirection.Input)] decimal? @orderItemId);
		[Procedure("usp_ApiDomainTransferUpdateErrInfo", "dbo")] public abstract void usp_ApiDomainTransferUpdateErrInfo([Parameter("transferID", "numeric", ParameterDirection.Input)] decimal? @transferID, [Parameter("errInfo", "varchar", ParameterDirection.Input)] string @errInfo);
		[Procedure("usp_ApiDomainTransferUpdateProviderOrderId", "dbo")] public abstract void usp_ApiDomainTransferUpdateProviderOrderId([Parameter("transferID", "numeric", ParameterDirection.Input)] decimal? @transferID, [Parameter("providerTransferOrderID", "nvarchar", ParameterDirection.Input)] string @providerTransferOrderID);
		[Procedure("Usp_ApiGetDomainRestrictedInfo", "dbo")] public abstract void Usp_ApiGetDomainRestrictedInfo([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("RestrictionName", "varchar", ParameterDirection.Input)] string @RestrictionName);
		[Procedure("Usp_ApiGetDomainRestrictedInfoList", "dbo")] public abstract void Usp_ApiGetDomainRestrictedInfoList([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("usp_ApiGetIsInternalRenewReactivate", "dbo")] public abstract void usp_ApiGetIsInternalRenewReactivate([Parameter("domainname", "varchar", ParameterDirection.Input)] string @domainname);
		[Procedure("usp_ApiGetUserInfo", "dbo")] public abstract void usp_ApiGetUserInfo([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_APITRANSFER_CANCEL_BYADMIN", "dbo")] public abstract void USP_APITRANSFER_CANCEL_BYADMIN([Parameter("TransferID", "int", ParameterDirection.Input)] int? @TransferID, [Parameter("AdminName", "nvarchar", ParameterDirection.Input)] string @AdminName, [Parameter("Refund", "bit", ParameterDirection.Input)] bool? @Refund, [Parameter("Comments", "nvarchar", ParameterDirection.Input)] string @Comments);
		[Procedure("USP_APITRANSFER_GET_DOMAIN_INFO", "dbo")] public abstract void USP_APITRANSFER_GET_DOMAIN_INFO([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_APITRANSFER_GET_TRANSFER_INFO", "dbo")] public abstract void USP_APITRANSFER_GET_TRANSFER_INFO([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("TransferId", "numeric", ParameterDirection.Input)] decimal? @TransferId, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("USP_APITRANSFER_GET_TRANSFER_LIST", "dbo")] public abstract void USP_APITRANSFER_GET_TRANSFER_LIST([Parameter("Filter", "nvarchar", ParameterDirection.Input)] string @Filter, [Parameter("SortColumn", "nvarchar", ParameterDirection.Input)] string @SortColumn, [Parameter("SortDirection", "int", ParameterDirection.Input)] int? @SortDirection, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("PageNumber", "int", ParameterDirection.Input)] int? @PageNumber, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("TransferCategory", "nvarchar", ParameterDirection.Input)] string @TransferCategory);
		[Procedure("USP_APITRANSFER_UPDATE_EPPCODE", "dbo")] public abstract void USP_APITRANSFER_UPDATE_EPPCODE([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("TransferID", "int", ParameterDirection.Input)] int? @TransferID, [Parameter("EppCode", "nvarchar", ParameterDirection.Input)] string @EppCode);
		[Procedure("USP_APITRANSFER_UPDATE_STATUS_BYADMIN", "dbo")] public abstract void USP_APITRANSFER_UPDATE_STATUS_BYADMIN([Parameter("TransferID", "int", ParameterDirection.Input)] int? @TransferID, [Parameter("StatusID", "int", ParameterDirection.Input)] int? @StatusID, [Parameter("StatusDesc", "nvarchar", ParameterDirection.Input)] string @StatusDesc);
		[Procedure("USP_APPLY_SPECIAL_PROMOTION_CODE_FOR_ONE_ITEM", "dbo")] public abstract void USP_APPLY_SPECIAL_PROMOTION_CODE_FOR_ONE_ITEM([Parameter("refID", "varchar", ParameterDirection.Input)] string @refID, [Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("maxOrderCountAllowedPerUser", "int", ParameterDirection.Input)] int? @maxOrderCountAllowedPerUser, [Parameter("orderCountCheckStartDateTime", "datetime", ParameterDirection.Input)] DateTime? @orderCountCheckStartDateTime);
		[Procedure("USP_AUTOMATION_AFFILIATE_GET_AFFILIATEID_FOR_COMMISSION_PROCESS", "dbo")] public abstract void USP_AUTOMATION_AFFILIATE_GET_AFFILIATEID_FOR_COMMISSION_PROCESS([Parameter("saleDate", "datetime", ParameterDirection.Input)] DateTime? @saleDate);
		[Procedure("USP_AUTOMATION_AFFILIATE_GET_EARNED_COMMISSION_DATES_TO_PROCESS", "dbo")] public abstract void USP_AUTOMATION_AFFILIATE_GET_EARNED_COMMISSION_DATES_TO_PROCESS([Parameter("maxCommissionProcessDateTime", "datetime", ParameterDirection.Input)] DateTime? @maxCommissionProcessDateTime);
		[Procedure("USP_AUTOMATION_AFFILIATE_GET_ORDER_ITEMS_TO_PROCESS", "dbo")] public abstract void USP_AUTOMATION_AFFILIATE_GET_ORDER_ITEMS_TO_PROCESS([Parameter("lastProcessedOrderID", "int", ParameterDirection.Input)] int? @lastProcessedOrderID, [Parameter("maxOrdersToReturn", "int", ParameterDirection.Input)] int? @maxOrdersToReturn, [Parameter("processUntilDateTime", "datetime", ParameterDirection.Input)] DateTime? @processUntilDateTime, [Parameter("maxOrderId", "int", ParameterDirection.InputOutput)] int? @maxOrderId);
		[Procedure("USP_AUTOMATION_AFFILIATE_GET_ORDER_PROCESS_PARAMETERS", "dbo")] public abstract void USP_AUTOMATION_AFFILIATE_GET_ORDER_PROCESS_PARAMETERS();
		[Procedure("USP_AUTOMATION_CHECK_FREE_DNS_ALLOWED", "dbo")] public abstract void USP_AUTOMATION_CHECK_FREE_DNS_ALLOWED([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname);
		[Procedure("USP_AUTOMATION_CHECKIFDOMAINEXISTS", "dbo")] public abstract void USP_AUTOMATION_CHECKIFDOMAINEXISTS([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("USP_AUTOMATION_DELETE_EXPIRED_DOMAIN", "dbo")] public abstract void USP_AUTOMATION_DELETE_EXPIRED_DOMAIN();
		[Procedure("USP_AUTOMATION_DELETE_EXPIRED_UNUSED_DISCARDED_WHOISGUARDS", "dbo")] public abstract void USP_AUTOMATION_DELETE_EXPIRED_UNUSED_DISCARDED_WHOISGUARDS();
		[Procedure("USP_AUTOMATION_DELETE_WG_EMAIL_QUEUE", "dbo")] public abstract void USP_AUTOMATION_DELETE_WG_EMAIL_QUEUE();
		[Procedure("USP_AUTOMATION_DELETE_WG_FOR_EXPIRY", "dbo")] public abstract void USP_AUTOMATION_DELETE_WG_FOR_EXPIRY([Parameter("email", "varchar", ParameterDirection.Input)] string @email);
		[Procedure("USP_AUTOMATION_DISABLE_WG", "dbo")] public abstract void USP_AUTOMATION_DISABLE_WG([Parameter("slotID", "numeric", ParameterDirection.Input)] decimal? @slotID);
		[Procedure("USP_AUTOMATION_EXPIRE_DOMAIN_GET_LAST_EXPIRY_DATETIME", "dbo")] public abstract void USP_AUTOMATION_EXPIRE_DOMAIN_GET_LAST_EXPIRY_DATETIME();
		[Procedure("USP_AUTOMATION_EXPIRE_DOMAIN_GET_ORIGINAL_DNS", "dbo")] public abstract void USP_AUTOMATION_EXPIRE_DOMAIN_GET_ORIGINAL_DNS([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_AUTOMATION_EXPIRE_DOMAIN_GET_RETRY_REVERT_NAME_SERVERS_LIST", "dbo")] public abstract void USP_AUTOMATION_EXPIRE_DOMAIN_GET_RETRY_REVERT_NAME_SERVERS_LIST();
		[Procedure("USP_AUTOMATION_EXPIRE_DOMAIN_GET_TOP_ITEM", "dbo")] public abstract void USP_AUTOMATION_EXPIRE_DOMAIN_GET_TOP_ITEM();
		[Procedure("USP_AUTOMATION_EXPIRE_DOMAIN_PROCESS_AN_ITEM", "dbo")] public abstract void USP_AUTOMATION_EXPIRE_DOMAIN_PROCESS_AN_ITEM([Parameter("QueueId", "bigint", ParameterDirection.Input)] long? @QueueId, [Parameter("MinsToProcessExpiry", "int", ParameterDirection.Input)] int? @MinsToProcessExpiry);
		[Procedure("USP_AUTOMATION_EXPIRE_DOMAIN_PROCESS_QUEUE", "dbo")] public abstract void USP_AUTOMATION_EXPIRE_DOMAIN_PROCESS_QUEUE([Parameter("StartDateTime", "datetime", ParameterDirection.Input)] DateTime? @StartDateTime, [Parameter("EndDatetime", "datetime", ParameterDirection.Input)] DateTime? @EndDatetime, [Parameter("IsFillQueueFirstTimeYN", "bit", ParameterDirection.Input)] bool? @IsFillQueueFirstTimeYN);
		[Procedure("USP_AUTOMATION_EXPIRE_DOMAIN_SAVE_EXISTING_NAMESERVERS", "dbo")] public abstract void USP_AUTOMATION_EXPIRE_DOMAIN_SAVE_EXISTING_NAMESERVERS([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("DomainId", "numeric", ParameterDirection.Input)] decimal? @DomainId, [Parameter("DNSXML", "xml", ParameterDirection.Input)] string @DNSXML);
		[Procedure("USP_AUTOMATION_EXPIRE_DOMAIN_UPDATE_DNS_SWITCH_STATUS", "dbo")] public abstract void USP_AUTOMATION_EXPIRE_DOMAIN_UPDATE_DNS_SWITCH_STATUS([Parameter("StatusId", "int", ParameterDirection.Input)] int? @StatusId, [Parameter("IsNameServerChanged", "bit", ParameterDirection.Input)] bool? @IsNameServerChanged, [Parameter("LogInfo", "varchar", ParameterDirection.Input)] string @LogInfo);
		[Procedure("USP_AUTOMATION_EXPIRE_DOMAIN_UPDATE_REVERTED_STATUS", "dbo")] public abstract void USP_AUTOMATION_EXPIRE_DOMAIN_UPDATE_REVERTED_STATUS([Parameter("expireDomainStatusID", "int", ParameterDirection.Input)] int? @expireDomainStatusID, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("isNameserverReverted", "bit", ParameterDirection.Input)] bool? @isNameserverReverted, [Parameter("nameserverRevertMessage", "varchar", ParameterDirection.Input)] string @nameserverRevertMessage, [Parameter("isFromRetry", "bit", ParameterDirection.Input)] bool? @isFromRetry);
		[Procedure("USP_AUTOMATION_GET_BATCH_PROCESS", "dbo")] public abstract void USP_AUTOMATION_GET_BATCH_PROCESS([Parameter("IPN_PageIndex", "int", ParameterDirection.Input)] int? @IPN_PageIndex, [Parameter("IPN_PageSize", "int", ParameterDirection.Input)] int? @IPN_PageSize);
		[Procedure("USP_AUTOMATION_GET_DOMAIN_CONTACTS_FOR_WG_EXPIRE", "dbo")] public abstract void USP_AUTOMATION_GET_DOMAIN_CONTACTS_FOR_WG_EXPIRE([Parameter("assoID", "numeric", ParameterDirection.Input)] decimal? @assoID);
		[Procedure("USP_AUTOMATION_GET_DOMAINS_TOCHANGE_HOST", "dbo")] public abstract void USP_AUTOMATION_GET_DOMAINS_TOCHANGE_HOST([Parameter("Start_Auto_Id", "int", ParameterDirection.Input)] int? @Start_Auto_Id, [Parameter("End_Auto_Id", "int", ParameterDirection.Input)] int? @End_Auto_Id);
		[Procedure("USP_AUTOMATION_GET_EMAIL_DETAILS_FOR_WG_EMAIL_PAGE", "dbo")] public abstract void USP_AUTOMATION_GET_EMAIL_DETAILS_FOR_WG_EMAIL_PAGE([Parameter("pageno", "int", ParameterDirection.Input)] int? @pageno);
		[Procedure("USP_AUTOMATION_GET_EXPIRE_DOMAIN_PROCESS_STATUS", "dbo")] public abstract void USP_AUTOMATION_GET_EXPIRE_DOMAIN_PROCESS_STATUS([Parameter("AutoId", "bigint", ParameterDirection.Input)] long? @AutoId);
		[Procedure("USP_AUTOMATION_GET_EXPIRED_DOMAIN_LIST_FROM_TMP_TABLE", "dbo")] public abstract void USP_AUTOMATION_GET_EXPIRED_DOMAIN_LIST_FROM_TMP_TABLE([Parameter("numberOfItems", "int", ParameterDirection.Input)] int? @numberOfItems, [Parameter("lastExpiredDomainID", "int", ParameterDirection.Input)] int? @lastExpiredDomainID);
		[Procedure("USP_AUTOMATION_GET_EXPIRED_WHOISGUARD", "dbo")] public abstract void USP_AUTOMATION_GET_EXPIRED_WHOISGUARD();
		[Procedure("USP_AUTOMATION_GET_LOG_DOMAINTRANSFERRED", "dbo")] public abstract void USP_AUTOMATION_GET_LOG_DOMAINTRANSFERRED();
		[Procedure("USP_AUTOMATION_GET_NEWS_LETTER_SYNC_CONTACTS", "dbo")] public abstract void USP_AUTOMATION_GET_NEWS_LETTER_SYNC_CONTACTS([Parameter("userType", "varchar", ParameterDirection.Input)] string @userType);
		[Procedure("USP_AUTOMATION_GET_SALE_TRANSACTION", "dbo")] public abstract void USP_AUTOMATION_GET_SALE_TRANSACTION();
		[Procedure("USP_AUTOMATION_GET_WHOSIGUARD_PROTECTED_DOMAIN", "dbo")] public abstract void USP_AUTOMATION_GET_WHOSIGUARD_PROTECTED_DOMAIN([Parameter("Start_Auto_Id", "int", ParameterDirection.Input)] int? @Start_Auto_Id, [Parameter("End_Auto_Id", "int", ParameterDirection.Input)] int? @End_Auto_Id);
		[Procedure("USP_AUTOMATION_INSERT_EXPIRE_DOMAIN_IN_PROCESS_STATUS", "dbo")] public abstract void USP_AUTOMATION_INSERT_EXPIRE_DOMAIN_IN_PROCESS_STATUS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("DomainExpireDateTime", "datetime", ParameterDirection.Input)] DateTime? @DomainExpireDateTime, [Parameter("IsNameServerChangedYN", "bit", ParameterDirection.Input)] bool? @IsNameServerChangedYN, [Parameter("AutoId", "bigint", ParameterDirection.Input)] long? @AutoId, [Parameter("DNSXML", "xml", ParameterDirection.Input)] string @DNSXML, [Parameter("LogInfo", "varchar", ParameterDirection.Input)] string @LogInfo);
		[Procedure("USP_AUTOMATION_INSERT_EXPIRED_DOMAIN_INTO_TMP_TABLE", "dbo")] public abstract void USP_AUTOMATION_INSERT_EXPIRED_DOMAIN_INTO_TMP_TABLE();
		[Procedure("USP_AUTOMATION_INSERT_LOG_DOMAINTRANSFERRED", "dbo")] public abstract void USP_AUTOMATION_INSERT_LOG_DOMAINTRANSFERRED([Parameter("TransferredInOut", "varchar", ParameterDirection.Input)] string @TransferredInOut, [Parameter("String", "varchar", ParameterDirection.Input)] string @String);
		[Procedure("USP_AUTOMATION_PAYPAL_GET_UNRESOLVED_DISPUTE_LIST", "dbo")] public abstract void USP_AUTOMATION_PAYPAL_GET_UNRESOLVED_DISPUTE_LIST();
		[Procedure("USP_AUTOMATION_PAYPAL_RESOLVE_DISPUTE", "dbo")] public abstract void USP_AUTOMATION_PAYPAL_RESOLVE_DISPUTE([Parameter("TransID", "nvarchar", ParameterDirection.Input)] string @TransID, [Parameter("ApiTransactionStatus", "varchar", ParameterDirection.Input)] string @ApiTransactionStatus);
		[Procedure("USP_AUTOMATION_PROCESS_ABUSE_DOMAIN", "dbo")] public abstract void USP_AUTOMATION_PROCESS_ABUSE_DOMAIN([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("USP_AUTOMATION_REFUND_PARTIAL_RENEWED_TRANSFER", "dbo")] public abstract void USP_AUTOMATION_REFUND_PARTIAL_RENEWED_TRANSFER([Parameter("IPN_Transfer_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Transfer_ID, [Parameter("IPN_NumYears", "int", ParameterDirection.Input)] int? @IPN_NumYears, [Parameter("IPB_Test_Only_YN", "bit", ParameterDirection.Input)] bool? @IPB_Test_Only_YN, [Parameter("LD_Error", "decimal", ParameterDirection.InputOutput)] decimal? @LD_Error);
		[Procedure("USP_AUTOMATION_REFUND_TRANSFER", "dbo")] public abstract void USP_AUTOMATION_REFUND_TRANSFER([Parameter("IPN_Transfer_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Transfer_ID, [Parameter("IPB_Test_Only_YN", "bit", ParameterDirection.Input)] bool? @IPB_Test_Only_YN, [Parameter("LD_Error", "decimal", ParameterDirection.InputOutput)] decimal? @LD_Error);
		[Procedure("USP_AUTOMATION_SUBMITTRANSFER_ADD_DOMAIN", "dbo")] public abstract void USP_AUTOMATION_SUBMITTRANSFER_ADD_DOMAIN([Parameter("transferID", "numeric", ParameterDirection.Input)] decimal? @transferID, [Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("registeredDate", "datetime", ParameterDirection.Input)] DateTime? @registeredDate, [Parameter("NumYears", "int", ParameterDirection.Input)] int? @NumYears);
		[Procedure("USP_AUTOMATION_SUBMITTRANSFER_HANDLE_COMPLETED_LIST", "dbo")] public abstract void USP_AUTOMATION_SUBMITTRANSFER_HANDLE_COMPLETED_LIST([Parameter("IsCompleteNamecheapTransfer", "bit", ParameterDirection.Input)] bool? @IsCompleteNamecheapTransfer, [Parameter("StartId", "int", ParameterDirection.Input)] int? @StartId, [Parameter("EndId", "int", ParameterDirection.Input)] int? @EndId, [Parameter("isProcessTransferMateEnabledOnly", "bit", ParameterDirection.Input)] bool? @isProcessTransferMateEnabledOnly);
		[Procedure("USP_AUTOMATION_SUBMITTRANSFER_UPDATE_DOMAIN_DNS", "dbo")] public abstract void USP_AUTOMATION_SUBMITTRANSFER_UPDATE_DOMAIN_DNS([Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("dnsSubType", "varchar", ParameterDirection.Input)] string @dnsSubType, [Parameter("existingEmailProviderID", "tinyint", ParameterDirection.Input)] byte? @existingEmailProviderID);
		[Procedure("USP_AUTOMATION_SUBMITTRANSFER_UPDATE_WHOISEXPIRATIONDATE_STATUS", "dbo")] public abstract void USP_AUTOMATION_SUBMITTRANSFER_UPDATE_WHOISEXPIRATIONDATE_STATUS([Parameter("transferID", "numeric", ParameterDirection.Input)] decimal? @transferID, [Parameter("StatusID", "nvarchar", ParameterDirection.Input)] string @StatusID, [Parameter("expirationDate", "datetime", ParameterDirection.Input)] DateTime? @expirationDate);
		[Procedure("USP_AUTOMATION_UPDATE_ABUSE_NOTIFICATION_SENT_DETAILS", "dbo")] public abstract void USP_AUTOMATION_UPDATE_ABUSE_NOTIFICATION_SENT_DETAILS([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("emailId", "nvarchar", ParameterDirection.Input)] string @emailId, [Parameter("noticeType", "varchar", ParameterDirection.Input)] string @noticeType, [Parameter("noticePeriod", "int", ParameterDirection.Input)] int? @noticePeriod);
		[Procedure("USP_AUTOMATION_UPDATE_DOMAIN_FOR_DELETE_EXPIRE", "dbo")] public abstract void USP_AUTOMATION_UPDATE_DOMAIN_FOR_DELETE_EXPIRE();
		[Procedure("USP_AUTOMATION_UPDATE_EXPIRE_SSL_CERTFICATES", "dbo")] public abstract void USP_AUTOMATION_UPDATE_EXPIRE_SSL_CERTFICATES();
		[Procedure("USP_AUTOMATION_UPDATE_FOR_RENEW_YEARS", "dbo")] public abstract void USP_AUTOMATION_UPDATE_FOR_RENEW_YEARS([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname, [Parameter("calculatedRenewYears", "smallint", ParameterDirection.Input)] short? @calculatedRenewYears);
		[Procedure("USP_AUTOMATION_UPDATE_LOG_DOMAINTRANSFERRED", "dbo")] public abstract void USP_AUTOMATION_UPDATE_LOG_DOMAINTRANSFERRED([Parameter("Id", "numeric", ParameterDirection.Input)] decimal? @Id, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ExistInDomainTable", "bit", ParameterDirection.Input)] bool? @ExistInDomainTable, [Parameter("EnomVerified", "bit", ParameterDirection.Input)] bool? @EnomVerified, [Parameter("DomainDeleted", "bit", ParameterDirection.Input)] bool? @DomainDeleted, [Parameter("MailSent", "bit", ParameterDirection.Input)] bool? @MailSent, [Parameter("DomainDeletedDate", "datetime", ParameterDirection.Input)] DateTime? @DomainDeletedDate);
		[Procedure("USP_AUTOMATION_UPDATE_WG_EMAIL", "dbo")] public abstract void USP_AUTOMATION_UPDATE_WG_EMAIL([Parameter("newEmail", "nvarchar", ParameterDirection.Input)] string @newEmail, [Parameter("oldEmail", "nvarchar", ParameterDirection.Input)] string @oldEmail, [Parameter("slotID", "numeric", ParameterDirection.Input)] decimal? @slotID, [Parameter("forwardEmail", "varchar", ParameterDirection.Input)] string @forwardEmail);
		[Procedure("USP_AUTOMATION_USERDETAILS_FOR_LOGTRANSFEROUT", "dbo")] public abstract void USP_AUTOMATION_USERDETAILS_FOR_LOGTRANSFEROUT([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("usp_AutomationAddAddonDetailForOX", "dbo")] public abstract void usp_AutomationAddAddonDetailForOX([Parameter("Order_Id", "numeric", ParameterDirection.Input)] decimal? @Order_Id, [Parameter("Sld", "nvarchar", ParameterDirection.Input)] string @Sld, [Parameter("ActionId", "varchar", ParameterDirection.Input)] string @ActionId, [Parameter("Duration", "smallint", ParameterDirection.Input)] short? @Duration);
		[Procedure("usp_AutomationAutorenewWG", "dbo")] public abstract void usp_AutomationAutorenewWG([Parameter("slotId", "numeric", ParameterDirection.Input)] decimal? @slotId, [Parameter("numYears", "smallint", ParameterDirection.Input)] short? @numYears, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("usp_AutomationGetAutorenewDomainsAndProductsListForUser", "dbo")] public abstract void usp_AutomationGetAutorenewDomainsAndProductsListForUser([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("usp_AutomationGetAutorenewDomainsAndProductsUsersOptions", "dbo")] public abstract void usp_AutomationGetAutorenewDomainsAndProductsUsersOptions();
		[Procedure("usp_AutomationGetAutorenewDomainsOPListForUser", "dbo")] public abstract void usp_AutomationGetAutorenewDomainsOPListForUser([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("usp_AutomationGetAutorenewDomainsOPUsersOptions", "dbo")] public abstract void usp_AutomationGetAutorenewDomainsOPUsersOptions([Parameter("Grace_days", "int", ParameterDirection.Input)] int? @Grace_days);
		[Procedure("usp_AutomationGetAutorenewDomainsWGListForUser", "dbo")] public abstract void usp_AutomationGetAutorenewDomainsWGListForUser([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("usp_AutomationGetAutorenewDomainsWGUsersOptions", "dbo")] public abstract void usp_AutomationGetAutorenewDomainsWGUsersOptions();
		[Procedure("usp_AutomationGetAutorenewOXListForUser", "dbo")] public abstract void usp_AutomationGetAutorenewOXListForUser([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Renew_Days", "int", ParameterDirection.Input)] int? @Renew_Days, [Parameter("Renew_Days_Onemonthcycle", "int", ParameterDirection.Input)] int? @Renew_Days_Onemonthcycle);
		[Procedure("usp_AutomationGetAutorenewOXUsersOptions", "dbo")] public abstract void usp_AutomationGetAutorenewOXUsersOptions([Parameter("StartRenew_OneMonthCycle", "int", ParameterDirection.Input)] int? @StartRenew_OneMonthCycle, [Parameter("StartRenew_Cycle", "int", ParameterDirection.Input)] int? @StartRenew_Cycle);
		[Procedure("usp_AutomationGetExpiringOXSubscriptions", "dbo")] public abstract void usp_AutomationGetExpiringOXSubscriptions();
		[Procedure("usp_AutomationGetOnedayToExpireOXSubscriptions", "dbo")] public abstract void usp_AutomationGetOnedayToExpireOXSubscriptions();
		[Procedure("usp_AutomationGetOrderOneTimeEmailPendings", "dbo")] public abstract void usp_AutomationGetOrderOneTimeEmailPendings();
		[Procedure("usp_AutomationGetRenewReactivateToVerifyList", "dbo")] public abstract void usp_AutomationGetRenewReactivateToVerifyList([Parameter("tldCsv", "varchar", ParameterDirection.Input)] string @tldCsv);
		[Procedure("usp_AutomationRenewNotification", "dbo")] public abstract void usp_AutomationRenewNotification([Parameter("NoOfTopRecords", "smallint", ParameterDirection.Input)] short? @NoOfTopRecords, [Parameter("domainStartingAlphaNumericLeter", "varchar", ParameterDirection.Input)] string @domainStartingAlphaNumericLeter, [Parameter("StartDate", "datetime", ParameterDirection.Input)] DateTime? @StartDate, [Parameter("Enddate", "datetime", ParameterDirection.Input)] DateTime? @Enddate, [Parameter("DomainId", "numeric", ParameterDirection.Input)] decimal? @DomainId);
		[Procedure("usp_AutomationSetCompleteToTrue", "dbo")] public abstract void usp_AutomationSetCompleteToTrue([Parameter("isProcessTransferMateEnabledOnly", "bit", ParameterDirection.Input)] bool? @isProcessTransferMateEnabledOnly);
		[Procedure("usp_AutomationUpdateDomainExpiryDateTime", "dbo")] public abstract void usp_AutomationUpdateDomainExpiryDateTime([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("expiryDateTime", "datetime", ParameterDirection.Input)] DateTime? @expiryDateTime);
		[Procedure("usp_AutomationUpdateDomainForAutoRenew", "dbo")] public abstract void usp_AutomationUpdateDomainForAutoRenew([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("orderId", "numeric", ParameterDirection.Input)] decimal? @orderId, [Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId, [Parameter("clientIp", "nvarchar", ParameterDirection.Input)] string @clientIp, [Parameter("numYears", "smallint", ParameterDirection.Input)] short? @numYears);
		[Procedure("usp_AutomationUpdateDomainsAutoRenewErrorStatus", "dbo")] public abstract void usp_AutomationUpdateDomainsAutoRenewErrorStatus([Parameter("domainData", "varchar", ParameterDirection.Input)] string @domainData, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("usp_AutomationUpdateIsOneTimeEmailFlag", "dbo")] public abstract void usp_AutomationUpdateIsOneTimeEmailFlag([Parameter("OrderId", "numeric", ParameterDirection.Input)] decimal? @OrderId);
		[Procedure("usp_AutomationWgEmailQueueOnetime", "dbo")] public abstract void usp_AutomationWgEmailQueueOnetime([Parameter("newEmail", "nvarchar", ParameterDirection.Input)] string @newEmail, [Parameter("oldEmail", "nvarchar", ParameterDirection.Input)] string @oldEmail, [Parameter("slotID", "numeric", ParameterDirection.Input)] decimal? @slotID, [Parameter("forwardEmail", "varchar", ParameterDirection.Input)] string @forwardEmail);
		[Procedure("usp_AutorenewCreateNewUpdateOrderTransaction", "dbo")] public abstract void usp_AutorenewCreateNewUpdateOrderTransaction([Parameter("orderRefID", "nvarchar", ParameterDirection.Input)] string @orderRefID, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("price", "money", ParameterDirection.Input)] decimal? @price, [Parameter("serverIP", "varchar", ParameterDirection.Input)] string @serverIP, [Parameter("TransactionID", "numeric", ParameterDirection.Input)] decimal? @TransactionID);
		[Procedure("USP_BULK_ALLOT_WG", "dbo")] public abstract void USP_BULK_ALLOT_WG([Parameter("DomainName", "varchar", ParameterDirection.Input)] string @DomainName, [Parameter("BatchID", "varchar", ParameterDirection.Input)] string @BatchID, [Parameter("RegistrantFax", "varchar", ParameterDirection.Input)] string @RegistrantFax, [Parameter("RegistrantPhone", "varchar", ParameterDirection.Input)] string @RegistrantPhone, [Parameter("RegistrantCountry", "varchar", ParameterDirection.Input)] string @RegistrantCountry, [Parameter("RegistrantPostalCode", "varchar", ParameterDirection.Input)] string @RegistrantPostalCode, [Parameter("RegistrantStateProvince", "varchar", ParameterDirection.Input)] string @RegistrantStateProvince, [Parameter("RegistrantStateProvinceChoice", "varchar", ParameterDirection.Input)] string @RegistrantStateProvinceChoice, [Parameter("RegistrantCity", "varchar", ParameterDirection.Input)] string @RegistrantCity, [Parameter("RegistrantAddress1", "varchar", ParameterDirection.Input)] string @RegistrantAddress1, [Parameter("RegistrantAddress2", "varchar", ParameterDirection.Input)] string @RegistrantAddress2, [Parameter("RegistrantLastName", "varchar", ParameterDirection.Input)] string @RegistrantLastName, [Parameter("RegistrantFirstName", "varchar", ParameterDirection.Input)] string @RegistrantFirstName, [Parameter("RegistrantJobTitle", "varchar", ParameterDirection.Input)] string @RegistrantJobTitle, [Parameter("RegistrantOrganizationName", "varchar", ParameterDirection.Input)] string @RegistrantOrganizationName, [Parameter("RegistrantPhoneext", "varchar", ParameterDirection.Input)] string @RegistrantPhoneext, [Parameter("RegistrantEmailAddress", "varchar", ParameterDirection.Input)] string @RegistrantEmailAddress, [Parameter("TechFax", "varchar", ParameterDirection.Input)] string @TechFax, [Parameter("TechPhone", "varchar", ParameterDirection.Input)] string @TechPhone, [Parameter("TechCountry", "varchar", ParameterDirection.Input)] string @TechCountry, [Parameter("TechPostalCode", "varchar", ParameterDirection.Input)] string @TechPostalCode, [Parameter("TechStateProvince", "varchar", ParameterDirection.Input)] string @TechStateProvince, [Parameter("TechStateProvinceChoice", "varchar", ParameterDirection.Input)] string @TechStateProvinceChoice, [Parameter("TechCity", "varchar", ParameterDirection.Input)] string @TechCity, [Parameter("TechAddress1", "varchar", ParameterDirection.Input)] string @TechAddress1, [Parameter("TechAddress2", "varchar", ParameterDirection.Input)] string @TechAddress2, [Parameter("TechLastName", "varchar", ParameterDirection.Input)] string @TechLastName, [Parameter("TechFirstName", "varchar", ParameterDirection.Input)] string @TechFirstName, [Parameter("TechJobTitle", "varchar", ParameterDirection.Input)] string @TechJobTitle, [Parameter("TechOrganizationName", "varchar", ParameterDirection.Input)] string @TechOrganizationName, [Parameter("TechPhoneext", "varchar", ParameterDirection.Input)] string @TechPhoneext, [Parameter("TechEmailAddress", "varchar", ParameterDirection.Input)] string @TechEmailAddress, [Parameter("AdminFax", "varchar", ParameterDirection.Input)] string @AdminFax, [Parameter("AdminPhone", "varchar", ParameterDirection.Input)] string @AdminPhone, [Parameter("AdminCountry", "varchar", ParameterDirection.Input)] string @AdminCountry, [Parameter("AdminPostalCode", "varchar", ParameterDirection.Input)] string @AdminPostalCode, [Parameter("AdminStateProvince", "varchar", ParameterDirection.Input)] string @AdminStateProvince, [Parameter("AdminStateProvinceChoice", "varchar", ParameterDirection.Input)] string @AdminStateProvinceChoice, [Parameter("AdminCity", "varchar", ParameterDirection.Input)] string @AdminCity, [Parameter("AdminAddress1", "varchar", ParameterDirection.Input)] string @AdminAddress1, [Parameter("AdminAddress2", "varchar", ParameterDirection.Input)] string @AdminAddress2, [Parameter("AdminLastName", "varchar", ParameterDirection.Input)] string @AdminLastName, [Parameter("AdminFirstName", "varchar", ParameterDirection.Input)] string @AdminFirstName, [Parameter("AdminJobTitle", "varchar", ParameterDirection.Input)] string @AdminJobTitle, [Parameter("AdminOrganizationName", "varchar", ParameterDirection.Input)] string @AdminOrganizationName, [Parameter("AdminPhoneext", "varchar", ParameterDirection.Input)] string @AdminPhoneext, [Parameter("AdminEmailAddress", "varchar", ParameterDirection.Input)] string @AdminEmailAddress, [Parameter("AuxBillingFax", "varchar", ParameterDirection.Input)] string @AuxBillingFax, [Parameter("AuxBillingPhone", "varchar", ParameterDirection.Input)] string @AuxBillingPhone, [Parameter("AuxBillingCountry", "varchar", ParameterDirection.Input)] string @AuxBillingCountry, [Parameter("AuxBillingPostalCode", "varchar", ParameterDirection.Input)] string @AuxBillingPostalCode, [Parameter("AuxBillingStateProvince", "varchar", ParameterDirection.Input)] string @AuxBillingStateProvince, [Parameter("AuxBillingStateProvinceChoice", "varchar", ParameterDirection.Input)] string @AuxBillingStateProvinceChoice, [Parameter("AuxBillingCity", "varchar", ParameterDirection.Input)] string @AuxBillingCity, [Parameter("AuxBillingAddress1", "varchar", ParameterDirection.Input)] string @AuxBillingAddress1, [Parameter("AuxBillingAddress2", "varchar", ParameterDirection.Input)] string @AuxBillingAddress2, [Parameter("AuxBillingLastName", "varchar", ParameterDirection.Input)] string @AuxBillingLastName, [Parameter("AuxBillingFirstName", "varchar", ParameterDirection.Input)] string @AuxBillingFirstName, [Parameter("AuxBillingJobTitle", "varchar", ParameterDirection.Input)] string @AuxBillingJobTitle, [Parameter("AuxBillingOrganizationName", "varchar", ParameterDirection.Input)] string @AuxBillingOrganizationName, [Parameter("AuxBillingPhoneext", "varchar", ParameterDirection.Input)] string @AuxBillingPhoneext, [Parameter("AuxBillingEmailAddress", "varchar", ParameterDirection.Input)] string @AuxBillingEmailAddress, [Parameter("RegistrantNexus", "varchar", ParameterDirection.Input)] string @RegistrantNexus, [Parameter("RegistrantNexusCountry", "varchar", ParameterDirection.Input)] string @RegistrantNexusCountry, [Parameter("RegistrantPurpose", "varchar", ParameterDirection.Input)] string @RegistrantPurpose, [Parameter("COUKRegisteredFor", "varchar", ParameterDirection.Input)] string @COUKRegisteredFor, [Parameter("ORGUKRegisteredFor", "varchar", ParameterDirection.Input)] string @ORGUKRegisteredFor, [Parameter("COUKLegalType", "varchar", ParameterDirection.Input)] string @COUKLegalType, [Parameter("ORGUKLegalType", "varchar", ParameterDirection.Input)] string @ORGUKLegalType, [Parameter("COUKRegOptOut", "varchar", ParameterDirection.Input)] string @COUKRegOptOut, [Parameter("ORGUKRegOptOut", "varchar", ParameterDirection.Input)] string @ORGUKRegOptOut, [Parameter("COUKCompanyID", "varchar", ParameterDirection.Input)] string @COUKCompanyID, [Parameter("ORGUKCompanyID", "varchar", ParameterDirection.Input)] string @ORGUKCompanyID, [Parameter("EUAdrLang", "varchar", ParameterDirection.Input)] string @EUAdrLang, [Parameter("MEUKLegalType", "varchar", ParameterDirection.Input)] string @MEUKLegalType, [Parameter("MEUKCompanyID", "varchar", ParameterDirection.Input)] string @MEUKCompanyID, [Parameter("MEUKRegisteredfor", "varchar", ParameterDirection.Input)] string @MEUKRegisteredfor, [Parameter("MEUKRegOptOut", "varchar", ParameterDirection.Input)] string @MEUKRegOptOut, [Parameter("CIRALegalType", "varchar", ParameterDirection.Input)] string @CIRALegalType, [Parameter("CIRAWhoisDisplay", "varchar", ParameterDirection.Input)] string @CIRAWhoisDisplay, [Parameter("CIRAAgreementValue", "varchar", ParameterDirection.Input)] string @CIRAAgreementValue, [Parameter("CIRAAgreementVersion", "varchar", ParameterDirection.Input)] string @CIRAAgreementVersion, [Parameter("CIRALanguage", "varchar", ParameterDirection.Input)] string @CIRALanguage);
		[Procedure("USP_CART_VALIDATE", "dbo")] public abstract void USP_CART_VALIDATE([Parameter("REFID", "varchar", ParameterDirection.Input)] string @REFID, [Parameter("Username", "varchar", ParameterDirection.Input)] string @Username, [Parameter("DomainName", "varchar", ParameterDirection.Input)] string @DomainName, [Parameter("ActionID", "varchar", ParameterDirection.Input)] string @ActionID, [Parameter("LoggedIn", "bit", ParameterDirection.Input)] bool? @LoggedIn, [Parameter("PackID", "varchar", ParameterDirection.Input)] string @PackID);
		[Procedure("USP_CHANGE_PASSWORD", "dbo")] public abstract void USP_CHANGE_PASSWORD([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("password", "varchar", ParameterDirection.Input)] string @password, [Parameter("passwordNoCase", "varchar", ParameterDirection.Input)] string @passwordNoCase, [Parameter("newPassword", "varchar", ParameterDirection.Input)] string @newPassword, [Parameter("newPasswordNoCase", "varchar", ParameterDirection.Input)] string @newPasswordNoCase, [Parameter("newPasswordLog", "varchar", ParameterDirection.Input)] string @newPasswordLog, [Parameter("sourceIp", "varchar", ParameterDirection.Input)] string @sourceIp, [Parameter("calledFrom", "varchar", ParameterDirection.Input)] string @calledFrom);
		[Procedure("USP_CHANGE_PASSWORD_USING_RESETCODE", "dbo")] public abstract void USP_CHANGE_PASSWORD_USING_RESETCODE([Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName, [Parameter("RequestGuid", "nvarchar", ParameterDirection.Input)] string @RequestGuid, [Parameter("NewPassword", "varchar", ParameterDirection.Input)] string @NewPassword, [Parameter("NewPasswordNoCase", "varchar", ParameterDirection.Input)] string @NewPasswordNoCase, [Parameter("NewPasswordLog", "varchar", ParameterDirection.Input)] string @NewPasswordLog, [Parameter("Ip", "varchar", ParameterDirection.Input)] string @Ip, [Parameter("calledFrom", "varchar", ParameterDirection.Input)] string @calledFrom, [Parameter("AuthorizationReferenceId", "varchar", ParameterDirection.Input)] string @AuthorizationReferenceId);
		[Procedure("usp_ChangeOwnership", "dbo")] public abstract void usp_ChangeOwnership([Parameter("sourceUserName", "nvarchar", ParameterDirection.Input)] string @sourceUserName, [Parameter("targetUserName", "nvarchar", ParameterDirection.Input)] string @targetUserName, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("TransID", "nvarchar", ParameterDirection.Input)] string @TransID, [Parameter("WGOption", "varchar", ParameterDirection.Input)] string @WGOption, [Parameter("domainId", "numeric", ParameterDirection.Input)] decimal? @domainId, [Parameter("isChangeContact", "bit", ParameterDirection.Input)] bool? @isChangeContact);
		[Procedure("USP_CHARGE_TRANSACTION_AND_ADD_FUNDS", "dbo")] public abstract void USP_CHARGE_TRANSACTION_AND_ADD_FUNDS([Parameter("TransactionId", "decimal", ParameterDirection.Input)] decimal? @TransactionId, [Parameter("ChargeAmount", "money", ParameterDirection.Input)] decimal? @ChargeAmount, [Parameter("IsRefund_YN", "bit", ParameterDirection.Input)] bool? @IsRefund_YN);
		[Procedure("USP_CHECK_ADMIN_LOGIN", "dbo")] public abstract void USP_CHECK_ADMIN_LOGIN([Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName, [Parameter("Password", "varchar", ParameterDirection.Input)] string @Password, [Parameter("IPClassA", "tinyint", ParameterDirection.Input)] byte? @IPClassA, [Parameter("IPClassB", "tinyint", ParameterDirection.Input)] byte? @IPClassB, [Parameter("IPClassC", "tinyint", ParameterDirection.Input)] byte? @IPClassC, [Parameter("IPClassD", "tinyint", ParameterDirection.Input)] byte? @IPClassD, [Parameter("AllowedIpsList", "varchar", ParameterDirection.Input)] string @AllowedIpsList);
		[Procedure("USP_CHECK_CAN_SKIP_ADDCARD_VERIFICATION", "dbo")] public abstract void USP_CHECK_CAN_SKIP_ADDCARD_VERIFICATION([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_CHECK_CAN_SKIP_ADDFUNDS_VERIFICATION", "dbo")] public abstract void USP_CHECK_CAN_SKIP_ADDFUNDS_VERIFICATION([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_CHECK_CAN_SKIP_CARD_PAYMENT_VERIFICATION", "dbo")] public abstract void USP_CHECK_CAN_SKIP_CARD_PAYMENT_VERIFICATION([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("isFirstOrder", "bit", ParameterDirection.Input)] bool? @isFirstOrder);
		[Procedure("USP_CHECK_DOMAIN_EXISTS_FOR_USER", "dbo")] public abstract void USP_CHECK_DOMAIN_EXISTS_FOR_USER([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("USP_CHECK_FR_POSTALCODE", "dbo")] public abstract void USP_CHECK_FR_POSTALCODE([Parameter("postalCode", "varchar", ParameterDirection.Input)] string @postalCode, [Parameter("placeName", "varchar", ParameterDirection.Input)] string @placeName);
		[Procedure("USP_CHECK_GROUPNAME_EXISTS", "dbo")] public abstract void USP_CHECK_GROUPNAME_EXISTS([Parameter("groupName", "varchar", ParameterDirection.Input)] string @groupName);
		[Procedure("USP_CHECK_HOSTED_DOMAIN_EXISTS_FOR_USER", "dbo")] public abstract void USP_CHECK_HOSTED_DOMAIN_EXISTS_FOR_USER([Parameter("hostname", "varchar", ParameterDirection.Input)] string @hostname, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("USP_CHECK_IF_DOMAIN_BANNED_FOR_SSL", "dbo")] public abstract void USP_CHECK_IF_DOMAIN_BANNED_FOR_SSL([Parameter("domainname", "varchar", ParameterDirection.Input)] string @domainname, [Parameter("username", "varchar", ParameterDirection.Input)] string @username);
		[Procedure("USP_CHECK_IF_EXIST_MESSAGE_ID", "dbo")] public abstract void USP_CHECK_IF_EXIST_MESSAGE_ID([Parameter("MessageID", "varchar", ParameterDirection.Input)] string @MessageID);
		[Procedure("USP_CHECK_IF_RESELLER", "dbo")] public abstract void USP_CHECK_IF_RESELLER([Parameter("userId", "numeric", ParameterDirection.Input)] decimal? @userId);
		[Procedure("USP_CHECK_IP_IN_BLOCKED_LIST", "dbo")] public abstract void USP_CHECK_IP_IN_BLOCKED_LIST([Parameter("IPV_Remote_IP", "varchar", ParameterDirection.Input)] string @IPV_Remote_IP);
		[Procedure("usp_Check_Namecheap_Bonus_CouponCode_Available", "dbo")] public abstract void usp_Check_Namecheap_Bonus_CouponCode_Available([Parameter("amount", "money", ParameterDirection.Input)] decimal? @amount, [Parameter("partnerType", "varchar", ParameterDirection.Input)] string @partnerType, [Parameter("overideCouponValue", "int", ParameterDirection.Input)] int? @overideCouponValue);
		[Procedure("USP_CHECK_SHOPPING_FOR_ACTIONID", "dbo")] public abstract void USP_CHECK_SHOPPING_FOR_ACTIONID([Parameter("ActionID", "varchar", ParameterDirection.Input)] string @ActionID, [Parameter("RefID", "varchar", ParameterDirection.Input)] string @RefID);
		[Procedure("USP_CHECK_SSL_IN_CART", "dbo")] public abstract void USP_CHECK_SSL_IN_CART([Parameter("IPB_IsUserLoggedIN", "bit", ParameterDirection.Input)] bool? @IPB_IsUserLoggedIN, [Parameter("IPV_UserName", "nvarchar", ParameterDirection.Input)] string @IPV_UserName, [Parameter("IPN_Certificate_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Certificate_ID, [Parameter("IPV_Domainused", "varchar", ParameterDirection.Input)] string @IPV_Domainused);
		[Procedure("USP_CHECK_TARGETUSER_EXISTS", "dbo")] public abstract void USP_CHECK_TARGETUSER_EXISTS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_CHECK_USER_LOCK_STATUS", "dbo")] public abstract void USP_CHECK_USER_LOCK_STATUS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_CHECK_USER_LOGIN", "dbo")] public abstract void USP_CHECK_USER_LOGIN([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("password", "varchar", ParameterDirection.Input)] string @password, [Parameter("passwordNoCase", "varchar", ParameterDirection.Input)] string @passwordNoCase, [Parameter("loginIp", "varchar", ParameterDirection.Input)] string @loginIp, [Parameter("loginFrom", "varchar", ParameterDirection.Input)] string @loginFrom, [Parameter("userSupportPin", "varchar", ParameterDirection.Input)] string @userSupportPin);
		[Procedure("USP_CHECK_USER_PASSWORD", "dbo")] public abstract void USP_CHECK_USER_PASSWORD([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("password", "varchar", ParameterDirection.Input)] string @password, [Parameter("passwordNoCase", "varchar", ParameterDirection.Input)] string @passwordNoCase);
		[Procedure("USP_CHECK_USER_REQUEST_TOKEN", "dbo")] public abstract void USP_CHECK_USER_REQUEST_TOKEN([Parameter("RequestGuid", "varchar", ParameterDirection.Input)] string @RequestGuid);
		[Procedure("USP_CHECK_USERNAME_EMAIL_AVAILABILITY", "dbo")] public abstract void USP_CHECK_USERNAME_EMAIL_AVAILABILITY([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("email", "nvarchar", ParameterDirection.Input)] string @email);
		[Procedure("USP_CHECK_USERNAME_EXISTS", "dbo")] public abstract void USP_CHECK_USERNAME_EXISTS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("clientID", "int", ParameterDirection.Input)] int? @clientID, [Parameter("autoId", "int", ParameterDirection.Input)] int? @autoId, [Parameter("hostingProvider", "varchar", ParameterDirection.Input)] string @hostingProvider);
		[Procedure("USP_CHECK_VALID_ACTIONID_TLD", "dbo")] public abstract void USP_CHECK_VALID_ACTIONID_TLD([Parameter("ActionID", "varchar", ParameterDirection.Input)] string @ActionID, [Parameter("sTLD", "varchar", ParameterDirection.Input)] string @sTLD);
		[Procedure("USP_CHECK_VALID_AUTORENEW_DOMAIN_EXISTS_FOR_USER", "dbo")] public abstract void USP_CHECK_VALID_AUTORENEW_DOMAIN_EXISTS_FOR_USER([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("USP_CHECK_WG_IN_CART", "dbo")] public abstract void USP_CHECK_WG_IN_CART([Parameter("IsUserLoggedIN", "bit", ParameterDirection.Input)] bool? @IsUserLoggedIN, [Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName, [Parameter("sSLD", "nvarchar", ParameterDirection.Input)] string @sSLD);
		[Procedure("usp_Check2FAEnabledForUser", "dbo")] public abstract void usp_Check2FAEnabledForUser([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_CheckDomainHasRenewableWhoisGuard", "dbo")] public abstract void usp_CheckDomainHasRenewableWhoisGuard([Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("usp_CheckGlobal2FAEnabilityForUser", "dbo")] public abstract void usp_CheckGlobal2FAEnabilityForUser();
		[Procedure("usp_CheckIfRedeemCoupon", "dbo")] public abstract void usp_CheckIfRedeemCoupon([Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode);
		[Procedure("usp_CheckOrderStatusForFHT", "dbo")] public abstract void usp_CheckOrderStatusForFHT([Parameter("OrderID", "int", ParameterDirection.Input)] int? @OrderID);
		[Procedure("USP_CHECKOUT", "dbo")] public abstract void USP_CHECKOUT([Parameter("IPV_Ref_ID", "varchar", ParameterDirection.Input)] string @IPV_Ref_ID);
		[Procedure("USP_CHECKOUT_HOSTING_GET_DOMAINS_TO_CHANGE_HOSTING_DNS", "dbo")] public abstract void USP_CHECKOUT_HOSTING_GET_DOMAINS_TO_CHANGE_HOSTING_DNS([Parameter("IPV_RegID", "varchar", ParameterDirection.Input)] string @IPV_RegID, [Parameter("IPV_User_Name", "varchar", ParameterDirection.Input)] string @IPV_User_Name);
		[Procedure("USP_CHECKOUT_SET_OPTION_FLAGS", "dbo")] public abstract void USP_CHECKOUT_SET_OPTION_FLAGS([Parameter("refID", "varchar", ParameterDirection.Input)] string @refID, [Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName);
		[Procedure("usp_CheckoutProcessIdMarkForPaymentCompletion", "dbo")] public abstract void usp_CheckoutProcessIdMarkForPaymentCompletion([Parameter("checkoutProcessID", "varchar", ParameterDirection.Input)] string @checkoutProcessID, [Parameter("paymentMode", "varchar", ParameterDirection.Input)] string @paymentMode, [Parameter("isCompletedYN", "bit", ParameterDirection.Input)] bool? @isCompletedYN, [Parameter("checkoutStatusDesc", "varchar", ParameterDirection.Input)] string @checkoutStatusDesc);
		[Procedure("usp_CheckoutProcessIdMarkForPaymentSubmission", "dbo")] public abstract void usp_CheckoutProcessIdMarkForPaymentSubmission([Parameter("checkoutProcessID", "varchar", ParameterDirection.Input)] string @checkoutProcessID, [Parameter("paymentMode", "varchar", ParameterDirection.Input)] string @paymentMode);
		[Procedure("usp_ClearLogAffiliateTrafic", "dbo")] public abstract void usp_ClearLogAffiliateTrafic();
		[Procedure("usp_CommaSeperatorString", "dbo")] public abstract void usp_CommaSeperatorString([Parameter("csvINPUT", "varchar", ParameterDirection.Input)] string @csvINPUT);
		[Procedure("USP_COMMON_GET_COUNTRY_CODES", "dbo")] public abstract void USP_COMMON_GET_COUNTRY_CODES();
		[Procedure("USP_COMMON_WHOISGUARD_UPDATE_STATUS_BY_DOMAIN", "dbo")] public abstract void USP_COMMON_WHOISGUARD_UPDATE_STATUS_BY_DOMAIN([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname, [Parameter("forwardedTo", "nvarchar", ParameterDirection.Input)] string @forwardedTo, [Parameter("actionType", "varchar", ParameterDirection.Input)] string @actionType);
		[Procedure("USP_CREATE_TOKEN_FOR_ADD_FUNDS_REQUEST", "dbo")] public abstract void USP_CREATE_TOKEN_FOR_ADD_FUNDS_REQUEST([Parameter("tokenId", "varchar", ParameterDirection.Input)] string @tokenId, [Parameter("newTokenId", "varchar", ParameterDirection.Input)] string @newTokenId);
		[Procedure("USP_CREATE_USER_ACCOUNT", "dbo")] public abstract void USP_CREATE_USER_ACCOUNT([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("password", "varchar", ParameterDirection.Input)] string @password, [Parameter("passwordNoCase", "varchar", ParameterDirection.Input)] string @passwordNoCase, [Parameter("passwordLog", "varchar", ParameterDirection.Input)] string @passwordLog, [Parameter("email", "nvarchar", ParameterDirection.Input)] string @email, [Parameter("firstName", "nvarchar", ParameterDirection.Input)] string @firstName, [Parameter("lastName", "nvarchar", ParameterDirection.Input)] string @lastName, [Parameter("friendEmail1", "nvarchar", ParameterDirection.Input)] string @friendEmail1, [Parameter("friendEmail2", "nvarchar", ParameterDirection.Input)] string @friendEmail2, [Parameter("newsLetter", "int", ParameterDirection.Input)] int? @newsLetter, [Parameter("AcceptTerms", "int", ParameterDirection.Input)] int? @AcceptTerms, [Parameter("purpose", "varchar", ParameterDirection.Input)] string @purpose, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip, [Parameter("referralId", "varchar", ParameterDirection.Input)] string @referralId, [Parameter("adId", "varchar", ParameterDirection.Input)] string @adId);
		[Procedure("USP_CREATE_WHOISGUARD_SUBSCRIPTION", "dbo")] public abstract void USP_CREATE_WHOISGUARD_SUBSCRIPTION([Parameter("User_Name", "varchar", ParameterDirection.Input)] string @User_Name, [Parameter("Num_Subscriptions", "int", ParameterDirection.Input)] int? @Num_Subscriptions, [Parameter("Num_Years_Each_Subscription", "int", ParameterDirection.Input)] int? @Num_Years_Each_Subscription);
		[Procedure("usp_CreateCreditCardInitiatedTransactions", "dbo")] public abstract void usp_CreateCreditCardInitiatedTransactions([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("transactionType", "nvarchar", ParameterDirection.Input)] string @transactionType, [Parameter("paymentSource", "nvarchar", ParameterDirection.Input)] string @paymentSource, [Parameter("ccInitalAmount", "money", ParameterDirection.Input)] decimal? @ccInitalAmount, [Parameter("orderRefId", "nvarchar", ParameterDirection.Input)] string @orderRefId, [Parameter("providerToken", "varchar", ParameterDirection.Input)] string @providerToken, [Parameter("intiatedTransactionStatus", "nvarchar", ParameterDirection.Input)] string @intiatedTransactionStatus, [Parameter("orderIp", "nvarchar", ParameterDirection.Input)] string @orderIp);
		[Procedure("usp_CreateOrderForBatchAutoRenew", "dbo")] public abstract void usp_CreateOrderForBatchAutoRenew([Parameter("OrderXml", "xml", ParameterDirection.Input)] string @OrderXml, [Parameter("ClientIP", "nvarchar", ParameterDirection.Input)] string @ClientIP, [Parameter("OrderRefID", "nvarchar", ParameterDirection.Input)] string @OrderRefID, [Parameter("TransactionId", "numeric", ParameterDirection.Input)] decimal? @TransactionId, [Parameter("applicationType", "varchar", ParameterDirection.Input)] string @applicationType);
		[Procedure("usp_CreateOrderForBatchAutoRenew11", "dbo")] public abstract void usp_CreateOrderForBatchAutoRenew11([Parameter("OrderXml", "xml", ParameterDirection.Input)] string @OrderXml, [Parameter("ClientIP", "nvarchar", ParameterDirection.Input)] string @ClientIP, [Parameter("OrderRefID", "nvarchar", ParameterDirection.Input)] string @OrderRefID, [Parameter("TransactionId", "numeric", ParameterDirection.Input)] decimal? @TransactionId, [Parameter("applicationType", "varchar", ParameterDirection.Input)] string @applicationType);
		[Procedure("usp_CreateOrgTldPromotionDetails", "dbo")] public abstract void usp_CreateOrgTldPromotionDetails([Parameter("orderId", "numeric", ParameterDirection.Input)] decimal? @orderId, [Parameter("tld", "nvarchar", ParameterDirection.Input)] string @tld, [Parameter("hourDifferenceOfOtherTld", "int", ParameterDirection.Input)] int? @hourDifferenceOfOtherTld);
		[Procedure("usp_CreateTransaction", "dbo")] public abstract void usp_CreateTransaction([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("TransactionType", "nvarchar", ParameterDirection.Input)] string @TransactionType, [Parameter("PaymentSource", "varchar", ParameterDirection.Input)] string @PaymentSource, [Parameter("AssociatedOrderID", "numeric", ParameterDirection.Input)] decimal? @AssociatedOrderID, [Parameter("PayerEMail", "varchar", ParameterDirection.Input)] string @PayerEMail, [Parameter("CCInitialAmount", "money", ParameterDirection.Input)] decimal? @CCInitialAmount, [Parameter("RefundAmount", "money", ParameterDirection.Input)] decimal? @RefundAmount, [Parameter("RefundYN", "bit", ParameterDirection.Input)] bool? @RefundYN, [Parameter("CompletedYN", "bit", ParameterDirection.Input)] bool? @CompletedYN, [Parameter("Comments", "nvarchar", ParameterDirection.Input)] string @Comments, [Parameter("OrderRefID", "varchar", ParameterDirection.Input)] string @OrderRefID, [Parameter("EndDateTime", "datetime", ParameterDirection.Input)] DateTime? @EndDateTime, [Parameter("CCOrderID", "varchar", ParameterDirection.Input)] string @CCOrderID, [Parameter("CCTransID", "varchar", ParameterDirection.Input)] string @CCTransID, [Parameter("CCStatus", "nvarchar", ParameterDirection.Input)] string @CCStatus, [Parameter("PaypalPendingReason", "nvarchar", ParameterDirection.Input)] string @PaypalPendingReason, [Parameter("PaypalPaymentType", "nvarchar", ParameterDirection.Input)] string @PaypalPaymentType, [Parameter("CCLast4", "nvarchar", ParameterDirection.Input)] string @CCLast4, [Parameter("CCNameOnCard", "nvarchar", ParameterDirection.Input)] string @CCNameOnCard, [Parameter("OrderIP", "nvarchar", ParameterDirection.Input)] string @OrderIP, [Parameter("OrderZip", "nvarchar", ParameterDirection.Input)] string @OrderZip, [Parameter("OrderError", "nvarchar", ParameterDirection.Input)] string @OrderError, [Parameter("RelatedTransactionID", "int", ParameterDirection.Input)] int? @RelatedTransactionID, [Parameter("IsAddedByAdmin", "bit", ParameterDirection.Input)] bool? @IsAddedByAdmin, [Parameter("DoNotRefund", "bit", ParameterDirection.Input)] bool? @DoNotRefund);
		[Procedure("USP_CREDITCARD_ADD_FUNDS", "dbo")] public abstract void USP_CREDITCARD_ADD_FUNDS([Parameter("userName", "varchar", ParameterDirection.Input)] string @userName, [Parameter("amount", "money", ParameterDirection.Input)] decimal? @amount, [Parameter("transactionId", "int", ParameterDirection.Input)] int? @transactionId);
		[Procedure("USP_DELETE_ATTRIBUTE_FROM_GROUP", "dbo")] public abstract void USP_DELETE_ATTRIBUTE_FROM_GROUP([Parameter("attributeId", "int", ParameterDirection.Input)] int? @attributeId);
		[Procedure("USP_DELETE_ATTRIBUTE_GROUP", "dbo")] public abstract void USP_DELETE_ATTRIBUTE_GROUP([Parameter("groupId", "int", ParameterDirection.Input)] int? @groupId);
		[Procedure("USP_DELETE_DOMAIN", "dbo")] public abstract void USP_DELETE_DOMAIN([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("Reason", "varchar", ParameterDirection.Input)] string @Reason, [Parameter("Comments", "varchar", ParameterDirection.Input)] string @Comments, [Parameter("RegistrarDeleted", "bit", ParameterDirection.Input)] bool? @RegistrarDeleted);
		[Procedure("USP_DELETE_DOMAIN_EDIT_CAPABILITIES", "dbo")] public abstract void USP_DELETE_DOMAIN_EDIT_CAPABILITIES([Parameter("IPN_Current_User_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Current_User_ID, [Parameter("IPN_Domain_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Domain_ID, [Parameter("IPN_Target_User_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Target_User_ID);
		[Procedure("USP_DELETE_EXPIRED_WHOISGUARD", "dbo")] public abstract void USP_DELETE_EXPIRED_WHOISGUARD([Parameter("slotid", "numeric", ParameterDirection.Input)] decimal? @slotid);
		[Procedure("USP_DELETE_HOSTING_USER_DETAILS", "dbo")] public abstract void USP_DELETE_HOSTING_USER_DETAILS([Parameter("autoId", "int", ParameterDirection.Input)] int? @autoId);
		[Procedure("USP_DELETE_WHOISGUARD", "dbo")] public abstract void USP_DELETE_WHOISGUARD([Parameter("id", "int", ParameterDirection.Input)] int? @id, [Parameter("userID", "numeric", ParameterDirection.Input)] decimal? @userID);
		[Procedure("usp_DeleteCardFromUserOptions", "dbo")] public abstract void usp_DeleteCardFromUserOptions([Parameter("creditCardId", "uniqueidentifier", ParameterDirection.Input)] Guid? @creditCardId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_DNS_ALL_DOMAINS_LIST", "dbo")] public abstract void USP_DNS_ALL_DOMAINS_LIST([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("IPN_User_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_User_ID, [Parameter("IPV_List_Type", "varchar", ParameterDirection.Input)] string @IPV_List_Type, [Parameter("IPV_Search_Term", "varchar", ParameterDirection.Input)] string @IPV_Search_Term, [Parameter("IPN_Category_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Category_ID, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Order", "varchar", ParameterDirection.Input)] string @Order, [Parameter("IPB_Expired_YN", "bit", ParameterDirection.Input)] bool? @IPB_Expired_YN, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("ReturnAllRows", "bit", ParameterDirection.Input)] bool? @ReturnAllRows);
		[Procedure("USP_DNS_ALLOW_DISALLOW_FREEDNS", "dbo")] public abstract void USP_DNS_ALLOW_DISALLOW_FREEDNS([Parameter("IsDisallow", "bit", ParameterDirection.Input)] bool? @IsDisallow, [Parameter("DomainName", "varchar", ParameterDirection.Input)] string @DomainName, [Parameter("Reason", "varchar", ParameterDirection.Input)] string @Reason, [Parameter("AdminReason", "varchar", ParameterDirection.Input)] string @AdminReason);
		[Procedure("USP_DNS_DELETE_DOMAIN_SETTINGS", "dbo")] public abstract void USP_DNS_DELETE_DOMAIN_SETTINGS([Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId);
		[Procedure("USP_DNS_ENABLE_DISABLE_DYNAMIC_DNS", "dbo")] public abstract void USP_DNS_ENABLE_DISABLE_DYNAMIC_DNS([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("dynamicDnsStatusXml", "xml", ParameterDirection.Input)] string @dynamicDnsStatusXml, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_GET_DNS", "dbo")] public abstract void USP_DNS_GET_DNS([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_DNS_GET_DNSPROVIDER_SERVERS_FOR_SUBTYPE", "dbo")] public abstract void USP_DNS_GET_DNSPROVIDER_SERVERS_FOR_SUBTYPE([Parameter("providerSubtype", "varchar", ParameterDirection.Input)] string @providerSubtype);
		[Procedure("USP_DNS_GET_DYNAMIC_DNS_STATUS", "dbo")] public abstract void USP_DNS_GET_DYNAMIC_DNS_STATUS([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_GET_EMAIL_FORWARDING", "dbo")] public abstract void USP_DNS_GET_EMAIL_FORWARDING([Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_GET_EMAILPROVIDER_SERVERS_FOR_SUBTYPE", "dbo")] public abstract void USP_DNS_GET_EMAILPROVIDER_SERVERS_FOR_SUBTYPE([Parameter("providerSubtype", "varchar", ParameterDirection.Input)] string @providerSubtype);
		[Procedure("USP_DNS_GET_HOSTS", "dbo")] public abstract void USP_DNS_GET_HOSTS([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_GET_METATAGS", "dbo")] public abstract void USP_DNS_GET_METATAGS([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("hostId", "int", ParameterDirection.Input)] int? @hostId, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_GET_PROVIDER_TYPE_BY_RR", "dbo")] public abstract void USP_DNS_GET_PROVIDER_TYPE_BY_RR([Parameter("dnsXml", "xml", ParameterDirection.Input)] string @dnsXml, [Parameter("status", "varchar", ParameterDirection.InputOutput)] string @status, [Parameter("dnsSubType", "varchar", ParameterDirection.InputOutput)] string @dnsSubType);
		[Procedure("USP_DNS_GET_SOA", "dbo")] public abstract void USP_DNS_GET_SOA([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("USP_DNS_GET_URL_FORWARDING", "dbo")] public abstract void USP_DNS_GET_URL_FORWARDING([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_GETROWCOUNT_FOR_ALLDOMAINS_LIST", "dbo")] public abstract void USP_DNS_GETROWCOUNT_FOR_ALLDOMAINS_LIST([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("IPB_Expired_YN", "bit", ParameterDirection.Input)] bool? @IPB_Expired_YN, [Parameter("IPN_User_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_User_ID, [Parameter("IPV_List_Type", "varchar", ParameterDirection.Input)] string @IPV_List_Type, [Parameter("IPV_Search_Term", "varchar", ParameterDirection.Input)] string @IPV_Search_Term, [Parameter("IPN_Category_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Category_ID);
		[Procedure("USP_DNS_HOSTED_DOMAINS_HISTORY_REPORT", "dbo")] public abstract void USP_DNS_HOSTED_DOMAINS_HISTORY_REPORT([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("IPV_Search_Term", "varchar", ParameterDirection.Input)] string @IPV_Search_Term, [Parameter("FromDate", "datetime", ParameterDirection.Input)] DateTime? @FromDate, [Parameter("ToDate", "datetime", ParameterDirection.Input)] DateTime? @ToDate, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Order", "varchar", ParameterDirection.Input)] string @Order, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("ReturnAllRows", "bit", ParameterDirection.Input)] bool? @ReturnAllRows);
		[Procedure("USP_DNS_HOSTED_DOMAINS_LIST", "dbo")] public abstract void USP_DNS_HOSTED_DOMAINS_LIST([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("IPV_Search_Term", "varchar", ParameterDirection.Input)] string @IPV_Search_Term, [Parameter("IPN_Category_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Category_ID, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Order", "varchar", ParameterDirection.Input)] string @Order, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("ReturnAllRows", "bit", ParameterDirection.Input)] bool? @ReturnAllRows);
		[Procedure("USP_DNS_HOSTING_ADD_HOST", "dbo")] public abstract void USP_DNS_HOSTING_ADD_HOST([Parameter("hostName", "varchar", ParameterDirection.Input)] string @hostName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("addToHostedDomain", "bit", ParameterDirection.Input)] bool? @addToHostedDomain, [Parameter("activateHostRecords", "bit", ParameterDirection.Input)] bool? @activateHostRecords, [Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("computedTLD", "varchar", ParameterDirection.Input)] string @computedTLD, [Parameter("authorizationStatus", "varchar", ParameterDirection.Input)] string @authorizationStatus, [Parameter("verificationStatus", "varchar", ParameterDirection.Input)] string @verificationStatus, [Parameter("registrarName", "varchar", ParameterDirection.Input)] string @registrarName, [Parameter("expiryDateTime", "datetime", ParameterDirection.Input)] DateTime? @expiryDateTime, [Parameter("addedIP", "varchar", ParameterDirection.Input)] string @addedIP, [Parameter("providerSubType", "varchar", ParameterDirection.Input)] string @providerSubType);
		[Procedure("USP_DNS_HOSTING_ADD_TO_CART", "dbo")] public abstract void USP_DNS_HOSTING_ADD_TO_CART([Parameter("refID", "varchar", ParameterDirection.Input)] string @refID, [Parameter("domainNameList", "varchar", ParameterDirection.Input)] string @domainNameList, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("prevRefID", "varchar", ParameterDirection.Input)] string @prevRefID);
		[Procedure("USP_DNS_HOSTING_ADD_TO_CART_FOR_BULK_FREE_DNS", "dbo")] public abstract void USP_DNS_HOSTING_ADD_TO_CART_FOR_BULK_FREE_DNS([Parameter("refID", "varchar", ParameterDirection.Input)] string @refID, [Parameter("domainNameList", "varchar", ParameterDirection.Input)] string @domainNameList, [Parameter("IsBulkHost", "bit", ParameterDirection.Input)] bool? @IsBulkHost);
		[Procedure("USP_DNS_HOSTING_AUTHORIZATION_PROCESS", "dbo")] public abstract void USP_DNS_HOSTING_AUTHORIZATION_PROCESS([Parameter("isAuthorized", "bit", ParameterDirection.Input)] bool? @isAuthorized, [Parameter("isHostedDomain", "bit", ParameterDirection.Input)] bool? @isHostedDomain, [Parameter("hostDomainsID", "int", ParameterDirection.Input)] int? @hostDomainsID, [Parameter("authorizationKey", "varchar", ParameterDirection.Input)] string @authorizationKey, [Parameter("authorizationIP", "varchar", ParameterDirection.Input)] string @authorizationIP, [Parameter("authorizationStatus", "varchar", ParameterDirection.Input)] string @authorizationStatus, [Parameter("adminComments", "varchar", ParameterDirection.Input)] string @adminComments);
		[Procedure("USP_DNS_HOSTING_AUTOMATION_GET_TO_VERIFY_LIST", "dbo")] public abstract void USP_DNS_HOSTING_AUTOMATION_GET_TO_VERIFY_LIST();
		[Procedure("USP_DNS_HOSTING_CHECK_HOST_EXISTED", "dbo")] public abstract void USP_DNS_HOSTING_CHECK_HOST_EXISTED([Parameter("hostName", "varchar", ParameterDirection.Input)] string @hostName, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_DNS_HOSTING_CHECK_HOSTNAME_FOR_EMAIL_UPDATE", "dbo")] public abstract void USP_DNS_HOSTING_CHECK_HOSTNAME_FOR_EMAIL_UPDATE([Parameter("hostName", "varchar", ParameterDirection.Input)] string @hostName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("isHostedDomain", "bit", ParameterDirection.Input)] bool? @isHostedDomain);
		[Procedure("USP_DNS_HOSTING_DELETE_AUTHORIZATION_EXPIRED_DOMAINS", "dbo")] public abstract void USP_DNS_HOSTING_DELETE_AUTHORIZATION_EXPIRED_DOMAINS();
		[Procedure("USP_DNS_HOSTING_DELETE_FROM_CART", "dbo")] public abstract void USP_DNS_HOSTING_DELETE_FROM_CART([Parameter("refID", "varchar", ParameterDirection.Input)] string @refID);
		[Procedure("USP_DNS_HOSTING_DELETE_HOST", "dbo")] public abstract void USP_DNS_HOSTING_DELETE_HOST([Parameter("hostName", "varchar", ParameterDirection.Input)] string @hostName, [Parameter("actionType", "varchar", ParameterDirection.Input)] string @actionType, [Parameter("actionDescription", "varchar", ParameterDirection.Input)] string @actionDescription);
		[Procedure("USP_DNS_HOSTING_EXTEND_VALIDITY_DATE", "dbo")] public abstract void USP_DNS_HOSTING_EXTEND_VALIDITY_DATE([Parameter("hostID", "int", ParameterDirection.Input)] int? @hostID, [Parameter("newVerificationExpiryDateTime", "datetime", ParameterDirection.Input)] DateTime? @newVerificationExpiryDateTime, [Parameter("comments", "varchar", ParameterDirection.Input)] string @comments);
		[Procedure("USP_DNS_HOSTING_GET_ACTION_LIST", "dbo")] public abstract void USP_DNS_HOSTING_GET_ACTION_LIST();
		[Procedure("USP_DNS_HOSTING_GET_ALL_TLD_LIST", "dbo")] public abstract void USP_DNS_HOSTING_GET_ALL_TLD_LIST([Parameter("IsOnly_AllowDNSHosting", "bit", ParameterDirection.Input)] bool? @IsOnly_AllowDNSHosting, [Parameter("tldType", "varchar", ParameterDirection.Input)] string @tldType);
		[Procedure("USP_DNS_HOSTING_GET_AUTHORIZATION_DETAILS", "dbo")] public abstract void USP_DNS_HOSTING_GET_AUTHORIZATION_DETAILS([Parameter("isHostedDomains", "bit", ParameterDirection.Input)] bool? @isHostedDomains, [Parameter("authorizationKey", "varchar", ParameterDirection.Input)] string @authorizationKey);
		[Procedure("USP_DNS_HOSTING_GET_CATEGORIES", "dbo")] public abstract void USP_DNS_HOSTING_GET_CATEGORIES([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_DNS_HOSTING_GET_DOMAIN_LIST_BY_BULK_HOST_TAG_FREE_DNS", "dbo")] public abstract void USP_DNS_HOSTING_GET_DOMAIN_LIST_BY_BULK_HOST_TAG_FREE_DNS([Parameter("refID", "varchar", ParameterDirection.Input)] string @refID, [Parameter("bulkHost", "bit", ParameterDirection.Input)] bool? @bulkHost);
		[Procedure("USP_DNS_HOSTING_GET_DOMAIN_LIST_BY_REF_ID", "dbo")] public abstract void USP_DNS_HOSTING_GET_DOMAIN_LIST_BY_REF_ID([Parameter("refID", "varchar", ParameterDirection.Input)] string @refID, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_DNS_HOSTING_GET_EXPIRED_HOST_LIST", "dbo")] public abstract void USP_DNS_HOSTING_GET_EXPIRED_HOST_LIST();
		[Procedure("USP_DNS_HOSTING_GET_HOST_DETAILS_FOR_ADMIN", "dbo")] public abstract void USP_DNS_HOSTING_GET_HOST_DETAILS_FOR_ADMIN([Parameter("isHostedDomain", "bit", ParameterDirection.Input)] bool? @isHostedDomain, [Parameter("hostID", "int", ParameterDirection.Input)] int? @hostID);
		[Procedure("USP_DNS_HOSTING_GET_HOSTED_DOMAIN_DETIALS", "dbo")] public abstract void USP_DNS_HOSTING_GET_HOSTED_DOMAIN_DETIALS([Parameter("hostName", "varchar", ParameterDirection.Input)] string @hostName);
		[Procedure("USP_DNS_HOSTING_GET_INFO", "dbo")] public abstract void USP_DNS_HOSTING_GET_INFO([Parameter("hostName", "varchar", ParameterDirection.Input)] string @hostName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_DNS_HOSTING_GET_STATUS_LIST", "dbo")] public abstract void USP_DNS_HOSTING_GET_STATUS_LIST();
		[Procedure("USP_DNS_HOSTING_GET_SUB_DOMAIN_INFO", "dbo")] public abstract void USP_DNS_HOSTING_GET_SUB_DOMAIN_INFO([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("hostId", "int", ParameterDirection.Input)] int? @hostId);
		[Procedure("USP_DNS_HOSTING_GET_SUB_DOMAIN_LIST", "dbo")] public abstract void USP_DNS_HOSTING_GET_SUB_DOMAIN_LIST([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("IPV_Search_Term", "varchar", ParameterDirection.Input)] string @IPV_Search_Term);
		[Procedure("USP_DNS_HOSTING_GET_TO_AUTHORIZE_LIST", "dbo")] public abstract void USP_DNS_HOSTING_GET_TO_AUTHORIZE_LIST();
		[Procedure("USP_DNS_HOSTING_IS_ALLOW_FREE_DNS", "dbo")] public abstract void USP_DNS_HOSTING_IS_ALLOW_FREE_DNS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_DNS_HOSTING_LOCK_UNLOCK_HOST", "dbo")] public abstract void USP_DNS_HOSTING_LOCK_UNLOCK_HOST([Parameter("hostID", "int", ParameterDirection.Input)] int? @hostID, [Parameter("domainLockedYN", "bit", ParameterDirection.Input)] bool? @domainLockedYN, [Parameter("comments", "varchar", ParameterDirection.Input)] string @comments, [Parameter("lockUnlockReason", "varchar", ParameterDirection.Input)] string @lockUnlockReason, [Parameter("calledBy", "varchar", ParameterDirection.Input)] string @calledBy);
		[Procedure("USP_DNS_HOSTING_PAY_FOR_SUBSCRIPTION", "dbo")] public abstract void USP_DNS_HOSTING_PAY_FOR_SUBSCRIPTION([Parameter("ActionID", "varchar", ParameterDirection.Input)] string @ActionID, [Parameter("RefID", "varchar", ParameterDirection.Input)] string @RefID, [Parameter("sSLD", "varchar", ParameterDirection.Input)] string @sSLD, [Parameter("sTLD", "varchar", ParameterDirection.Input)] string @sTLD, [Parameter("NumofYears", "smallint", ParameterDirection.Input)] short? @NumofYears, [Parameter("Qty", "int", ParameterDirection.Input)] int? @Qty, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName, [Parameter("sTransactionID", "nvarchar", ParameterDirection.Input)] string @sTransactionID, [Parameter("sOrderID", "nvarchar", ParameterDirection.Input)] string @sOrderID, [Parameter("sPayStatus", "nvarchar", ParameterDirection.Input)] string @sPayStatus, [Parameter("sNumericOrderID", "numeric", ParameterDirection.Input)] decimal? @sNumericOrderID);
		[Procedure("USP_DNS_HOSTING_RE_INITIATE_AUTHORIZATION", "dbo")] public abstract void USP_DNS_HOSTING_RE_INITIATE_AUTHORIZATION([Parameter("isHostedDomains", "bit", ParameterDirection.Input)] bool? @isHostedDomains, [Parameter("hostID", "int", ParameterDirection.Input)] int? @hostID, [Parameter("authorizationEmail", "varchar", ParameterDirection.Input)] string @authorizationEmail, [Parameter("comments", "varchar", ParameterDirection.Input)] string @comments);
		[Procedure("USP_DNS_HOSTING_RE_INITIATE_VERIFICATION", "dbo")] public abstract void USP_DNS_HOSTING_RE_INITIATE_VERIFICATION([Parameter("hostID", "int", ParameterDirection.Input)] int? @hostID, [Parameter("comments", "varchar", ParameterDirection.Input)] string @comments);
		[Procedure("USP_DNS_HOSTING_REMOVE_FROM_DNS_SYSTEM", "dbo")] public abstract void USP_DNS_HOSTING_REMOVE_FROM_DNS_SYSTEM([Parameter("isHostedDomain", "bit", ParameterDirection.Input)] bool? @isHostedDomain, [Parameter("hostID", "int", ParameterDirection.Input)] int? @hostID, [Parameter("actionType", "varchar", ParameterDirection.Input)] string @actionType, [Parameter("actionDescription", "varchar", ParameterDirection.Input)] string @actionDescription);
		[Procedure("USP_DNS_HOSTING_RESET_AUTHORIZATION", "dbo")] public abstract void USP_DNS_HOSTING_RESET_AUTHORIZATION([Parameter("isHostedDomains", "bit", ParameterDirection.Input)] bool? @isHostedDomains, [Parameter("hostID", "int", ParameterDirection.Input)] int? @hostID, [Parameter("comments", "varchar", ParameterDirection.Input)] string @comments);
		[Procedure("USP_DNS_HOSTING_SET_AUTHORIZATION_EMAIL", "dbo")] public abstract void USP_DNS_HOSTING_SET_AUTHORIZATION_EMAIL([Parameter("hostName", "varchar", ParameterDirection.Input)] string @hostName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("authorizationEmail", "varchar", ParameterDirection.Input)] string @authorizationEmail, [Parameter("isHostedDomains", "bit", ParameterDirection.Input)] bool? @isHostedDomains);
		[Procedure("USP_DNS_HOSTING_UPDATE_AUTHORIZATION_DETAILS", "dbo")] public abstract void USP_DNS_HOSTING_UPDATE_AUTHORIZATION_DETAILS([Parameter("isHostedDomains", "bit", ParameterDirection.Input)] bool? @isHostedDomains, [Parameter("hostId", "int", ParameterDirection.Input)] int? @hostId, [Parameter("authorizationStatus", "varchar", ParameterDirection.Input)] string @authorizationStatus, [Parameter("authorizationEmail", "varchar", ParameterDirection.Input)] string @authorizationEmail, [Parameter("authorizationKey", "varchar", ParameterDirection.Input)] string @authorizationKey);
		[Procedure("USP_DNS_HOSTING_UPDATE_AUTHORIZATION_STATUS", "dbo")] public abstract void USP_DNS_HOSTING_UPDATE_AUTHORIZATION_STATUS([Parameter("hostName", "varchar", ParameterDirection.Input)] string @hostName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("isHostedDomains", "bit", ParameterDirection.Input)] bool? @isHostedDomains, [Parameter("action", "varchar", ParameterDirection.Input)] string @action);
		[Procedure("USP_DNS_HOSTING_UPDATE_HOST", "dbo")] public abstract void USP_DNS_HOSTING_UPDATE_HOST([Parameter("hostName", "varchar", ParameterDirection.Input)] string @hostName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("providerSubType", "varchar", ParameterDirection.Input)] string @providerSubType);
		[Procedure("USP_DNS_HOSTING_VALIDATE_DOMAIN", "dbo")] public abstract void USP_DNS_HOSTING_VALIDATE_DOMAIN([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_DNS_HOSTING_VALIDATE_FOR_PARENT_OWNER", "dbo")] public abstract void USP_DNS_HOSTING_VALIDATE_FOR_PARENT_OWNER([Parameter("hostID", "int", ParameterDirection.Input)] int? @hostID, [Parameter("isHostedDomain", "bit", ParameterDirection.Input)] bool? @isHostedDomain, [Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("actionType", "varchar", ParameterDirection.Input)] string @actionType);
		[Procedure("USP_DNS_HOSTING_VALIDATE_HOST", "dbo")] public abstract void USP_DNS_HOSTING_VALIDATE_HOST([Parameter("hostName", "varchar", ParameterDirection.Input)] string @hostName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("isSubDomain", "bit", ParameterDirection.Input)] bool? @isSubDomain, [Parameter("checkUserIfDNSHostingdisabled", "bit", ParameterDirection.Input)] bool? @checkUserIfDNSHostingdisabled, [Parameter("checkIfDomainBanned", "bit", ParameterDirection.Input)] bool? @checkIfDomainBanned);
		[Procedure("USP_DNS_HOSTING_VERIFICATION_PROCESS", "dbo")] public abstract void USP_DNS_HOSTING_VERIFICATION_PROCESS([Parameter("hostID", "int", ParameterDirection.Input)] int? @hostID, [Parameter("verificationStatusName", "varchar", ParameterDirection.Input)] string @verificationStatusName, [Parameter("verificationExtendValidityPeriod", "int", ParameterDirection.Input)] int? @verificationExtendValidityPeriod, [Parameter("comments", "varchar", ParameterDirection.Input)] string @comments);
		[Procedure("USP_DNS_HOSTING_VERIFICATION_PROCESS_FOR_AMDIN", "dbo")] public abstract void USP_DNS_HOSTING_VERIFICATION_PROCESS_FOR_AMDIN([Parameter("hostID", "int", ParameterDirection.Input)] int? @hostID, [Parameter("verificationStatusName", "varchar", ParameterDirection.Input)] string @verificationStatusName, [Parameter("verificationExtendValidityPeriod", "int", ParameterDirection.Input)] int? @verificationExtendValidityPeriod, [Parameter("comments", "varchar", ParameterDirection.Input)] string @comments);
		[Procedure("USP_DNS_PENDING_HOSTED_DOMAINS_LIST", "dbo")] public abstract void USP_DNS_PENDING_HOSTED_DOMAINS_LIST([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("IPV_Search_Term", "varchar", ParameterDirection.Input)] string @IPV_Search_Term, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Order", "varchar", ParameterDirection.Input)] string @Order, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("ReturnAllRows", "bit", ParameterDirection.Input)] bool? @ReturnAllRows);
		[Procedure("USP_DNS_PROVIDER_REPLICATION", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_DDNS", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_DDNS([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_NEWT0", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_NEWT0([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_NEWT1", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_NEWT1([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_NEWT2", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_NEWT2([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_NEWT3", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_NEWT3([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_NEWT4", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_NEWT4([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_T0", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_T0([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_T1", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_T1([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_T2", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_T2([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_T3", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_T3([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_T4", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_T4([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_T5", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_T5([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_T6", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_T6([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_T7", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_T7([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_T8", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_T8([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_PROVIDER_REPLICATION_T9", "dbo")] public abstract void USP_DNS_PROVIDER_REPLICATION_T9([Parameter("domainId", "int", ParameterDirection.Input)] int? @domainId, [Parameter("oldProviderId", "tinyint", ParameterDirection.Input)] byte? @oldProviderId, [Parameter("newProviderId", "tinyint", ParameterDirection.Input)] byte? @newProviderId, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType, [Parameter("uniqueId", "uniqueidentifier", ParameterDirection.Input)] Guid? @uniqueId, [Parameter("domainnameToCleanUp", "varchar", ParameterDirection.Input)] string @domainnameToCleanUp, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_SET_DNS", "dbo")] public abstract void USP_DNS_SET_DNS([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("dnsXml", "xml", ParameterDirection.Input)] string @dnsXml);
		[Procedure("USP_DNS_SET_DNS_SYNC", "dbo")] public abstract void USP_DNS_SET_DNS_SYNC([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("dnsXml", "xml", ParameterDirection.Input)] string @dnsXml, [Parameter("expDateTime", "datetime", ParameterDirection.Input)] DateTime? @expDateTime, [Parameter("isExpDateUpdateRequired", "bit", ParameterDirection.Input)] bool? @isExpDateUpdateRequired, [Parameter("isDnsUpdateRequired", "bit", ParameterDirection.Input)] bool? @isDnsUpdateRequired, [Parameter("oldDnsServers", "nvarchar", ParameterDirection.Input)] string @oldDnsServers, [Parameter("oldDnsServerType", "varchar", ParameterDirection.Input)] string @oldDnsServerType, [Parameter("newDnsServerType", "varchar", ParameterDirection.Input)] string @newDnsServerType);
		[Procedure("USP_DNS_SET_DYNAMIC_DNS", "dbo")] public abstract void USP_DNS_SET_DYNAMIC_DNS([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("dynamicDnsStatusXml", "xml", ParameterDirection.Input)] string @dynamicDnsStatusXml);
		[Procedure("USP_DNS_SET_EMAIL_FORWARDING", "dbo")] public abstract void USP_DNS_SET_EMAIL_FORWARDING([Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("emailforwardsXml", "xml", ParameterDirection.Input)] string @emailforwardsXml, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_SET_HOSTS", "dbo")] public abstract void USP_DNS_SET_HOSTS([Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("hostXml", "xml", ParameterDirection.Input)] string @hostXml, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_SET_METATAGS", "dbo")] public abstract void USP_DNS_SET_METATAGS([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("hostXml", "xml", ParameterDirection.Input)] string @hostXml, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_SET_URL_FORWARDING", "dbo")] public abstract void USP_DNS_SET_URL_FORWARDING([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("urlFwdXML", "xml", ParameterDirection.Input)] string @urlFwdXML, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_DNS_SETHOSTS_FOR_A_DOMAIN", "dbo")] public abstract void USP_DNS_SETHOSTS_FOR_A_DOMAIN([Parameter("hostXML", "xml", ParameterDirection.Input)] string @hostXML, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_DnsRestrictionGetRestrictionDetails", "dbo")] public abstract void usp_DnsRestrictionGetRestrictionDetails([Parameter("Type", "varchar", ParameterDirection.Input)] string @Type, [Parameter("Name", "varchar", ParameterDirection.Input)] string @Name);
		[Procedure("usp_DnsRestrictionGetRestrictions", "dbo")] public abstract void usp_DnsRestrictionGetRestrictions();
		[Procedure("usp_DnsRestrictionGetRestrictionsHistory", "dbo")] public abstract void usp_DnsRestrictionGetRestrictionsHistory([Parameter("Type", "varchar", ParameterDirection.Input)] string @Type, [Parameter("Name", "varchar", ParameterDirection.Input)] string @Name);
		[Procedure("usp_DnsRestrictionSaveRestrictionDetails", "dbo")] public abstract void usp_DnsRestrictionSaveRestrictionDetails([Parameter("Type", "nvarchar", ParameterDirection.Input)] string @Type, [Parameter("Name", "nvarchar", ParameterDirection.Input)] string @Name, [Parameter("RestrictionNamesCSV", "varchar", ParameterDirection.Input)] string @RestrictionNamesCSV, [Parameter("StartDate", "varchar", ParameterDirection.Input)] string @StartDate, [Parameter("EndDate", "varchar", ParameterDirection.Input)] string @EndDate, [Parameter("Reason", "varchar", ParameterDirection.Input)] string @Reason, [Parameter("Comment", "varchar", ParameterDirection.Input)] string @Comment, [Parameter("AdminUserName", "varchar", ParameterDirection.Input)] string @AdminUserName, [Parameter("AdminIp", "varchar", ParameterDirection.Input)] string @AdminIp);
		[Procedure("usp_DnsRestrictionValidateDomainName", "dbo")] public abstract void usp_DnsRestrictionValidateDomainName([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("usp_DnsRestrictionValidateUserName", "dbo")] public abstract void usp_DnsRestrictionValidateUserName([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_DO_FINAL_VALIDATION_FOR_SPECIALPROMOTION", "dbo")] public abstract void USP_DO_FINAL_VALIDATION_FOR_SPECIALPROMOTION([Parameter("refId", "varchar", ParameterDirection.Input)] string @refId, [Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("clientIp", "varchar", ParameterDirection.Input)] string @clientIp, [Parameter("maxOrderCountAllowedPerUser", "int", ParameterDirection.Input)] int? @maxOrderCountAllowedPerUser, [Parameter("orderCountCheckStartDateTime", "datetime", ParameterDirection.Input)] DateTime? @orderCountCheckStartDateTime);
		[Procedure("usp_DoesUserHaveAlreadyFailedOrdersDueToCrossCheck", "dbo")] public abstract void usp_DoesUserHaveAlreadyFailedOrdersDueToCrossCheck([Parameter("UserId", "int", ParameterDirection.Input)] int? @UserId, [Parameter("PromotionCode", "nvarchar", ParameterDirection.Input)] string @PromotionCode, [Parameter("PromotionBeginDate", "int", ParameterDirection.Input)] int? @PromotionBeginDate);
		[Procedure("USP_DOMAIN_EXTRA_STATUS", "dbo")] public abstract void USP_DOMAIN_EXTRA_STATUS([Parameter("IPV_DomainName", "varchar", ParameterDirection.Input)] string @IPV_DomainName);
		[Procedure("USP_DOMAIN_LIST_EXPORT", "dbo")] public abstract void USP_DOMAIN_LIST_EXPORT([Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName);
		[Procedure("USP_DOMAIN_PARKING_GET", "dbo")] public abstract void USP_DOMAIN_PARKING_GET([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("USP_DOMAIN_PARKING_SET", "dbo")] public abstract void USP_DOMAIN_PARKING_SET([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("ParkingText", "text", ParameterDirection.Input)] string @ParkingText, [Parameter("TrackingCode", "text", ParameterDirection.Input)] string @TrackingCode);
		[Procedure("usp_Domains_GetProvidersResourceRecords", "dbo")] public abstract void usp_Domains_GetProvidersResourceRecords([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("USP_EDIT_MP_DOMAIN", "dbo")] public abstract void USP_EDIT_MP_DOMAIN([Parameter("LisitngID", "numeric", ParameterDirection.Input)] decimal? @LisitngID, [Parameter("ListingPrice", "money", ParameterDirection.Input)] decimal? @ListingPrice, [Parameter("ListingDate", "datetime", ParameterDirection.Input)] DateTime? @ListingDate, [Parameter("ListExpiryDate", "datetime", ParameterDirection.Input)] DateTime? @ListExpiryDate, [Parameter("AcceptOffer", "bit", ParameterDirection.Input)] bool? @AcceptOffer, [Parameter("AdultListing", "bit", ParameterDirection.Input)] bool? @AdultListing, [Parameter("Hypens", "bit", ParameterDirection.Input)] bool? @Hypens, [Parameter("Numbers", "bit", ParameterDirection.Input)] bool? @Numbers, [Parameter("category1", "int", ParameterDirection.Input)] int? @category1, [Parameter("category2", "int", ParameterDirection.Input)] int? @category2, [Parameter("OperationType", "varchar", ParameterDirection.Input)] string @OperationType, [Parameter("ClosedReason", "text", ParameterDirection.Input)] string @ClosedReason, [Parameter("DomainCommission", "int", ParameterDirection.Input)] int? @DomainCommission);
		[Procedure("usp_EnableApiForResellerActivation", "dbo")] public abstract void usp_EnableApiForResellerActivation([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_EnableDisable2FAForUser", "dbo")] public abstract void usp_EnableDisable2FAForUser([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("Mode", "nvarchar", ParameterDirection.Input)] string @Mode, [Parameter("AdminUser", "varchar", ParameterDirection.Input)] string @AdminUser, [Parameter("AdminUsername", "nvarchar", ParameterDirection.Input)] string @AdminUsername, [Parameter("Comments", "varchar", ParameterDirection.Input)] string @Comments, [Parameter("Ip", "varchar", ParameterDirection.Input)] string @Ip);
		[Procedure("USP_EventQ_Add_DomainLockUnlock_Event", "dbo")] public abstract void USP_EventQ_Add_DomainLockUnlock_Event([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("ip", "nvarchar", ParameterDirection.Input)] string @ip, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("Locked", "bit", ParameterDirection.Input)] bool? @Locked);
		[Procedure("USP_EventQ_Add_Notification", "dbo")] public abstract void USP_EventQ_Add_Notification([Parameter("eventTypeName", "nvarchar", ParameterDirection.Input)] string @eventTypeName, [Parameter("customerName", "nvarchar", ParameterDirection.Input)] string @customerName, [Parameter("xmlData", "nvarchar", ParameterDirection.Input)] string @xmlData, [Parameter("priority", "int", ParameterDirection.Input)] int? @priority);
		[Procedure("USP_EventQ_Add_Notification_Domain_AutoRenew_Updates", "dbo")] public abstract void USP_EventQ_Add_Notification_Domain_AutoRenew_Updates([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip, [Parameter("dataSubType", "varchar", ParameterDirection.Input)] string @dataSubType, [Parameter("oldData", "xml", ParameterDirection.Input)] string @oldData, [Parameter("newData", "xml", ParameterDirection.Input)] string @newData);
		[Procedure("USP_EventQ_Add_Notification_Domain_Contacts_Updates", "dbo")] public abstract void USP_EventQ_Add_Notification_Domain_Contacts_Updates([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip, [Parameter("dataSubType", "varchar", ParameterDirection.Input)] string @dataSubType, [Parameter("oldData", "xml", ParameterDirection.Input)] string @oldData, [Parameter("newData", "xml", ParameterDirection.Input)] string @newData);
		[Procedure("USP_EventQ_Add_Notification_Domain_Dns_Updates", "dbo")] public abstract void USP_EventQ_Add_Notification_Domain_Dns_Updates([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip, [Parameter("dataSubType", "varchar", ParameterDirection.Input)] string @dataSubType, [Parameter("oldData", "xml", ParameterDirection.Input)] string @oldData, [Parameter("newData", "xml", ParameterDirection.Input)] string @newData);
		[Procedure("USP_EventQ_Add_Notification_Domain_DynDns_Updates", "dbo")] public abstract void USP_EventQ_Add_Notification_Domain_DynDns_Updates([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip, [Parameter("dataSubType", "varchar", ParameterDirection.Input)] string @dataSubType, [Parameter("oldData", "xml", ParameterDirection.Input)] string @oldData, [Parameter("newData", "xml", ParameterDirection.Input)] string @newData);
		[Procedure("USP_EventQ_Add_Notification_Domain_Hosts_Updates", "dbo")] public abstract void USP_EventQ_Add_Notification_Domain_Hosts_Updates([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip, [Parameter("dataSubType", "varchar", ParameterDirection.Input)] string @dataSubType, [Parameter("oldData", "xml", ParameterDirection.Input)] string @oldData, [Parameter("newData", "xml", ParameterDirection.Input)] string @newData);
		[Procedure("USP_EventQ_Add_Notification_Domain_MailForward_Updates", "dbo")] public abstract void USP_EventQ_Add_Notification_Domain_MailForward_Updates([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip, [Parameter("dataSubType", "varchar", ParameterDirection.Input)] string @dataSubType, [Parameter("oldData", "xml", ParameterDirection.Input)] string @oldData, [Parameter("newData", "xml", ParameterDirection.Input)] string @newData);
		[Procedure("USP_EventQ_Add_User_Logged_Event", "dbo")] public abstract void USP_EventQ_Add_User_Logged_Event([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("ip", "nvarchar", ParameterDirection.Input)] string @ip);
		[Procedure("USP_EXPIRINGDOMAINS", "dbo")] public abstract void USP_EXPIRINGDOMAINS([Parameter("Alphanumeric", "char", ParameterDirection.Input)] string @Alphanumeric);
		[Procedure("usp_ExportMarketplaceListingDataToDomainsBot", "dbo")] public abstract void usp_ExportMarketplaceListingDataToDomainsBot();
		[Procedure("USP_FETCH_PROFILE_PASSWORD_REMINDER_SETTINGS", "dbo")] public abstract void USP_FETCH_PROFILE_PASSWORD_REMINDER_SETTINGS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_FETCH_PROFILE_RENEWAL_MAIL_SETTINGS", "dbo")] public abstract void USP_FETCH_PROFILE_RENEWAL_MAIL_SETTINGS([Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName);
		[Procedure("USP_FIND_AND_FILL_FIRST_SUCCESSFUL_ORDER", "dbo")] public abstract void USP_FIND_AND_FILL_FIRST_SUCCESSFUL_ORDER([Parameter("Username", "nvarchar", ParameterDirection.Input)] string @Username);
		[Procedure("USP_FINISH_MONEY_TRANSFER_REQUESTS", "dbo")] public abstract void USP_FINISH_MONEY_TRANSFER_REQUESTS([Parameter("RequestID", "numeric", ParameterDirection.Input)] decimal? @RequestID, [Parameter("Option", "bit", ParameterDirection.Input)] bool? @Option, [Parameter("Reason", "varchar", ParameterDirection.Input)] string @Reason, [Parameter("AdminUsername", "varchar", ParameterDirection.Input)] string @AdminUsername, [Parameter("AdminIP", "varchar", ParameterDirection.Input)] string @AdminIP);
		[Procedure("USP_FLAG_TO_EXPRESS_PAGE", "dbo")] public abstract void USP_FLAG_TO_EXPRESS_PAGE([Parameter("refID", "varchar", ParameterDirection.Input)] string @refID, [Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName);
		[Procedure("usp_GenericCreateOrder", "dbo")] public abstract void usp_GenericCreateOrder([Parameter("orderRefId", "nvarchar", ParameterDirection.Input)] string @orderRefId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("totalPrice", "money", ParameterDirection.Input)] decimal? @totalPrice, [Parameter("requestIp", "nvarchar", ParameterDirection.Input)] string @requestIp, [Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode, [Parameter("newOrderId", "bigint", ParameterDirection.InputOutput)] long? @newOrderId);
		[Procedure("usp_GenericCreateOrderDetailDomain", "dbo")] public abstract void usp_GenericCreateOrderDetailDomain([Parameter("orderId", "int", ParameterDirection.Input)] int? @orderId, [Parameter("sld", "nvarchar", ParameterDirection.Input)] string @sld, [Parameter("tld", "nvarchar", ParameterDirection.Input)] string @tld, [Parameter("duration", "smallint", ParameterDirection.Input)] short? @duration, [Parameter("price", "money", ParameterDirection.Input)] decimal? @price, [Parameter("regularPrice", "money", ParameterDirection.Input)] decimal? @regularPrice, [Parameter("specialPrice", "money", ParameterDirection.Input)] decimal? @specialPrice, [Parameter("qty", "int", ParameterDirection.Input)] int? @qty, [Parameter("actionName", "varchar", ParameterDirection.Input)] string @actionName, [Parameter("additionalCost", "money", ParameterDirection.Input)] decimal? @additionalCost, [Parameter("durationType", "varchar", ParameterDirection.Input)] string @durationType, [Parameter("isPricingMultiple", "bit", ParameterDirection.Input)] bool? @isPricingMultiple, [Parameter("specialAdditionalCost", "money", ParameterDirection.Input)] decimal? @specialAdditionalCost, [Parameter("regularadditionalCost", "money", ParameterDirection.Input)] decimal? @regularadditionalCost, [Parameter("parentOrderItemId", "numeric", ParameterDirection.Input)] decimal? @parentOrderItemId, [Parameter("newOrderDetailId", "bigint", ParameterDirection.InputOutput)] long? @newOrderDetailId);
		[Procedure("USP_GET_ADMIN_CONTEXT_ROLE", "dbo")] public abstract void USP_GET_ADMIN_CONTEXT_ROLE([Parameter("userName", "varchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_GET_ADMIN_MP_DOMAIN_LIST", "dbo")] public abstract void USP_GET_ADMIN_MP_DOMAIN_LIST();
		[Procedure("USP_GET_ADMIN_ROLE_COMMAND", "dbo")] public abstract void USP_GET_ADMIN_ROLE_COMMAND([Parameter("roleName", "varchar", ParameterDirection.Input)] string @roleName);
		[Procedure("USP_GET_ADMIN_ROLES", "dbo")] public abstract void USP_GET_ADMIN_ROLES([Parameter("roleName", "varchar", ParameterDirection.Input)] string @roleName);
		[Procedure("USP_GET_ADMIN_USER_CONTEXT_ROLE", "dbo")] public abstract void USP_GET_ADMIN_USER_CONTEXT_ROLE([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("USP_GET_ADMIN_USER_ROLES", "dbo")] public abstract void USP_GET_ADMIN_USER_ROLES([Parameter("adminUserName", "nvarchar", ParameterDirection.Input)] string @adminUserName);
		[Procedure("USP_GET_ADMIN_USER_SECUIRTY_SETTINGS", "dbo")] public abstract void USP_GET_ADMIN_USER_SECUIRTY_SETTINGS([Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName);
		[Procedure("USP_GET_ADMIN_USERS_IN_ROLE", "dbo")] public abstract void USP_GET_ADMIN_USERS_IN_ROLE([Parameter("roleName", "varchar", ParameterDirection.Input)] string @roleName);
		[Procedure("USP_GET_ALL_AUTORENEW_STATUS", "dbo")] public abstract void USP_GET_ALL_AUTORENEW_STATUS([Parameter("IPV_DomainName", "varchar", ParameterDirection.Input)] string @IPV_DomainName);
		[Procedure("USP_GET_ALL_EDIT_CAPABILITIES", "dbo")] public abstract void USP_GET_ALL_EDIT_CAPABILITIES();
		[Procedure("USP_GET_APP_ROLE_BY_APP_USER", "dbo")] public abstract void USP_GET_APP_ROLE_BY_APP_USER([Parameter("appUser", "varchar", ParameterDirection.Input)] string @appUser);
		[Procedure("USP_GET_ATTRIBUTE_GROUPS", "dbo")] public abstract void USP_GET_ATTRIBUTE_GROUPS([Parameter("groupId", "int", ParameterDirection.Input)] int? @groupId);
		[Procedure("USP_GET_ATTRIBUTES_FOR_GROUP", "dbo")] public abstract void USP_GET_ATTRIBUTES_FOR_GROUP([Parameter("groupId", "int", ParameterDirection.Input)] int? @groupId, [Parameter("attributeId", "int", ParameterDirection.Input)] int? @attributeId);
		[Procedure("USP_GET_AUTORENEW_DETAILS", "dbo")] public abstract void USP_GET_AUTORENEW_DETAILS([Parameter("sDomainName", "nvarchar", ParameterDirection.Input)] string @sDomainName, [Parameter("sType", "varchar", ParameterDirection.Input)] string @sType);
		[Procedure("USP_GET_BANNED_DOMAINS_BY_BANNEDTYPE", "dbo")] public abstract void USP_GET_BANNED_DOMAINS_BY_BANNEDTYPE([Parameter("domainname", "varchar", ParameterDirection.Input)] string @domainname);
		[Procedure("USP_GET_BANNED_PASSWORDS", "dbo")] public abstract void USP_GET_BANNED_PASSWORDS([Parameter("Password", "varchar", ParameterDirection.Input)] string @Password);
		[Procedure("USP_GET_BUYER_INFO", "dbo")] public abstract void USP_GET_BUYER_INFO([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_GET_CATEGORY_SEQUENCE", "dbo")] public abstract void USP_GET_CATEGORY_SEQUENCE([Parameter("CharUsed", "varchar", ParameterDirection.Input)] string @CharUsed, [Parameter("ActiveOnly", "bit", ParameterDirection.Input)] bool? @ActiveOnly);
		[Procedure("USP_GET_CC_ABUSE_COUNT", "dbo")] public abstract void USP_GET_CC_ABUSE_COUNT([Parameter("IPV_User_Name", "nvarchar", ParameterDirection.Input)] string @IPV_User_Name, [Parameter("IPV_CC_ACTION_TYPE", "varchar", ParameterDirection.Input)] string @IPV_CC_ACTION_TYPE);
		[Procedure("USP_GET_CHECKOUT_SETTINGS", "dbo")] public abstract void USP_GET_CHECKOUT_SETTINGS([Parameter("refID", "varchar", ParameterDirection.Input)] string @refID);
		[Procedure("USP_GET_COUPON_DETAILS", "dbo")] public abstract void USP_GET_COUPON_DETAILS([Parameter("IPV_PromoCode", "varchar", ParameterDirection.Input)] string @IPV_PromoCode, [Parameter("IPV_UserName", "varchar", ParameterDirection.Input)] string @IPV_UserName, [Parameter("isUserLoggedIN", "bit", ParameterDirection.Input)] bool? @isUserLoggedIN, [Parameter("specialPromotionCode", "varchar", ParameterDirection.Input)] string @specialPromotionCode, [Parameter("specialPromotionRequiresLogin", "bit", ParameterDirection.Input)] bool? @specialPromotionRequiresLogin, [Parameter("specialPromotionMaxUsagePerUser", "int", ParameterDirection.Input)] int? @specialPromotionMaxUsagePerUser, [Parameter("specialPromotionOrderCountCheckStartDateTime", "datetime", ParameterDirection.Input)] DateTime? @specialPromotionOrderCountCheckStartDateTime);
		[Procedure("USP_GET_CREDIT_CARD_ABUSE_BY_USERNAME", "dbo")] public abstract void USP_GET_CREDIT_CARD_ABUSE_BY_USERNAME([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_GET_DNS_PROVIDER_SUBTYPE", "dbo")] public abstract void USP_GET_DNS_PROVIDER_SUBTYPE([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("USP_GET_DOMAIN_EDIT_CAPABILITIES", "dbo")] public abstract void USP_GET_DOMAIN_EDIT_CAPABILITIES([Parameter("IPN_Reseller_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Reseller_ID, [Parameter("IPN_User_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_User_ID, [Parameter("IPN_Domain_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Domain_ID);
		[Procedure("USP_GET_DOMAIN_EDIT_CAPABILITIES_FOR_CART", "dbo")] public abstract void USP_GET_DOMAIN_EDIT_CAPABILITIES_FOR_CART([Parameter("IPN_Reseller_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Reseller_ID, [Parameter("IPN_User_Name", "varchar", ParameterDirection.Input)] string @IPN_User_Name, [Parameter("IPN_Domain_Name", "varchar", ParameterDirection.Input)] string @IPN_Domain_Name);
		[Procedure("USP_GET_DOMAIN_INFO", "dbo")] public abstract void USP_GET_DOMAIN_INFO([Parameter("IPV_Domain_Name", "varchar", ParameterDirection.Input)] string @IPV_Domain_Name, [Parameter("IPN_User_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_User_ID);
		[Procedure("USP_GET_DOMAIN_LIST", "dbo")] public abstract void USP_GET_DOMAIN_LIST([Parameter("IPN_User_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_User_ID, [Parameter("IPV_List_Type", "varchar", ParameterDirection.Input)] string @IPV_List_Type, [Parameter("IPB_Expired_YN", "bit", ParameterDirection.Input)] bool? @IPB_Expired_YN, [Parameter("IPV_Search_Term", "varchar", ParameterDirection.Input)] string @IPV_Search_Term);
		[Procedure("USP_GET_DOMAIN_LIST_CATEGORIZED", "dbo")] public abstract void USP_GET_DOMAIN_LIST_CATEGORIZED([Parameter("IPN_User_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_User_ID, [Parameter("IPV_List_Type", "varchar", ParameterDirection.Input)] string @IPV_List_Type, [Parameter("IPB_Expired_YN", "bit", ParameterDirection.Input)] bool? @IPB_Expired_YN, [Parameter("IPV_Search_Term", "varchar", ParameterDirection.Input)] string @IPV_Search_Term, [Parameter("IPN_Category_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Category_ID);
		[Procedure("USP_GET_DOMAIN_LIST_FOR_USER_BY_TLD", "dbo")] public abstract void USP_GET_DOMAIN_LIST_FOR_USER_BY_TLD([Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_GET_DOMAIN_POPUP_INFO", "dbo")] public abstract void USP_GET_DOMAIN_POPUP_INFO([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("USP_GET_DOMAIN_SEARCH_LIST", "dbo")] public abstract void USP_GET_DOMAIN_SEARCH_LIST([Parameter("IPV_SLD", "varchar", ParameterDirection.Input)] string @IPV_SLD, [Parameter("IPV_TLD", "varchar", ParameterDirection.Input)] string @IPV_TLD, [Parameter("IPB_Extended_Search_YN", "bit", ParameterDirection.Input)] bool? @IPB_Extended_Search_YN);
		[Procedure("USP_GET_DOMAIN_SOCIAL_NETWORKING_DETAILS", "dbo")] public abstract void USP_GET_DOMAIN_SOCIAL_NETWORKING_DETAILS([Parameter("Domainname", "nvarchar", ParameterDirection.Input)] string @Domainname);
		[Procedure("USP_GET_EMAIL_CHANGE_DATA", "dbo")] public abstract void USP_GET_EMAIL_CHANGE_DATA([Parameter("day", "datetime", ParameterDirection.Input)] DateTime? @day, [Parameter("explicitMaximum", "int", ParameterDirection.Input)] int? @explicitMaximum);
		[Procedure("USP_GET_ENOM_AUTO_RENEW_COMPLETED", "dbo")] public abstract void USP_GET_ENOM_AUTO_RENEW_COMPLETED([Parameter("IPv_Operation_type", "varchar", ParameterDirection.Input)] string @IPv_Operation_type);
		[Procedure("USP_GET_ENOM_AUTO_RENEW_DOMAINS", "dbo")] public abstract void USP_GET_ENOM_AUTO_RENEW_DOMAINS();
		[Procedure("USP_GET_EXACT_TRANSFER_STATUS_FOR_RE", "dbo")] public abstract void USP_GET_EXACT_TRANSFER_STATUS_FOR_RE([Parameter("reTransferOrPostponedStatus", "nvarchar", ParameterDirection.Input)] string @reTransferOrPostponedStatus, [Parameter("reCode", "int", ParameterDirection.Input)] int? @reCode, [Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname);
		[Procedure("USP_GET_EXPIRE_DOMAIN_LIST", "dbo")] public abstract void USP_GET_EXPIRE_DOMAIN_LIST([Parameter("IPN_ExpiringInDays", "int", ParameterDirection.Input)] int? @IPN_ExpiringInDays, [Parameter("IPDT_ExpiringOn", "datetime", ParameterDirection.Input)] DateTime? @IPDT_ExpiringOn, [Parameter("IPDT_FromDate", "datetime", ParameterDirection.Input)] DateTime? @IPDT_FromDate, [Parameter("IPDT_ToDate", "datetime", ParameterDirection.Input)] DateTime? @IPDT_ToDate, [Parameter("IPV_UserName", "varchar", ParameterDirection.Input)] string @IPV_UserName, [Parameter("IPNV_DomainName", "nvarchar", ParameterDirection.Input)] string @IPNV_DomainName, [Parameter("IPV_OperationType", "varchar", ParameterDirection.Input)] string @IPV_OperationType, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Order", "varchar", ParameterDirection.Input)] string @Order, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize);
		[Procedure("USP_GET_EXPIRING_ONEPAGER_FOR_RENEW_NOTIFICATION", "dbo")] public abstract void USP_GET_EXPIRING_ONEPAGER_FOR_RENEW_NOTIFICATION();
		[Procedure("USP_GET_EXPIRING_SSL", "dbo")] public abstract void USP_GET_EXPIRING_SSL();
		[Procedure("USP_GET_EXPIRING_WHOISGUARD", "dbo")] public abstract void USP_GET_EXPIRING_WHOISGUARD([Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("TotalNoOfPages", "int", ParameterDirection.Input)] int? @TotalNoOfPages);
		[Procedure("USP_GET_EXPIRING_WHOISGUARD_SET_FOR_AUTORENEW", "dbo")] public abstract void USP_GET_EXPIRING_WHOISGUARD_SET_FOR_AUTORENEW();
		[Procedure("USP_GET_EXPIRING_WHOISGUARDNEW", "dbo")] public abstract void USP_GET_EXPIRING_WHOISGUARDNEW([Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("TotalNoOfPages", "int", ParameterDirection.Input)] int? @TotalNoOfPages);
		[Procedure("USP_GET_GLOBAL_MODIFY_COMMANDS", "dbo")] public abstract void USP_GET_GLOBAL_MODIFY_COMMANDS();
		[Procedure("USP_GET_GLOBAL_OPTIONS", "dbo")] public abstract void USP_GET_GLOBAL_OPTIONS();
		[Procedure("USP_GET_HOSTING_CLIENTID", "dbo")] public abstract void USP_GET_HOSTING_CLIENTID([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_GET_HOSTING_DETAILS_FOR_USER", "dbo")] public abstract void USP_GET_HOSTING_DETAILS_FOR_USER([Parameter("Username", "nvarchar", ParameterDirection.Input)] string @Username);
		[Procedure("USP_GET_INFO_FROM_TOKENID_IN_ADD_FUNDS", "dbo")] public abstract void USP_GET_INFO_FROM_TOKENID_IN_ADD_FUNDS([Parameter("tokenId", "varchar", ParameterDirection.Input)] string @tokenId);
		[Procedure("USP_GET_IP_INFO", "dbo")] public abstract void USP_GET_IP_INFO([Parameter("IPV_Remote_IP", "varchar", ParameterDirection.Input)] string @IPV_Remote_IP);
		[Procedure("USP_GET_ISVALID_ENOM_AUTO_RENEW", "dbo")] public abstract void USP_GET_ISVALID_ENOM_AUTO_RENEW([Parameter("IPv_Domainname", "nvarchar", ParameterDirection.Input)] string @IPv_Domainname);
		[Procedure("USP_GET_KAYAKO_USER_ID", "dbo")] public abstract void USP_GET_KAYAKO_USER_ID([Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_GET_META_INFO", "dbo")] public abstract void USP_GET_META_INFO([Parameter("Type", "varchar", ParameterDirection.Input)] string @Type, [Parameter("URL", "varchar", ParameterDirection.Input)] string @URL, [Parameter("user_agent", "varchar", ParameterDirection.Input)] string @user_agent);
		[Procedure("USP_GET_META_INFO_FOR_PAGE", "dbo")] public abstract void USP_GET_META_INFO_FOR_PAGE([Parameter("URL", "varchar", ParameterDirection.Input)] string @URL, [Parameter("user_agent", "varchar", ParameterDirection.Input)] string @user_agent, [Parameter("overwrite_title", "varchar", ParameterDirection.Input)] string @overwrite_title);
		[Procedure("USP_GET_META_INFO_LIST", "dbo")] public abstract void USP_GET_META_INFO_LIST();
		[Procedure("USP_GET_MONEY_TRANSFER_REQUESTS", "dbo")] public abstract void USP_GET_MONEY_TRANSFER_REQUESTS([Parameter("RequestType", "bit", ParameterDirection.Input)] bool? @RequestType, [Parameter("For", "varchar", ParameterDirection.Input)] string @For, [Parameter("RequestID", "numeric", ParameterDirection.Input)] decimal? @RequestID);
		[Procedure("USP_GET_MP_CATEGORY_BY_LEVEL", "dbo")] public abstract void USP_GET_MP_CATEGORY_BY_LEVEL([Parameter("IPN_ParentCategoryIdLevel", "int", ParameterDirection.Input)] int? @IPN_ParentCategoryIdLevel, [Parameter("ActiveOnly", "bit", ParameterDirection.Input)] bool? @ActiveOnly);
		[Procedure("USP_GET_MP_CATEGORY_INFO", "dbo")] public abstract void USP_GET_MP_CATEGORY_INFO([Parameter("IPN_Category_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Category_ID);
		[Procedure("USP_GET_MP_CATEGORY_LIST", "dbo")] public abstract void USP_GET_MP_CATEGORY_LIST([Parameter("parentCategoryId", "int", ParameterDirection.Input)] int? @parentCategoryId);
		[Procedure("USP_GET_MP_DOMAIN_DETAILS", "dbo")] public abstract void USP_GET_MP_DOMAIN_DETAILS([Parameter("DomainListID", "numeric", ParameterDirection.Input)] decimal? @DomainListID);
		[Procedure("USP_GET_MP_DOMAIN_LIST", "dbo")] public abstract void USP_GET_MP_DOMAIN_LIST([Parameter("type", "varchar", ParameterDirection.Input)] string @type, [Parameter("noofrows", "int", ParameterDirection.Input)] int? @noofrows);
		[Procedure("USP_GET_MP_DOMAIN_LISTING", "dbo")] public abstract void USP_GET_MP_DOMAIN_LISTING([Parameter("Keyword", "nvarchar", ParameterDirection.Input)] string @Keyword, [Parameter("StartingLetter", "nvarchar", ParameterDirection.Input)] string @StartingLetter, [Parameter("SubcategoryId", "int", ParameterDirection.Input)] int? @SubcategoryId, [Parameter("AdultListing", "bit", ParameterDirection.Input)] bool? @AdultListing, [Parameter("AcceptOfferOnly", "bit", ParameterDirection.Input)] bool? @AcceptOfferOnly, [Parameter("FixedPriceOnly", "bit", ParameterDirection.Input)] bool? @FixedPriceOnly, [Parameter("Extensions", "nvarchar", ParameterDirection.Input)] string @Extensions, [Parameter("CategoryID", "varchar", ParameterDirection.Input)] string @CategoryID, [Parameter("MaximumLength", "int", ParameterDirection.Input)] int? @MaximumLength, [Parameter("MinPriceRange", "money", ParameterDirection.Input)] decimal? @MinPriceRange, [Parameter("MaxPriceRange", "money", ParameterDirection.Input)] decimal? @MaxPriceRange, [Parameter("ClosingInterval", "int", ParameterDirection.Input)] int? @ClosingInterval, [Parameter("ExcludeHypen", "bit", ParameterDirection.Input)] bool? @ExcludeHypen, [Parameter("ExcludeNumber", "bit", ParameterDirection.Input)] bool? @ExcludeNumber, [Parameter("FeaturedYN", "bit", ParameterDirection.Input)] bool? @FeaturedYN, [Parameter("optsearch", "varchar", ParameterDirection.Input)] string @optsearch, [Parameter("SellerUserName", "nvarchar", ParameterDirection.Input)] string @SellerUserName);
		[Procedure("USP_GET_MP_DOMAIN_LISTING_ByPage", "dbo")] public abstract void USP_GET_MP_DOMAIN_LISTING_ByPage([Parameter("Keyword", "nvarchar", ParameterDirection.Input)] string @Keyword, [Parameter("StartingLetter", "nvarchar", ParameterDirection.Input)] string @StartingLetter, [Parameter("SubcategoryId", "int", ParameterDirection.Input)] int? @SubcategoryId, [Parameter("AdultListing", "bit", ParameterDirection.Input)] bool? @AdultListing, [Parameter("AcceptOfferOnly", "bit", ParameterDirection.Input)] bool? @AcceptOfferOnly, [Parameter("FixedPriceOnly", "bit", ParameterDirection.Input)] bool? @FixedPriceOnly, [Parameter("Extensions", "nvarchar", ParameterDirection.Input)] string @Extensions, [Parameter("CategoryID", "varchar", ParameterDirection.Input)] string @CategoryID, [Parameter("MaximumLength", "int", ParameterDirection.Input)] int? @MaximumLength, [Parameter("MinPriceRange", "money", ParameterDirection.Input)] decimal? @MinPriceRange, [Parameter("MaxPriceRange", "money", ParameterDirection.Input)] decimal? @MaxPriceRange, [Parameter("ClosingInterval", "int", ParameterDirection.Input)] int? @ClosingInterval, [Parameter("ExcludeHypen", "bit", ParameterDirection.Input)] bool? @ExcludeHypen, [Parameter("ExcludeNumber", "bit", ParameterDirection.Input)] bool? @ExcludeNumber, [Parameter("FeaturedYN", "bit", ParameterDirection.Input)] bool? @FeaturedYN, [Parameter("optsearch", "varchar", ParameterDirection.Input)] string @optsearch, [Parameter("SellerUserName", "nvarchar", ParameterDirection.Input)] string @SellerUserName, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize);
		[Procedure("USP_GET_MP_LISTING_DOMAIN_INFO", "dbo")] public abstract void USP_GET_MP_LISTING_DOMAIN_INFO([Parameter("DomainListID", "numeric", ParameterDirection.Input)] decimal? @DomainListID);
		[Procedure("USP_GET_MP_PREVIOUS_OFFERS", "dbo")] public abstract void USP_GET_MP_PREVIOUS_OFFERS([Parameter("MP_Listing_ID", "numeric", ParameterDirection.Input)] decimal? @MP_Listing_ID, [Parameter("MP_UserName", "nvarchar", ParameterDirection.Input)] string @MP_UserName);
		[Procedure("USP_GET_MP_SUBCATEGORIES", "dbo")] public abstract void USP_GET_MP_SUBCATEGORIES([Parameter("CategoryID", "int", ParameterDirection.Input)] int? @CategoryID, [Parameter("CharUsed", "varchar", ParameterDirection.Input)] string @CharUsed, [Parameter("ActiveOnly", "bit", ParameterDirection.Input)] bool? @ActiveOnly);
		[Procedure("USP_GET_MP_USER_LIST", "dbo")] public abstract void USP_GET_MP_USER_LIST([Parameter("IPV_Seller_User_Name", "varchar", ParameterDirection.Input)] string @IPV_Seller_User_Name);
		[Procedure("USP_GET_MY_ACCOUNT_FOR_USER", "dbo")] public abstract void USP_GET_MY_ACCOUNT_FOR_USER([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_GET_ONEPAGER_EXPIRED_DOMAINS_TO_DISABLE", "dbo")] public abstract void USP_GET_ONEPAGER_EXPIRED_DOMAINS_TO_DISABLE([Parameter("Grace_Days", "int", ParameterDirection.Input)] int? @Grace_Days);
		[Procedure("USP_GET_OTHER_CATEGORY_SEQUENCE", "dbo")] public abstract void USP_GET_OTHER_CATEGORY_SEQUENCE([Parameter("CharUsed", "varchar", ParameterDirection.Input)] string @CharUsed, [Parameter("currentCategory", "int", ParameterDirection.Input)] int? @currentCategory);
		[Procedure("USP_GET_PACKAGE_DETAILS", "dbo")] public abstract void USP_GET_PACKAGE_DETAILS([Parameter("REFID", "varchar", ParameterDirection.Input)] string @REFID);
		[Procedure("USP_GET_PAGE_INFO", "dbo")] public abstract void USP_GET_PAGE_INFO([Parameter("IPV_Script_Name", "varchar", ParameterDirection.Input)] string @IPV_Script_Name);
		[Procedure("USP_GET_PARENT_TRANS_DETAILS", "dbo")] public abstract void USP_GET_PARENT_TRANS_DETAILS([Parameter("CC_Trans_ID", "nvarchar", ParameterDirection.Input)] string @CC_Trans_ID, [Parameter("TransactionID", "numeric", ParameterDirection.InputOutput)] decimal? @TransactionID);
		[Procedure("USP_GET_PAYPAL_PENDING_LIST", "dbo")] public abstract void USP_GET_PAYPAL_PENDING_LIST([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_GET_PERIOD_MESSAGES", "dbo")] public abstract void USP_GET_PERIOD_MESSAGES([Parameter("IPV_UserName", "varchar", ParameterDirection.Input)] string @IPV_UserName, [Parameter("IPV_Message_Title", "varchar", ParameterDirection.Input)] string @IPV_Message_Title, [Parameter("IPV_Associated_Domains", "varchar", ParameterDirection.Input)] string @IPV_Associated_Domains, [Parameter("IPV_Message_Type", "varchar", ParameterDirection.Input)] string @IPV_Message_Type, [Parameter("IPI_Period", "int", ParameterDirection.Input)] int? @IPI_Period);
		[Procedure("USP_GET_PHONE_FAX_IF_NEED_VALIDATION", "dbo")] public abstract void USP_GET_PHONE_FAX_IF_NEED_VALIDATION([Parameter("IPV_Reg_ID", "varchar", ParameterDirection.Input)] string @IPV_Reg_ID);
		[Procedure("USP_GET_POP3_LIST", "dbo")] public abstract void USP_GET_POP3_LIST([Parameter("User_Name", "varchar", ParameterDirection.Input)] string @User_Name);
		[Procedure("USP_GET_PREPARE_GLOBAL_WHOISGUARD_LIST", "dbo")] public abstract void USP_GET_PREPARE_GLOBAL_WHOISGUARD_LIST([Parameter("IPV_Domainnames", "nvarchar", ParameterDirection.Input)] string @IPV_Domainnames, [Parameter("IPC_Delimiter", "char", ParameterDirection.Input)] string @IPC_Delimiter, [Parameter("IPV_Username", "nvarchar", ParameterDirection.Input)] string @IPV_Username);
		[Procedure("USP_GET_PREV_NEXT_MESSAGEID", "dbo")] public abstract void USP_GET_PREV_NEXT_MESSAGEID([Parameter("CMsgID", "varchar", ParameterDirection.Input)] string @CMsgID, [Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_GET_PRICING_FOR_TLD", "dbo")] public abstract void USP_GET_PRICING_FOR_TLD([Parameter("IPV_TLD_Name", "varchar", ParameterDirection.Input)] string @IPV_TLD_Name, [Parameter("IPV_Action_ID", "varchar", ParameterDirection.Input)] string @IPV_Action_ID, [Parameter("IPV_User_Name", "varchar", ParameterDirection.Input)] string @IPV_User_Name, [Parameter("IPV_Promotion_Code", "varchar", ParameterDirection.Input)] string @IPV_Promotion_Code);
		[Procedure("USP_GET_PRICING_LIST", "dbo")] public abstract void USP_GET_PRICING_LIST([Parameter("IPV_User_Name", "varchar", ParameterDirection.Input)] string @IPV_User_Name, [Parameter("IPV_Promotion_Code", "varchar", ParameterDirection.Input)] string @IPV_Promotion_Code);
		[Procedure("USP_GET_PRODUCT_ATTRIBUTES", "dbo")] public abstract void USP_GET_PRODUCT_ATTRIBUTES([Parameter("productId", "int", ParameterDirection.Input)] int? @productId);
		[Procedure("USP_GET_PRODUCTS", "dbo")] public abstract void USP_GET_PRODUCTS([Parameter("productName", "varchar", ParameterDirection.Input)] string @productName);
		[Procedure("USP_GET_PRODUCTS_COMPARISION", "dbo")] public abstract void USP_GET_PRODUCTS_COMPARISION([Parameter("productIds", "varchar", ParameterDirection.Input)] string @productIds);
		[Procedure("USP_GET_PRODUCTS_FOR_HOSTING", "dbo")] public abstract void USP_GET_PRODUCTS_FOR_HOSTING([Parameter("productName", "varchar", ParameterDirection.Input)] string @productName);
		[Procedure("USP_GET_PROMOTION_USAGE_SOPA_DEC29", "dbo")] public abstract void USP_GET_PROMOTION_USAGE_SOPA_DEC29();
		[Procedure("usp_Get_Push_AuthorizationCode", "dbo")] public abstract void usp_Get_Push_AuthorizationCode([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("USP_GET_RANDOM_ADS", "dbo")] public abstract void USP_GET_RANDOM_ADS([Parameter("IPV_Ad_Id", "int", ParameterDirection.Input)] int? @IPV_Ad_Id, [Parameter("IPV_Ad_Group_Id", "int", ParameterDirection.Input)] int? @IPV_Ad_Group_Id, [Parameter("IPV_Product_Id", "int", ParameterDirection.Input)] int? @IPV_Product_Id);
		[Procedure("USP_GET_RANDOM_TESTIMONIAL", "dbo")] public abstract void USP_GET_RANDOM_TESTIMONIAL();
		[Procedure("USP_GET_RESELLER_INFO_FROM_KEY", "dbo")] public abstract void USP_GET_RESELLER_INFO_FROM_KEY([Parameter("IPV_Reseller_Key", "varchar", ParameterDirection.Input)] string @IPV_Reseller_Key);
		[Procedure("USP_GET_RESELLER_LEVEL_NAMES", "dbo")] public abstract void USP_GET_RESELLER_LEVEL_NAMES();
		[Procedure("USP_GET_ROLE_NAMES", "dbo")] public abstract void USP_GET_ROLE_NAMES();
		[Procedure("USP_GET_SET_ENOM_AUTO_RENEW_STATUS", "dbo")] public abstract void USP_GET_SET_ENOM_AUTO_RENEW_STATUS([Parameter("Enom_Auto_Renew_Track_ID", "numeric", ParameterDirection.Input)] decimal? @Enom_Auto_Renew_Track_ID, [Parameter("Auto_Renew_Success_YN", "bit", ParameterDirection.Input)] bool? @Auto_Renew_Success_YN, [Parameter("New_Expiration_Date_Time", "datetime", ParameterDirection.Input)] DateTime? @New_Expiration_Date_Time, [Parameter("Operation_Type", "varchar", ParameterDirection.Input)] string @Operation_Type);
		[Procedure("USP_GET_SHOPPING_CART", "dbo")] public abstract void USP_GET_SHOPPING_CART([Parameter("Session_Ref_ID", "varchar", ParameterDirection.Input)] string @Session_Ref_ID);
		[Procedure("USP_GET_SHOPPING_CART_TOTAL", "dbo")] public abstract void USP_GET_SHOPPING_CART_TOTAL([Parameter("Session_Ref_ID", "varchar", ParameterDirection.Input)] string @Session_Ref_ID);
		[Procedure("USP_GET_SHOPPING_CART_VALUE", "dbo")] public abstract void USP_GET_SHOPPING_CART_VALUE([Parameter("Session_Ref_ID", "varchar", ParameterDirection.Input)] string @Session_Ref_ID);
		[Procedure("USP_GET_SSL_INITIAL_DETAILS", "dbo")] public abstract void USP_GET_SSL_INITIAL_DETAILS([Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName, [Parameter("SslType", "varchar", ParameterDirection.Input)] string @SslType);
		[Procedure("USP_GET_SSL_LIST", "dbo")] public abstract void USP_GET_SSL_LIST([Parameter("List_Type", "varchar", ParameterDirection.Input)] string @List_Type, [Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName, [Parameter("Search_Term", "varchar", ParameterDirection.Input)] string @Search_Term, [Parameter("sortBy", "varchar", ParameterDirection.Input)] string @sortBy);
		[Procedure("USP_GET_SSLPARTNER_USER_INFO", "dbo")] public abstract void USP_GET_SSLPARTNER_USER_INFO([Parameter("userID", "numeric", ParameterDirection.Input)] decimal? @userID);
		[Procedure("USP_GET_STATUS_NAMES", "dbo")] public abstract void USP_GET_STATUS_NAMES();
		[Procedure("USP_GET_SUBSCRIBTION_DETAILS", "dbo")] public abstract void USP_GET_SUBSCRIBTION_DETAILS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("encodedUserId", "int", ParameterDirection.Input)] int? @encodedUserId);
		[Procedure("USP_GET_SUCCESSFULLY_REGISTERED_DOMAINS", "dbo")] public abstract void USP_GET_SUCCESSFULLY_REGISTERED_DOMAINS([Parameter("IPV_RegID", "varchar", ParameterDirection.Input)] string @IPV_RegID, [Parameter("IPV_User_Name", "varchar", ParameterDirection.Input)] string @IPV_User_Name);
		[Procedure("USP_GET_SYSTEM_MESSAGE", "dbo")] public abstract void USP_GET_SYSTEM_MESSAGE([Parameter("ShowSiteDownAndWarningMessage", "bit", ParameterDirection.Input)] bool? @ShowSiteDownAndWarningMessage);
		[Procedure("USP_GET_TLD_DETAILS", "dbo")] public abstract void USP_GET_TLD_DETAILS([Parameter("tld", "varchar", ParameterDirection.Input)] string @tld, [Parameter("activeYN", "bit", ParameterDirection.Input)] bool? @activeYN);
		[Procedure("USP_GET_TLD_PRICING", "dbo")] public abstract void USP_GET_TLD_PRICING([Parameter("ActionType", "varchar", ParameterDirection.Input)] string @ActionType, [Parameter("username", "varchar", ParameterDirection.Input)] string @username);
		[Procedure("USP_GET_TLD_REGULAR_USER_PRICING", "dbo")] public abstract void USP_GET_TLD_REGULAR_USER_PRICING([Parameter("TLD_NAME", "varchar", ParameterDirection.Input)] string @TLD_NAME, [Parameter("Price_Type", "varchar", ParameterDirection.Input)] string @Price_Type, [Parameter("Action_Id", "varchar", ParameterDirection.Input)] string @Action_Id, [Parameter("User_Name", "varchar", ParameterDirection.Input)] string @User_Name);
		[Procedure("USP_GET_TRANSACTION_DETAILS", "dbo")] public abstract void USP_GET_TRANSACTION_DETAILS([Parameter("CC_Trans_ID", "nvarchar", ParameterDirection.Input)] string @CC_Trans_ID);
		[Procedure("USP_GET_TRANSACTION_INFO", "dbo")] public abstract void USP_GET_TRANSACTION_INFO([Parameter("TransactionId", "decimal", ParameterDirection.Input)] decimal? @TransactionId);
		[Procedure("USP_GET_TRANSACTION_INFO_BY_DOMAIN_DELETE", "dbo")] public abstract void USP_GET_TRANSACTION_INFO_BY_DOMAIN_DELETE([Parameter("SLD", "nvarchar", ParameterDirection.Input)] string @SLD, [Parameter("TLD", "nvarchar", ParameterDirection.Input)] string @TLD);
		[Procedure("USP_GET_USER_CONTACT_INFO", "dbo")] public abstract void USP_GET_USER_CONTACT_INFO([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_GET_USER_DATA", "dbo")] public abstract void USP_GET_USER_DATA([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Email", "nvarchar", ParameterDirection.Input)] string @Email, [Parameter("explicitMaximum", "int", ParameterDirection.Input)] int? @explicitMaximum);
		[Procedure("USP_GET_USER_DATA_FROM", "dbo")] public abstract void USP_GET_USER_DATA_FROM([Parameter("registeredFrom", "datetime", ParameterDirection.Input)] DateTime? @registeredFrom, [Parameter("idFrom", "numeric", ParameterDirection.Input)] decimal? @idFrom, [Parameter("explicitMaximum", "int", ParameterDirection.Input)] int? @explicitMaximum);
		[Procedure("USP_GET_USER_DATA_REGISTEREDFROM", "dbo")] public abstract void USP_GET_USER_DATA_REGISTEREDFROM([Parameter("registeredFrom", "datetime", ParameterDirection.Input)] DateTime? @registeredFrom, [Parameter("explicitMaximum", "int", ParameterDirection.Input)] int? @explicitMaximum);
		[Procedure("USP_GET_USER_HOSTING_DETAILS", "dbo")] public abstract void USP_GET_USER_HOSTING_DETAILS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize);
		[Procedure("USP_GET_USER_INFO", "dbo")] public abstract void USP_GET_USER_INFO([Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName);
		[Procedure("USP_GET_USER_NEWSLETER", "dbo")] public abstract void USP_GET_USER_NEWSLETER([Parameter("IPN_Page_No", "int", ParameterDirection.Input)] int? @IPN_Page_No, [Parameter("IPN_Records_Per_Page", "int", ParameterDirection.Input)] int? @IPN_Records_Per_Page);
		[Procedure("USP_GET_USER_NOTIFICATION_EMAIL", "dbo")] public abstract void USP_GET_USER_NOTIFICATION_EMAIL([Parameter("IPV_UserName", "varchar", ParameterDirection.Input)] string @IPV_UserName);
		[Procedure("USP_GET_USER_SECUIRTY_SETTINGS", "dbo")] public abstract void USP_GET_USER_SECUIRTY_SETTINGS([Parameter("IPV_UserName", "varchar", ParameterDirection.Input)] string @IPV_UserName, [Parameter("IPV_DomainName", "nvarchar", ParameterDirection.Input)] string @IPV_DomainName, [Parameter("hostedDomain", "bit", ParameterDirection.Input)] bool? @hostedDomain);
		[Procedure("USP_GET_USERS_WITH_ACCESS_TO_DOMAIN", "dbo")] public abstract void USP_GET_USERS_WITH_ACCESS_TO_DOMAIN([Parameter("IPN_Domain_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Domain_ID, [Parameter("IPN_Requesting_User_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Requesting_User_ID);
		[Procedure("USP_GET_WG_ADDRESS", "dbo")] public abstract void USP_GET_WG_ADDRESS();
		[Procedure("USP_GET_WG_EMAIL_DETAILS", "dbo")] public abstract void USP_GET_WG_EMAIL_DETAILS([Parameter("domainname", "nvarchar", ParameterDirection.Input)] string @domainname);
		[Procedure("USP_GET_WG_EMAIL_QUEUE", "dbo")] public abstract void USP_GET_WG_EMAIL_QUEUE();
		[Procedure("USP_GET_WG_STATUS_FOR_SPAM_PROTECTION", "dbo")] public abstract void USP_GET_WG_STATUS_FOR_SPAM_PROTECTION([Parameter("sDomainName", "nvarchar", ParameterDirection.Input)] string @sDomainName);
		[Procedure("USP_GET_WHOISGUARD_LIST", "dbo")] public abstract void USP_GET_WHOISGUARD_LIST([Parameter("IPV_User_Name", "varchar", ParameterDirection.Input)] string @IPV_User_Name, [Parameter("IPV_List_Type", "varchar", ParameterDirection.Input)] string @IPV_List_Type);
		[Procedure("usp_GetActionRequiredAndCancelledList", "dbo")] public abstract void usp_GetActionRequiredAndCancelledList([Parameter("startId", "tinyint", ParameterDirection.Input)] byte? @startId, [Parameter("endId", "tinyint", ParameterDirection.Input)] byte? @endId, [Parameter("isProcessTransferMateEnabledOnly", "bit", ParameterDirection.Input)] bool? @isProcessTransferMateEnabledOnly);
		[Procedure("usp_GetAffiliateWelcomeEmailDetails", "dbo")] public abstract void usp_GetAffiliateWelcomeEmailDetails([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_GetAllotedWgListOnetime", "dbo")] public abstract void usp_GetAllotedWgListOnetime([Parameter("SlotIDStartRange", "int", ParameterDirection.Input)] int? @SlotIDStartRange, [Parameter("SlotIDEndRange", "int", ParameterDirection.Input)] int? @SlotIDEndRange, [Parameter("ModuleDigitNumber", "int", ParameterDirection.Input)] int? @ModuleDigitNumber);
		[Procedure("usp_GetAutoRenewSetCreditCardList", "dbo")] public abstract void usp_GetAutoRenewSetCreditCardList();
		[Procedure("usp_GetBannedDomainList", "dbo")] public abstract void usp_GetBannedDomainList();
		[Procedure("USP_GetCaptchaShowStatus", "dbo")] public abstract void USP_GetCaptchaShowStatus();
		[Procedure("usp_GetCardUserOptionsById", "dbo")] public abstract void usp_GetCardUserOptionsById([Parameter("creditCardId", "uniqueidentifier", ParameterDirection.Input)] Guid? @creditCardId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("Usp_GetCCAbuseCount", "dbo")] public abstract void Usp_GetCCAbuseCount([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_GetCCSaveAbuseReport", "dbo")] public abstract void usp_GetCCSaveAbuseReport([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_GetCheckoutProcessIdStatus", "dbo")] public abstract void usp_GetCheckoutProcessIdStatus([Parameter("checkoutProcessID", "varchar", ParameterDirection.Input)] string @checkoutProcessID);
		[Procedure("USP_GetContextInfo", "dbo")] public abstract void USP_GetContextInfo([Parameter("MailboxName", "varchar", ParameterDirection.Input)] string @MailboxName);
		[Procedure("usp_GetCouponCodeForUser", "dbo")] public abstract void usp_GetCouponCodeForUser([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("partnerType", "varchar", ParameterDirection.Input)] string @partnerType);
		[Procedure("usp_GetCurrencyConversionData", "dbo")] public abstract void usp_GetCurrencyConversionData([Parameter("source", "varchar", ParameterDirection.Input)] string @source, [Parameter("versionId", "int", ParameterDirection.Input)] int? @versionId);
		[Procedure("usp_GetDefaultDNSForNewRegistration", "dbo")] public abstract void usp_GetDefaultDNSForNewRegistration([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("usp_GetDomainValidityStatusForList", "dbo")] public abstract void usp_GetDomainValidityStatusForList([Parameter("domainNamesCSV", "varchar", ParameterDirection.Input)] string @domainNamesCSV, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_GetEnomDomainListOnetime", "dbo")] public abstract void usp_GetEnomDomainListOnetime([Parameter("AutoIDStartRange", "int", ParameterDirection.Input)] int? @AutoIDStartRange, [Parameter("AutoIDEndRange", "int", ParameterDirection.Input)] int? @AutoIDEndRange, [Parameter("ModulusNumber", "int", ParameterDirection.Input)] int? @ModulusNumber, [Parameter("TopRecords", "int", ParameterDirection.Input)] int? @TopRecords);
		[Procedure("usp_GetEnomDomainMaxAutotID", "dbo")] public abstract void usp_GetEnomDomainMaxAutotID([Parameter("AutoIDStartRange", "int", ParameterDirection.Input)] int? @AutoIDStartRange, [Parameter("AutoIDEndRange", "int", ParameterDirection.Input)] int? @AutoIDEndRange, [Parameter("ModulusNumber", "int", ParameterDirection.Input)] int? @ModulusNumber);
		[Procedure("Usp_GetList_Dnssec", "dbo")] public abstract void Usp_GetList_Dnssec([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("usp_GetLogUserStatus", "dbo")] public abstract void usp_GetLogUserStatus([Parameter("userName", "varchar", ParameterDirection.Input)] string @userName, [Parameter("getAs", "varchar", ParameterDirection.Input)] string @getAs);
		[Procedure("usp_GetMarketPlaceSearchResult", "dbo")] public abstract void usp_GetMarketPlaceSearchResult([Parameter("searchDatabaseResultXml", "xml", ParameterDirection.Input)] string @searchDatabaseResultXml);
		[Procedure("usp_GetNamecheapDealsCouponDetails", "dbo")] public abstract void usp_GetNamecheapDealsCouponDetails([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("partnerName", "varchar", ParameterDirection.Input)] string @partnerName);
		[Procedure("usp_GetNamecheapDealsValueForOverview", "dbo")] public abstract void usp_GetNamecheapDealsValueForOverview([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("partnerName", "varchar", ParameterDirection.Input)] string @partnerName, [Parameter("amountSpentTillDate", "money", ParameterDirection.Input)] decimal? @amountSpentTillDate);
		[Procedure("usp_GetOrderDetailIdForBatchItem", "dbo")] public abstract void usp_GetOrderDetailIdForBatchItem([Parameter("OrderId", "numeric", ParameterDirection.Input)] decimal? @OrderId, [Parameter("ProductName", "varchar", ParameterDirection.Input)] string @ProductName, [Parameter("SLD", "nvarchar", ParameterDirection.Input)] string @SLD, [Parameter("TLD", "nvarchar", ParameterDirection.Input)] string @TLD, [Parameter("WGSlotId", "numeric", ParameterDirection.Input)] decimal? @WGSlotId);
		[Procedure("usp_GetOrderDetails", "dbo")] public abstract void usp_GetOrderDetails([Parameter("OrderID", "varchar", ParameterDirection.Input)] string @OrderID, [Parameter("RecordType", "varchar", ParameterDirection.Input)] string @RecordType);
		[Procedure("usp_GetOrderIdsForTldPromotionCheck", "dbo")] public abstract void usp_GetOrderIdsForTldPromotionCheck([Parameter("numberOfItemsToGet", "int", ParameterDirection.Input)] int? @numberOfItemsToGet, [Parameter("timeGapToFetch", "int", ParameterDirection.Input)] int? @timeGapToFetch);
		[Procedure("usp_GetOrderStatusDetails", "dbo")] public abstract void usp_GetOrderStatusDetails([Parameter("OrderID", "varchar", ParameterDirection.Input)] string @OrderID, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("MaxCompletdItemToReturn", "int", ParameterDirection.Input)] int? @MaxCompletdItemToReturn);
		[Procedure("usp_GetOrderSummary", "dbo")] public abstract void usp_GetOrderSummary([Parameter("OrderID", "varchar", ParameterDirection.Input)] string @OrderID, [Parameter("RecordType", "varchar", ParameterDirection.Input)] string @RecordType);
		[Procedure("usp_GetOrderSummaryDetails", "dbo")] public abstract void usp_GetOrderSummaryDetails([Parameter("orderId", "numeric", ParameterDirection.Input)] decimal? @orderId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("isCalledFromSummaryPage", "bit", ParameterDirection.Input)] bool? @isCalledFromSummaryPage);
		[Procedure("usp_GetOrgWithOtherDomainReport", "dbo")] public abstract void usp_GetOrgWithOtherDomainReport([Parameter("startDate", "datetime", ParameterDirection.Input)] DateTime? @startDate, [Parameter("endDate", "datetime", ParameterDirection.Input)] DateTime? @endDate);
		[Procedure("usp_GetOXAddonInfoBySubscriptionId", "dbo")] public abstract void usp_GetOXAddonInfoBySubscriptionId([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("ActionId", "varchar", ParameterDirection.Input)] string @ActionId, [Parameter("Duration", "int", ParameterDirection.Input)] int? @Duration, [Parameter("DurationType", "varchar", ParameterDirection.Input)] string @DurationType);
		[Procedure("usp_GetParticularServiceProviderRRDetails", "dbo")] public abstract void usp_GetParticularServiceProviderRRDetails([Parameter("providerRRID", "int", ParameterDirection.Input)] int? @providerRRID);
		[Procedure("usp_GetPaypalTransID", "dbo")] public abstract void usp_GetPaypalTransID([Parameter("userID", "numeric", ParameterDirection.Input)] decimal? @userID, [Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId);
		[Procedure("usp_GetPersonalDomainsAddToCartXml", "dbo")] public abstract void usp_GetPersonalDomainsAddToCartXml([Parameter("guid", "varchar", ParameterDirection.Input)] string @guid);
		[Procedure("usp_GetResellerLevels", "dbo")] public abstract void usp_GetResellerLevels([Parameter("type", "varchar", ParameterDirection.Input)] string @type);
		[Procedure("usp_GetResellerUsersForUpgradationEmail", "dbo")] public abstract void usp_GetResellerUsersForUpgradationEmail();
		[Procedure("Usp_GetRestrictedAndUnrestrictedDomains", "dbo")] public abstract void Usp_GetRestrictedAndUnrestrictedDomains([Parameter("DomainNameList", "varchar", ParameterDirection.Input)] string @DomainNameList, [Parameter("RestrictionName", "varchar", ParameterDirection.Input)] string @RestrictionName);
		[Procedure("usp_GetServiceProviderRRDetails", "dbo")] public abstract void usp_GetServiceProviderRRDetails([Parameter("providerID", "int", ParameterDirection.Input)] int? @providerID);
		[Procedure("usp_GetTokenIdForFraudCheckByTransactionId", "dbo")] public abstract void usp_GetTokenIdForFraudCheckByTransactionId([Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId);
		[Procedure("usp_GetTokenIdsForFraudCheck", "dbo")] public abstract void usp_GetTokenIdsForFraudCheck([Parameter("numberOfItemsToGet", "int", ParameterDirection.Input)] int? @numberOfItemsToGet, [Parameter("timeGapToFetch", "int", ParameterDirection.Input)] int? @timeGapToFetch);
		[Procedure("usp_GetTransactionDetails", "dbo")] public abstract void usp_GetTransactionDetails([Parameter("UserID", "numeric", ParameterDirection.Input)] decimal? @UserID, [Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId);
		[Procedure("USP_GetTransactionIdByCheckoutProcessId", "dbo")] public abstract void USP_GetTransactionIdByCheckoutProcessId([Parameter("CheckoutProcessId", "varchar", ParameterDirection.Input)] string @CheckoutProcessId);
		[Procedure("usp_GetUserAccountAndAvailableBalances", "dbo")] public abstract void usp_GetUserAccountAndAvailableBalances([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_GetUserAutorenewPaymentDetails", "dbo")] public abstract void usp_GetUserAutorenewPaymentDetails([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("usp_GetUserFundsDetails", "dbo")] public abstract void usp_GetUserFundsDetails([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("usp_GetUserInfo", "dbo")] public abstract void usp_GetUserInfo([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("usp_GetUsernameForOrderId", "dbo")] public abstract void usp_GetUsernameForOrderId([Parameter("orderId", "numeric", ParameterDirection.Input)] decimal? @orderId);
		[Procedure("usp_GetUserStatusDetails", "dbo")] public abstract void usp_GetUserStatusDetails();
		[Procedure("usp_GetUserSupportPinDetails", "dbo")] public abstract void usp_GetUserSupportPinDetails([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("UserIp", "varchar", ParameterDirection.Input)] string @UserIp);
		[Procedure("usp_GetUserTotalPurchaseTillDate", "dbo")] public abstract void usp_GetUserTotalPurchaseTillDate([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_GetWgMaxSlotID", "dbo")] public abstract void usp_GetWgMaxSlotID([Parameter("SlotIDStartRange", "int", ParameterDirection.Input)] int? @SlotIDStartRange, [Parameter("SlotIDEndRange", "int", ParameterDirection.Input)] int? @SlotIDEndRange, [Parameter("ModuleDigitNumber", "int", ParameterDirection.Input)] int? @ModuleDigitNumber);
		[Procedure("USP_HOSTING_CHECK_DOMAIN_HAS_PACK", "dbo")] public abstract void USP_HOSTING_CHECK_DOMAIN_HAS_PACK([Parameter("RefID", "varchar", ParameterDirection.Input)] string @RefID, [Parameter("DomainName", "varchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("USP_HOSTING_GET_SHOPPING_CART_DOMAINS", "dbo")] public abstract void USP_HOSTING_GET_SHOPPING_CART_DOMAINS([Parameter("RefID", "varchar", ParameterDirection.Input)] string @RefID);
		[Procedure("USP_INSERT_BULKWG_MODIFY_QUEUE", "dbo")] public abstract void USP_INSERT_BULKWG_MODIFY_QUEUE([Parameter("BatchID", "nvarchar", ParameterDirection.Input)] string @BatchID, [Parameter("sDomainName", "nvarchar", ParameterDirection.Input)] string @sDomainName, [Parameter("sChoice", "nvarchar", ParameterDirection.Input)] string @sChoice);
		[Procedure("USP_INSERT_BULKWG_QUEUE", "dbo")] public abstract void USP_INSERT_BULKWG_QUEUE([Parameter("BatchID", "nvarchar", ParameterDirection.Input)] string @BatchID, [Parameter("sDomainName", "nvarchar", ParameterDirection.Input)] string @sDomainName, [Parameter("nSlotID", "nvarchar", ParameterDirection.Input)] string @nSlotID);
		[Procedure("USP_INSERT_EXPORT_REQUEST", "dbo")] public abstract void USP_INSERT_EXPORT_REQUEST([Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName, [Parameter("sReportType", "nvarchar", ParameterDirection.Input)] string @sReportType);
		[Procedure("USP_INSERT_HOSTING_PROVIDER_DETAILS", "dbo")] public abstract void USP_INSERT_HOSTING_PROVIDER_DETAILS([Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName, [Parameter("ModernBillClientID", "nvarchar", ParameterDirection.Input)] string @ModernBillClientID, [Parameter("setProvider", "varchar", ParameterDirection.Input)] string @setProvider);
		[Procedure("USP_INSERT_MAXMIND_ALERT_IP", "dbo")] public abstract void USP_INSERT_MAXMIND_ALERT_IP([Parameter("IP_Address", "varchar", ParameterDirection.Input)] string @IP_Address, [Parameter("MaxMind_ID", "varchar", ParameterDirection.Input)] string @MaxMind_ID, [Parameter("IP_Domain", "varchar", ParameterDirection.Input)] string @IP_Domain, [Parameter("City", "varchar", ParameterDirection.Input)] string @City, [Parameter("Region", "varchar", ParameterDirection.Input)] string @Region, [Parameter("Country", "varchar", ParameterDirection.Input)] string @Country, [Parameter("MaxMind_Date", "datetime", ParameterDirection.Input)] DateTime? @MaxMind_Date, [Parameter("Txn_ID", "varchar", ParameterDirection.Input)] string @Txn_ID, [Parameter("Reason", "varchar", ParameterDirection.Input)] string @Reason);
		[Procedure("USP_INSERT_MESSAGES", "dbo")] public abstract void USP_INSERT_MESSAGES([Parameter("IPV_Message_Title", "varchar", ParameterDirection.Input)] string @IPV_Message_Title, [Parameter("IPV_Message_Body", "varchar", ParameterDirection.Input)] string @IPV_Message_Body, [Parameter("IPV_Created_Date", "datetime", ParameterDirection.Input)] DateTime? @IPV_Created_Date, [Parameter("IPV_Deliver_After_Date", "datetime", ParameterDirection.Input)] DateTime? @IPV_Deliver_After_Date, [Parameter("IPV_UserName", "varchar", ParameterDirection.Input)] string @IPV_UserName, [Parameter("IPV_Associated_Domains", "varchar", ParameterDirection.Input)] string @IPV_Associated_Domains, [Parameter("IPV_Associated_OrderID", "varchar", ParameterDirection.Input)] string @IPV_Associated_OrderID, [Parameter("IPV_Additional_Info", "text", ParameterDirection.Input)] string @IPV_Additional_Info, [Parameter("IPV_Deleted_YN", "bit", ParameterDirection.Input)] bool? @IPV_Deleted_YN, [Parameter("IPV_Message_TypeID", "int", ParameterDirection.Input)] int? @IPV_Message_TypeID, [Parameter("IPV_ReplyTo_Mail", "varchar", ParameterDirection.Input)] string @IPV_ReplyTo_Mail, [Parameter("IPV_Created_By", "varchar", ParameterDirection.Input)] string @IPV_Created_By, [Parameter("IPV_Modified_By", "varchar", ParameterDirection.Input)] string @IPV_Modified_By, [Parameter("IPV_Read_YN", "bit", ParameterDirection.Input)] bool? @IPV_Read_YN);
		[Procedure("USP_INSERT_RECENT_DOMAIN_SEARCH", "dbo")] public abstract void USP_INSERT_RECENT_DOMAIN_SEARCH([Parameter("User_Name", "varchar", ParameterDirection.Input)] string @User_Name, [Parameter("SLD", "varchar", ParameterDirection.Input)] string @SLD, [Parameter("TLD", "varchar", ParameterDirection.Input)] string @TLD, [Parameter("Is_Available_At_Last_Check", "bit", ParameterDirection.Input)] bool? @Is_Available_At_Last_Check);
		[Procedure("USP_INSERT_RESET_PASSWORD", "dbo")] public abstract void USP_INSERT_RESET_PASSWORD([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("RequestGuid", "nvarchar", ParameterDirection.Input)] string @RequestGuid, [Parameter("Ip", "varchar", ParameterDirection.Input)] string @Ip, [Parameter("RequestByType", "char", ParameterDirection.Input)] string @RequestByType, [Parameter("RequestValue", "nvarchar", ParameterDirection.Input)] string @RequestValue, [Parameter("ToEmail", "nvarchar", ParameterDirection.Input)] string @ToEmail);
		[Procedure("USP_INSERT_TRANSACTION_FRAUD_SCORE_AND_ADDRESS", "dbo")] public abstract void USP_INSERT_TRANSACTION_FRAUD_SCORE_AND_ADDRESS([Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId, [Parameter("isCountryMatch", "bit", ParameterDirection.Input)] bool? @isCountryMatch, [Parameter("countryCode", "char", ParameterDirection.Input)] string @countryCode, [Parameter("isHighRiskCountry", "bit", ParameterDirection.Input)] bool? @isHighRiskCountry, [Parameter("distance", "int", ParameterDirection.Input)] int? @distance, [Parameter("ipRegion", "varchar", ParameterDirection.Input)] string @ipRegion, [Parameter("ipCity", "varchar", ParameterDirection.Input)] string @ipCity, [Parameter("ipLatitude", "decimal", ParameterDirection.Input)] decimal? @ipLatitude, [Parameter("ipLongitude", "decimal", ParameterDirection.Input)] decimal? @ipLongitude, [Parameter("ipISP", "varchar", ParameterDirection.Input)] string @ipISP, [Parameter("ipOrganization", "varchar", ParameterDirection.Input)] string @ipOrganization, [Parameter("isAnonymousProxy", "bit", ParameterDirection.Input)] bool? @isAnonymousProxy, [Parameter("proxyScore", "smallint", ParameterDirection.Input)] short? @proxyScore, [Parameter("isTransparentProxy", "bit", ParameterDirection.Input)] bool? @isTransparentProxy, [Parameter("isFreeEmail", "bit", ParameterDirection.Input)] bool? @isFreeEmail, [Parameter("isCarderEmail", "bit", ParameterDirection.Input)] bool? @isCarderEmail, [Parameter("isHighRiskUsername", "bit", ParameterDirection.Input)] bool? @isHighRiskUsername, [Parameter("isHighRiskPassword", "bit", ParameterDirection.Input)] bool? @isHighRiskPassword, [Parameter("isBankCountryMatch", "bit", ParameterDirection.Input)] bool? @isBankCountryMatch, [Parameter("bankCountryMatchInfo", "varchar", ParameterDirection.Input)] string @bankCountryMatchInfo, [Parameter("isBankNameMatch", "bit", ParameterDirection.Input)] bool? @isBankNameMatch, [Parameter("bankNameMatchInfo", "varchar", ParameterDirection.Input)] string @bankNameMatchInfo, [Parameter("isBankPhoneMatch", "bit", ParameterDirection.Input)] bool? @isBankPhoneMatch, [Parameter("bankPhoneMatchInfo", "varchar", ParameterDirection.Input)] string @bankPhoneMatchInfo, [Parameter("bankCountryByMaxmind", "char", ParameterDirection.Input)] string @bankCountryByMaxmind, [Parameter("bankNameByMaxmind", "varchar", ParameterDirection.Input)] string @bankNameByMaxmind, [Parameter("bankPhoneByMaxmind", "varchar", ParameterDirection.Input)] string @bankPhoneByMaxmind, [Parameter("bankNameByCustomer", "varchar", ParameterDirection.Input)] string @bankNameByCustomer, [Parameter("bankPhoneByCustomer", "varchar", ParameterDirection.Input)] string @bankPhoneByCustomer, [Parameter("isPhoneNumberInBillingLocation", "bit", ParameterDirection.Input)] bool? @isPhoneNumberInBillingLocation, [Parameter("phoneNumberInBillingLocationInfo", "varchar", ParameterDirection.Input)] string @phoneNumberInBillingLocationInfo, [Parameter("isBillingCityStateZipMatch", "bit", ParameterDirection.Input)] bool? @isBillingCityStateZipMatch, [Parameter("scoreDeprecated", "decimal", ParameterDirection.Input)] decimal? @scoreDeprecated, [Parameter("riskScore", "decimal", ParameterDirection.Input)] decimal? @riskScore, [Parameter("riskExplanation", "varchar", ParameterDirection.Input)] string @riskExplanation, [Parameter("queriesRemaining", "int", ParameterDirection.Input)] int? @queriesRemaining, [Parameter("errorInfo", "varchar", ParameterDirection.Input)] string @errorInfo, [Parameter("maxmindId", "varchar", ParameterDirection.Input)] string @maxmindId, [Parameter("clientIp", "varchar", ParameterDirection.Input)] string @clientIp, [Parameter("forwardedIp", "varchar", ParameterDirection.Input)] string @forwardedIp, [Parameter("cardExpiration", "varchar", ParameterDirection.Input)] string @cardExpiration, [Parameter("cardCvvHash", "varchar", ParameterDirection.Input)] string @cardCvvHash, [Parameter("firstName", "varchar", ParameterDirection.Input)] string @firstName, [Parameter("lastName", "varchar", ParameterDirection.Input)] string @lastName, [Parameter("jobTitle", "varchar", ParameterDirection.Input)] string @jobTitle, [Parameter("organizationName", "varchar", ParameterDirection.Input)] string @organizationName, [Parameter("streetAddress1", "varchar", ParameterDirection.Input)] string @streetAddress1, [Parameter("streetAddress2", "varchar", ParameterDirection.Input)] string @streetAddress2, [Parameter("city", "varchar", ParameterDirection.Input)] string @city, [Parameter("state", "varchar", ParameterDirection.Input)] string @state, [Parameter("zipCode", "varchar", ParameterDirection.Input)] string @zipCode, [Parameter("country", "char", ParameterDirection.Input)] string @country, [Parameter("phoneNumber", "varchar", ParameterDirection.Input)] string @phoneNumber, [Parameter("emailAddress", "varchar", ParameterDirection.Input)] string @emailAddress);
		[Procedure("USP_INSERT_UPDATE_DOMAIN_RECORDS", "dbo")] public abstract void USP_INSERT_UPDATE_DOMAIN_RECORDS([Parameter("ref_ID", "numeric", ParameterDirection.Input)] decimal? @ref_ID, [Parameter("DomainName", "varchar", ParameterDirection.Input)] string @DomainName, [Parameter("XmlContent", "ntext", ParameterDirection.Input)] string @XmlContent, [Parameter("HostId", "varchar", ParameterDirection.Input)] string @HostId);
		[Procedure("usp_InsertCurrencyConversionData", "dbo")] public abstract void usp_InsertCurrencyConversionData([Parameter("source", "varchar", ParameterDirection.Input)] string @source, [Parameter("sourceUrl", "varchar", ParameterDirection.Input)] string @sourceUrl, [Parameter("dataUrl", "varchar", ParameterDirection.Input)] string @dataUrl, [Parameter("data", "text", ParameterDirection.Input)] string @data, [Parameter("dataFormat", "varchar", ParameterDirection.Input)] string @dataFormat, [Parameter("dataDateTime", "datetime", ParameterDirection.Input)] DateTime? @dataDateTime, [Parameter("baseCurrencyCode", "varchar", ParameterDirection.Input)] string @baseCurrencyCode, [Parameter("message", "varchar", ParameterDirection.Input)] string @message);
		[Procedure("usp_InsertPersonalDomainsAddToCart", "dbo")] public abstract void usp_InsertPersonalDomainsAddToCart([Parameter("guid", "varchar", ParameterDirection.Input)] string @guid, [Parameter("domainsXml", "xml", ParameterDirection.Input)] string @domainsXml, [Parameter("createdDatetime", "datetime", ParameterDirection.Input)] DateTime? @createdDatetime);
		[Procedure("USP_INSTANTSEARCH_GET_DOMAIN_ORDERS", "dbo")] public abstract void USP_INSTANTSEARCH_GET_DOMAIN_ORDERS([Parameter("from", "int", ParameterDirection.Input)] int? @from, [Parameter("to", "int", ParameterDirection.Input)] int? @to);
		[Procedure("USP_INSTANTSEARCH_GET_DOMAIN_ORDERS_COUNT", "dbo")] public abstract void USP_INSTANTSEARCH_GET_DOMAIN_ORDERS_COUNT();
		[Procedure("USP_INSTANTSEARCH_GET_DOMAIN_ORDERS_MAX_ID", "dbo")] public abstract void USP_INSTANTSEARCH_GET_DOMAIN_ORDERS_MAX_ID();
		[Procedure("USP_INSTANTSEARCH_GET_DOMAIN_SSL", "dbo")] public abstract void USP_INSTANTSEARCH_GET_DOMAIN_SSL([Parameter("from", "int", ParameterDirection.Input)] int? @from, [Parameter("to", "int", ParameterDirection.Input)] int? @to);
		[Procedure("USP_INSTANTSEARCH_GET_DOMAIN_SSL_COUNT", "dbo")] public abstract void USP_INSTANTSEARCH_GET_DOMAIN_SSL_COUNT();
		[Procedure("USP_INSTANTSEARCH_GET_DOMAIN_SSL_MAX_ID", "dbo")] public abstract void USP_INSTANTSEARCH_GET_DOMAIN_SSL_MAX_ID();
		[Procedure("USP_INSTANTSEARCH_GET_DOMAIN_TRANSFERS_COUNT", "dbo")] public abstract void USP_INSTANTSEARCH_GET_DOMAIN_TRANSFERS_COUNT();
		[Procedure("USP_INSTANTSEARCH_GET_DOMAIN_TRANSFERS_MAX_ID", "dbo")] public abstract void USP_INSTANTSEARCH_GET_DOMAIN_TRANSFERS_MAX_ID();
		[Procedure("USP_INSTANTSEARCH_GET_DOMAINS", "dbo")] public abstract void USP_INSTANTSEARCH_GET_DOMAINS([Parameter("from", "int", ParameterDirection.Input)] int? @from, [Parameter("to", "int", ParameterDirection.Input)] int? @to);
		[Procedure("USP_INSTANTSEARCH_GET_DOMAINS_COUNT", "dbo")] public abstract void USP_INSTANTSEARCH_GET_DOMAINS_COUNT();
		[Procedure("USP_INSTANTSEARCH_GET_DOMAINS_MAX_ID", "dbo")] public abstract void USP_INSTANTSEARCH_GET_DOMAINS_MAX_ID();
		[Procedure("USP_INSTANTSEARCH_GET_HOSTED_DOMAIN_TRANSFERS", "dbo")] public abstract void USP_INSTANTSEARCH_GET_HOSTED_DOMAIN_TRANSFERS([Parameter("from", "int", ParameterDirection.Input)] int? @from, [Parameter("to", "int", ParameterDirection.Input)] int? @to);
		[Procedure("USP_INSTANTSEARCH_GET_HOSTED_DOMAINS", "dbo")] public abstract void USP_INSTANTSEARCH_GET_HOSTED_DOMAINS([Parameter("from", "int", ParameterDirection.Input)] int? @from, [Parameter("to", "int", ParameterDirection.Input)] int? @to);
		[Procedure("USP_INSTANTSEARCH_GET_HOSTED_DOMAINS_COUNT", "dbo")] public abstract void USP_INSTANTSEARCH_GET_HOSTED_DOMAINS_COUNT();
		[Procedure("USP_INSTANTSEARCH_GET_HOSTED_DOMAINS_MAX_ID", "dbo")] public abstract void USP_INSTANTSEARCH_GET_HOSTED_DOMAINS_MAX_ID();
		[Procedure("USP_INSTANTSEARCH_GET_ONEPAGERS", "dbo")] public abstract void USP_INSTANTSEARCH_GET_ONEPAGERS([Parameter("from", "int", ParameterDirection.Input)] int? @from, [Parameter("to", "int", ParameterDirection.Input)] int? @to);
		[Procedure("USP_INSTANTSEARCH_GET_ONEPAGERS_COUNT", "dbo")] public abstract void USP_INSTANTSEARCH_GET_ONEPAGERS_COUNT();
		[Procedure("USP_INSTANTSEARCH_GET_ONEPAGERS_MAX_ID", "dbo")] public abstract void USP_INSTANTSEARCH_GET_ONEPAGERS_MAX_ID();
		[Procedure("USP_INVALIDATE_SECURITY_REQUEST", "dbo")] public abstract void USP_INVALIDATE_SECURITY_REQUEST([Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName);
		[Procedure("USP_IS_API_USER_ALLOWED_TO_API", "dbo")] public abstract void USP_IS_API_USER_ALLOWED_TO_API([Parameter("apiUser", "nvarchar", ParameterDirection.Input)] string @apiUser, [Parameter("apiCommand", "nvarchar", ParameterDirection.Input)] string @apiCommand);
		[Procedure("USP_IS_APP_USER_ALLOWED_TO_API", "dbo")] public abstract void USP_IS_APP_USER_ALLOWED_TO_API([Parameter("appUser", "nvarchar", ParameterDirection.Input)] string @appUser, [Parameter("apiCommand", "nvarchar", ParameterDirection.Input)] string @apiCommand);
		[Procedure("USP_IS_DOMAIN_BANNED", "dbo")] public abstract void USP_IS_DOMAIN_BANNED([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("USP_IS_DOMAIN_WHITELISTED", "dbo")] public abstract void USP_IS_DOMAIN_WHITELISTED([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("USP_IS_FUNDS_AVAILABLE_F0R_RENEW", "dbo")] public abstract void USP_IS_FUNDS_AVAILABLE_F0R_RENEW([Parameter("IPV_USERNAME", "varchar", ParameterDirection.Input)] string @IPV_USERNAME, [Parameter("IPV_TLD", "varchar", ParameterDirection.Input)] string @IPV_TLD, [Parameter("IPV_TYPE", "varchar", ParameterDirection.Input)] string @IPV_TYPE, [Parameter("IPV_NUMYEARS", "int", ParameterDirection.Input)] int? @IPV_NUMYEARS);
		[Procedure("USP_IS_PAGE_ALLOWED_FOR_ADMIN_ROLE", "dbo")] public abstract void USP_IS_PAGE_ALLOWED_FOR_ADMIN_ROLE([Parameter("PageName", "nvarchar", ParameterDirection.Input)] string @PageName, [Parameter("RoleName", "nvarchar", ParameterDirection.Input)] string @RoleName);
		[Procedure("USP_IS_PAGE_ALLOWED_FOR_ADMIN_USER", "dbo")] public abstract void USP_IS_PAGE_ALLOWED_FOR_ADMIN_USER([Parameter("PageName", "nvarchar", ParameterDirection.Input)] string @PageName, [Parameter("AdminUserName", "nvarchar", ParameterDirection.Input)] string @AdminUserName);
		[Procedure("usp_IsOrderAvailable", "dbo")] public abstract void usp_IsOrderAvailable([Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName);
		[Procedure("USP_ISSPECIALPROMOTION_ALREADY_USED", "dbo")] public abstract void USP_ISSPECIALPROMOTION_ALREADY_USED([Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_IUD_EPP_REQUEST", "dbo")] public abstract void USP_IUD_EPP_REQUEST([Parameter("Operation", "varchar", ParameterDirection.Input)] string @Operation, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("EPP_Available_YN", "bit", ParameterDirection.Input)] bool? @EPP_Available_YN, [Parameter("Last_EPP_Check_DateTime", "datetime", ParameterDirection.Input)] DateTime? @Last_EPP_Check_DateTime, [Parameter("Next_EPP_Check_DateTime", "datetime", ParameterDirection.Input)] DateTime? @Next_EPP_Check_DateTime, [Parameter("Email_Sent_YN", "bit", ParameterDirection.Input)] bool? @Email_Sent_YN, [Parameter("Email_Sent_To", "varchar", ParameterDirection.Input)] string @Email_Sent_To, [Parameter("Email_Sent_DateTime", "datetime", ParameterDirection.Input)] DateTime? @Email_Sent_DateTime, [Parameter("Sent_To_Enom_YN", "bit", ParameterDirection.Input)] bool? @Sent_To_Enom_YN, [Parameter("Sent_To_Enom_DateTime", "datetime", ParameterDirection.Input)] DateTime? @Sent_To_Enom_DateTime, [Parameter("ClientIp", "varchar", ParameterDirection.Input)] string @ClientIp, [Parameter("Comments", "text", ParameterDirection.Input)] string @Comments);
		[Procedure("USP_IUD_META_INFO", "dbo")] public abstract void USP_IUD_META_INFO([Parameter("Action", "varchar", ParameterDirection.Input)] string @Action, [Parameter("Type", "varchar", ParameterDirection.Input)] string @Type, [Parameter("URL", "varchar", ParameterDirection.Input)] string @URL, [Parameter("user_agent", "varchar", ParameterDirection.Input)] string @user_agent, [Parameter("meta_title", "varchar", ParameterDirection.Input)] string @meta_title, [Parameter("meta_description", "varchar", ParameterDirection.Input)] string @meta_description, [Parameter("meta_keywords", "varchar", ParameterDirection.Input)] string @meta_keywords, [Parameter("meta_content", "varchar", ParameterDirection.Input)] string @meta_content, [Parameter("meta_classification", "varchar", ParameterDirection.Input)] string @meta_classification, [Parameter("meta_generator", "varchar", ParameterDirection.Input)] string @meta_generator, [Parameter("meta_author", "varchar", ParameterDirection.Input)] string @meta_author, [Parameter("meta_revisit_after", "varchar", ParameterDirection.Input)] string @meta_revisit_after, [Parameter("hidden_text", "varchar", ParameterDirection.Input)] string @hidden_text, [Parameter("URL_old", "varchar", ParameterDirection.Input)] string @URL_old, [Parameter("user_agent_old", "varchar", ParameterDirection.Input)] string @user_agent_old);
		[Procedure("USP_IUD_MP_CATEGORY", "dbo")] public abstract void USP_IUD_MP_CATEGORY([Parameter("IPV_Operation_Type", "varchar", ParameterDirection.Input)] string @IPV_Operation_Type, [Parameter("IPN_MP_Category_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_MP_Category_ID, [Parameter("IPV_Category_name", "varchar", ParameterDirection.Input)] string @IPV_Category_name, [Parameter("IPT_Description", "text", ParameterDirection.Input)] string @IPT_Description, [Parameter("IPN_Parent_category_id", "numeric", ParameterDirection.Input)] decimal? @IPN_Parent_category_id, [Parameter("Active_YN", "bit", ParameterDirection.Input)] bool? @Active_YN, [Parameter("PRIMARY_KEY", "numeric", ParameterDirection.InputOutput)] decimal? @PRIMARY_KEY);
		[Procedure("USP_IUD_PARKING_TEXT", "dbo")] public abstract void USP_IUD_PARKING_TEXT([Parameter("IPV_Domainame", "nvarchar", ParameterDirection.Input)] string @IPV_Domainame, [Parameter("IPT_Parking_Text", "text", ParameterDirection.Input)] string @IPT_Parking_Text, [Parameter("IPT_Tracking_Code", "text", ParameterDirection.Input)] string @IPT_Tracking_Code, [Parameter("IPV_Operation_Type", "varchar", ParameterDirection.Input)] string @IPV_Operation_Type);
		[Procedure("USP_IUD_TRACK_SUBMIT", "dbo")] public abstract void USP_IUD_TRACK_SUBMIT([Parameter("IPV_Operation_Type", "varchar", ParameterDirection.Input)] string @IPV_Operation_Type, [Parameter("IPV_Refid", "varchar", ParameterDirection.Input)] string @IPV_Refid, [Parameter("IPV_MD5", "varchar", ParameterDirection.Input)] string @IPV_MD5);
		[Procedure("USP_IUD_TRANSACTION", "dbo")] public abstract void USP_IUD_TRANSACTION([Parameter("OPERATION_TYPE", "varchar", ParameterDirection.Input)] string @OPERATION_TYPE, [Parameter("Transaction_ID", "decimal", ParameterDirection.Input)] decimal? @Transaction_ID, [Parameter("User_Name", "varchar", ParameterDirection.Input)] string @User_Name, [Parameter("Transaction_Type", "varchar", ParameterDirection.Input)] string @Transaction_Type, [Parameter("Associated_Order_ID", "decimal", ParameterDirection.Input)] decimal? @Associated_Order_ID, [Parameter("Payment_Source", "varchar", ParameterDirection.Input)] string @Payment_Source, [Parameter("Payer_Email", "varchar", ParameterDirection.Input)] string @Payer_Email, [Parameter("CC_Initial_Amount", "money", ParameterDirection.Input)] decimal? @CC_Initial_Amount, [Parameter("Refund_Amount", "money", ParameterDirection.Input)] decimal? @Refund_Amount, [Parameter("Refund_YN", "bit", ParameterDirection.Input)] bool? @Refund_YN, [Parameter("Completed_YN", "bit", ParameterDirection.Input)] bool? @Completed_YN, [Parameter("Comments", "varchar", ParameterDirection.Input)] string @Comments, [Parameter("Order_RefID", "varchar", ParameterDirection.Input)] string @Order_RefID, [Parameter("Start_Date_Time", "datetime", ParameterDirection.Input)] DateTime? @Start_Date_Time, [Parameter("End_Date_Time", "datetime", ParameterDirection.Input)] DateTime? @End_Date_Time, [Parameter("CC_Order_ID", "varchar", ParameterDirection.Input)] string @CC_Order_ID, [Parameter("CC_Trans_ID", "varchar", ParameterDirection.Input)] string @CC_Trans_ID, [Parameter("CC_Status", "varchar", ParameterDirection.Input)] string @CC_Status, [Parameter("Pending_Reason", "varchar", ParameterDirection.Input)] string @Pending_Reason, [Parameter("Payment_Type", "varchar", ParameterDirection.Input)] string @Payment_Type, [Parameter("CC_Last4", "varchar", ParameterDirection.Input)] string @CC_Last4, [Parameter("CC_Name_On_Card", "varchar", ParameterDirection.Input)] string @CC_Name_On_Card, [Parameter("Order_IP", "varchar", ParameterDirection.Input)] string @Order_IP, [Parameter("Order_Zip", "varchar", ParameterDirection.Input)] string @Order_Zip, [Parameter("Order_Error", "varchar", ParameterDirection.Input)] string @Order_Error, [Parameter("Err_Info", "varchar", ParameterDirection.Input)] string @Err_Info, [Parameter("Raw_Data", "text", ParameterDirection.Input)] string @Raw_Data, [Parameter("PRIMARY_KEY", "decimal", ParameterDirection.InputOutput)] decimal? @PRIMARY_KEY, [Parameter("RelatedTransactionID", "int", ParameterDirection.Input)] int? @RelatedTransactionID);
		[Procedure("usp_Linked_ShoppingCartCreateProcessCart", "dbo")] public abstract void usp_Linked_ShoppingCartCreateProcessCart([Parameter("checkoutProcessID", "varchar", ParameterDirection.Input)] string @checkoutProcessID, [Parameter("refID", "varchar", ParameterDirection.Input)] string @refID, [Parameter("checkoutID", "varchar", ParameterDirection.Input)] string @checkoutID, [Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode, [Parameter("isGlobalPromotion", "bit", ParameterDirection.Input)] bool? @isGlobalPromotion, [Parameter("globalPromotionDiscount", "money", ParameterDirection.Input)] decimal? @globalPromotionDiscount, [Parameter("isGlobalPromotionPercentageType", "bit", ParameterDirection.Input)] bool? @isGlobalPromotionPercentageType, [Parameter("total", "money", ParameterDirection.Input)] decimal? @total, [Parameter("cmsCartServerName", "varchar", ParameterDirection.Input)] string @cmsCartServerName, [Parameter("paymentMode", "varchar", ParameterDirection.Input)] string @paymentMode, [Parameter("invAddr", "nvarchar", ParameterDirection.Input)] string @invAddr, [Parameter("shoppingCartProcessID", "bigint", ParameterDirection.InputOutput)] long? @shoppingCartProcessID, [Parameter("errMessage", "nvarchar", ParameterDirection.InputOutput)] string @errMessage);
		[Procedure("USP_LIST_OF_ALL_LOCKED_DOMAINS", "dbo")] public abstract void USP_LIST_OF_ALL_LOCKED_DOMAINS([Parameter("vFiltertype", "varchar", ParameterDirection.Input)] string @vFiltertype, [Parameter("vFiltervalue", "varchar", ParameterDirection.Input)] string @vFiltervalue);
		[Procedure("USP_LOCK_USER", "dbo")] public abstract void USP_LOCK_USER([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_LOG_BUYER_INFO", "dbo")] public abstract void USP_LOG_BUYER_INFO([Parameter("Username", "nvarchar", ParameterDirection.Input)] string @Username, [Parameter("Purchase_Limit", "money", ParameterDirection.Input)] decimal? @Purchase_Limit, [Parameter("Purchase_Dynamic_Limit", "money", ParameterDirection.Input)] decimal? @Purchase_Dynamic_Limit, [Parameter("Purchase_Value", "money", ParameterDirection.Input)] decimal? @Purchase_Value, [Parameter("TodaysPrevTrans", "varchar", ParameterDirection.Input)] string @TodaysPrevTrans, [Parameter("Associated_OrderID", "varchar", ParameterDirection.Input)] string @Associated_OrderID, [Parameter("Perday_Limit_Limit", "bit", ParameterDirection.Input)] bool? @Perday_Limit_Limit, [Parameter("Global_limit", "bit", ParameterDirection.Input)] bool? @Global_limit, [Parameter("Current_limit", "bit", ParameterDirection.Input)] bool? @Current_limit, [Parameter("Tenday_Limit", "bit", ParameterDirection.Input)] bool? @Tenday_Limit);
		[Procedure("USP_LOG_DNS", "dbo")] public abstract void USP_LOG_DNS([Parameter("DNS", "varchar", ParameterDirection.Input)] string @DNS, [Parameter("DomainName", "varchar", ParameterDirection.Input)] string @DomainName, [Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName, [Parameter("LogType", "varchar", ParameterDirection.Input)] string @LogType);
		[Procedure("USP_LOG_EPP_REQUEST", "dbo")] public abstract void USP_LOG_EPP_REQUEST([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ClientIp", "varchar", ParameterDirection.Input)] string @ClientIp, [Parameter("ReasonType", "varchar", ParameterDirection.Input)] string @ReasonType, [Parameter("ReasonDesc", "varchar", ParameterDirection.Input)] string @ReasonDesc, [Parameter("ContactUserYN", "bit", ParameterDirection.Input)] bool? @ContactUserYN);
		[Procedure("USP_LOG_MODIFICATION_PREVIOUS_RIGHTS", "dbo")] public abstract void USP_LOG_MODIFICATION_PREVIOUS_RIGHTS([Parameter("IPV_Domain_Name", "nvarchar", ParameterDirection.Input)] string @IPV_Domain_Name, [Parameter("IPV_By_User_Name", "nvarchar", ParameterDirection.Input)] string @IPV_By_User_Name, [Parameter("IPV_For_User_Name", "nvarchar", ParameterDirection.Input)] string @IPV_For_User_Name, [Parameter("IPV_Action", "varchar", ParameterDirection.Input)] string @IPV_Action);
		[Procedure("USP_LOG_MONITOR_DNS", "dbo")] public abstract void USP_LOG_MONITOR_DNS([Parameter("dns", "xml", ParameterDirection.Input)] string @dns, [Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("logType", "varchar", ParameterDirection.Input)] string @logType);
		[Procedure("USP_LOG_MONITOR_DNS_NEW", "dbo")] public abstract void USP_LOG_MONITOR_DNS_NEW([Parameter("dns", "xml", ParameterDirection.Input)] string @dns, [Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("logType", "varchar", ParameterDirection.Input)] string @logType);
		[Procedure("USP_LOG_PAYPAL_TRANSACTION", "dbo")] public abstract void USP_LOG_PAYPAL_TRANSACTION([Parameter("TransactionID", "numeric", ParameterDirection.Input)] decimal? @TransactionID, [Parameter("PaymentStatus", "varchar", ParameterDirection.Input)] string @PaymentStatus, [Parameter("PendingReason", "varchar", ParameterDirection.Input)] string @PendingReason, [Parameter("ReasonCode", "varchar", ParameterDirection.Input)] string @ReasonCode, [Parameter("StatusDateTime", "datetime", ParameterDirection.Input)] DateTime? @StatusDateTime);
		[Procedure("USP_LOG_TRANSPORT_USER_PROFILE_CHANGE", "dbo")] public abstract void USP_LOG_TRANSPORT_USER_PROFILE_CHANGE([Parameter("UserReferenceId", "uniqueidentifier", ParameterDirection.Input)] Guid? @UserReferenceId, [Parameter("Encrypted_Key", "varchar", ParameterDirection.Input)] string @Encrypted_Key, [Parameter("SourceIp", "bigint", ParameterDirection.Input)] long? @SourceIp, [Parameter("LogTime", "bigint", ParameterDirection.Input)] long? @LogTime, [Parameter("Reason", "varchar", ParameterDirection.Input)] string @Reason, [Parameter("LogReferenceId", "bigint", ParameterDirection.Input)] long? @LogReferenceId);
		[Procedure("USP_LOG_USER_LOCK_UNLOCK", "dbo")] public abstract void USP_LOG_USER_LOCK_UNLOCK([Parameter("IPV_User_Name", "nvarchar", ParameterDirection.Input)] string @IPV_User_Name, [Parameter("IPV_Action_Type", "varchar", ParameterDirection.Input)] string @IPV_Action_Type, [Parameter("IPV_Reason_Code", "varchar", ParameterDirection.Input)] string @IPV_Reason_Code, [Parameter("IPV_Reason_Details", "varchar", ParameterDirection.Input)] string @IPV_Reason_Details);
		[Procedure("USP_LOG_USER_PROFILE_CHANGE", "dbo")] public abstract void USP_LOG_USER_PROFILE_CHANGE([Parameter("userId", "numeric", ParameterDirection.Input)] decimal? @userId, [Parameter("profileType", "varchar", ParameterDirection.Input)] string @profileType, [Parameter("oldValue", "nvarchar", ParameterDirection.Input)] string @oldValue, [Parameter("newValue", "nvarchar", ParameterDirection.Input)] string @newValue, [Parameter("byApp", "varchar", ParameterDirection.Input)] string @byApp, [Parameter("byUser", "nvarchar", ParameterDirection.Input)] string @byUser, [Parameter("comment", "varchar", ParameterDirection.Input)] string @comment, [Parameter("ipAddress", "varchar", ParameterDirection.Input)] string @ipAddress, [Parameter("profileSubtype", "varchar", ParameterDirection.Input)] string @profileSubtype);
		[Procedure("usp_LogCreditCardSave", "dbo")] public abstract void usp_LogCreditCardSave([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("providerStatus", "varchar", ParameterDirection.Input)] string @providerStatus, [Parameter("errorDesc", "varchar", ParameterDirection.Input)] string @errorDesc, [Parameter("ClientIp", "varchar", ParameterDirection.Input)] string @ClientIp, [Parameter("actionType", "varchar", ParameterDirection.Input)] string @actionType);
		[Procedure("USP_LOGON_USER_LOGINSHARE", "dbo")] public abstract void USP_LOGON_USER_LOGINSHARE([Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName, [Parameter("Password", "varchar", ParameterDirection.Input)] string @Password, [Parameter("PasswordNoCase", "varchar", ParameterDirection.Input)] string @PasswordNoCase, [Parameter("ClientIp", "varchar", ParameterDirection.Input)] string @ClientIp, [Parameter("RequestIp", "varchar", ParameterDirection.Input)] string @RequestIp);
		[Procedure("usp_LogResellerMailDetails", "dbo")] public abstract void usp_LogResellerMailDetails([Parameter("autoId", "bigint", ParameterDirection.Input)] long? @autoId, [Parameter("subject", "varchar", ParameterDirection.Input)] string @subject, [Parameter("htmlMailContent", "nvarchar", ParameterDirection.Input)] string @htmlMailContent, [Parameter("txtMailContent", "nvarchar", ParameterDirection.Input)] string @txtMailContent);
		[Procedure("USP_LogUserLoginStatusFor2FA", "dbo")] public abstract void USP_LogUserLoginStatusFor2FA([Parameter("userId", "numeric", ParameterDirection.Input)] decimal? @userId, [Parameter("loginIp", "varchar", ParameterDirection.Input)] string @loginIp, [Parameter("loginFrom", "varchar", ParameterDirection.Input)] string @loginFrom);
		[Procedure("usp_MarketPlaceBuyDomainsFillQueueFromListing", "dbo")] public abstract void usp_MarketPlaceBuyDomainsFillQueueFromListing([Parameter("partnerName", "varchar", ParameterDirection.Input)] string @partnerName);
		[Procedure("usp_MarketPlaceBuyDomainsFillQueueToListing", "dbo")] public abstract void usp_MarketPlaceBuyDomainsFillQueueToListing([Parameter("Sellerusername", "nvarchar", ParameterDirection.Input)] string @Sellerusername, [Parameter("PartnerName", "varchar", ParameterDirection.Input)] string @PartnerName);
		[Procedure("usp_MarketplaceBuyDomainsGetDetails", "dbo")] public abstract void usp_MarketplaceBuyDomainsGetDetails([Parameter("mpListingId", "numeric", ParameterDirection.Input)] decimal? @mpListingId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_MarketPlaceBuyDomainsGetPurchasedDetails", "dbo")] public abstract void usp_MarketPlaceBuyDomainsGetPurchasedDetails([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("usp_MarketplaceBuyDomainsGetSaleHistory", "dbo")] public abstract void usp_MarketplaceBuyDomainsGetSaleHistory([Parameter("mpListingId", "numeric", ParameterDirection.Input)] decimal? @mpListingId);
		[Procedure("usp_MarketPlaceBuyDomainsGetToVerifyDeletedDomains", "dbo")] public abstract void usp_MarketPlaceBuyDomainsGetToVerifyDeletedDomains([Parameter("PartnerName", "varchar", ParameterDirection.Input)] string @PartnerName);
		[Procedure("usp_MarketPlaceBuyDomainsMarkDeleteProcessed", "dbo")] public abstract void usp_MarketPlaceBuyDomainsMarkDeleteProcessed([Parameter("autoID", "int", ParameterDirection.Input)] int? @autoID, [Parameter("isDeletedYN", "bit", ParameterDirection.Input)] bool? @isDeletedYN);
		[Procedure("usp_MarketplaceBuyDomainsReport", "dbo")] public abstract void usp_MarketplaceBuyDomainsReport([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("startDate", "datetime", ParameterDirection.Input)] DateTime? @startDate, [Parameter("endDate", "datetime", ParameterDirection.Input)] DateTime? @endDate, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Order", "varchar", ParameterDirection.Input)] string @Order, [Parameter("pageNumber", "int", ParameterDirection.Input)] int? @pageNumber, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize, [Parameter("isReturnAllRows", "bit", ParameterDirection.Input)] bool? @isReturnAllRows);
		[Procedure("usp_MarketPlaceBuyDomainsUpdateQueue", "dbo")] public abstract void usp_MarketPlaceBuyDomainsUpdateQueue([Parameter("premiumDomainsXml", "xml", ParameterDirection.Input)] string @premiumDomainsXml, [Parameter("listingdaysToExpire", "tinyint", ParameterDirection.Input)] byte? @listingdaysToExpire, [Parameter("expiryCheckDaysRange", "tinyint", ParameterDirection.Input)] byte? @expiryCheckDaysRange, [Parameter("partnerName", "varchar", ParameterDirection.Input)] string @partnerName);
		[Procedure("usp_MarketPlaceCheckTransferRequestAlreadyExists", "dbo")] public abstract void usp_MarketPlaceCheckTransferRequestAlreadyExists([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("usp_MarketPlaceEnomPremiumGetApprovedCheckList", "dbo")] public abstract void usp_MarketPlaceEnomPremiumGetApprovedCheckList();
		[Procedure("usp_MarketPlaceEnomPremiumUpdateCheckStatus", "dbo")] public abstract void usp_MarketPlaceEnomPremiumUpdateCheckStatus([Parameter("autoId", "int", ParameterDirection.Input)] int? @autoId, [Parameter("checkCount", "int", ParameterDirection.Input)] int? @checkCount, [Parameter("status", "varchar", ParameterDirection.Input)] string @status, [Parameter("statusDescription", "varchar", ParameterDirection.Input)] string @statusDescription);
		[Procedure("usp_MarketPlaceGetAllPartnerCategories", "dbo")] public abstract void usp_MarketPlaceGetAllPartnerCategories();
		[Procedure("usp_MarketPlaceGetAllPartners", "dbo")] public abstract void usp_MarketPlaceGetAllPartners();
		[Procedure("usp_MarketPlaceGetDomainName", "dbo")] public abstract void usp_MarketPlaceGetDomainName([Parameter("MpId", "int", ParameterDirection.Input)] int? @MpId);
		[Procedure("usp_MarketPlaceGetLogPremiumDomainSaleStatus", "dbo")] public abstract void usp_MarketPlaceGetLogPremiumDomainSaleStatus([Parameter("MpListingId", "numeric", ParameterDirection.Input)] decimal? @MpListingId, [Parameter("getAs", "varchar", ParameterDirection.Input)] string @getAs);
		[Procedure("usp_MarketPlaceGetOrderId", "dbo")] public abstract void usp_MarketPlaceGetOrderId([Parameter("MpId", "int", ParameterDirection.Input)] int? @MpId);
		[Procedure("usp_MarketPlaceGetPartnerId", "dbo")] public abstract void usp_MarketPlaceGetPartnerId([Parameter("mpId", "int", ParameterDirection.Input)] int? @mpId);
		[Procedure("usp_MarketPlaceGetPartnerOrderId", "dbo")] public abstract void usp_MarketPlaceGetPartnerOrderId([Parameter("mpId", "int", ParameterDirection.Input)] int? @mpId);
		[Procedure("usp_MarketPlaceGetPremiumDomainSaleDetails", "dbo")] public abstract void usp_MarketPlaceGetPremiumDomainSaleDetails([Parameter("mpId", "int", ParameterDirection.Input)] int? @mpId);
		[Procedure("usp_MarketPlaceGetPremiumDomainSaleStatus", "dbo")] public abstract void usp_MarketPlaceGetPremiumDomainSaleStatus();
		[Procedure("usp_MarketPlaceGetStatusName", "dbo")] public abstract void usp_MarketPlaceGetStatusName([Parameter("Id", "int", ParameterDirection.Input)] int? @Id);
		[Procedure("usp_MarketPlaceIdIsValidToOrderIdWithPrice", "dbo")] public abstract void usp_MarketPlaceIdIsValidToOrderIdWithPrice([Parameter("mpId", "numeric", ParameterDirection.Input)] decimal? @mpId, [Parameter("orderId", "int", ParameterDirection.Input)] int? @orderId, [Parameter("returnFlag", "bit", ParameterDirection.InputOutput)] bool? @returnFlag, [Parameter("itemPrice", "money", ParameterDirection.InputOutput)] decimal? @itemPrice);
		[Procedure("usp_MarketPlaceIsValidStatus", "dbo")] public abstract void usp_MarketPlaceIsValidStatus([Parameter("MpId", "int", ParameterDirection.Input)] int? @MpId);
		[Procedure("usp_MarketPlaceUpdateSaleTransaction", "dbo")] public abstract void usp_MarketPlaceUpdateSaleTransaction([Parameter("mpId", "numeric", ParameterDirection.Input)] decimal? @mpId, [Parameter("TransactionType", "varchar", ParameterDirection.Input)] string @TransactionType, [Parameter("IsReturn", "bit", ParameterDirection.Input)] bool? @IsReturn, [Parameter("Description", "varchar", ParameterDirection.Input)] string @Description, [Parameter("DenyDescription", "varchar", ParameterDirection.Input)] string @DenyDescription, [Parameter("ResponseXml", "varchar", ParameterDirection.Input)] string @ResponseXml);
		[Procedure("usp_MarketPlaceUpdateSaleTransactionForDeny", "dbo")] public abstract void usp_MarketPlaceUpdateSaleTransactionForDeny([Parameter("mpId", "numeric", ParameterDirection.Input)] decimal? @mpId, [Parameter("TransactionType", "varchar", ParameterDirection.Input)] string @TransactionType, [Parameter("IsReturn", "bit", ParameterDirection.Input)] bool? @IsReturn, [Parameter("Description", "varchar", ParameterDirection.Input)] string @Description, [Parameter("DenyDescription", "varchar", ParameterDirection.Input)] string @DenyDescription, [Parameter("Status", "varchar", ParameterDirection.Input)] string @Status);
		[Procedure("USP_MAXMIND_IP_RELATED_DETAILS", "dbo")] public abstract void USP_MAXMIND_IP_RELATED_DETAILS([Parameter("filterType", "varchar", ParameterDirection.Input)] string @filterType, [Parameter("filterByIp", "varchar", ParameterDirection.Input)] string @filterByIp, [Parameter("maxmindIds", "varchar", ParameterDirection.Input)] string @maxmindIds);
		[Procedure("USP_MIGRATE_RECENT_DOMAIN_SEARCH", "dbo")] public abstract void USP_MIGRATE_RECENT_DOMAIN_SEARCH([Parameter("Old_User_Name", "varchar", ParameterDirection.Input)] string @Old_User_Name, [Parameter("New_User_Name", "varchar", ParameterDirection.Input)] string @New_User_Name);
		[Procedure("USP_MOVE_MESSAGES_TO_NAMECHEAP_LOGS", "dbo")] public abstract void USP_MOVE_MESSAGES_TO_NAMECHEAP_LOGS();
		[Procedure("USP_MOVE_MONEY2WITHDRAW", "dbo")] public abstract void USP_MOVE_MONEY2WITHDRAW([Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName);
		[Procedure("USP_MoveMessageNamecheapcoreToNamecheapLogs", "dbo")] public abstract void USP_MoveMessageNamecheapcoreToNamecheapLogs();
		[Procedure("USP_MP_ADD_DOMAIN_LOG", "dbo")] public abstract void USP_MP_ADD_DOMAIN_LOG([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("sellerName", "nvarchar", ParameterDirection.Input)] string @sellerName, [Parameter("numberOfYears", "smallint", ParameterDirection.Input)] short? @numberOfYears, [Parameter("ccTransactionId", "nvarchar", ParameterDirection.Input)] string @ccTransactionId, [Parameter("ccOrderId", "nvarchar", ParameterDirection.Input)] string @ccOrderId, [Parameter("buyerName", "varchar", ParameterDirection.Input)] string @buyerName);
		[Procedure("USP_MP_ADDTO_CART", "dbo")] public abstract void USP_MP_ADDTO_CART([Parameter("sRefID", "varchar", ParameterDirection.Input)] string @sRefID, [Parameter("MPID", "numeric", ParameterDirection.Input)] decimal? @MPID, [Parameter("IsLoggedIN", "bit", ParameterDirection.Input)] bool? @IsLoggedIN, [Parameter("sActionID", "varchar", ParameterDirection.Input)] string @sActionID, [Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName);
		[Procedure("USP_MP_ADMIN_FAST_MONEY_TRANSFER", "dbo")] public abstract void USP_MP_ADMIN_FAST_MONEY_TRANSFER([Parameter("nTransactionID", "numeric", ParameterDirection.Input)] decimal? @nTransactionID);
		[Procedure("USP_MP_ADMIN_GET_ALL_DOMAINS_LIST", "dbo")] public abstract void USP_MP_ADMIN_GET_ALL_DOMAINS_LIST([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_MP_ADMIN_GET_DOMAIN_DETAILS", "dbo")] public abstract void USP_MP_ADMIN_GET_DOMAIN_DETAILS([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("USP_MP_ADMIN_GET_SALE_TRANSACTION", "dbo")] public abstract void USP_MP_ADMIN_GET_SALE_TRANSACTION([Parameter("sDomainName", "nvarchar", ParameterDirection.Input)] string @sDomainName, [Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName);
		[Procedure("USP_MP_ADMIN_SALE_TRANSCTION_HISTORY", "dbo")] public abstract void USP_MP_ADMIN_SALE_TRANSCTION_HISTORY([Parameter("IPNV_UserName", "nvarchar", ParameterDirection.Input)] string @IPNV_UserName);
		[Procedure("USP_MP_ADMIN_SAVE_NOTIFICATION_EMAIL", "dbo")] public abstract void USP_MP_ADMIN_SAVE_NOTIFICATION_EMAIL([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("AdminUsername", "varchar", ParameterDirection.Input)] string @AdminUsername, [Parameter("IPAddress", "varchar", ParameterDirection.Input)] string @IPAddress, [Parameter("OldNotification", "nvarchar", ParameterDirection.Input)] string @OldNotification, [Parameter("NewNotification", "nvarchar", ParameterDirection.Input)] string @NewNotification);
		[Procedure("USP_MP_ADMIN_SAVE_PURCHASE_LIMIT", "dbo")] public abstract void USP_MP_ADMIN_SAVE_PURCHASE_LIMIT([Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName, [Parameter("RequestLimit", "money", ParameterDirection.Input)] decimal? @RequestLimit, [Parameter("Addfunds", "money", ParameterDirection.Input)] decimal? @Addfunds);
		[Procedure("USP_MP_ADMIN_SAVE_USER_MANAGE_INFO", "dbo")] public abstract void USP_MP_ADMIN_SAVE_USER_MANAGE_INFO([Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName, [Parameter("MinCCAddFunds", "money", ParameterDirection.Input)] decimal? @MinCCAddFunds, [Parameter("PaypalAddFunds", "money", ParameterDirection.Input)] decimal? @PaypalAddFunds, [Parameter("MaxAddFunds", "money", ParameterDirection.Input)] decimal? @MaxAddFunds, [Parameter("MaxAddFundsperday", "money", ParameterDirection.Input)] decimal? @MaxAddFundsperday, [Parameter("AcceptCC", "bit", ParameterDirection.Input)] bool? @AcceptCC, [Parameter("AcceptFunds", "bit", ParameterDirection.Input)] bool? @AcceptFunds, [Parameter("nMaxSaleDomPrice", "money", ParameterDirection.Input)] decimal? @nMaxSaleDomPrice, [Parameter("nMinSaleDomPrice", "money", ParameterDirection.Input)] decimal? @nMinSaleDomPrice, [Parameter("nCommissionPercent", "int", ParameterDirection.Input)] int? @nCommissionPercent, [Parameter("PayPalMinBal", "money", ParameterDirection.Input)] decimal? @PayPalMinBal, [Parameter("CheckMinBal", "money", ParameterDirection.Input)] decimal? @CheckMinBal, [Parameter("Block", "bit", ParameterDirection.Input)] bool? @Block, [Parameter("BlockedReason", "nvarchar", ParameterDirection.Input)] string @BlockedReason, [Parameter("AutoApproveMarketplacePurchases", "bit", ParameterDirection.Input)] bool? @AutoApproveMarketplacePurchases, [Parameter("DefaultDNSProviderSubTypeName", "nvarchar", ParameterDirection.Input)] string @DefaultDNSProviderSubTypeName, [Parameter("DefaultDNSProviderInternalReason", "nvarchar", ParameterDirection.Input)] string @DefaultDNSProviderInternalReason);
		[Procedure("USP_MP_ADMIN_SELLING_COMPLETED_LISTING", "dbo")] public abstract void USP_MP_ADMIN_SELLING_COMPLETED_LISTING([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ListType", "varchar", ParameterDirection.Input)] string @ListType, [Parameter("KeywordSearch", "nvarchar", ParameterDirection.Input)] string @KeywordSearch, [Parameter("List_Start_Date", "datetime", ParameterDirection.Input)] DateTime? @List_Start_Date, [Parameter("List_End_Date", "datetime", ParameterDirection.Input)] DateTime? @List_End_Date, [Parameter("Sale_Start_Date", "datetime", ParameterDirection.Input)] DateTime? @Sale_Start_Date, [Parameter("Sale_End_Date", "datetime", ParameterDirection.Input)] DateTime? @Sale_End_Date, [Parameter("Sold_To", "nvarchar", ParameterDirection.Input)] string @Sold_To);
		[Procedure("USP_MP_ADMIN_SELLING_CURRENT_LISTING", "dbo")] public abstract void USP_MP_ADMIN_SELLING_CURRENT_LISTING([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("KeywordSearch", "nvarchar", ParameterDirection.Input)] string @KeywordSearch, [Parameter("List_Start_Date", "datetime", ParameterDirection.Input)] DateTime? @List_Start_Date, [Parameter("List_End_Date", "datetime", ParameterDirection.Input)] DateTime? @List_End_Date);
		[Procedure("USP_MP_ADMIN_SET_DOMAIN_DETAILS", "dbo")] public abstract void USP_MP_ADMIN_SET_DOMAIN_DETAILS([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("DenyListing", "bit", ParameterDirection.Input)] bool? @DenyListing, [Parameter("sReason", "nvarchar", ParameterDirection.Input)] string @sReason, [Parameter("commission", "int", ParameterDirection.Input)] int? @commission);
		[Procedure("USP_MP_ADMIN_SET_DOMAIN_FEATURED_YN", "dbo")] public abstract void USP_MP_ADMIN_SET_DOMAIN_FEATURED_YN([Parameter("Mp_Listing_ID", "numeric", ParameterDirection.Input)] decimal? @Mp_Listing_ID, [Parameter("Featured_YN", "bit", ParameterDirection.Input)] bool? @Featured_YN);
		[Procedure("USP_MP_ADMIN_USER_MANAGE_LIST", "dbo")] public abstract void USP_MP_ADMIN_USER_MANAGE_LIST([Parameter("IPV_UserName", "nvarchar", ParameterDirection.Input)] string @IPV_UserName);
		[Procedure("USP_MP_APPROVAL_LOCAL_UPDATES", "dbo")] public abstract void USP_MP_APPROVAL_LOCAL_UPDATES([Parameter("sDomain", "nvarchar", ParameterDirection.Input)] string @sDomain, [Parameter("nListingID", "numeric", ParameterDirection.Input)] decimal? @nListingID, [Parameter("ApprovedBy", "varchar", ParameterDirection.Input)] string @ApprovedBy, [Parameter("ApproveDescription", "varchar", ParameterDirection.Input)] string @ApproveDescription, [Parameter("ApprovedOn", "datetime", ParameterDirection.Input)] DateTime? @ApprovedOn);
		[Procedure("USP_MP_AVAILABLE_FEATURES", "dbo")] public abstract void USP_MP_AVAILABLE_FEATURES([Parameter("sDomainname", "nvarchar", ParameterDirection.Input)] string @sDomainname);
		[Procedure("USP_MP_BUYING_ACTIVITY", "dbo")] public abstract void USP_MP_BUYING_ACTIVITY([Parameter("Buyer_User_Name", "nvarchar", ParameterDirection.Input)] string @Buyer_User_Name, [Parameter("Domainname", "nvarchar", ParameterDirection.Input)] string @Domainname);
		[Procedure("USP_MP_BUYING_LOCAL_UPDATES", "dbo")] public abstract void USP_MP_BUYING_LOCAL_UPDATES([Parameter("sREFID", "nvarchar", ParameterDirection.Input)] string @sREFID, [Parameter("sDomain", "nvarchar", ParameterDirection.Input)] string @sDomain, [Parameter("nListingID", "numeric", ParameterDirection.Input)] decimal? @nListingID, [Parameter("sBuyerUserName", "nvarchar", ParameterDirection.Input)] string @sBuyerUserName, [Parameter("OrderRefID", "nvarchar", ParameterDirection.Input)] string @OrderRefID, [Parameter("OrderID", "nvarchar", ParameterDirection.Input)] string @OrderID);
		[Procedure("USP_MP_BUYING_UPDATES", "dbo")] public abstract void USP_MP_BUYING_UPDATES([Parameter("sDomain", "nvarchar", ParameterDirection.Input)] string @sDomain, [Parameter("nListingID", "numeric", ParameterDirection.Input)] decimal? @nListingID, [Parameter("sBuyerUserName", "nvarchar", ParameterDirection.Input)] string @sBuyerUserName, [Parameter("OrderRefID", "nvarchar", ParameterDirection.Input)] string @OrderRefID, [Parameter("OrderID", "nvarchar", ParameterDirection.Input)] string @OrderID, [Parameter("salePrice", "money", ParameterDirection.Input)] decimal? @salePrice);
		[Procedure("USP_MP_CHANGE_CATEGORY_SEQUENCE", "dbo")] public abstract void USP_MP_CHANGE_CATEGORY_SEQUENCE([Parameter("CategoryID", "int", ParameterDirection.Input)] int? @CategoryID, [Parameter("MoveType", "bit", ParameterDirection.Input)] bool? @MoveType);
		[Procedure("USP_MP_EDIT_OFFER_A_PRICE", "dbo")] public abstract void USP_MP_EDIT_OFFER_A_PRICE([Parameter("MP_Listing_ID", "numeric", ParameterDirection.Input)] decimal? @MP_Listing_ID, [Parameter("Buyer_User_Name", "nvarchar", ParameterDirection.Input)] string @Buyer_User_Name, [Parameter("Offer_Price", "money", ParameterDirection.Input)] decimal? @Offer_Price);
		[Procedure("USP_MP_FILTER_USER_LISTING", "dbo")] public abstract void USP_MP_FILTER_USER_LISTING([Parameter("Created_Start_Date", "datetime", ParameterDirection.Input)] DateTime? @Created_Start_Date, [Parameter("Created_End_Date", "datetime", ParameterDirection.Input)] DateTime? @Created_End_Date, [Parameter("LastTrans_Start_Date", "datetime", ParameterDirection.Input)] DateTime? @LastTrans_Start_Date, [Parameter("LastTrans_End_Date", "datetime", ParameterDirection.Input)] DateTime? @LastTrans_End_Date, [Parameter("User_Name", "nvarchar", ParameterDirection.Input)] string @User_Name, [Parameter("Email", "nvarchar", ParameterDirection.Input)] string @Email, [Parameter("Signup_IP", "varchar", ParameterDirection.Input)] string @Signup_IP, [Parameter("SearchByField1", "nvarchar", ParameterDirection.Input)] string @SearchByField1, [Parameter("SearchByField2", "nvarchar", ParameterDirection.Input)] string @SearchByField2, [Parameter("SearchByValue1", "nvarchar", ParameterDirection.Input)] string @SearchByValue1, [Parameter("SearchByValue2", "nvarchar", ParameterDirection.Input)] string @SearchByValue2, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize);
		[Procedure("USP_MP_FINAL_VALIDATION", "dbo")] public abstract void USP_MP_FINAL_VALIDATION([Parameter("sRefID", "varchar", ParameterDirection.Input)] string @sRefID, [Parameter("sBuyerUserName", "nvarchar", ParameterDirection.Input)] string @sBuyerUserName);
		[Procedure("USP_MP_GET_BUYER_COMPLETED_DOMAIN_DETAILS", "dbo")] public abstract void USP_MP_GET_BUYER_COMPLETED_DOMAIN_DETAILS([Parameter("Mp_Listing_Id", "numeric", ParameterDirection.Input)] decimal? @Mp_Listing_Id, [Parameter("BuyerUserName", "nvarchar", ParameterDirection.Input)] string @BuyerUserName);
		[Procedure("USP_MP_GET_BUYER_OFFER", "dbo")] public abstract void USP_MP_GET_BUYER_OFFER([Parameter("nListingID", "numeric", ParameterDirection.Input)] decimal? @nListingID, [Parameter("sUserName", "varchar", ParameterDirection.Input)] string @sUserName);
		[Procedure("USP_MP_GET_COMPLETED_DOMAIN_DETAILS", "dbo")] public abstract void USP_MP_GET_COMPLETED_DOMAIN_DETAILS([Parameter("Mp_Listing_Id", "numeric", ParameterDirection.Input)] decimal? @Mp_Listing_Id, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_MP_GET_DETAILS_FOR_EMAIL", "dbo")] public abstract void USP_MP_GET_DETAILS_FOR_EMAIL([Parameter("MP_listingId", "numeric", ParameterDirection.Input)] decimal? @MP_listingId);
		[Procedure("USP_MP_GET_DOMAIN_PRICE_FOR_BUYER", "dbo")] public abstract void USP_MP_GET_DOMAIN_PRICE_FOR_BUYER([Parameter("nListingID", "numeric", ParameterDirection.Input)] decimal? @nListingID, [Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName);
		[Procedure("USP_MP_GET_MONEY_REQUEST", "dbo")] public abstract void USP_MP_GET_MONEY_REQUEST([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("StartDate", "datetime", ParameterDirection.Input)] DateTime? @StartDate, [Parameter("EndDate", "datetime", ParameterDirection.Input)] DateTime? @EndDate, [Parameter("RequestId", "numeric", ParameterDirection.Input)] decimal? @RequestId, [Parameter("PayMode", "varchar", ParameterDirection.Input)] string @PayMode);
		[Procedure("USP_MP_GET_MP_DOMAIN_OFFERS_DETAILS", "dbo")] public abstract void USP_MP_GET_MP_DOMAIN_OFFERS_DETAILS([Parameter("Mp_Listing_ID", "numeric", ParameterDirection.Input)] decimal? @Mp_Listing_ID, [Parameter("Username", "varchar", ParameterDirection.Input)] string @Username, [Parameter("AllUser", "bit", ParameterDirection.Input)] bool? @AllUser);
		[Procedure("USP_MP_GET_OFFER_ACTION_FOR_DOMAIN", "dbo")] public abstract void USP_MP_GET_OFFER_ACTION_FOR_DOMAIN([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ListingID", "numeric", ParameterDirection.Input)] decimal? @ListingID, [Parameter("ActionType", "varchar", ParameterDirection.Input)] string @ActionType, [Parameter("OfferPrice", "money", ParameterDirection.Input)] decimal? @OfferPrice);
		[Procedure("USP_MP_GET_PURCHASED_DOMAIN_LIST", "dbo")] public abstract void USP_MP_GET_PURCHASED_DOMAIN_LIST([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Domainname", "nvarchar", ParameterDirection.Input)] string @Domainname);
		[Procedure("USP_MP_GET_RETURN_CONFIRMATION", "dbo")] public abstract void USP_MP_GET_RETURN_CONFIRMATION([Parameter("IPN_ListingID", "numeric", ParameterDirection.Input)] decimal? @IPN_ListingID, [Parameter("IPB_Validate_Only_YN", "bit", ParameterDirection.Input)] bool? @IPB_Validate_Only_YN, [Parameter("IPV_Return_Description", "varchar", ParameterDirection.Input)] string @IPV_Return_Description);
		[Procedure("USP_MP_GET_SELLER_CURRENT_OFFERS_RECEIVED", "dbo")] public abstract void USP_MP_GET_SELLER_CURRENT_OFFERS_RECEIVED([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("BuyerName", "nvarchar", ParameterDirection.Input)] string @BuyerName, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("List_Start_Date", "datetime", ParameterDirection.Input)] DateTime? @List_Start_Date, [Parameter("List_End_Date", "datetime", ParameterDirection.Input)] DateTime? @List_End_Date);
		[Procedure("USP_MP_GET_SELLER_DETAILS", "dbo")] public abstract void USP_MP_GET_SELLER_DETAILS([Parameter("nListingID", "numeric", ParameterDirection.Input)] decimal? @nListingID);
		[Procedure("USP_MP_GET_TRANSACTION_HISTORY", "dbo")] public abstract void USP_MP_GET_TRANSACTION_HISTORY([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("StartDate", "datetime", ParameterDirection.Input)] DateTime? @StartDate, [Parameter("EndDate", "datetime", ParameterDirection.Input)] DateTime? @EndDate, [Parameter("TransID", "numeric", ParameterDirection.Input)] decimal? @TransID, [Parameter("TransType", "varchar", ParameterDirection.Input)] string @TransType);
		[Procedure("USP_MP_INSERT_LISTING", "dbo")] public abstract void USP_MP_INSERT_LISTING([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("Description", "text", ParameterDirection.Input)] string @Description, [Parameter("Seller_User_Name", "nvarchar", ParameterDirection.Input)] string @Seller_User_Name, [Parameter("Listing_Price", "money", ParameterDirection.Input)] decimal? @Listing_Price, [Parameter("Listing_For", "int", ParameterDirection.Input)] int? @Listing_For, [Parameter("Accept_Offers_YN", "bit", ParameterDirection.Input)] bool? @Accept_Offers_YN, [Parameter("Adult_Listing_YN", "bit", ParameterDirection.Input)] bool? @Adult_Listing_YN, [Parameter("POP3_YN", "bit", ParameterDirection.Input)] bool? @POP3_YN, [Parameter("WhoisGuard_YN", "bit", ParameterDirection.Input)] bool? @WhoisGuard_YN, [Parameter("Category1", "int", ParameterDirection.Input)] int? @Category1, [Parameter("Category2", "int", ParameterDirection.Input)] int? @Category2, [Parameter("tmpIdentity", "numeric", ParameterDirection.Input)] decimal? @tmpIdentity);
		[Procedure("USP_MP_INSERT_OFFER_A_PRICE", "dbo")] public abstract void USP_MP_INSERT_OFFER_A_PRICE([Parameter("MP_Listing_ID", "numeric", ParameterDirection.Input)] decimal? @MP_Listing_ID, [Parameter("Buyer_User_Name", "nvarchar", ParameterDirection.Input)] string @Buyer_User_Name, [Parameter("Offer_Price", "money", ParameterDirection.Input)] decimal? @Offer_Price);
		[Procedure("USP_MP_INSERT_USER_MONEY_REQUEST", "dbo")] public abstract void USP_MP_INSERT_USER_MONEY_REQUEST([Parameter("IPNV_UserName", "nvarchar", ParameterDirection.Input)] string @IPNV_UserName, [Parameter("IPV_PayMode", "varchar", ParameterDirection.Input)] string @IPV_PayMode, [Parameter("IPM_Amount", "money", ParameterDirection.Input)] decimal? @IPM_Amount, [Parameter("IPNV_Paypal_ID", "nvarchar", ParameterDirection.Input)] string @IPNV_Paypal_ID, [Parameter("IPNV_Check_To", "nvarchar", ParameterDirection.Input)] string @IPNV_Check_To, [Parameter("IPT_Check_Address", "text", ParameterDirection.Input)] string @IPT_Check_Address, [Parameter("IPNV_Password", "varchar", ParameterDirection.Input)] string @IPNV_Password, [Parameter("IPNV_PasswordNoCase", "varchar", ParameterDirection.Input)] string @IPNV_PasswordNoCase);
		[Procedure("USP_MP_LISTING_DOMAIN_VALIDATE", "dbo")] public abstract void USP_MP_LISTING_DOMAIN_VALIDATE([Parameter("MP_Listing_ID", "numeric", ParameterDirection.Input)] decimal? @MP_Listing_ID);
		[Procedure("USP_MP_RETURN_LOCAL_UPDATES", "dbo")] public abstract void USP_MP_RETURN_LOCAL_UPDATES([Parameter("nListingID", "numeric", ParameterDirection.Input)] decimal? @nListingID, [Parameter("IPB_Isdomainavailable", "bit", ParameterDirection.Input)] bool? @IPB_Isdomainavailable, [Parameter("Admin_Return_Description", "text", ParameterDirection.Input)] string @Admin_Return_Description, [Parameter("Content", "text", ParameterDirection.Input)] string @Content);
		[Procedure("USP_MP_REVERSAL_LOCAL_UPDATES", "dbo")] public abstract void USP_MP_REVERSAL_LOCAL_UPDATES([Parameter("sDomain", "nvarchar", ParameterDirection.Input)] string @sDomain, [Parameter("nListingID", "numeric", ParameterDirection.Input)] decimal? @nListingID, [Parameter("ReturnedBy", "varchar", ParameterDirection.Input)] string @ReturnedBy, [Parameter("ReturnDescription", "varchar", ParameterDirection.Input)] string @ReturnDescription, [Parameter("AdminComments", "varchar", ParameterDirection.Input)] string @AdminComments, [Parameter("RefundBuyer", "bit", ParameterDirection.Input)] bool? @RefundBuyer, [Parameter("ReturnedOn", "datetime", ParameterDirection.Input)] DateTime? @ReturnedOn);
		[Procedure("USP_MP_SALE_AVAILABLE", "dbo")] public abstract void USP_MP_SALE_AVAILABLE([Parameter("Domainname", "nvarchar", ParameterDirection.Input)] string @Domainname);
		[Procedure("USP_MP_SELL_GETOFFERS", "dbo")] public abstract void USP_MP_SELL_GETOFFERS([Parameter("ListingID", "numeric", ParameterDirection.Input)] decimal? @ListingID, [Parameter("sUserFilter", "nvarchar", ParameterDirection.Input)] string @sUserFilter);
		[Procedure("USP_MP_SELL_SAVEOFFER_OPTIONS", "dbo")] public abstract void USP_MP_SELL_SAVEOFFER_OPTIONS([Parameter("nID", "numeric", ParameterDirection.Input)] decimal? @nID, [Parameter("nOfferID", "numeric", ParameterDirection.Input)] decimal? @nOfferID, [Parameter("sBuyer", "nvarchar", ParameterDirection.Input)] string @sBuyer, [Parameter("Option", "varchar", ParameterDirection.Input)] string @Option, [Parameter("Price", "money", ParameterDirection.Input)] decimal? @Price);
		[Procedure("USP_MP_SELLING_COMPLETED_LISTING", "dbo")] public abstract void USP_MP_SELLING_COMPLETED_LISTING([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ListType", "varchar", ParameterDirection.Input)] string @ListType, [Parameter("KeywordSearch", "nvarchar", ParameterDirection.Input)] string @KeywordSearch, [Parameter("List_Start_Date", "datetime", ParameterDirection.Input)] DateTime? @List_Start_Date, [Parameter("List_End_Date", "datetime", ParameterDirection.Input)] DateTime? @List_End_Date, [Parameter("Sold_To", "nvarchar", ParameterDirection.Input)] string @Sold_To);
		[Procedure("USP_MP_SELLING_CURRENT_LISTING", "dbo")] public abstract void USP_MP_SELLING_CURRENT_LISTING([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("KeywordSearch", "nvarchar", ParameterDirection.Input)] string @KeywordSearch, [Parameter("List_Start_Date", "datetime", ParameterDirection.Input)] DateTime? @List_Start_Date, [Parameter("List_End_Date", "datetime", ParameterDirection.Input)] DateTime? @List_End_Date);
		[Procedure("USP_MP_SELLING_DOMAIN_EDIT_LISTING", "dbo")] public abstract void USP_MP_SELLING_DOMAIN_EDIT_LISTING([Parameter("MP_Listing_ID", "numeric", ParameterDirection.Input)] decimal? @MP_Listing_ID, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_MP_SELLING_GLOBAL_ISLISTABLE", "dbo")] public abstract void USP_MP_SELLING_GLOBAL_ISLISTABLE([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_MP_SELLING_ISLISTABLE", "dbo")] public abstract void USP_MP_SELLING_ISLISTABLE([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_MP_SELLING_UPDATE_LISTING", "dbo")] public abstract void USP_MP_SELLING_UPDATE_LISTING([Parameter("MP_Listing_ID", "numeric", ParameterDirection.Input)] decimal? @MP_Listing_ID, [Parameter("Description", "text", ParameterDirection.Input)] string @Description, [Parameter("Seller_User_Name", "nvarchar", ParameterDirection.Input)] string @Seller_User_Name, [Parameter("Adult_Listing_YN", "bit", ParameterDirection.Input)] bool? @Adult_Listing_YN, [Parameter("POP3_YN", "bit", ParameterDirection.Input)] bool? @POP3_YN, [Parameter("WhoisGuard_YN", "bit", ParameterDirection.Input)] bool? @WhoisGuard_YN, [Parameter("Accept_Offers_YN", "bit", ParameterDirection.Input)] bool? @Accept_Offers_YN, [Parameter("CloseListing", "bit", ParameterDirection.Input)] bool? @CloseListing, [Parameter("category1", "int", ParameterDirection.Input)] int? @category1, [Parameter("category2", "int", ParameterDirection.Input)] int? @category2, [Parameter("IsUpdateWG", "bit", ParameterDirection.Input)] bool? @IsUpdateWG, [Parameter("Offer_EmailAlert_YN", "bit", ParameterDirection.Input)] bool? @Offer_EmailAlert_YN);
		[Procedure("USP_MP_SET_GLOBAL_OPTIONS", "dbo")] public abstract void USP_MP_SET_GLOBAL_OPTIONS([Parameter("IPV_Maximum_Price", "varchar", ParameterDirection.Input)] string @IPV_Maximum_Price, [Parameter("IPV_Minimum_Price", "varchar", ParameterDirection.Input)] string @IPV_Minimum_Price, [Parameter("IPV_Commision_Percentage", "varchar", ParameterDirection.Input)] string @IPV_Commision_Percentage, [Parameter("IPV_PaypalMin_Price", "varchar", ParameterDirection.Input)] string @IPV_PaypalMin_Price, [Parameter("IPV_CheckMin_Price", "varchar", ParameterDirection.Input)] string @IPV_CheckMin_Price, [Parameter("IPV_CreditDay", "varchar", ParameterDirection.Input)] string @IPV_CreditDay, [Parameter("IPV_Minimum_Balance", "varchar", ParameterDirection.Input)] string @IPV_Minimum_Balance, [Parameter("IPV_Minimum_Transaction", "varchar", ParameterDirection.Input)] string @IPV_Minimum_Transaction, [Parameter("IPV_Minimum_Domains", "varchar", ParameterDirection.Input)] string @IPV_Minimum_Domains, [Parameter("IPV_Disable_ApiSignup", "varchar", ParameterDirection.Input)] string @IPV_Disable_ApiSignup);
		[Procedure("USP_MP_UPDATE_POP3_FEATURE", "dbo")] public abstract void USP_MP_UPDATE_POP3_FEATURE([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("AddPop3Feature", "bit", ParameterDirection.Input)] bool? @AddPop3Feature);
		[Procedure("USP_MP_VALIDATE_OFFER_PRICE_FOR_DOMAIN", "dbo")] public abstract void USP_MP_VALIDATE_OFFER_PRICE_FOR_DOMAIN([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ListingId", "numeric", ParameterDirection.Input)] decimal? @ListingId, [Parameter("OfferPrice", "money", ParameterDirection.Input)] decimal? @OfferPrice);
		[Procedure("usp_Namecheap_Bonus_GetDetails", "dbo")] public abstract void usp_Namecheap_Bonus_GetDetails([Parameter("autoId", "int", ParameterDirection.Input)] int? @autoId);
		[Procedure("usp_NamecheapCorePriceUpdate", "dbo")] public abstract void usp_NamecheapCorePriceUpdate([Parameter("TLDCSV", "varchar", ParameterDirection.Input)] string @TLDCSV, [Parameter("ExactPriceTOUpdate", "money", ParameterDirection.Input)] decimal? @ExactPriceTOUpdate, [Parameter("AddIncreasePriceWithexistone", "money", ParameterDirection.Input)] decimal? @AddIncreasePriceWithexistone, [Parameter("Isexactprice", "bit", ParameterDirection.Input)] bool? @Isexactprice, [Parameter("PricingType", "varchar", ParameterDirection.Input)] string @PricingType);
		[Procedure("usp_NewsLetterAddSubcriptionAction", "dbo")] public abstract void usp_NewsLetterAddSubcriptionAction([Parameter("email", "nvarchar", ParameterDirection.Input)] string @email, [Parameter("verificationCode", "varchar", ParameterDirection.Input)] string @verificationCode, [Parameter("initiationIp", "varchar", ParameterDirection.Input)] string @initiationIp, [Parameter("isInitiatedFromProfile", "bit", ParameterDirection.Input)] bool? @isInitiatedFromProfile, [Parameter("action", "varchar", ParameterDirection.Input)] string @action);
		[Procedure("usp_NewsLetterGetAssociatedUserId", "dbo")] public abstract void usp_NewsLetterGetAssociatedUserId([Parameter("email", "nvarchar", ParameterDirection.Input)] string @email, [Parameter("verificationCode", "varchar", ParameterDirection.Input)] string @verificationCode);
		[Procedure("usp_NewsLetterGetSubcriptionAction", "dbo")] public abstract void usp_NewsLetterGetSubcriptionAction([Parameter("verificationCode", "varchar", ParameterDirection.Input)] string @verificationCode, [Parameter("email", "nvarchar", ParameterDirection.Input)] string @email, [Parameter("action", "varchar", ParameterDirection.Input)] string @action);
		[Procedure("usp_NewsLetterGetUserSubscriptionStatus", "dbo")] public abstract void usp_NewsLetterGetUserSubscriptionStatus([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_NewsLetterSubscribe", "dbo")] public abstract void usp_NewsLetterSubscribe([Parameter("fromType", "varchar", ParameterDirection.Input)] string @fromType, [Parameter("verificationCode", "varchar", ParameterDirection.Input)] string @verificationCode, [Parameter("verificationIp", "varchar", ParameterDirection.Input)] string @verificationIp, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_NewsLetterUnSubscribe", "dbo")] public abstract void usp_NewsLetterUnSubscribe([Parameter("fromType", "varchar", ParameterDirection.Input)] string @fromType, [Parameter("email", "nvarchar", ParameterDirection.Input)] string @email, [Parameter("unSubscribeAll", "bit", ParameterDirection.Input)] bool? @unSubscribeAll, [Parameter("verificationCode", "varchar", ParameterDirection.Input)] string @verificationCode, [Parameter("verificationIp", "varchar", ParameterDirection.Input)] string @verificationIp, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("encodedUserId", "int", ParameterDirection.Input)] int? @encodedUserId);
		[Procedure("usp_NewsLetterUpdateSubscriptionEmail", "dbo")] public abstract void usp_NewsLetterUpdateSubscriptionEmail([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("oldEmail", "nvarchar", ParameterDirection.Input)] string @oldEmail);
		[Procedure("USP_NEWSSTAND_GET_EMAIL_BY_LOGIN", "dbo")] public abstract void USP_NEWSSTAND_GET_EMAIL_BY_LOGIN([Parameter("Login", "nvarchar", ParameterDirection.Input)] string @Login);
		[Procedure("USP_NEWSSTAND_IS_EMAIL_EXIST", "dbo")] public abstract void USP_NEWSSTAND_IS_EMAIL_EXIST([Parameter("Email", "nvarchar", ParameterDirection.Input)] string @Email);
		[Procedure("USP_OAuth_Admin_GetApplicationAccess", "dbo")] public abstract void USP_OAuth_Admin_GetApplicationAccess([Parameter("userFilter", "nvarchar", ParameterDirection.Input)] string @userFilter, [Parameter("ascendingUserOrder", "bit", ParameterDirection.Input)] bool? @ascendingUserOrder, [Parameter("usersOnPage", "int", ParameterDirection.Input)] int? @usersOnPage, [Parameter("pageNumber", "int", ParameterDirection.Input)] int? @pageNumber, [Parameter("appFilter", "nvarchar", ParameterDirection.Input)] string @appFilter);
		[Procedure("USP_OAuth_Admin_GetApplications", "dbo")] public abstract void USP_OAuth_Admin_GetApplications();
		[Procedure("USP_OAuth_DeleteAccessTokens", "dbo")] public abstract void USP_OAuth_DeleteAccessTokens([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("userId", "int", ParameterDirection.Input)] int? @userId, [Parameter("appId", "int", ParameterDirection.Input)] int? @appId);
		[Procedure("USP_OAuth_GetEnabledApplications", "dbo")] public abstract void USP_OAuth_GetEnabledApplications([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_OnePagerSubscriptionHostname", "dbo")] public abstract void usp_OnePagerSubscriptionHostname([Parameter("OnePagerSubscriptionId", "numeric", ParameterDirection.Input)] decimal? @OnePagerSubscriptionId, [Parameter("getAs", "varchar", ParameterDirection.Input)] string @getAs);
		[Procedure("usp_OnePagerSubscriptionStatus", "dbo")] public abstract void usp_OnePagerSubscriptionStatus([Parameter("OnePagerSubscriptionId", "numeric", ParameterDirection.Input)] decimal? @OnePagerSubscriptionId, [Parameter("getAs", "varchar", ParameterDirection.Input)] string @getAs);
		[Procedure("usp_OrderProcessorAddDomainToRegistrationQueue", "dbo")] public abstract void usp_OrderProcessorAddDomainToRegistrationQueue([Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("numOfYears", "int", ParameterDirection.Input)] int? @numOfYears, [Parameter("providerOrderId", "nvarchar", ParameterDirection.Input)] string @providerOrderId, [Parameter("associatedOrderId", "numeric", ParameterDirection.Input)] decimal? @associatedOrderId, [Parameter("transactionId", "nvarchar", ParameterDirection.Input)] string @transactionId, [Parameter("providerName", "varchar", ParameterDirection.Input)] string @providerName, [Parameter("enableDomainAutoRenew", "bit", ParameterDirection.Input)] bool? @enableDomainAutoRenew, [Parameter("enableWGAutoRenew", "bit", ParameterDirection.Input)] bool? @enableWGAutoRenew);
		[Procedure("usp_OrderProcessorAddDomainToUser", "dbo")] public abstract void usp_OrderProcessorAddDomainToUser([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("numOfYears", "int", ParameterDirection.Input)] int? @numOfYears, [Parameter("expDateTime", "datetime", ParameterDirection.Input)] DateTime? @expDateTime, [Parameter("providerOrderId", "nvarchar", ParameterDirection.Input)] string @providerOrderId, [Parameter("transId", "nvarchar", ParameterDirection.Input)] string @transId, [Parameter("payStatus", "nvarchar", ParameterDirection.Input)] string @payStatus, [Parameter("orderIdLong", "nvarchar", ParameterDirection.Input)] string @orderIdLong, [Parameter("providerName", "varchar", ParameterDirection.Input)] string @providerName, [Parameter("enableDomainAutoRenew", "bit", ParameterDirection.Input)] bool? @enableDomainAutoRenew, [Parameter("enableWGAutoRenew", "bit", ParameterDirection.Input)] bool? @enableWGAutoRenew, [Parameter("dnsProviderSubType", "varchar", ParameterDirection.Input)] string @dnsProviderSubType);
		[Procedure("usp_OrderProcessorGetCartPromotionCodeForAnOrder", "dbo")] public abstract void usp_OrderProcessorGetCartPromotionCodeForAnOrder([Parameter("shoppingCartProcessId", "bigint", ParameterDirection.Input)] long? @shoppingCartProcessId, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("shoppingCartItemId", "bigint", ParameterDirection.Input)] long? @shoppingCartItemId);
		[Procedure("usp_OrderProcessorGetSuccessOrderdForSettings", "dbo")] public abstract void usp_OrderProcessorGetSuccessOrderdForSettings([Parameter("orderId", "numeric", ParameterDirection.Input)] decimal? @orderId, [Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId, [Parameter("checkoutProcessId", "nvarchar", ParameterDirection.Input)] string @checkoutProcessId);
		[Procedure("usp_OrderProcessorMarkCartItemProcessAsCompleted", "dbo")] public abstract void usp_OrderProcessorMarkCartItemProcessAsCompleted([Parameter("shoppingCartProcessId", "bigint", ParameterDirection.Input)] long? @shoppingCartProcessId, [Parameter("shoppingCartItemId", "bigint", ParameterDirection.Input)] long? @shoppingCartItemId, [Parameter("isSettingsSuccess", "bit", ParameterDirection.Input)] bool? @isSettingsSuccess, [Parameter("settingsStatus", "nvarchar", ParameterDirection.Input)] string @settingsStatus);
		[Procedure("usp_OrderProcessorMarkCartProcessAsCompleted", "dbo")] public abstract void usp_OrderProcessorMarkCartProcessAsCompleted([Parameter("checkoutProcessId", "nvarchar", ParameterDirection.Input)] string @checkoutProcessId);
		[Procedure("usp_OrderProcessorProcessOrderCompletionAndRefund", "dbo")] public abstract void usp_OrderProcessorProcessOrderCompletionAndRefund([Parameter("orderId", "bigint", ParameterDirection.Input)] long? @orderId);
		[Procedure("usp_OrderProcessorSetOrderOneTimeEmail", "dbo")] public abstract void usp_OrderProcessorSetOrderOneTimeEmail([Parameter("OrderID", "numeric", ParameterDirection.Input)] decimal? @OrderID);
		[Procedure("USP_OX_REFUND_CANCELLED_SUBSCRIPTIONS", "dbo")] public abstract void USP_OX_REFUND_CANCELLED_SUBSCRIPTIONS([Parameter("IPN_Context_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Context_ID, [Parameter("IPN_Return_Value", "int", ParameterDirection.InputOutput)] int? @IPN_Return_Value, [Parameter("IPB_Test_Only_YN", "bit", ParameterDirection.Input)] bool? @IPB_Test_Only_YN);
		[Procedure("usp_OXSubscriptionPurchaseStatistics", "dbo")] public abstract void usp_OXSubscriptionPurchaseStatistics([Parameter("startDate", "datetime", ParameterDirection.Input)] DateTime? @startDate, [Parameter("endDate", "datetime", ParameterDirection.Input)] DateTime? @endDate);
		[Procedure("USP_PAYPAL_ADD_TRANSACTION", "dbo")] public abstract void USP_PAYPAL_ADD_TRANSACTION([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Transaction_Type", "nvarchar", ParameterDirection.Input)] string @Transaction_Type, [Parameter("CC_Trans_ID", "nvarchar", ParameterDirection.Input)] string @CC_Trans_ID, [Parameter("CC_Status", "nvarchar", ParameterDirection.Input)] string @CC_Status, [Parameter("PayerEmail", "nvarchar", ParameterDirection.Input)] string @PayerEmail, [Parameter("GrossAmount", "money", ParameterDirection.Input)] decimal? @GrossAmount, [Parameter("Comments", "nvarchar", ParameterDirection.Input)] string @Comments, [Parameter("OrderRef_ID", "nvarchar", ParameterDirection.Input)] string @OrderRef_ID, [Parameter("PendingReason", "nvarchar", ParameterDirection.Input)] string @PendingReason, [Parameter("PaypalPaymentType", "nvarchar", ParameterDirection.Input)] string @PaypalPaymentType, [Parameter("ParentCC_Trans_ID", "nvarchar", ParameterDirection.Input)] string @ParentCC_Trans_ID, [Parameter("PaymentProviderStatus", "varchar", ParameterDirection.Input)] string @PaymentProviderStatus);
		[Procedure("USP_PAYPAL_GET_TRANSACTION_DETAILS", "dbo")] public abstract void USP_PAYPAL_GET_TRANSACTION_DETAILS([Parameter("CC_Trans_ID", "nvarchar", ParameterDirection.Input)] string @CC_Trans_ID);
		[Procedure("USP_PAYPAL_HANDLE_DISPUTE", "dbo")] public abstract void USP_PAYPAL_HANDLE_DISPUTE([Parameter("TransID", "nvarchar", ParameterDirection.Input)] string @TransID, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ParentTransID", "nvarchar", ParameterDirection.Input)] string @ParentTransID, [Parameter("PaymentStatus", "varchar", ParameterDirection.Input)] string @PaymentStatus, [Parameter("Txn_Type", "varchar", ParameterDirection.Input)] string @Txn_Type, [Parameter("PayerEmail", "nvarchar", ParameterDirection.Input)] string @PayerEmail, [Parameter("Comments", "nvarchar", ParameterDirection.Input)] string @Comments, [Parameter("OrderRef_ID", "nvarchar", ParameterDirection.Input)] string @OrderRef_ID, [Parameter("PayerStatus", "varchar", ParameterDirection.Input)] string @PayerStatus, [Parameter("ResidenceCountry", "varchar", ParameterDirection.Input)] string @ResidenceCountry);
		[Procedure("USP_PAYPAL_LOG_IPN", "dbo")] public abstract void USP_PAYPAL_LOG_IPN([Parameter("TransID", "varchar", ParameterDirection.Input)] string @TransID, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Txn_Type", "varchar", ParameterDirection.Input)] string @Txn_Type, [Parameter("PaymentStatus", "varchar", ParameterDirection.Input)] string @PaymentStatus, [Parameter("ParentTransID", "varchar", ParameterDirection.Input)] string @ParentTransID, [Parameter("PaymentGross", "money", ParameterDirection.Input)] decimal? @PaymentGross, [Parameter("PaymentFee", "money", ParameterDirection.Input)] decimal? @PaymentFee, [Parameter("ReasonCode", "varchar", ParameterDirection.Input)] string @ReasonCode, [Parameter("PendingReason", "varchar", ParameterDirection.Input)] string @PendingReason, [Parameter("StatusDateTime", "datetime", ParameterDirection.Input)] DateTime? @StatusDateTime, [Parameter("CaseType", "varchar", ParameterDirection.Input)] string @CaseType, [Parameter("ReceiverEmail", "nvarchar", ParameterDirection.Input)] string @ReceiverEmail, [Parameter("NotifyVersion", "varchar", ParameterDirection.Input)] string @NotifyVersion, [Parameter("PayerEmail", "nvarchar", ParameterDirection.Input)] string @PayerEmail, [Parameter("OrderRef_ID", "nvarchar", ParameterDirection.Input)] string @OrderRef_ID, [Parameter("PayerStatus", "varchar", ParameterDirection.Input)] string @PayerStatus, [Parameter("ResidenceCountry", "varchar", ParameterDirection.Input)] string @ResidenceCountry);
		[Procedure("USP_PAYPAL_REFUND_TRANSACTION", "dbo")] public abstract void USP_PAYPAL_REFUND_TRANSACTION([Parameter("TransID", "nvarchar", ParameterDirection.Input)] string @TransID, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ParentTransID", "nvarchar", ParameterDirection.Input)] string @ParentTransID, [Parameter("PaymentGross", "money", ParameterDirection.Input)] decimal? @PaymentGross, [Parameter("Txn_Type", "varchar", ParameterDirection.Input)] string @Txn_Type, [Parameter("PayerEmail", "nvarchar", ParameterDirection.Input)] string @PayerEmail, [Parameter("Comments", "nvarchar", ParameterDirection.Input)] string @Comments, [Parameter("OrderRef_ID", "nvarchar", ParameterDirection.Input)] string @OrderRef_ID, [Parameter("PayerStatus", "varchar", ParameterDirection.Input)] string @PayerStatus, [Parameter("ResidenceCountry", "varchar", ParameterDirection.Input)] string @ResidenceCountry);
		[Procedure("USP_PAYPAL_UPDATE_STATUS_AND_PROCESS_FUNDS", "dbo")] public abstract void USP_PAYPAL_UPDATE_STATUS_AND_PROCESS_FUNDS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Transaction_ID", "numeric", ParameterDirection.Input)] decimal? @Transaction_ID, [Parameter("TransID", "nvarchar", ParameterDirection.Input)] string @TransID, [Parameter("CC_Status", "varchar", ParameterDirection.Input)] string @CC_Status, [Parameter("ProcessAmount", "money", ParameterDirection.Input)] decimal? @ProcessAmount, [Parameter("Txn_Type", "varchar", ParameterDirection.Input)] string @Txn_Type, [Parameter("PayerEmail", "nvarchar", ParameterDirection.Input)] string @PayerEmail, [Parameter("OrderRef_ID", "nvarchar", ParameterDirection.Input)] string @OrderRef_ID, [Parameter("PayerStatus", "varchar", ParameterDirection.Input)] string @PayerStatus, [Parameter("ResidenceCountry", "varchar", ParameterDirection.Input)] string @ResidenceCountry);
		[Procedure("usp_PaypalGetParentTransactionDetails", "dbo")] public abstract void usp_PaypalGetParentTransactionDetails([Parameter("parentTransID", "nvarchar", ParameterDirection.Input)] string @parentTransID);
		[Procedure("usp_PaypalGetTokenDetails", "dbo")] public abstract void usp_PaypalGetTokenDetails([Parameter("UserID", "numeric", ParameterDirection.Input)] decimal? @UserID, [Parameter("Token", "varchar", ParameterDirection.Input)] string @Token);
		[Procedure("usp_PaypalGetUserFundsDetailsByToken", "dbo")] public abstract void usp_PaypalGetUserFundsDetailsByToken([Parameter("UserID", "numeric", ParameterDirection.Input)] decimal? @UserID, [Parameter("Token", "varchar", ParameterDirection.Input)] string @Token);
		[Procedure("usp_PaypalSaveTokenDetails", "dbo")] public abstract void usp_PaypalSaveTokenDetails([Parameter("UserID", "numeric", ParameterDirection.Input)] decimal? @UserID, [Parameter("InvoiceNumber", "varchar", ParameterDirection.Input)] string @InvoiceNumber, [Parameter("Token", "varchar", ParameterDirection.Input)] string @Token, [Parameter("ClientIP", "varchar", ParameterDirection.Input)] string @ClientIP, [Parameter("Amount", "money", ParameterDirection.Input)] decimal? @Amount, [Parameter("CurrencyCode", "varchar", ParameterDirection.Input)] string @CurrencyCode, [Parameter("PaypalTokenCreatedDateTime", "datetime", ParameterDirection.Input)] DateTime? @PaypalTokenCreatedDateTime, [Parameter("TokenStatus", "varchar", ParameterDirection.Input)] string @TokenStatus, [Parameter("OrderRefID", "varchar", ParameterDirection.Input)] string @OrderRefID);
		[Procedure("usp_PaypalUpdateStatusAndProcessFundsIfNeeded", "dbo")] public abstract void usp_PaypalUpdateStatusAndProcessFundsIfNeeded([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Transaction_ID", "numeric", ParameterDirection.Input)] decimal? @Transaction_ID, [Parameter("TransID", "nvarchar", ParameterDirection.Input)] string @TransID, [Parameter("PaymentProviderStatus", "varchar", ParameterDirection.Input)] string @PaymentProviderStatus, [Parameter("ProcessAmount", "money", ParameterDirection.Input)] decimal? @ProcessAmount, [Parameter("Txn_Type", "varchar", ParameterDirection.Input)] string @Txn_Type, [Parameter("CC_Status", "varchar", ParameterDirection.Input)] string @CC_Status, [Parameter("PayerEmail", "nvarchar", ParameterDirection.Input)] string @PayerEmail, [Parameter("OrderRef_ID", "nvarchar", ParameterDirection.Input)] string @OrderRef_ID, [Parameter("PayerStatus", "varchar", ParameterDirection.Input)] string @PayerStatus, [Parameter("ResidenceCountry", "varchar", ParameterDirection.Input)] string @ResidenceCountry);
		[Procedure("usp_PaypalUpdateTokenDetails", "dbo")] public abstract void usp_PaypalUpdateTokenDetails([Parameter("userID", "numeric", ParameterDirection.Input)] decimal? @userID, [Parameter("token", "varchar", ParameterDirection.Input)] string @token, [Parameter("PaypalTransID", "varchar", ParameterDirection.Input)] string @PaypalTransID, [Parameter("tokenStatus", "varchar", ParameterDirection.Input)] string @tokenStatus, [Parameter("previousTokenStatus", "varchar", ParameterDirection.Input)] string @previousTokenStatus, [Parameter("StatusDecription", "varchar", ParameterDirection.Input)] string @StatusDecription);
		[Procedure("usp_PrivacyPolicyUpdate_Manual", "dbo")] public abstract void usp_PrivacyPolicyUpdate_Manual([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("NextBillingDateTime", "datetime", ParameterDirection.Input)] DateTime? @NextBillingDateTime);
		[Procedure("usp_ProcessCartCreateOrder", "dbo")] public abstract void usp_ProcessCartCreateOrder([Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId, [Parameter("checkoutProcessId", "varchar", ParameterDirection.Input)] string @checkoutProcessId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("referralId", "nvarchar", ParameterDirection.Input)] string @referralId, [Parameter("adId", "nvarchar", ParameterDirection.Input)] string @adId, [Parameter("autoRefTrafficLogID", "int", ParameterDirection.Input)] int? @autoRefTrafficLogID, [Parameter("affiliateId", "int", ParameterDirection.Input)] int? @affiliateId, [Parameter("affiliateProgramId", "int", ParameterDirection.Input)] int? @affiliateProgramId, [Parameter("applicationType", "varchar", ParameterDirection.Input)] string @applicationType);
		[Procedure("usp_ProcessCartGetProcessCartForOrderProcessor", "dbo")] public abstract void usp_ProcessCartGetProcessCartForOrderProcessor([Parameter("orderId", "numeric", ParameterDirection.Input)] decimal? @orderId, [Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId, [Parameter("checkoutProcessId", "nvarchar", ParameterDirection.Input)] string @checkoutProcessId);
		[Procedure("usp_ProcessOrderCompletionAndRefund", "dbo")] public abstract void usp_ProcessOrderCompletionAndRefund([Parameter("orderId", "bigint", ParameterDirection.Input)] long? @orderId);
		[Procedure("USP_PROFILE_INSERT_HISTORY", "dbo")] public abstract void USP_PROFILE_INSERT_HISTORY([Parameter("IPV_User_Id", "numeric", ParameterDirection.Input)] decimal? @IPV_User_Id, [Parameter("IPV_Data", "nvarchar", ParameterDirection.Input)] string @IPV_Data, [Parameter("IPV_Profile_Type", "char", ParameterDirection.Input)] string @IPV_Profile_Type);
		[Procedure("USP_PROVIDER_MEMBERSHIP_GET_CMS_USER", "dbo")] public abstract void USP_PROVIDER_MEMBERSHIP_GET_CMS_USER([Parameter("userNameToMatch", "varchar", ParameterDirection.Input)] string @userNameToMatch, [Parameter("userIdToMatch", "bigint", ParameterDirection.Input)] long? @userIdToMatch);
		[Procedure("USP_PROVIDER_MEMBERSHIP_GET_CMS_USERS", "dbo")] public abstract void USP_PROVIDER_MEMBERSHIP_GET_CMS_USERS([Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize, [Parameter("pageIndex", "int", ParameterDirection.Input)] int? @pageIndex, [Parameter("userNameToMatch", "varchar", ParameterDirection.Input)] string @userNameToMatch, [Parameter("userIdToMatch", "bigint", ParameterDirection.Input)] long? @userIdToMatch, [Parameter("emailToMatch", "varchar", ParameterDirection.Input)] string @emailToMatch);
		[Procedure("USP_PROVIDER_ROLES_CHECK_ROLE_EXISTS", "dbo")] public abstract void USP_PROVIDER_ROLES_CHECK_ROLE_EXISTS([Parameter("RoleName", "varchar", ParameterDirection.Input)] string @RoleName);
		[Procedure("USP_PROVIDER_ROLES_GET_ALL_ROLES", "dbo")] public abstract void USP_PROVIDER_ROLES_GET_ALL_ROLES([Parameter("ReturnDisabledRolesAlso", "bit", ParameterDirection.Input)] bool? @ReturnDisabledRolesAlso);
		[Procedure("USP_PROVIDER_ROLES_GET_ALL_ROLES_FOR_AN_USER", "dbo")] public abstract void USP_PROVIDER_ROLES_GET_ALL_ROLES_FOR_AN_USER([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("USP_PROVIDER_ROLES_GET_USERS_IN_ROLES", "dbo")] public abstract void USP_PROVIDER_ROLES_GET_USERS_IN_ROLES([Parameter("RoleName", "varchar", ParameterDirection.Input)] string @RoleName, [Parameter("UserNameToMatch", "varchar", ParameterDirection.Input)] string @UserNameToMatch, [Parameter("MaxNumberOfRowsToReturn", "int", ParameterDirection.Input)] int? @MaxNumberOfRowsToReturn);
		[Procedure("USP_PURCHASE_RENEW_SSL", "dbo")] public abstract void USP_PURCHASE_RENEW_SSL([Parameter("ActionID", "varchar", ParameterDirection.Input)] string @ActionID, [Parameter("RefID", "varchar", ParameterDirection.Input)] string @RefID, [Parameter("sSLD", "varchar", ParameterDirection.Input)] string @sSLD, [Parameter("sTLD", "varchar", ParameterDirection.Input)] string @sTLD, [Parameter("NumofYears", "smallint", ParameterDirection.Input)] short? @NumofYears, [Parameter("Qty", "int", ParameterDirection.Input)] int? @Qty, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName, [Parameter("sTransactionID", "nvarchar", ParameterDirection.Input)] string @sTransactionID, [Parameter("sOrderID", "nvarchar", ParameterDirection.Input)] string @sOrderID, [Parameter("sPayStatus", "nvarchar", ParameterDirection.Input)] string @sPayStatus, [Parameter("sNumericOrderID", "numeric", ParameterDirection.Input)] decimal? @sNumericOrderID, [Parameter("replaceInsteadOfRefundYN", "bit", ParameterDirection.Input)] bool? @replaceInsteadOfRefundYN, [Parameter("activation_Expire_DateTime", "datetime", ParameterDirection.Input)] DateTime? @activation_Expire_DateTime);
		[Procedure("USP_PURCHASE_RENEW_WBL", "dbo")] public abstract void USP_PURCHASE_RENEW_WBL([Parameter("ActionID", "varchar", ParameterDirection.Input)] string @ActionID, [Parameter("RefID", "varchar", ParameterDirection.Input)] string @RefID, [Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("sTransactionID", "nvarchar", ParameterDirection.Input)] string @sTransactionID, [Parameter("sOrderID", "nvarchar", ParameterDirection.Input)] string @sOrderID, [Parameter("sNumericOrderID", "numeric", ParameterDirection.Input)] decimal? @sNumericOrderID, [Parameter("enomOrderID", "bigint", ParameterDirection.Input)] long? @enomOrderID);
		[Procedure("usp_PushDomainToUser", "dbo")] public abstract void usp_PushDomainToUser([Parameter("sourceUserName", "nvarchar", ParameterDirection.Input)] string @sourceUserName, [Parameter("targetUserName", "nvarchar", ParameterDirection.Input)] string @targetUserName, [Parameter("ownerUserName", "nvarchar", ParameterDirection.Input)] string @ownerUserName, [Parameter("domainId", "numeric", ParameterDirection.Input)] decimal? @domainId, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("ipAddress", "nvarchar", ParameterDirection.Input)] string @ipAddress, [Parameter("setOneTimePushKeyToTargetuser", "varchar", ParameterDirection.Input)] string @setOneTimePushKeyToTargetuser, [Parameter("isOneTimeCode", "bit", ParameterDirection.Input)] bool? @isOneTimeCode, [Parameter("WGOption", "varchar", ParameterDirection.Input)] string @WGOption, [Parameter("isChangeContact", "bit", ParameterDirection.Input)] bool? @isChangeContact);
		[Procedure("USP_REDEEM_VOUCHER", "dbo")] public abstract void USP_REDEEM_VOUCHER([Parameter("code", "varchar", ParameterDirection.Input)] string @code, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip);
		[Procedure("usp_RedeemCouponCode", "dbo")] public abstract void usp_RedeemCouponCode([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("couponCode", "varchar", ParameterDirection.Input)] string @couponCode, [Parameter("clientIp", "nvarchar", ParameterDirection.Input)] string @clientIp);
		[Procedure("USP_REFUND_PARTIAL_RENEWED_TRANSFER", "dbo")] public abstract void USP_REFUND_PARTIAL_RENEWED_TRANSFER([Parameter("IPN_Transfer_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Transfer_ID, [Parameter("IPN_NumYears", "int", ParameterDirection.Input)] int? @IPN_NumYears, [Parameter("IPB_Test_Only_YN", "bit", ParameterDirection.Input)] bool? @IPB_Test_Only_YN, [Parameter("LD_Error", "decimal", ParameterDirection.InputOutput)] decimal? @LD_Error);
		[Procedure("USP_REFUND_TRANSFER", "dbo")] public abstract void USP_REFUND_TRANSFER([Parameter("IPN_Transfer_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Transfer_ID, [Parameter("IPB_Test_Only_YN", "bit", ParameterDirection.Input)] bool? @IPB_Test_Only_YN);
		[Procedure("USP_REGISTRATION_QUEUE_REFUND", "dbo")] public abstract void USP_REGISTRATION_QUEUE_REFUND([Parameter("IPN_Register_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Register_ID, [Parameter("IPB_Test_Only_YN", "bit", ParameterDirection.Input)] bool? @IPB_Test_Only_YN);
		[Procedure("USP_RELEASE_WHOISGUARD", "dbo")] public abstract void USP_RELEASE_WHOISGUARD([Parameter("IPV_Domainname", "nvarchar", ParameterDirection.Input)] string @IPV_Domainname, [Parameter("IPV_UserName", "nvarchar", ParameterDirection.Input)] string @IPV_UserName);
		[Procedure("USP_REMOVE_BANNED_DOMAINS", "dbo")] public abstract void USP_REMOVE_BANNED_DOMAINS([Parameter("RefID", "varchar", ParameterDirection.Input)] string @RefID, [Parameter("Removed_Domain_Count", "int", ParameterDirection.InputOutput)] int? @Removed_Domain_Count, [Parameter("Removed_Domains", "varchar", ParameterDirection.InputOutput)] string @Removed_Domains);
		[Procedure("USP_REMOVE_DestinationToCategoryToUser", "dbo")] public abstract void USP_REMOVE_DestinationToCategoryToUser([Parameter("categoryId", "uniqueidentifier", ParameterDirection.Input)] Guid? @categoryId, [Parameter("destinationId", "uniqueidentifier", ParameterDirection.Input)] Guid? @destinationId, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName);
		[Procedure("Usp_Remove_Dnssec", "dbo")] public abstract void Usp_Remove_Dnssec([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("xmlData", "xml", ParameterDirection.Input)] string @xmlData);
		[Procedure("USP_REMOVE_DOMAIN_NOT_IN_ACCOUNT", "dbo")] public abstract void USP_REMOVE_DOMAIN_NOT_IN_ACCOUNT([Parameter("IPNV_DomainName", "nvarchar", ParameterDirection.Input)] string @IPNV_DomainName, [Parameter("actionType", "nvarchar", ParameterDirection.Input)] string @actionType, [Parameter("forceDelete", "bit", ParameterDirection.Input)] bool? @forceDelete);
		[Procedure("USP_REMOVE_MULTIPLE_STATUS_QUEUE", "dbo")] public abstract void USP_REMOVE_MULTIPLE_STATUS_QUEUE([Parameter("IPV_Username", "varchar", ParameterDirection.Input)] string @IPV_Username, [Parameter("IPNV_BatchId", "nvarchar", ParameterDirection.Input)] string @IPNV_BatchId, [Parameter("IPNV_Domainname", "nvarchar", ParameterDirection.Input)] string @IPNV_Domainname, [Parameter("IPNV_Docommand", "nvarchar", ParameterDirection.Input)] string @IPNV_Docommand);
		[Procedure("Usp_RemoveAll_Dnssec", "dbo")] public abstract void Usp_RemoveAll_Dnssec([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("USP_REPORT_GET_FUNDS", "dbo")] public abstract void USP_REPORT_GET_FUNDS([Parameter("From_date", "datetime", ParameterDirection.Input)] DateTime? @From_date, [Parameter("To_Date", "datetime", ParameterDirection.Input)] DateTime? @To_Date, [Parameter("Transaction_ID", "numeric", ParameterDirection.Input)] decimal? @Transaction_ID, [Parameter("User_name", "varchar", ParameterDirection.Input)] string @User_name);
		[Procedure("USP_REPORT_GET_ORDERS", "dbo")] public abstract void USP_REPORT_GET_ORDERS([Parameter("Order_Date_From", "datetime", ParameterDirection.Input)] DateTime? @Order_Date_From, [Parameter("Order_Date_To", "datetime", ParameterDirection.Input)] DateTime? @Order_Date_To, [Parameter("ActionID", "varchar", ParameterDirection.Input)] string @ActionID, [Parameter("Order_Product_Name_Like", "varchar", ParameterDirection.Input)] string @Order_Product_Name_Like, [Parameter("Order_ID", "numeric", ParameterDirection.Input)] decimal? @Order_ID, [Parameter("User_name", "varchar", ParameterDirection.Input)] string @User_name);
		[Procedure("USP_REPORT_GET_TRANSACTION", "dbo")] public abstract void USP_REPORT_GET_TRANSACTION([Parameter("Transaction_Date_From", "datetime", ParameterDirection.Input)] DateTime? @Transaction_Date_From, [Parameter("Transaction_Date_To", "datetime", ParameterDirection.Input)] DateTime? @Transaction_Date_To, [Parameter("Transaction_id", "numeric", ParameterDirection.Input)] decimal? @Transaction_id, [Parameter("User_name", "varchar", ParameterDirection.Input)] string @User_name);
		[Procedure("USP_REPORTS_GET_ORDER_DETAILS", "dbo")] public abstract void USP_REPORTS_GET_ORDER_DETAILS([Parameter("Username", "nvarchar", ParameterDirection.Input)] string @Username, [Parameter("OrderID", "varchar", ParameterDirection.Input)] string @OrderID, [Parameter("RecordType", "varchar", ParameterDirection.Input)] string @RecordType);
		[Procedure("USP_REPORTS_GET_TRANS_DETAILS", "dbo")] public abstract void USP_REPORTS_GET_TRANS_DETAILS([Parameter("TransID", "numeric", ParameterDirection.Input)] decimal? @TransID, [Parameter("Username", "nvarchar", ParameterDirection.Input)] string @Username);
		[Procedure("USP_RICHCONTENT_ADD_PURCHASED_DETAILS", "dbo")] public abstract void USP_RICHCONTENT_ADD_PURCHASED_DETAILS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip, [Parameter("partnerSubscriptionID", "bigint", ParameterDirection.Input)] long? @partnerSubscriptionID, [Parameter("partnerOrderId", "bigint", ParameterDirection.Input)] long? @partnerOrderId, [Parameter("partnerPublisherID", "bigint", ParameterDirection.Input)] long? @partnerPublisherID, [Parameter("isInTrialPeriod", "bit", ParameterDirection.Input)] bool? @isInTrialPeriod, [Parameter("emailAddress", "nvarchar", ParameterDirection.Input)] string @emailAddress, [Parameter("ourOrderID", "int", ParameterDirection.Input)] int? @ourOrderID);
		[Procedure("USP_RICHCONTENT_CHECK_EMAIL_OR_USER_HAS_SUBSCRIPTIONS", "dbo")] public abstract void USP_RICHCONTENT_CHECK_EMAIL_OR_USER_HAS_SUBSCRIPTIONS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("email", "nvarchar", ParameterDirection.Input)] string @email);
		[Procedure("USP_RICHCONTENT_CHECK_EMAIL_VALIDATION", "dbo")] public abstract void USP_RICHCONTENT_CHECK_EMAIL_VALIDATION([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("email", "nvarchar", ParameterDirection.Input)] string @email);
		[Procedure("USP_RICHCONTENT_CHECK_ISUSER_BLOCKED_FOR_FREE_TRIALS", "dbo")] public abstract void USP_RICHCONTENT_CHECK_ISUSER_BLOCKED_FOR_FREE_TRIALS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_RICHCONTENT_EXPIRING_SUBSCRIPTIONS_LIST", "dbo")] public abstract void USP_RICHCONTENT_EXPIRING_SUBSCRIPTIONS_LIST();
		[Procedure("USP_RICHCONTENT_GET_PARTNER_SUBSCRIPTION_ID", "dbo")] public abstract void USP_RICHCONTENT_GET_PARTNER_SUBSCRIPTION_ID([Parameter("subscriptionAutoID", "int", ParameterDirection.Input)] int? @subscriptionAutoID);
		[Procedure("USP_RICHCONTENT_GET_USER_EMAILS", "dbo")] public abstract void USP_RICHCONTENT_GET_USER_EMAILS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("getSubscriptionEmailsYN", "bit", ParameterDirection.Input)] bool? @getSubscriptionEmailsYN);
		[Procedure("USP_RICHCONTENT_SET_EXPIRED", "dbo")] public abstract void USP_RICHCONTENT_SET_EXPIRED([Parameter("subcriptionAutoId", "int", ParameterDirection.Input)] int? @subcriptionAutoId);
		[Procedure("USP_RICHCONTENT_SUBSCRIPTIONS_LIST", "dbo")] public abstract void USP_RICHCONTENT_SUBSCRIPTIONS_LIST([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("IPV_Search_Term", "varchar", ParameterDirection.Input)] string @IPV_Search_Term, [Parameter("IPN_Filter_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Filter_ID, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Order", "varchar", ParameterDirection.Input)] string @Order, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("ReturnAllRows", "bit", ParameterDirection.Input)] bool? @ReturnAllRows);
		[Procedure("USP_RICHCONTENT_UPDATE_PURCHASED_DETAILS", "dbo")] public abstract void USP_RICHCONTENT_UPDATE_PURCHASED_DETAILS([Parameter("subscriptionAutoID", "int", ParameterDirection.Input)] int? @subscriptionAutoID, [Parameter("partnerSubscriptionID", "bigint", ParameterDirection.Input)] long? @partnerSubscriptionID, [Parameter("partnerPublisherID", "int", ParameterDirection.Input)] int? @partnerPublisherID, [Parameter("domainUsed", "varchar", ParameterDirection.Input)] string @domainUsed, [Parameter("subscriptionName", "varchar", ParameterDirection.Input)] string @subscriptionName, [Parameter("email", "nvarchar", ParameterDirection.Input)] string @email, [Parameter("nextBillingDate", "datetime", ParameterDirection.Input)] DateTime? @nextBillingDate, [Parameter("status", "varchar", ParameterDirection.Input)] string @status, [Parameter("partnerCreatedDateTime", "datetime", ParameterDirection.Input)] DateTime? @partnerCreatedDateTime, [Parameter("isInTrialPeriod", "bit", ParameterDirection.Input)] bool? @isInTrialPeriod, [Parameter("ourStatus", "varchar", ParameterDirection.Input)] string @ourStatus);
		[Procedure("USP_RICHCONTENT_UPDATE_RENEW", "dbo")] public abstract void USP_RICHCONTENT_UPDATE_RENEW([Parameter("subscriptionAutoID", "int", ParameterDirection.Input)] int? @subscriptionAutoID, [Parameter("numYears", "int", ParameterDirection.Input)] int? @numYears, [Parameter("clientIP", "varchar", ParameterDirection.Input)] string @clientIP, [Parameter("orderId", "int", ParameterDirection.Input)] int? @orderId);
		[Procedure("USP_RICHCONTENT_VALIDATE_AND_GET_SUBSCRIPTION_DETAILS", "dbo")] public abstract void USP_RICHCONTENT_VALIDATE_AND_GET_SUBSCRIPTION_DETAILS([Parameter("subscriptionAutoId", "int", ParameterDirection.Input)] int? @subscriptionAutoId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_SAVE_SECURITY_LOG", "dbo")] public abstract void USP_SAVE_SECURITY_LOG([Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName, [Parameter("sDomainName", "nvarchar", ParameterDirection.Input)] string @sDomainName, [Parameter("IP", "varchar", ParameterDirection.Input)] string @IP, [Parameter("sDataType", "varchar", ParameterDirection.Input)] string @sDataType, [Parameter("sDataSubType", "varchar", ParameterDirection.Input)] string @sDataSubType, [Parameter("sOLDData", "text", ParameterDirection.Input)] string @sOLDData, [Parameter("sNewData", "text", ParameterDirection.Input)] string @sNewData, [Parameter("ID", "int", ParameterDirection.Input)] int? @ID, [Parameter("NotifyUser", "bit", ParameterDirection.Input)] bool? @NotifyUser, [Parameter("NotifyAdmin", "bit", ParameterDirection.Input)] bool? @NotifyAdmin, [Parameter("ActionSource", "varchar", ParameterDirection.Input)] string @ActionSource, [Parameter("DisableSecurityNotificationYN", "bit", ParameterDirection.Input)] bool? @DisableSecurityNotificationYN, [Parameter("AdminUserName", "nvarchar", ParameterDirection.Input)] string @AdminUserName);
		[Procedure("usp_SaveLogPremiumDomainSaleStatus", "dbo")] public abstract void usp_SaveLogPremiumDomainSaleStatus([Parameter("MP_Listing_ID", "numeric", ParameterDirection.Input)] decimal? @MP_Listing_ID, [Parameter("StatusId", "tinyint", ParameterDirection.Input)] byte? @StatusId, [Parameter("StatusDateTime", "varchar", ParameterDirection.Input)] string @StatusDateTime, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Ip", "varchar", ParameterDirection.Input)] string @Ip, [Parameter("UserType", "char", ParameterDirection.Input)] string @UserType, [Parameter("Description", "varchar", ParameterDirection.Input)] string @Description);
		[Procedure("usp_SaveLogUserStatus", "dbo")] public abstract void usp_SaveLogUserStatus([Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName, [Parameter("UserStatusId", "varchar", ParameterDirection.Input)] string @UserStatusId, [Parameter("Comments", "varchar", ParameterDirection.Input)] string @Comments, [Parameter("AdminUser", "varchar", ParameterDirection.Input)] string @AdminUser, [Parameter("AdminIP", "varchar", ParameterDirection.Input)] string @AdminIP, [Parameter("CreatedDateTime", "varchar", ParameterDirection.Input)] string @CreatedDateTime);
		[Procedure("usp_SaveServiceProviderRRDetails", "dbo")] public abstract void usp_SaveServiceProviderRRDetails([Parameter("providerId", "int", ParameterDirection.Input)] int? @providerId, [Parameter("host", "varchar", ParameterDirection.Input)] string @host, [Parameter("recordType", "varchar", ParameterDirection.Input)] string @recordType, [Parameter("data", "varchar", ParameterDirection.Input)] string @data, [Parameter("priority", "int", ParameterDirection.Input)] int? @priority, [Parameter("serverDescription", "varchar", ParameterDirection.Input)] string @serverDescription, [Parameter("isActive", "bit", ParameterDirection.Input)] bool? @isActive);
		[Procedure("USP_SCHEDULE_SSL_UPDATE_STATUS", "dbo")] public abstract void USP_SCHEDULE_SSL_UPDATE_STATUS([Parameter("poid", "numeric", ParameterDirection.Input)] decimal? @poid, [Parameter("Status", "varchar", ParameterDirection.Input)] string @Status, [Parameter("Status_Desc", "varchar", ParameterDirection.Input)] string @Status_Desc, [Parameter("Log_Details", "text", ParameterDirection.Input)] string @Log_Details, [Parameter("sgeotrustOrderID", "varchar", ParameterDirection.Input)] string @sgeotrustOrderID, [Parameter("OrderDateTime", "datetime", ParameterDirection.Input)] DateTime? @OrderDateTime, [Parameter("CompletedDateTime", "datetime", ParameterDirection.Input)] DateTime? @CompletedDateTime, [Parameter("ExpireDatetime", "datetime", ParameterDirection.Input)] DateTime? @ExpireDatetime, [Parameter("CancelledDateTime", "datetime", ParameterDirection.Input)] DateTime? @CancelledDateTime, [Parameter("DomainnameUsed", "varchar", ParameterDirection.Input)] string @DomainnameUsed, [Parameter("ValidityPeriod", "int", ParameterDirection.Input)] int? @ValidityPeriod, [Parameter("Is_Renewal_Order_YN", "bit", ParameterDirection.Input)] bool? @Is_Renewal_Order_YN);
		[Procedure("USP_SCHEDULE_UPDATE_WG_EMAIL_QUEUE", "dbo")] public abstract void USP_SCHEDULE_UPDATE_WG_EMAIL_QUEUE();
		[Procedure("usp_SendAbuseReportToSupport", "dbo")] public abstract void usp_SendAbuseReportToSupport([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_SerivcePurchaseMarketplaceDomain", "dbo")] public abstract void usp_SerivcePurchaseMarketplaceDomain([Parameter("listingId", "numeric", ParameterDirection.Input)] decimal? @listingId, [Parameter("sBuyerUserName", "nvarchar", ParameterDirection.Input)] string @sBuyerUserName, [Parameter("orderRefId", "nvarchar", ParameterDirection.Input)] string @orderRefId, [Parameter("orderId", "numeric", ParameterDirection.Input)] decimal? @orderId, [Parameter("orderDetaildId", "numeric", ParameterDirection.Input)] decimal? @orderDetaildId, [Parameter("salePrice", "money", ParameterDirection.Input)] decimal? @salePrice);
		[Procedure("usp_ServiceAddDomainToTransferQueue", "dbo")] public abstract void usp_ServiceAddDomainToTransferQueue([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("eppCode", "varchar", ParameterDirection.Input)] string @eppCode, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("numberOfYears", "smallint", ParameterDirection.Input)] short? @numberOfYears, [Parameter("ccTransId", "nvarchar", ParameterDirection.Input)] string @ccTransId, [Parameter("ccOrderId", "nvarchar", ParameterDirection.Input)] string @ccOrderId, [Parameter("statusId", "nvarchar", ParameterDirection.Input)] string @statusId, [Parameter("statusDesc", "nvarchar", ParameterDirection.Input)] string @statusDesc, [Parameter("associatedOrderId", "numeric", ParameterDirection.Input)] decimal? @associatedOrderId, [Parameter("associatedOrderDetailId", "numeric", ParameterDirection.Input)] decimal? @associatedOrderDetailId, [Parameter("option1", "varchar", ParameterDirection.Input)] string @option1, [Parameter("requestIp", "varchar", ParameterDirection.Input)] string @requestIp, [Parameter("enableDomainAutoRenew", "bit", ParameterDirection.Input)] bool? @enableDomainAutoRenew, [Parameter("enableWGAutoRenew", "bit", ParameterDirection.Input)] bool? @enableWGAutoRenew, [Parameter("losingRegistrar", "nvarchar", ParameterDirection.Input)] string @losingRegistrar, [Parameter("transferMateEnabled", "bit", ParameterDirection.Input)] bool? @transferMateEnabled);
		[Procedure("usp_ServiceAddWhoisGuardToUser", "dbo")] public abstract void usp_ServiceAddWhoisGuardToUser([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("numOfYears", "smallint", ParameterDirection.Input)] short? @numOfYears, [Parameter("orderId", "numeric", ParameterDirection.Input)] decimal? @orderId, [Parameter("orderDetailId", "numeric", ParameterDirection.Input)] decimal? @orderDetailId, [Parameter("numOfPacks", "int", ParameterDirection.Input)] int? @numOfPacks, [Parameter("wgEmailId", "nvarchar", ParameterDirection.Input)] string @wgEmailId);
		[Procedure("usp_ServiceAssociateWhoisGuardForADomain", "dbo")] public abstract void usp_ServiceAssociateWhoisGuardForADomain([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("whoisGuardId", "bigint", ParameterDirection.Input)] long? @whoisGuardId, [Parameter("associatedEmail", "nvarchar", ParameterDirection.Input)] string @associatedEmail, [Parameter("RegistrantOrganizationName", "nvarchar", ParameterDirection.Input)] string @RegistrantOrganizationName, [Parameter("RegistrantJobTitle", "nvarchar", ParameterDirection.Input)] string @RegistrantJobTitle, [Parameter("RegistrantFirstName", "nvarchar", ParameterDirection.Input)] string @RegistrantFirstName, [Parameter("RegistrantLastName", "nvarchar", ParameterDirection.Input)] string @RegistrantLastName, [Parameter("RegistrantAddress1", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress1, [Parameter("RegistrantAddress2", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress2, [Parameter("RegistrantCity", "nvarchar", ParameterDirection.Input)] string @RegistrantCity, [Parameter("RegistrantStateProvince", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvince, [Parameter("RegistrantStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvinceChoice, [Parameter("RegistrantPostalCode", "nvarchar", ParameterDirection.Input)] string @RegistrantPostalCode, [Parameter("RegistrantCountry", "nvarchar", ParameterDirection.Input)] string @RegistrantCountry, [Parameter("RegistrantPhone", "nvarchar", ParameterDirection.Input)] string @RegistrantPhone, [Parameter("RegistrantPhoneExt", "varchar", ParameterDirection.Input)] string @RegistrantPhoneExt, [Parameter("RegistrantFax", "nvarchar", ParameterDirection.Input)] string @RegistrantFax, [Parameter("RegistrantEmailAddress", "nvarchar", ParameterDirection.Input)] string @RegistrantEmailAddress, [Parameter("TechOrganizationName", "nvarchar", ParameterDirection.Input)] string @TechOrganizationName, [Parameter("TechJobTitle", "nvarchar", ParameterDirection.Input)] string @TechJobTitle, [Parameter("TechFirstName", "nvarchar", ParameterDirection.Input)] string @TechFirstName, [Parameter("TechLastName", "nvarchar", ParameterDirection.Input)] string @TechLastName, [Parameter("TechAddress1", "nvarchar", ParameterDirection.Input)] string @TechAddress1, [Parameter("TechAddress2", "nvarchar", ParameterDirection.Input)] string @TechAddress2, [Parameter("TechCity", "nvarchar", ParameterDirection.Input)] string @TechCity, [Parameter("TechStateProvince", "nvarchar", ParameterDirection.Input)] string @TechStateProvince, [Parameter("TechStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @TechStateProvinceChoice, [Parameter("TechPostalCode", "nvarchar", ParameterDirection.Input)] string @TechPostalCode, [Parameter("TechCountry", "nvarchar", ParameterDirection.Input)] string @TechCountry, [Parameter("TechPhone", "nvarchar", ParameterDirection.Input)] string @TechPhone, [Parameter("TechPhoneExt", "varchar", ParameterDirection.Input)] string @TechPhoneExt, [Parameter("TechFax", "nvarchar", ParameterDirection.Input)] string @TechFax, [Parameter("TechEmailAddress", "nvarchar", ParameterDirection.Input)] string @TechEmailAddress, [Parameter("AdminOrganizationName", "nvarchar", ParameterDirection.Input)] string @AdminOrganizationName, [Parameter("AdminJobTitle", "nvarchar", ParameterDirection.Input)] string @AdminJobTitle, [Parameter("AdminFirstName", "nvarchar", ParameterDirection.Input)] string @AdminFirstName, [Parameter("AdminLastName", "nvarchar", ParameterDirection.Input)] string @AdminLastName, [Parameter("AdminAddress1", "nvarchar", ParameterDirection.Input)] string @AdminAddress1, [Parameter("AdminAddress2", "nvarchar", ParameterDirection.Input)] string @AdminAddress2, [Parameter("AdminCity", "nvarchar", ParameterDirection.Input)] string @AdminCity, [Parameter("AdminStateProvince", "nvarchar", ParameterDirection.Input)] string @AdminStateProvince, [Parameter("AdminStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AdminStateProvinceChoice, [Parameter("AdminPostalCode", "nvarchar", ParameterDirection.Input)] string @AdminPostalCode, [Parameter("AdminCountry", "nvarchar", ParameterDirection.Input)] string @AdminCountry, [Parameter("AdminPhone", "nvarchar", ParameterDirection.Input)] string @AdminPhone, [Parameter("AdminPhoneExt", "varchar", ParameterDirection.Input)] string @AdminPhoneExt, [Parameter("AdminFax", "nvarchar", ParameterDirection.Input)] string @AdminFax, [Parameter("AdminEmailAddress", "nvarchar", ParameterDirection.Input)] string @AdminEmailAddress, [Parameter("AuxBillingOrganizationName", "nvarchar", ParameterDirection.Input)] string @AuxBillingOrganizationName, [Parameter("AuxBillingJobTitle", "nvarchar", ParameterDirection.Input)] string @AuxBillingJobTitle, [Parameter("AuxBillingFirstName", "nvarchar", ParameterDirection.Input)] string @AuxBillingFirstName, [Parameter("AuxBillingLastName", "nvarchar", ParameterDirection.Input)] string @AuxBillingLastName, [Parameter("AuxBillingAddress1", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress1, [Parameter("AuxBillingAddress2", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress2, [Parameter("AuxBillingCity", "nvarchar", ParameterDirection.Input)] string @AuxBillingCity, [Parameter("AuxBillingStateProvince", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvince, [Parameter("AuxBillingStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvinceChoice, [Parameter("AuxBillingPostalCode", "nvarchar", ParameterDirection.Input)] string @AuxBillingPostalCode, [Parameter("AuxBillingCountry", "nvarchar", ParameterDirection.Input)] string @AuxBillingCountry, [Parameter("AuxBillingPhone", "nvarchar", ParameterDirection.Input)] string @AuxBillingPhone, [Parameter("AuxBillingPhoneExt", "varchar", ParameterDirection.Input)] string @AuxBillingPhoneExt, [Parameter("AuxBillingFax", "nvarchar", ParameterDirection.Input)] string @AuxBillingFax, [Parameter("AuxBillingEmailAddress", "nvarchar", ParameterDirection.Input)] string @AuxBillingEmailAddress, [Parameter("RegistrantNexus", "varchar", ParameterDirection.Input)] string @RegistrantNexus, [Parameter("RegistrantNexusCountry", "varchar", ParameterDirection.Input)] string @RegistrantNexusCountry, [Parameter("RegistrantPurpose", "varchar", ParameterDirection.Input)] string @RegistrantPurpose, [Parameter("CIRAType", "varchar", ParameterDirection.Input)] string @CIRAType, [Parameter("COUKLegalType", "varchar", ParameterDirection.Input)] string @COUKLegalType, [Parameter("COUKCompanyID", "varchar", ParameterDirection.Input)] string @COUKCompanyID, [Parameter("COUKRegisteredfor", "varchar", ParameterDirection.Input)] string @COUKRegisteredfor, [Parameter("COUKRegOptOut", "varchar", ParameterDirection.Input)] string @COUKRegOptOut, [Parameter("ORGUKRegisteredfor", "varchar", ParameterDirection.Input)] string @ORGUKRegisteredfor, [Parameter("ORGUKRegOptOut", "varchar", ParameterDirection.Input)] string @ORGUKRegOptOut, [Parameter("ORGUKLegalType", "varchar", ParameterDirection.Input)] string @ORGUKLegalType, [Parameter("ORGUKCompanyID", "varchar", ParameterDirection.Input)] string @ORGUKCompanyID, [Parameter("MEUKLegalType", "varchar", ParameterDirection.Input)] string @MEUKLegalType, [Parameter("MEUKCompanyID", "varchar", ParameterDirection.Input)] string @MEUKCompanyID, [Parameter("MEUKRegisteredfor", "varchar", ParameterDirection.Input)] string @MEUKRegisteredfor, [Parameter("MEUKRegOptOut", "varchar", ParameterDirection.Input)] string @MEUKRegOptOut, [Parameter("EuAdrLang", "varchar", ParameterDirection.Input)] string @EuAdrLang, [Parameter("Cira_Registrant", "varchar", ParameterDirection.Input)] string @Cira_Registrant, [Parameter("Cira_Registrant_desc", "varchar", ParameterDirection.Input)] string @Cira_Registrant_desc, [Parameter("Cira_trademark_no", "varchar", ParameterDirection.Input)] string @Cira_trademark_no, [Parameter("Cira_org_registered_in", "varchar", ParameterDirection.Input)] string @Cira_org_registered_in);
		[Procedure("usp_ServiceFactoryGetUserRegistrationOptions", "dbo")] public abstract void usp_ServiceFactoryGetUserRegistrationOptions([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_ServiceGetDomainInfo", "dbo")] public abstract void usp_ServiceGetDomainInfo([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("usp_ServiceGetWhoisGuardProtectedAddress", "dbo")] public abstract void usp_ServiceGetWhoisGuardProtectedAddress();
		[Procedure("usp_ServicePurchaseRenewSSL", "dbo")] public abstract void usp_ServicePurchaseRenewSSL([Parameter("isRenewal", "bit", ParameterDirection.Input)] bool? @isRenewal, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("sslType", "varchar", ParameterDirection.Input)] string @sslType, [Parameter("numofYears", "smallint", ParameterDirection.Input)] short? @numofYears, [Parameter("qty", "int", ParameterDirection.Input)] int? @qty, [Parameter("purchasePrice", "money", ParameterDirection.Input)] decimal? @purchasePrice, [Parameter("retailPrice", "money", ParameterDirection.Input)] decimal? @retailPrice, [Parameter("replaceInsteadOfRefundYN", "bit", ParameterDirection.Input)] bool? @replaceInsteadOfRefundYN, [Parameter("domainUsed", "varchar", ParameterDirection.Input)] string @domainUsed, [Parameter("orderID", "numeric", ParameterDirection.Input)] decimal? @orderID, [Parameter("orderDetailID", "numeric", ParameterDirection.Input)] decimal? @orderDetailID, [Parameter("activationExpireDateTime", "datetime", ParameterDirection.Input)] DateTime? @activationExpireDateTime, [Parameter("relatedCertificateID", "numeric", ParameterDirection.Input)] decimal? @relatedCertificateID, [Parameter("orderIp", "varchar", ParameterDirection.Input)] string @orderIp);
		[Procedure("usp_ServicePurchaseRenewWBL", "dbo")] public abstract void usp_ServicePurchaseRenewWBL([Parameter("actionType", "varchar", ParameterDirection.Input)] string @actionType, [Parameter("domainName", "varchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("orderID", "bigint", ParameterDirection.Input)] long? @orderID, [Parameter("orderDetailID", "bigint", ParameterDirection.Input)] long? @orderDetailID, [Parameter("enomOrderID", "bigint", ParameterDirection.Input)] long? @enomOrderID, [Parameter("numYears", "int", ParameterDirection.Input)] int? @numYears);
		[Procedure("usp_ServiceRenewWhoisGuard", "dbo")] public abstract void usp_ServiceRenewWhoisGuard([Parameter("whoisGuardId", "numeric", ParameterDirection.Input)] decimal? @whoisGuardId, [Parameter("numOfYears", "smallint", ParameterDirection.Input)] short? @numOfYears);
		[Procedure("usp_ServiceUpdateProcessedItem", "dbo")] public abstract void usp_ServiceUpdateProcessedItem([Parameter("checkoutProcessId", "nvarchar", ParameterDirection.Input)] string @checkoutProcessId, [Parameter("orderId", "numeric", ParameterDirection.Input)] decimal? @orderId, [Parameter("shoppingCartItemId", "bigint", ParameterDirection.Input)] long? @shoppingCartItemId, [Parameter("isSuccess", "bit", ParameterDirection.Input)] bool? @isSuccess, [Parameter("statusInfo", "varchar", ParameterDirection.Input)] string @statusInfo, [Parameter("providerRawData", "varchar", ParameterDirection.Input)] string @providerRawData, [Parameter("isSettingsRequired", "bit", ParameterDirection.Input)] bool? @isSettingsRequired, [Parameter("option1", "varchar", ParameterDirection.Input)] string @option1, [Parameter("option2", "varchar", ParameterDirection.Input)] string @option2);
		[Procedure("usp_ServiceUpdateRenewReactivateDomain", "dbo")] public abstract void usp_ServiceUpdateRenewReactivateDomain([Parameter("isReactivate", "bit", ParameterDirection.Input)] bool? @isReactivate, [Parameter("numYears", "int", ParameterDirection.Input)] int? @numYears, [Parameter("expiryDateTime", "datetime", ParameterDirection.Input)] DateTime? @expiryDateTime, [Parameter("orderID", "nvarchar", ParameterDirection.Input)] string @orderID, [Parameter("transID", "nvarchar", ParameterDirection.Input)] string @transID, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_ServiceUpdateRenewRichContent", "dbo")] public abstract void usp_ServiceUpdateRenewRichContent([Parameter("subscriptionAutoID", "int", ParameterDirection.Input)] int? @subscriptionAutoID, [Parameter("numMonths", "int", ParameterDirection.Input)] int? @numMonths, [Parameter("clientIP", "varchar", ParameterDirection.Input)] string @clientIP, [Parameter("orderId", "int", ParameterDirection.Input)] int? @orderId);
		[Procedure("USP_SET_ADMIN_USER_SECUIRTY_SETTINGS", "dbo")] public abstract void USP_SET_ADMIN_USER_SECUIRTY_SETTINGS([Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName, [Parameter("bLoginYN", "bit", ParameterDirection.Input)] bool? @bLoginYN, [Parameter("bProfileYN", "bit", ParameterDirection.Input)] bool? @bProfileYN, [Parameter("bDomainYN", "bit", ParameterDirection.Input)] bool? @bDomainYN);
		[Procedure("USP_SET_ATTRIBUTE_FOR_GROUP", "dbo")] public abstract void USP_SET_ATTRIBUTE_FOR_GROUP([Parameter("groupId", "int", ParameterDirection.Input)] int? @groupId, [Parameter("attributeId", "int", ParameterDirection.Input)] int? @attributeId, [Parameter("attributeName", "varchar", ParameterDirection.Input)] string @attributeName, [Parameter("description", "text", ParameterDirection.Input)] string @description);
		[Procedure("USP_SET_ATTRIBUTE_GROUP", "dbo")] public abstract void USP_SET_ATTRIBUTE_GROUP([Parameter("groupId", "int", ParameterDirection.Input)] int? @groupId, [Parameter("groupName", "varchar", ParameterDirection.Input)] string @groupName, [Parameter("description", "text", ParameterDirection.Input)] string @description);
		[Procedure("USP_SET_AUTO_ENABLE_WHOIGUARD", "dbo")] public abstract void USP_SET_AUTO_ENABLE_WHOIGUARD([Parameter("IPV_Domains", "nvarchar", ParameterDirection.Input)] string @IPV_Domains, [Parameter("IPV_RefID", "varchar", ParameterDirection.Input)] string @IPV_RefID);
		[Procedure("USP_SET_COPY_AFFILIATE_PROGRAM", "dbo")] public abstract void USP_SET_COPY_AFFILIATE_PROGRAM([Parameter("programId", "int", ParameterDirection.Input)] int? @programId, [Parameter("programName", "varchar", ParameterDirection.Input)] string @programName);
		[Procedure("USP_SET_COPY_PROMOTION_PRICING", "dbo")] public abstract void USP_SET_COPY_PROMOTION_PRICING([Parameter("IPN_Promotionid", "numeric", ParameterDirection.Input)] decimal? @IPN_Promotionid, [Parameter("IPV_Procode", "varchar", ParameterDirection.Input)] string @IPV_Procode);
		[Procedure("USP_SET_DOMAIN_EDIT_CAPABILITIES", "dbo")] public abstract void USP_SET_DOMAIN_EDIT_CAPABILITIES([Parameter("IPN_Reseller_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Reseller_ID, [Parameter("IPN_Current_User_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Current_User_ID, [Parameter("IPV_Current_User_Password", "varchar", ParameterDirection.Input)] string @IPV_Current_User_Password, [Parameter("IPV_Current_User_PasswordNoCase", "varchar", ParameterDirection.Input)] string @IPV_Current_User_PasswordNoCase, [Parameter("IPV_Target_User_Name", "varchar", ParameterDirection.Input)] string @IPV_Target_User_Name, [Parameter("IPN_Domain_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Domain_ID, [Parameter("IPV_Capabilities_CSV", "varchar", ParameterDirection.Input)] string @IPV_Capabilities_CSV);
		[Procedure("USP_SET_DOMAIN_SOCIAL_NETWORKING_DETAILS", "dbo")] public abstract void USP_SET_DOMAIN_SOCIAL_NETWORKING_DETAILS([Parameter("Domainname", "nvarchar", ParameterDirection.Input)] string @Domainname, [Parameter("ME_Username", "nvarchar", ParameterDirection.Input)] string @ME_Username, [Parameter("ME_Password", "nvarchar", ParameterDirection.Input)] string @ME_Password, [Parameter("ME_Email", "nvarchar", ParameterDirection.Input)] string @ME_Email, [Parameter("ME_CreatedDate", "datetime", ParameterDirection.Input)] DateTime? @ME_CreatedDate);
		[Procedure("USP_SET_DOMLIST_USER_PREFERENCE", "dbo")] public abstract void USP_SET_DOMLIST_USER_PREFERENCE([Parameter("IPN_User_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_User_ID, [Parameter("IPB_Save_Category", "bit", ParameterDirection.Input)] bool? @IPB_Save_Category, [Parameter("IPN_Category_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Category_ID, [Parameter("IPB_Save_NumDomains", "bit", ParameterDirection.Input)] bool? @IPB_Save_NumDomains, [Parameter("IPV_NumDomains", "varchar", ParameterDirection.Input)] string @IPV_NumDomains);
		[Procedure("USP_SET_ENOM_AUTO_RENEW_FAILED", "dbo")] public abstract void USP_SET_ENOM_AUTO_RENEW_FAILED([Parameter("IPN_Enom_Auto_Renew_Track_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Enom_Auto_Renew_Track_ID, [Parameter("IPV_Domainname", "nvarchar", ParameterDirection.Input)] string @IPV_Domainname, [Parameter("LD_Error", "decimal", ParameterDirection.InputOutput)] decimal? @LD_Error);
		[Procedure("USP_SET_ENOM_AUTO_RENEW_TRACK", "dbo")] public abstract void USP_SET_ENOM_AUTO_RENEW_TRACK([Parameter("IPV_Domainname", "nvarchar", ParameterDirection.Input)] string @IPV_Domainname, [Parameter("IPN_RelatedOrderID", "numeric", ParameterDirection.Input)] decimal? @IPN_RelatedOrderID);
		[Procedure("USP_SET_ENOM_AUTO_RENEW_UPDATE_STATUS", "dbo")] public abstract void USP_SET_ENOM_AUTO_RENEW_UPDATE_STATUS([Parameter("IPN_Enom_Auto_Renew_Track_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Enom_Auto_Renew_Track_ID, [Parameter("IPV_Domainname", "nvarchar", ParameterDirection.Input)] string @IPV_Domainname, [Parameter("IPD_Newexpirationdate", "datetime", ParameterDirection.Input)] DateTime? @IPD_Newexpirationdate);
		[Procedure("USP_SET_GET_DOMLIST_USER_PREFERENCE", "dbo")] public abstract void USP_SET_GET_DOMLIST_USER_PREFERENCE([Parameter("IPN_User_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_User_ID, [Parameter("IPN_Category_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Category_ID, [Parameter("IPV_NumDomains", "varchar", ParameterDirection.Input)] string @IPV_NumDomains);
		[Procedure("USP_SET_IP_INFO", "dbo")] public abstract void USP_SET_IP_INFO([Parameter("IPV_Remote_IP", "varchar", ParameterDirection.Input)] string @IPV_Remote_IP, [Parameter("IPT_MaxMind_XML", "text", ParameterDirection.Input)] string @IPT_MaxMind_XML);
		[Procedure("USP_SET_KAYAKO_USER_ID", "dbo")] public abstract void USP_SET_KAYAKO_USER_ID([Parameter("UserName", "varchar", ParameterDirection.Input)] string @UserName, [Parameter("KayakoUserId", "int", ParameterDirection.Input)] int? @KayakoUserId);
		[Procedure("USP_SET_MP_CATEGORY_FOR_DOMAIN", "dbo")] public abstract void USP_SET_MP_CATEGORY_FOR_DOMAIN([Parameter("ListingID", "numeric", ParameterDirection.Input)] decimal? @ListingID, [Parameter("Category1", "int", ParameterDirection.Input)] int? @Category1, [Parameter("Category2", "int", ParameterDirection.Input)] int? @Category2);
		[Procedure("USP_SET_NEW_PASSWORD", "dbo")] public abstract void USP_SET_NEW_PASSWORD([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("oldPassword", "nvarchar", ParameterDirection.Input)] string @oldPassword, [Parameter("newPassword", "nvarchar", ParameterDirection.Input)] string @newPassword, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip);
		[Procedure("USP_SET_PHONE_FAX_FOR_VALIDATION", "dbo")] public abstract void USP_SET_PHONE_FAX_FOR_VALIDATION([Parameter("IPV_Reg_ID", "varchar", ParameterDirection.Input)] string @IPV_Reg_ID, [Parameter("IPV_Registrant_Phone", "varchar", ParameterDirection.Input)] string @IPV_Registrant_Phone, [Parameter("IPV_Registrant_Fax", "varchar", ParameterDirection.Input)] string @IPV_Registrant_Fax, [Parameter("IPV_Admin_Phone", "varchar", ParameterDirection.Input)] string @IPV_Admin_Phone, [Parameter("IPV_Admin_Fax", "varchar", ParameterDirection.Input)] string @IPV_Admin_Fax, [Parameter("IPV_Tech_Phone", "varchar", ParameterDirection.Input)] string @IPV_Tech_Phone, [Parameter("IPV_Tech_Fax", "varchar", ParameterDirection.Input)] string @IPV_Tech_Fax, [Parameter("IPV_AuxBilling_Phone", "varchar", ParameterDirection.Input)] string @IPV_AuxBilling_Phone, [Parameter("IPV_AuxBilling_Fax", "varchar", ParameterDirection.Input)] string @IPV_AuxBilling_Fax, [Parameter("IPV_User_Name", "varchar", ParameterDirection.Input)] string @IPV_User_Name, [Parameter("IPV_Update_Profile", "varchar", ParameterDirection.Input)] string @IPV_Update_Profile, [Parameter("IPV_Registrant_Phoneext", "varchar", ParameterDirection.Input)] string @IPV_Registrant_Phoneext, [Parameter("IPV_Admin_Phoneext", "varchar", ParameterDirection.Input)] string @IPV_Admin_Phoneext, [Parameter("IPV_Tech_Phoneext", "varchar", ParameterDirection.Input)] string @IPV_Tech_Phoneext, [Parameter("IPV_AuxBilling_Phoneext", "varchar", ParameterDirection.Input)] string @IPV_AuxBilling_Phoneext);
		[Procedure("USP_SET_PRODUCT_ATTRIBUTES", "dbo")] public abstract void USP_SET_PRODUCT_ATTRIBUTES([Parameter("productId", "int", ParameterDirection.Input)] int? @productId, [Parameter("attributeIdsValues", "varchar", ParameterDirection.Input)] string @attributeIdsValues);
		[Procedure("USP_SET_REGISTRATION_OPTIONS", "dbo")] public abstract void USP_SET_REGISTRATION_OPTIONS([Parameter("IPV_Reg_ID", "varchar", ParameterDirection.Input)] string @IPV_Reg_ID, [Parameter("IPV_Use_Name_Server", "varchar", ParameterDirection.Input)] string @IPV_Use_Name_Server, [Parameter("IPV_NS1", "varchar", ParameterDirection.Input)] string @IPV_NS1, [Parameter("IPV_NS2", "varchar", ParameterDirection.Input)] string @IPV_NS2, [Parameter("IPV_NS3", "varchar", ParameterDirection.Input)] string @IPV_NS3, [Parameter("IPV_NS4", "varchar", ParameterDirection.Input)] string @IPV_NS4, [Parameter("IPV_NS5", "varchar", ParameterDirection.Input)] string @IPV_NS5, [Parameter("IPV_EForward_User", "varchar", ParameterDirection.Input)] string @IPV_EForward_User, [Parameter("IPV_EForward_Email", "varchar", ParameterDirection.Input)] string @IPV_EForward_Email, [Parameter("IPV_UForward_URL", "varchar", ParameterDirection.Input)] string @IPV_UForward_URL, [Parameter("IPV_UForward_Type", "varchar", ParameterDirection.Input)] string @IPV_UForward_Type, [Parameter("IPV_Submit", "varchar", ParameterDirection.Input)] string @IPV_Submit, [Parameter("RegistrantNexus", "varchar", ParameterDirection.Input)] string @RegistrantNexus, [Parameter("RegistrantNexusCountry", "varchar", ParameterDirection.Input)] string @RegistrantNexusCountry, [Parameter("RegistrantPurpose", "varchar", ParameterDirection.Input)] string @RegistrantPurpose, [Parameter("CIRAType", "varchar", ParameterDirection.Input)] string @CIRAType, [Parameter("COUKLegalType", "varchar", ParameterDirection.Input)] string @COUKLegalType, [Parameter("COUKCompanyID", "varchar", ParameterDirection.Input)] string @COUKCompanyID, [Parameter("COUKRegisteredfor", "varchar", ParameterDirection.Input)] string @COUKRegisteredfor, [Parameter("COUKRegOptOut", "varchar", ParameterDirection.Input)] string @COUKRegOptOut, [Parameter("ORGUKLegalType", "varchar", ParameterDirection.Input)] string @ORGUKLegalType, [Parameter("ORGUKCompanyID", "varchar", ParameterDirection.Input)] string @ORGUKCompanyID, [Parameter("ORGUKRegisteredfor", "varchar", ParameterDirection.Input)] string @ORGUKRegisteredfor, [Parameter("ORGUKRegOptOut", "varchar", ParameterDirection.Input)] string @ORGUKRegOptOut, [Parameter("DEconfirmAddress", "bit", ParameterDirection.Input)] bool? @DEconfirmAddress, [Parameter("de_agreedelete", "varchar", ParameterDirection.Input)] string @de_agreedelete, [Parameter("MEUKLegalType", "varchar", ParameterDirection.Input)] string @MEUKLegalType, [Parameter("MEUKCompanyID", "varchar", ParameterDirection.Input)] string @MEUKCompanyID, [Parameter("MEUKRegisteredfor", "varchar", ParameterDirection.Input)] string @MEUKRegisteredfor, [Parameter("MEUKRegOptOut", "varchar", ParameterDirection.Input)] string @MEUKRegOptOut, [Parameter("eu_adr_lang", "varchar", ParameterDirection.Input)] string @eu_adr_lang, [Parameter("eu_agreedelete", "bit", ParameterDirection.Input)] bool? @eu_agreedelete, [Parameter("CIRA_Legal_Type", "varchar", ParameterDirection.Input)] string @CIRA_Legal_Type, [Parameter("CIRA_Whois_Display", "varchar", ParameterDirection.Input)] string @CIRA_Whois_Display, [Parameter("CIRA_Agreement_Value", "varchar", ParameterDirection.Input)] string @CIRA_Agreement_Value, [Parameter("CIRA_Agreement_Version", "varchar", ParameterDirection.Input)] string @CIRA_Agreement_Version, [Parameter("CIRA_Language", "varchar", ParameterDirection.Input)] string @CIRA_Language, [Parameter("asia_cclocality", "varchar", ParameterDirection.Input)] string @asia_cclocality, [Parameter("asia_localitycity", "nvarchar", ParameterDirection.Input)] string @asia_localitycity, [Parameter("asia_localitysp", "nvarchar", ParameterDirection.Input)] string @asia_localitysp, [Parameter("asia_legalentitytype", "varchar", ParameterDirection.Input)] string @asia_legalentitytype, [Parameter("asia_identform", "varchar", ParameterDirection.Input)] string @asia_identform, [Parameter("asia_ident_number", "varchar", ParameterDirection.Input)] string @asia_ident_number, [Parameter("asia_otherletype", "varchar", ParameterDirection.Input)] string @asia_otherletype, [Parameter("asia_otheridentform", "varchar", ParameterDirection.Input)] string @asia_otheridentform);
		[Procedure("USP_SET_STATUS_IN_ADD_FUNDS_REQUEST", "dbo")] public abstract void USP_SET_STATUS_IN_ADD_FUNDS_REQUEST([Parameter("tokenId", "varchar", ParameterDirection.Input)] string @tokenId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("status", "varchar", ParameterDirection.Input)] string @status, [Parameter("subStatus", "varchar", ParameterDirection.Input)] string @subStatus);
		[Procedure("USP_SET_SUBSCRIBTION", "dbo")] public abstract void USP_SET_SUBSCRIBTION([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("encodedUserId", "int", ParameterDirection.Input)] int? @encodedUserId, [Parameter("subscribe", "int", ParameterDirection.Input)] int? @subscribe, [Parameter("denyNotificationEmail", "bit", ParameterDirection.Input)] bool? @denyNotificationEmail);
		[Procedure("USP_SET_USER_HOSTING_ACCOUNT_DETAILS", "dbo")] public abstract void USP_SET_USER_HOSTING_ACCOUNT_DETAILS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ClientID", "nvarchar", ParameterDirection.Input)] string @ClientID, [Parameter("ProviderName", "varchar", ParameterDirection.Input)] string @ProviderName);
		[Procedure("USP_SET_USER_SECUIRTY_SETTINGS", "dbo")] public abstract void USP_SET_USER_SECUIRTY_SETTINGS([Parameter("sUserName", "nvarchar", ParameterDirection.Input)] string @sUserName, [Parameter("sUserEmail", "nvarchar", ParameterDirection.Input)] string @sUserEmail, [Parameter("bLoginYN", "bit", ParameterDirection.Input)] bool? @bLoginYN, [Parameter("bProfileYN", "bit", ParameterDirection.Input)] bool? @bProfileYN, [Parameter("bDomainYN", "bit", ParameterDirection.Input)] bool? @bDomainYN, [Parameter("sType", "varchar", ParameterDirection.Input)] string @sType);
		[Procedure("usp_SetCardAsDefaultForUser", "dbo")] public abstract void usp_SetCardAsDefaultForUser([Parameter("creditCardId", "uniqueidentifier", ParameterDirection.Input)] Guid? @creditCardId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_SetOrgTldPromotionDetails", "dbo")] public abstract void usp_SetOrgTldPromotionDetails([Parameter("OrgTldDomain", "nvarchar", ParameterDirection.Input)] string @OrgTldDomain, [Parameter("OrgUserName", "nvarchar", ParameterDirection.Input)] string @OrgUserName, [Parameter("OrgCreatedDateTime", "datetime", ParameterDirection.Input)] DateTime? @OrgCreatedDateTime, [Parameter("OtherTldDomain", "nvarchar", ParameterDirection.Input)] string @OtherTldDomain, [Parameter("OtherTldUserName", "nvarchar", ParameterDirection.Input)] string @OtherTldUserName, [Parameter("OtherTldCreatedDateTime", "datetime", ParameterDirection.Input)] DateTime? @OtherTldCreatedDateTime, [Parameter("IsOtherDomainCreated", "bit", ParameterDirection.Input)] bool? @IsOtherDomainCreated, [Parameter("ApiReason", "nvarchar", ParameterDirection.Input)] string @ApiReason);
		[Procedure("USP_SHOPPING_CART_SSL_PACKAGE_PURCHASE_PROCESS", "dbo")] public abstract void USP_SHOPPING_CART_SSL_PACKAGE_PURCHASE_PROCESS([Parameter("refID", "varchar", ParameterDirection.Input)] string @refID, [Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_SHOPPING_CART_VALIDATE_MANAGEDNS", "dbo")] public abstract void USP_SHOPPING_CART_VALIDATE_MANAGEDNS([Parameter("hostName", "varchar", ParameterDirection.Input)] string @hostName, [Parameter("IsUserLoggedIN", "bit", ParameterDirection.Input)] bool? @IsUserLoggedIN, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_SHOPPING_CART_VALIDATE_WBL", "dbo")] public abstract void USP_SHOPPING_CART_VALIDATE_WBL([Parameter("validationType", "varchar", ParameterDirection.Input)] string @validationType, [Parameter("actionType", "varchar", ParameterDirection.Input)] string @actionType, [Parameter("RefID", "varchar", ParameterDirection.Input)] string @RefID, [Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("itemNum", "numeric", ParameterDirection.Input)] decimal? @itemNum, [Parameter("isUserLoggedIn", "bit", ParameterDirection.Input)] bool? @isUserLoggedIn, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_SHOPPING_PURCHASE_CHECK_REFERENCE_ITEM_ACTION_STATUS", "dbo")] public abstract void USP_SHOPPING_PURCHASE_CHECK_REFERENCE_ITEM_ACTION_STATUS([Parameter("refItem", "numeric", ParameterDirection.Input)] decimal? @refItem);
		[Procedure("USP_SHOPPINGCART_ADDUPDATE_FREE_SSL_TO_AN_ITEM", "dbo")] public abstract void USP_SHOPPINGCART_ADDUPDATE_FREE_SSL_TO_AN_ITEM([Parameter("refId", "varchar", ParameterDirection.Input)] string @refId, [Parameter("itemNum", "numeric", ParameterDirection.Input)] decimal? @itemNum, [Parameter("sld", "varchar", ParameterDirection.Input)] string @sld, [Parameter("tld", "varchar", ParameterDirection.Input)] string @tld, [Parameter("numYears", "smallint", ParameterDirection.Input)] short? @numYears, [Parameter("actionID", "varchar", ParameterDirection.Input)] string @actionID, [Parameter("minyears", "int", ParameterDirection.Input)] int? @minyears, [Parameter("maxyears", "int", ParameterDirection.Input)] int? @maxyears, [Parameter("qty", "int", ParameterDirection.Input)] int? @qty, [Parameter("actionType", "varchar", ParameterDirection.Input)] string @actionType);
		[Procedure("USP_SHOPPINGCART_CHECK_ITEM_HAS_FREEPRODUCTS", "dbo")] public abstract void USP_SHOPPINGCART_CHECK_ITEM_HAS_FREEPRODUCTS([Parameter("refID", "varchar", ParameterDirection.Input)] string @refID, [Parameter("itemNum", "numeric", ParameterDirection.Input)] decimal? @itemNum, [Parameter("ActionID", "varchar", ParameterDirection.Input)] string @ActionID, [Parameter("Sld", "varchar", ParameterDirection.Input)] string @Sld);
		[Procedure("USP_SHOPPINGCART_GET_ITEMNUM_DETAILS", "dbo")] public abstract void USP_SHOPPINGCART_GET_ITEMNUM_DETAILS([Parameter("itemNum", "numeric", ParameterDirection.Input)] decimal? @itemNum, [Parameter("refId", "varchar", ParameterDirection.Input)] string @refId);
		[Procedure("USP_SHOPPINGCART_REMOVE_FREE_PRODUCTS", "dbo")] public abstract void USP_SHOPPINGCART_REMOVE_FREE_PRODUCTS([Parameter("refId", "varchar", ParameterDirection.Input)] string @refId, [Parameter("actionId", "varchar", ParameterDirection.Input)] string @actionId, [Parameter("sld", "varchar", ParameterDirection.Input)] string @sld, [Parameter("tld", "varchar", ParameterDirection.Input)] string @tld, [Parameter("refItemNum", "numeric", ParameterDirection.Input)] decimal? @refItemNum);
		[Procedure("USP_SHOPPINGCART_REMOVE_ITEM_AND_ITSFREE", "dbo")] public abstract void USP_SHOPPINGCART_REMOVE_ITEM_AND_ITSFREE([Parameter("RefID", "varchar", ParameterDirection.Input)] string @RefID, [Parameter("itemNum", "numeric", ParameterDirection.Input)] decimal? @itemNum, [Parameter("leaveReferencedProduct", "bit", ParameterDirection.Input)] bool? @leaveReferencedProduct);
		[Procedure("usp_ShoppingCartCreateProcessCart", "dbo")] public abstract void usp_ShoppingCartCreateProcessCart([Parameter("checkoutProcessID", "varchar", ParameterDirection.Input)] string @checkoutProcessID, [Parameter("refID", "varchar", ParameterDirection.Input)] string @refID, [Parameter("checkoutID", "varchar", ParameterDirection.Input)] string @checkoutID, [Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode, [Parameter("isGlobalPromotion", "bit", ParameterDirection.Input)] bool? @isGlobalPromotion, [Parameter("globalPromotionDiscount", "money", ParameterDirection.Input)] decimal? @globalPromotionDiscount, [Parameter("isGlobalPromotionPercentageType", "bit", ParameterDirection.Input)] bool? @isGlobalPromotionPercentageType, [Parameter("total", "money", ParameterDirection.Input)] decimal? @total, [Parameter("cmsCartServerName", "varchar", ParameterDirection.Input)] string @cmsCartServerName, [Parameter("paymentMode", "varchar", ParameterDirection.Input)] string @paymentMode, [Parameter("invAddr", "xml", ParameterDirection.Input)] string @invAddr, [Parameter("shoppingCartProcessID", "bigint", ParameterDirection.InputOutput)] long? @shoppingCartProcessID);
		[Procedure("usp_ShoppingCartGetProcessCartDetails", "dbo")] public abstract void usp_ShoppingCartGetProcessCartDetails([Parameter("checkoutProcessId", "varchar", ParameterDirection.Input)] string @checkoutProcessId, [Parameter("shoppingCartItemID", "bigint", ParameterDirection.Input)] long? @shoppingCartItemID, [Parameter("isGetAddonDetails", "bit", ParameterDirection.Input)] bool? @isGetAddonDetails);
		[Procedure("usp_ShoppingCartProcessGetInvoiceAddress", "dbo")] public abstract void usp_ShoppingCartProcessGetInvoiceAddress([Parameter("checkoutProcessID", "varchar", ParameterDirection.Input)] string @checkoutProcessID);
		[Procedure("usp_ShoppingCartProcessMoveToArchive", "dbo")] public abstract void usp_ShoppingCartProcessMoveToArchive();
		[Procedure("usp_ShoppingCartProcessSaveInvoiceAddress", "dbo")] public abstract void usp_ShoppingCartProcessSaveInvoiceAddress([Parameter("checkoutProcessID", "varchar", ParameterDirection.Input)] string @checkoutProcessID, [Parameter("invoiceAddr", "xml", ParameterDirection.Input)] string @invoiceAddr);
		[Procedure("usp_SortAutoRenewPriorityForUser", "dbo")] public abstract void usp_SortAutoRenewPriorityForUser([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("data", "varchar", ParameterDirection.Input)] string @data);
		[Procedure("USP_SSL_APPROVEORDENY_CERTIFICATE", "dbo")] public abstract void USP_SSL_APPROVEORDENY_CERTIFICATE([Parameter("IsApprove", "bit", ParameterDirection.Input)] bool? @IsApprove, [Parameter("Pin", "varchar", ParameterDirection.Input)] string @Pin, [Parameter("ApproverIp", "varchar", ParameterDirection.Input)] string @ApproverIp);
		[Procedure("USP_SSL_CHECK_CERTIFICATE_BY_ID", "dbo")] public abstract void USP_SSL_CHECK_CERTIFICATE_BY_ID([Parameter("certificateId", "numeric", ParameterDirection.Input)] decimal? @certificateId, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("USP_SSL_CHECK_CERTIFICATEID_IN_ENOM", "dbo")] public abstract void USP_SSL_CHECK_CERTIFICATEID_IN_ENOM([Parameter("certificateId", "numeric", ParameterDirection.Input)] decimal? @certificateId);
		[Procedure("USP_SSL_CHECK_COMMONNAME_EXISTS", "dbo")] public abstract void USP_SSL_CHECK_COMMONNAME_EXISTS([Parameter("commonName", "varchar", ParameterDirection.Input)] string @commonName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_SSL_CHECK_COMMONNAME_EXISTS_INFREE", "dbo")] public abstract void USP_SSL_CHECK_COMMONNAME_EXISTS_INFREE([Parameter("commonName", "varchar", ParameterDirection.Input)] string @commonName, [Parameter("certificateID", "int", ParameterDirection.Input)] int? @certificateID);
		[Procedure("USP_SSL_CHECK_INSERT_FOR_REPLACE", "dbo")] public abstract void USP_SSL_CHECK_INSERT_FOR_REPLACE([Parameter("certificateId", "int", ParameterDirection.Input)] int? @certificateId);
		[Procedure("USP_SSL_CHECK_PROMOTION_FOR_CERTIFICATE", "dbo")] public abstract void USP_SSL_CHECK_PROMOTION_FOR_CERTIFICATE([Parameter("promotionCode", "varchar", ParameterDirection.Input)] string @promotionCode, [Parameter("certificateID", "int", ParameterDirection.Input)] int? @certificateID);
		[Procedure("USP_SSL_DELETE", "dbo")] public abstract void USP_SSL_DELETE([Parameter("certificateId", "numeric", ParameterDirection.Input)] decimal? @certificateId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("actionIp", "varchar", ParameterDirection.Input)] string @actionIp);
		[Procedure("USP_SSL_DELETE_ALL_FREE_EXPIRED", "dbo")] public abstract void USP_SSL_DELETE_ALL_FREE_EXPIRED([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("actionIp", "varchar", ParameterDirection.Input)] string @actionIp);
		[Procedure("USP_SSL_ENOM_GET_CERT_ID", "dbo")] public abstract void USP_SSL_ENOM_GET_CERT_ID([Parameter("certificateID", "numeric", ParameterDirection.Input)] decimal? @certificateID);
		[Procedure("USP_SSL_ENOM_GET_FREE_CERTIFICATES_FROM_POOL", "dbo")] public abstract void USP_SSL_ENOM_GET_FREE_CERTIFICATES_FROM_POOL([Parameter("associated_Certificate_Id", "int", ParameterDirection.Input)] int? @associated_Certificate_Id, [Parameter("enom_certificate_type", "varchar", ParameterDirection.Input)] string @enom_certificate_type, [Parameter("enom_years_purchased", "tinyint", ParameterDirection.Input)] byte? @enom_years_purchased);
		[Procedure("USP_SSL_ENOM_IUD_CERTIFICATE_POOL", "dbo")] public abstract void USP_SSL_ENOM_IUD_CERTIFICATE_POOL([Parameter("actionType", "varchar", ParameterDirection.Input)] string @actionType, [Parameter("enomOrderId", "bigint", ParameterDirection.Input)] long? @enomOrderId, [Parameter("enomCertId", "bigint", ParameterDirection.Input)] long? @enomCertId, [Parameter("enom_certificate_Type", "varchar", ParameterDirection.Input)] string @enom_certificate_Type, [Parameter("enom_years_purchased", "tinyint", ParameterDirection.Input)] byte? @enom_years_purchased, [Parameter("associated_Certificate_ID", "int", ParameterDirection.Input)] int? @associated_Certificate_ID, [Parameter("poolId", "int", ParameterDirection.Input)] int? @poolId, [Parameter("associated_DateTime", "datetime", ParameterDirection.Input)] DateTime? @associated_DateTime);
		[Procedure("USP_SSL_GET_APPROVAL_DETAILS", "dbo")] public abstract void USP_SSL_GET_APPROVAL_DETAILS([Parameter("Pin", "varchar", ParameterDirection.Input)] string @Pin);
		[Procedure("USP_SSL_GET_APPROVALPIN", "dbo")] public abstract void USP_SSL_GET_APPROVALPIN([Parameter("certificateId", "int", ParameterDirection.Input)] int? @certificateId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_SSL_GET_CANCELLED_LIST", "dbo")] public abstract void USP_SSL_GET_CANCELLED_LIST();
		[Procedure("USP_SSL_GET_CERTIFICATES_BY_STATUS_OF_A_PARTNER", "dbo")] public abstract void USP_SSL_GET_CERTIFICATES_BY_STATUS_OF_A_PARTNER([Parameter("status", "varchar", ParameterDirection.Input)] string @status, [Parameter("partnerName", "varchar", ParameterDirection.Input)] string @partnerName);
		[Procedure("USP_SSL_GET_INFO", "dbo")] public abstract void USP_SSL_GET_INFO([Parameter("certificateId", "numeric", ParameterDirection.Input)] decimal? @certificateId);
		[Procedure("USP_SSL_GET_INITIALIZE_CERTIFICATE", "dbo")] public abstract void USP_SSL_GET_INITIALIZE_CERTIFICATE([Parameter("certificateId", "int", ParameterDirection.Input)] int? @certificateId);
		[Procedure("USP_SSL_GET_PARTNER", "dbo")] public abstract void USP_SSL_GET_PARTNER([Parameter("certificateID", "numeric", ParameterDirection.Input)] decimal? @certificateID, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("USP_SSL_GET_PARTNER_BY_CERTIFICATE_TYPE", "dbo")] public abstract void USP_SSL_GET_PARTNER_BY_CERTIFICATE_TYPE([Parameter("CertificateType", "varchar", ParameterDirection.Input)] string @CertificateType);
		[Procedure("USP_SSL_GET_PARTNER_BY_CERTIFICATEID", "dbo")] public abstract void USP_SSL_GET_PARTNER_BY_CERTIFICATEID([Parameter("certificateId", "numeric", ParameterDirection.Input)] decimal? @certificateId);
		[Procedure("USP_SSL_GET_REMAINING_DAYS TO_EXPIRE", "dbo")] public abstract void USP_SSL_GET_REMAINING_DAYS_TO_EXPIRE([Parameter("commonName", "varchar", ParameterDirection.Input)] string @commonName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("sslType", "varchar", ParameterDirection.Input)] string @sslType);
		[Procedure("USP_SSL_INSERT_FOR_REPLACE", "dbo")] public abstract void USP_SSL_INSERT_FOR_REPLACE([Parameter("certificateId", "int", ParameterDirection.Input)] int? @certificateId);
		[Procedure("USP_SSL_NEW_ORDER", "dbo")] public abstract void USP_SSL_NEW_ORDER([Parameter("sUsername", "varchar", ParameterDirection.Input)] string @sUsername, [Parameter("sDomain", "varchar", ParameterDirection.Input)] string @sDomain, [Parameter("sOrderID", "varchar", ParameterDirection.Input)] string @sOrderID, [Parameter("Product", "varchar", ParameterDirection.Input)] string @Product, [Parameter("nNumYears", "int", ParameterDirection.Input)] int? @nNumYears);
		[Procedure("USP_SSL_PARTNER_ENOM_SCHEDULE_LIST", "dbo")] public abstract void USP_SSL_PARTNER_ENOM_SCHEDULE_LIST();
		[Procedure("USP_SSL_PARTNER_ENOM_SCHEDULE_UPDATE_STATUS", "dbo")] public abstract void USP_SSL_PARTNER_ENOM_SCHEDULE_UPDATE_STATUS([Parameter("CertificateID", "int", ParameterDirection.Input)] int? @CertificateID, [Parameter("poolID", "int", ParameterDirection.Input)] int? @poolID, [Parameter("Status", "varchar", ParameterDirection.Input)] string @Status, [Parameter("StatusDesc", "varchar", ParameterDirection.Input)] string @StatusDesc, [Parameter("enomOrderID", "numeric", ParameterDirection.Input)] decimal? @enomOrderID, [Parameter("enomOrderDetailID", "numeric", ParameterDirection.Input)] decimal? @enomOrderDetailID, [Parameter("geotrustOrderID", "varchar", ParameterDirection.Input)] string @geotrustOrderID, [Parameter("ExpiryDateTime", "datetime", ParameterDirection.Input)] DateTime? @ExpiryDateTime);
		[Procedure("USP_SSL_PARTNER_GET_CANCELLED_LIST", "dbo")] public abstract void USP_SSL_PARTNER_GET_CANCELLED_LIST([Parameter("Partner_Name", "varchar", ParameterDirection.Input)] string @Partner_Name);
		[Procedure("USP_SSL_PARTNER_GET_REPLACE_LIST", "dbo")] public abstract void USP_SSL_PARTNER_GET_REPLACE_LIST([Parameter("status", "varchar", ParameterDirection.Input)] string @status, [Parameter("partnerName", "varchar", ParameterDirection.Input)] string @partnerName);
		[Procedure("USP_SSL_PARTNER_REFUND_CANCELLED_CERTIFICATES", "dbo")] public abstract void USP_SSL_PARTNER_REFUND_CANCELLED_CERTIFICATES([Parameter("IPN_Certificate_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Certificate_ID, [Parameter("IPN_Return_Value", "int", ParameterDirection.InputOutput)] int? @IPN_Return_Value, [Parameter("IPB_Test_Only_YN", "bit", ParameterDirection.Input)] bool? @IPB_Test_Only_YN);
		[Procedure("USP_SSL_PARTNER_SCHEDULE_LIST", "dbo")] public abstract void USP_SSL_PARTNER_SCHEDULE_LIST([Parameter("Partner_Name", "varchar", ParameterDirection.Input)] string @Partner_Name);
		[Procedure("USP_SSL_PARTNER_SCHEDULE_UPDATE_STATUS", "dbo")] public abstract void USP_SSL_PARTNER_SCHEDULE_UPDATE_STATUS([Parameter("certificateID", "numeric", ParameterDirection.Input)] decimal? @certificateID, [Parameter("status", "varchar", ParameterDirection.Input)] string @status, [Parameter("statusDesc", "varchar", ParameterDirection.Input)] string @statusDesc, [Parameter("expireDateTime", "varchar", ParameterDirection.Input)] string @expireDateTime);
		[Procedure("USP_SSL_REFUND_CANCELLED_CERTIFICATES", "dbo")] public abstract void USP_SSL_REFUND_CANCELLED_CERTIFICATES([Parameter("IPN_Certificate_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Certificate_ID, [Parameter("IPN_Return_Value", "int", ParameterDirection.InputOutput)] int? @IPN_Return_Value, [Parameter("IPB_Test_Only_YN", "bit", ParameterDirection.Input)] bool? @IPB_Test_Only_YN);
		[Procedure("USP_SSL_REPLACE_CERTIFICATE_DETAILS", "dbo")] public abstract void USP_SSL_REPLACE_CERTIFICATE_DETAILS([Parameter("certificateId", "int", ParameterDirection.Input)] int? @certificateId);
		[Procedure("USP_SSL_REPLACE_CERTIFICATE_PURCHASED_WITH_OFFER", "dbo")] public abstract void USP_SSL_REPLACE_CERTIFICATE_PURCHASED_WITH_OFFER([Parameter("certificateId", "int", ParameterDirection.Input)] int? @certificateId);
		[Procedure("USP_SSL_SCHEDULE_UPDATE_PURCHASE", "dbo")] public abstract void USP_SSL_SCHEDULE_UPDATE_PURCHASE([Parameter("POrderID", "numeric", ParameterDirection.Input)] decimal? @POrderID, [Parameter("sStatus", "varchar", ParameterDirection.Input)] string @sStatus, [Parameter("sStatusDesc", "varchar", ParameterDirection.Input)] string @sStatusDesc, [Parameter("Log_Details", "varchar", ParameterDirection.Input)] string @Log_Details, [Parameter("QuickInviteUrl", "varchar", ParameterDirection.Input)] string @QuickInviteUrl);
		[Procedure("USP_SSL_SCHEDULED_LIST", "dbo")] public abstract void USP_SSL_SCHEDULED_LIST([Parameter("sType", "varchar", ParameterDirection.Input)] string @sType);
		[Procedure("USP_SSL_SET_CERTIFICATE_ADMIN_DETAILS", "dbo")] public abstract void USP_SSL_SET_CERTIFICATE_ADMIN_DETAILS([Parameter("certificateId", "int", ParameterDirection.Input)] int? @certificateId, [Parameter("adminFirstName", "nvarchar", ParameterDirection.Input)] string @adminFirstName, [Parameter("adminLastName", "nvarchar", ParameterDirection.Input)] string @adminLastName, [Parameter("adminEmail", "nvarchar", ParameterDirection.Input)] string @adminEmail, [Parameter("jobTitle", "nvarchar", ParameterDirection.Input)] string @jobTitle, [Parameter("organization", "nvarchar", ParameterDirection.Input)] string @organization, [Parameter("streetAddress", "nvarchar", ParameterDirection.Input)] string @streetAddress, [Parameter("address2", "nvarchar", ParameterDirection.Input)] string @address2, [Parameter("city", "nvarchar", ParameterDirection.Input)] string @city, [Parameter("state", "nvarchar", ParameterDirection.Input)] string @state, [Parameter("stateProvince", "nvarchar", ParameterDirection.Input)] string @stateProvince, [Parameter("zip", "nvarchar", ParameterDirection.Input)] string @zip, [Parameter("country", "nvarchar", ParameterDirection.Input)] string @country, [Parameter("phone", "varchar", ParameterDirection.Input)] string @phone, [Parameter("fax", "varchar", ParameterDirection.Input)] string @fax, [Parameter("phoneExt", "varchar", ParameterDirection.Input)] string @phoneExt, [Parameter("faxExt", "varchar", ParameterDirection.Input)] string @faxExt, [Parameter("joiLocality", "nvarchar", ParameterDirection.Input)] string @joiLocality, [Parameter("joiStateOrProvince", "nvarchar", ParameterDirection.Input)] string @joiStateOrProvince, [Parameter("joiCountry", "nvarchar", ParameterDirection.Input)] string @joiCountry, [Parameter("dateOfIncorp", "date", ParameterDirection.Input)] DateTime? @dateOfIncorp, [Parameter("companyName", "nvarchar", ParameterDirection.Input)] string @companyName, [Parameter("companyNumber", "nvarchar", ParameterDirection.Input)] string @companyNumber, [Parameter("repFirstName", "nvarchar", ParameterDirection.Input)] string @repFirstName, [Parameter("repLastName", "nvarchar", ParameterDirection.Input)] string @repLastName, [Parameter("repEmailAddress", "nvarchar", ParameterDirection.Input)] string @repEmailAddress, [Parameter("repPhone", "varchar", ParameterDirection.Input)] string @repPhone, [Parameter("repFax", "varchar", ParameterDirection.Input)] string @repFax, [Parameter("repTitle", "nvarchar", ParameterDirection.Input)] string @repTitle, [Parameter("repCallbackMethod", "varchar", ParameterDirection.Input)] string @repCallbackMethod, [Parameter("repOrganisationName", "nvarchar", ParameterDirection.Input)] string @repOrganisationName, [Parameter("repOrganisationUnitName", "nvarchar", ParameterDirection.Input)] string @repOrganisationUnitName, [Parameter("repAddress1", "nvarchar", ParameterDirection.Input)] string @repAddress1, [Parameter("repAddress2", "nvarchar", ParameterDirection.Input)] string @repAddress2, [Parameter("repCity", "nvarchar", ParameterDirection.Input)] string @repCity, [Parameter("repStateProvince", "nvarchar", ParameterDirection.Input)] string @repStateProvince, [Parameter("repPostalCode", "nvarchar", ParameterDirection.Input)] string @repPostalCode, [Parameter("repCountry", "nvarchar", ParameterDirection.Input)] string @repCountry, [Parameter("repPostOfficeBox", "nvarchar", ParameterDirection.Input)] string @repPostOfficeBox, [Parameter("repCallbackDestinationSame", "nvarchar", ParameterDirection.Input)] string @repCallbackDestinationSame);
		[Procedure("USP_SSL_SET_CERTIFICATE_FOR_RESEND_APPROVEREMAIL", "dbo")] public abstract void USP_SSL_SET_CERTIFICATE_FOR_RESEND_APPROVEREMAIL([Parameter("certificateId", "int", ParameterDirection.Input)] int? @certificateId);
		[Procedure("USP_SSL_UPDATE_APPROVAL_EMAIL", "dbo")] public abstract void USP_SSL_UPDATE_APPROVAL_EMAIL([Parameter("CertificateID", "numeric", ParameterDirection.Input)] decimal? @CertificateID, [Parameter("Approver_Email", "nvarchar", ParameterDirection.Input)] string @Approver_Email);
		[Procedure("USP_SSL_UPDATE_APPROVER_EMAIL", "dbo")] public abstract void USP_SSL_UPDATE_APPROVER_EMAIL([Parameter("certificate_ID", "numeric", ParameterDirection.Input)] decimal? @certificate_ID, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("approverEmail", "varchar", ParameterDirection.Input)] string @approverEmail, [Parameter("ip", "varchar", ParameterDirection.Input)] string @ip, [Parameter("ignoredWarning", "bit", ParameterDirection.Input)] bool? @ignoredWarning);
		[Procedure("USP_SSL_UPDATE_CSR", "dbo")] public abstract void USP_SSL_UPDATE_CSR([Parameter("certificate_ID", "numeric", ParameterDirection.Input)] decimal? @certificate_ID, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("HostName", "varchar", ParameterDirection.Input)] string @HostName, [Parameter("csr", "text", ParameterDirection.Input)] string @csr, [Parameter("certWebServerType", "varchar", ParameterDirection.Input)] string @certWebServerType);
		[Procedure("USP_SSL_UPDATE_CSR_AND_APPROVEREMAIL", "dbo")] public abstract void USP_SSL_UPDATE_CSR_AND_APPROVEREMAIL([Parameter("certificate_ID", "numeric", ParameterDirection.Input)] decimal? @certificate_ID, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("HostName", "varchar", ParameterDirection.Input)] string @HostName, [Parameter("csr", "text", ParameterDirection.Input)] string @csr, [Parameter("certWebServerType", "varchar", ParameterDirection.Input)] string @certWebServerType, [Parameter("approverEmail", "varchar", ParameterDirection.Input)] string @approverEmail);
		[Procedure("USP_SSL_UPDATE_HTTP_FILE_STATUS", "dbo")] public abstract void USP_SSL_UPDATE_HTTP_FILE_STATUS([Parameter("certificateID", "numeric", ParameterDirection.Input)] decimal? @certificateID, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("HttpDCValidation", "bit", ParameterDirection.Input)] bool? @HttpDCValidation, [Parameter("File_Name", "nvarchar", ParameterDirection.Input)] string @File_Name, [Parameter("File_Content", "text", ParameterDirection.Input)] string @File_Content);
		[Procedure("USP_SSL_UPDATE_PARTNER_ID", "dbo")] public abstract void USP_SSL_UPDATE_PARTNER_ID([Parameter("certificateId", "numeric", ParameterDirection.Input)] decimal? @certificateId, [Parameter("partnerName", "varchar", ParameterDirection.Input)] string @partnerName);
		[Procedure("USP_SSL_UPDATE_PARTNER_ID_FOR_CERT", "dbo")] public abstract void USP_SSL_UPDATE_PARTNER_ID_FOR_CERT([Parameter("CertificateId", "numeric", ParameterDirection.Input)] decimal? @CertificateId);
		[Procedure("USP_SSL_UPDATE_PURCHASE_DETAILS", "dbo")] public abstract void USP_SSL_UPDATE_PURCHASE_DETAILS([Parameter("certificateID", "numeric", ParameterDirection.Input)] decimal? @certificateID, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("partnerItemOrderID", "numeric", ParameterDirection.Input)] decimal? @partnerItemOrderID, [Parameter("partnerOrderID", "numeric", ParameterDirection.Input)] decimal? @partnerOrderID, [Parameter("geotrustOrderID", "varchar", ParameterDirection.Input)] string @geotrustOrderID);
		[Procedure("USP_SSL_UPDATE_PURCHASE_STATUS", "dbo")] public abstract void USP_SSL_UPDATE_PURCHASE_STATUS([Parameter("certificateID", "int", ParameterDirection.Input)] int? @certificateID, [Parameter("status", "varchar", ParameterDirection.Input)] string @status, [Parameter("statusDesc", "varchar", ParameterDirection.Input)] string @statusDesc, [Parameter("partnerOrderID", "numeric", ParameterDirection.Input)] decimal? @partnerOrderID, [Parameter("partnerCertificateID", "numeric", ParameterDirection.Input)] decimal? @partnerCertificateID, [Parameter("issuerOrderID", "numeric", ParameterDirection.Input)] decimal? @issuerOrderID, [Parameter("completedDatetime", "datetime", ParameterDirection.Input)] DateTime? @completedDatetime);
		[Procedure("USP_SSL_UPDATE_REPLACE_STATUS", "dbo")] public abstract void USP_SSL_UPDATE_REPLACE_STATUS([Parameter("certificateID", "int", ParameterDirection.Input)] int? @certificateID, [Parameter("isReplaceSuccess", "bit", ParameterDirection.Input)] bool? @isReplaceSuccess, [Parameter("partnerOrderID", "numeric", ParameterDirection.Input)] decimal? @partnerOrderID, [Parameter("status", "varchar", ParameterDirection.Input)] string @status, [Parameter("statusDesc", "varchar", ParameterDirection.Input)] string @statusDesc, [Parameter("partnerCertificateID", "numeric", ParameterDirection.Input)] decimal? @partnerCertificateID, [Parameter("issuerOrderID", "numeric", ParameterDirection.Input)] decimal? @issuerOrderID, [Parameter("completedDatetime", "datetime", ParameterDirection.Input)] DateTime? @completedDatetime, [Parameter("expiredDatetime", "datetime", ParameterDirection.Input)] DateTime? @expiredDatetime);
		[Procedure("USP_SSL_UPDATE_STATUS", "dbo")] public abstract void USP_SSL_UPDATE_STATUS([Parameter("certificateID", "numeric", ParameterDirection.Input)] decimal? @certificateID, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("status", "varchar", ParameterDirection.Input)] string @status, [Parameter("statusDesc", "varchar", ParameterDirection.Input)] string @statusDesc, [Parameter("expiryDate", "datetime", ParameterDirection.Input)] DateTime? @expiryDate, [Parameter("issueDate", "datetime", ParameterDirection.Input)] DateTime? @issueDate, [Parameter("isUpdateExpiryDate", "bit", ParameterDirection.Input)] bool? @isUpdateExpiryDate, [Parameter("isUpdateIssueDate", "bit", ParameterDirection.Input)] bool? @isUpdateIssueDate);
		[Procedure("USP_SSL_UPDATE_STATUS_WITH_LOCK", "dbo")] public abstract void USP_SSL_UPDATE_STATUS_WITH_LOCK([Parameter("certificateID", "numeric", ParameterDirection.Input)] decimal? @certificateID, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("status", "varchar", ParameterDirection.Input)] string @status, [Parameter("statusDesc", "varchar", ParameterDirection.Input)] string @statusDesc);
		[Procedure("USP_SSL_UPGRADED_USING_FUNDS", "dbo")] public abstract void USP_SSL_UPGRADED_USING_FUNDS([Parameter("certificateId", "numeric", ParameterDirection.Input)] decimal? @certificateId, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("actionIp", "varchar", ParameterDirection.Input)] string @actionIp);
		[Procedure("USP_SSL_VALIDATE_CERTIFICATE", "dbo")] public abstract void USP_SSL_VALIDATE_CERTIFICATE([Parameter("certificateID", "int", ParameterDirection.Input)] int? @certificateID, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("USP_SSL_VALIDATE_INITIALIZE", "dbo")] public abstract void USP_SSL_VALIDATE_INITIALIZE([Parameter("certificateID", "numeric", ParameterDirection.Input)] decimal? @certificateID, [Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("usp_SSLCertificateGetActivationDate", "dbo")] public abstract void usp_SSLCertificateGetActivationDate([Parameter("CertificateId", "varchar", ParameterDirection.Input)] string @CertificateId);
		[Procedure("usp_SslCertificateGetNotes", "dbo")] public abstract void usp_SslCertificateGetNotes([Parameter("CertificateId", "varchar", ParameterDirection.Input)] string @CertificateId);
		[Procedure("usp_SSLCertificateSaveActivationDate", "dbo")] public abstract void usp_SSLCertificateSaveActivationDate([Parameter("CertificateId", "varchar", ParameterDirection.Input)] string @CertificateId, [Parameter("ActivationDate", "datetime", ParameterDirection.Input)] DateTime? @ActivationDate);
		[Procedure("usp_SslCertificateSaveNotes", "dbo")] public abstract void usp_SslCertificateSaveNotes([Parameter("CertificateId", "varchar", ParameterDirection.Input)] string @CertificateId, [Parameter("Notes", "varchar", ParameterDirection.Input)] string @Notes);
		[Procedure("USP_STORE_WG_FROM_MULTIPLE", "dbo")] public abstract void USP_STORE_WG_FROM_MULTIPLE([Parameter("sDomainName", "nvarchar", ParameterDirection.Input)] string @sDomainName, [Parameter("sBatchID", "nvarchar", ParameterDirection.Input)] string @sBatchID, [Parameter("sWGStatus", "varchar", ParameterDirection.Input)] string @sWGStatus);
		[Procedure("USP_TRANSACTION_FOR_ADDFUNDS", "dbo")] public abstract void USP_TRANSACTION_FOR_ADDFUNDS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("transactionType", "nvarchar", ParameterDirection.Input)] string @transactionType, [Parameter("associatedOrderId", "numeric", ParameterDirection.Input)] decimal? @associatedOrderId, [Parameter("paymentSource", "nvarchar", ParameterDirection.Input)] string @paymentSource, [Parameter("ccInitialAmount", "money", ParameterDirection.Input)] decimal? @ccInitialAmount, [Parameter("orderRefId", "nvarchar", ParameterDirection.Input)] string @orderRefId, [Parameter("ccLast4", "nvarchar", ParameterDirection.Input)] string @ccLast4, [Parameter("ccNameOnCard", "nvarchar", ParameterDirection.Input)] string @ccNameOnCard, [Parameter("orderZip", "nvarchar", ParameterDirection.Input)] string @orderZip, [Parameter("orderIp", "nvarchar", ParameterDirection.Input)] string @orderIp, [Parameter("requestForm", "nvarchar", ParameterDirection.Input)] string @requestForm, [Parameter("errNumber", "int", ParameterDirection.Input)] int? @errNumber, [Parameter("errDesc", "varchar", ParameterDirection.Input)] string @errDesc);
		[Procedure("USP_TRANSFER_LOG_RESUBMIT_LOCKED_STATUS", "dbo")] public abstract void USP_TRANSFER_LOG_RESUBMIT_LOCKED_STATUS([Parameter("transferID", "int", ParameterDirection.Input)] int? @transferID, [Parameter("status", "nvarchar", ParameterDirection.Input)] string @status);
		[Procedure("USP_TRANSFER_REFRESH_STATUS", "dbo")] public abstract void USP_TRANSFER_REFRESH_STATUS([Parameter("transferId", "bigint", ParameterDirection.Input)] long? @transferId, [Parameter("enomStatusId", "nvarchar", ParameterDirection.Input)] string @enomStatusId, [Parameter("enomStatusDesc", "nvarchar", ParameterDirection.Input)] string @enomStatusDesc, [Parameter("trasnferOrderDetailId", "nvarchar", ParameterDirection.Input)] string @trasnferOrderDetailId, [Parameter("isAutoRefresh", "bit", ParameterDirection.Input)] bool? @isAutoRefresh);
		[Procedure("USP_TRANSFER_RESUBMIT", "dbo")] public abstract void USP_TRANSFER_RESUBMIT([Parameter("transferId", "int", ParameterDirection.Input)] int? @transferId, [Parameter("orderDate", "datetime", ParameterDirection.Input)] DateTime? @orderDate, [Parameter("transferOrderId", "nvarchar", ParameterDirection.Input)] string @transferOrderId, [Parameter("transferOrderDetailId", "nvarchar", ParameterDirection.Input)] string @transferOrderDetailId, [Parameter("statusId", "nvarchar", ParameterDirection.Input)] string @statusId, [Parameter("statusDesc", "nvarchar", ParameterDirection.Input)] string @statusDesc, [Parameter("requestIp", "varchar", ParameterDirection.Input)] string @requestIp);
		[Procedure("usp_TransferUserFunds", "dbo")] public abstract void usp_TransferUserFunds([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Amount", "money", ParameterDirection.Input)] decimal? @Amount, [Parameter("DestUserName", "nvarchar", ParameterDirection.Input)] string @DestUserName, [Parameter("Comments", "nvarchar", ParameterDirection.Input)] string @Comments);
		[Procedure("usp_TryResellerUpgrade", "dbo")] public abstract void usp_TryResellerUpgrade([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("type", "varchar", ParameterDirection.Input)] string @type, [Parameter("doSignUp", "bit", ParameterDirection.Input)] bool? @doSignUp);
		[Procedure("USP_TWITTER_ADD_EDIT_QUESTION", "dbo")] public abstract void USP_TWITTER_ADD_EDIT_QUESTION([Parameter("AutoId", "int", ParameterDirection.Input)] int? @AutoId, [Parameter("QuestionStatusId", "bigint", ParameterDirection.Input)] long? @QuestionStatusId, [Parameter("Question", "nvarchar", ParameterDirection.Input)] string @Question, [Parameter("Answer", "nvarchar", ParameterDirection.Input)] string @Answer, [Parameter("Keyword1", "nvarchar", ParameterDirection.Input)] string @Keyword1, [Parameter("Keyword2", "nvarchar", ParameterDirection.Input)] string @Keyword2, [Parameter("Keyword3", "nvarchar", ParameterDirection.Input)] string @Keyword3, [Parameter("Keyword4", "nvarchar", ParameterDirection.Input)] string @Keyword4, [Parameter("Keyword5", "nvarchar", ParameterDirection.Input)] string @Keyword5, [Parameter("Date", "datetime", ParameterDirection.Input)] DateTime? @Date, [Parameter("Time", "int", ParameterDirection.Input)] int? @Time, [Parameter("Mode", "nvarchar", ParameterDirection.Input)] string @Mode, [Parameter("DoNotUpdateAnswer", "bit", ParameterDirection.Input)] bool? @DoNotUpdateAnswer, [Parameter("ActualLiveDate", "datetime", ParameterDirection.Input)] DateTime? @ActualLiveDate);
		[Procedure("USP_TWITTER_ADD_REPLIES_AND_USERS", "dbo")] public abstract void USP_TWITTER_ADD_REPLIES_AND_USERS([Parameter("replyStatusId", "bigint", ParameterDirection.Input)] long? @replyStatusId, [Parameter("inReplyStatusId", "bigint", ParameterDirection.Input)] long? @inReplyStatusId, [Parameter("twitterUserId", "int", ParameterDirection.Input)] int? @twitterUserId, [Parameter("text", "nvarchar", ParameterDirection.Input)] string @text, [Parameter("name", "nvarchar", ParameterDirection.Input)] string @name, [Parameter("screenName", "nvarchar", ParameterDirection.Input)] string @screenName, [Parameter("profileImageUrl", "varchar", ParameterDirection.Input)] string @profileImageUrl, [Parameter("replyTime", "datetime", ParameterDirection.Input)] DateTime? @replyTime, [Parameter("contestID", "int", ParameterDirection.Input)] int? @contestID, [Parameter("source", "nvarchar", ParameterDirection.Input)] string @source);
		[Procedure("USP_TWITTER_CHECK_PREVIOUS_QUESTION_WINNERS", "dbo")] public abstract void USP_TWITTER_CHECK_PREVIOUS_QUESTION_WINNERS([Parameter("questionId", "bigint", ParameterDirection.Input)] long? @questionId);
		[Procedure("USP_TWITTER_CREDIT_WINNER", "dbo")] public abstract void USP_TWITTER_CREDIT_WINNER([Parameter("winnerAutoId", "int", ParameterDirection.Input)] int? @winnerAutoId);
		[Procedure("USP_TWITTER_FIX_GET_REPLIES_CONFIG", "dbo")] public abstract void USP_TWITTER_FIX_GET_REPLIES_CONFIG([Parameter("questionAutoID", "int", ParameterDirection.Input)] int? @questionAutoID);
		[Procedure("USP_TWITTER_GET_QA_FOR_WINNERS_PAGE", "dbo")] public abstract void USP_TWITTER_GET_QA_FOR_WINNERS_PAGE([Parameter("QuestionDate", "datetime", ParameterDirection.Input)] DateTime? @QuestionDate, [Parameter("TwitterLinkTemplate", "varchar", ParameterDirection.Input)] string @TwitterLinkTemplate, [Parameter("TwitterLinkTemplateUser", "varchar", ParameterDirection.Input)] string @TwitterLinkTemplateUser, [Parameter("ContestID", "int", ParameterDirection.Input)] int? @ContestID);
		[Procedure("USP_TWITTER_GET_QA_FOR_WINNERS_PAGE_JUN2009", "dbo")] public abstract void USP_TWITTER_GET_QA_FOR_WINNERS_PAGE_JUN2009([Parameter("QuestionDate", "datetime", ParameterDirection.Input)] DateTime? @QuestionDate, [Parameter("TwitterLinkTemplate", "varchar", ParameterDirection.Input)] string @TwitterLinkTemplate, [Parameter("TwitterLinkTemplateUser", "varchar", ParameterDirection.Input)] string @TwitterLinkTemplateUser);
		[Procedure("USP_TWITTER_GET_QUESTION_DETAILS", "dbo")] public abstract void USP_TWITTER_GET_QUESTION_DETAILS([Parameter("questionAutoId", "int", ParameterDirection.Input)] int? @questionAutoId);
		[Procedure("USP_TWITTER_GET_REPLY_CONFIG", "dbo")] public abstract void USP_TWITTER_GET_REPLY_CONFIG();
		[Procedure("USP_TWITTER_GET_UNPROCESSED_LIST", "dbo")] public abstract void USP_TWITTER_GET_UNPROCESSED_LIST();
		[Procedure("USP_TWITTER_MARK_CORRECT_OR_INCORRECT", "dbo")] public abstract void USP_TWITTER_MARK_CORRECT_OR_INCORRECT([Parameter("setChoice", "bit", ParameterDirection.Input)] bool? @setChoice, [Parameter("questionId", "bigint", ParameterDirection.Input)] long? @questionId, [Parameter("replyStatusIds", "varchar", ParameterDirection.Input)] string @replyStatusIds);
		[Procedure("USP_TWITTER_PICK_WINNERS", "dbo")] public abstract void USP_TWITTER_PICK_WINNERS([Parameter("questionId", "bigint", ParameterDirection.Input)] long? @questionId, [Parameter("pickPendingWinners", "bit", ParameterDirection.Input)] bool? @pickPendingWinners, [Parameter("repickAllWinners", "bit", ParameterDirection.Input)] bool? @repickAllWinners);
		[Procedure("USP_TWITTER_PICK_WINNERS_TO_CONFIRM", "dbo")] public abstract void USP_TWITTER_PICK_WINNERS_TO_CONFIRM([Parameter("questionId", "bigint", ParameterDirection.Input)] long? @questionId);
		[Procedure("USP_TWITTER_PROCESS_REPLY", "dbo")] public abstract void USP_TWITTER_PROCESS_REPLY([Parameter("replyStatusID", "bigint", ParameterDirection.Input)] long? @replyStatusID);
		[Procedure("USP_TWITTER_QUESTION_LIST", "dbo")] public abstract void USP_TWITTER_QUESTION_LIST([Parameter("CurrentOrAll", "bit", ParameterDirection.Input)] bool? @CurrentOrAll, [Parameter("SearchTerm", "varchar", ParameterDirection.Input)] string @SearchTerm, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Order", "varchar", ParameterDirection.Input)] string @Order, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("filterByQuestionId", "bit", ParameterDirection.Input)] bool? @filterByQuestionId);
		[Procedure("USP_TWITTER_REPICK_WINNERS_BY_IGNORING_OLD_WINNERS", "dbo")] public abstract void USP_TWITTER_REPICK_WINNERS_BY_IGNORING_OLD_WINNERS([Parameter("questionId", "bigint", ParameterDirection.Input)] long? @questionId);
		[Procedure("USP_TWITTER_TOP_SCORERS", "dbo")] public abstract void USP_TWITTER_TOP_SCORERS([Parameter("contestID", "int", ParameterDirection.Input)] int? @contestID);
		[Procedure("USP_TWITTER_TOP_SCORERS_JUN2009", "dbo")] public abstract void USP_TWITTER_TOP_SCORERS_JUN2009();
		[Procedure("USP_TWITTER_UPDATE_QUESTION_ID", "dbo")] public abstract void USP_TWITTER_UPDATE_QUESTION_ID([Parameter("inReplyStatusId", "bigint", ParameterDirection.Input)] long? @inReplyStatusId, [Parameter("replyStatusId", "bigint", ParameterDirection.Input)] long? @replyStatusId);
		[Procedure("USP_TWITTER_USER_BAN_OR_UNBANNED", "dbo")] public abstract void USP_TWITTER_USER_BAN_OR_UNBANNED([Parameter("twitterUserId", "int", ParameterDirection.Input)] int? @twitterUserId, [Parameter("logType", "bit", ParameterDirection.Input)] bool? @logType, [Parameter("description", "varchar", ParameterDirection.Input)] string @description, [Parameter("logBy", "varchar", ParameterDirection.Input)] string @logBy, [Parameter("loggedByIp", "varchar", ParameterDirection.Input)] string @loggedByIp);
		[Procedure("USP_TWITTER_USER_UNLINK", "dbo")] public abstract void USP_TWITTER_USER_UNLINK([Parameter("twitterUserId", "int", ParameterDirection.Input)] int? @twitterUserId, [Parameter("description", "varchar", ParameterDirection.Input)] string @description, [Parameter("logBy", "varchar", ParameterDirection.Input)] string @logBy, [Parameter("namecheapUserName", "varchar", ParameterDirection.Input)] string @namecheapUserName);
		[Procedure("USP_UNALLOT_WHOISGUARD", "dbo")] public abstract void USP_UNALLOT_WHOISGUARD([Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName);
		[Procedure("USP_UPDATE_ATTRIBUTE_GROUP_SEQ_NO", "dbo")] public abstract void USP_UPDATE_ATTRIBUTE_GROUP_SEQ_NO([Parameter("attributeOrGroup", "varchar", ParameterDirection.Input)] string @attributeOrGroup, [Parameter("data", "varchar", ParameterDirection.Input)] string @data);
		[Procedure("USP_UPDATE_AUTO_RENEW_STATUS", "dbo")] public abstract void USP_UPDATE_AUTO_RENEW_STATUS([Parameter("IPV_DomainName", "nvarchar", ParameterDirection.Input)] string @IPV_DomainName, [Parameter("IPV_DomainRenew", "int", ParameterDirection.Input)] int? @IPV_DomainRenew, [Parameter("IPV_WGRenew", "int", ParameterDirection.Input)] int? @IPV_WGRenew, [Parameter("IPV_POP3Renew", "int", ParameterDirection.Input)] int? @IPV_POP3Renew);
		[Procedure("USP_UPDATE_CART_PRICING_ON_LOGIN", "dbo")] public abstract void USP_UPDATE_CART_PRICING_ON_LOGIN([Parameter("IPV_Reg_ID", "varchar", ParameterDirection.Input)] string @IPV_Reg_ID, [Parameter("IPV_User_Name", "varchar", ParameterDirection.Input)] string @IPV_User_Name, [Parameter("IPV_Promotion_Code", "varchar", ParameterDirection.Input)] string @IPV_Promotion_Code);
		[Procedure("USP_UPDATE_FUNDS_REQUEST_STATUS_AND_TRANSACTION_ENTRY", "dbo")] public abstract void USP_UPDATE_FUNDS_REQUEST_STATUS_AND_TRANSACTION_ENTRY([Parameter("tokenId", "varchar", ParameterDirection.Input)] string @tokenId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("status", "varchar", ParameterDirection.Input)] string @status, [Parameter("actualAmount", "money", ParameterDirection.Input)] decimal? @actualAmount, [Parameter("lastUpdatedDateTime", "datetime", ParameterDirection.Input)] DateTime? @lastUpdatedDateTime, [Parameter("submittedIp", "varchar", ParameterDirection.Input)] string @submittedIp, [Parameter("TransactionType", "nvarchar", ParameterDirection.Input)] string @TransactionType, [Parameter("associateOrderId", "int", ParameterDirection.Input)] int? @associateOrderId, [Parameter("paymentsource", "nvarchar", ParameterDirection.Input)] string @paymentsource, [Parameter("cc_intial_amount", "money", ParameterDirection.Input)] decimal? @cc_intial_amount, [Parameter("order_ref_Id", "nvarchar", ParameterDirection.Input)] string @order_ref_Id, [Parameter("start_date_time", "datetime", ParameterDirection.Input)] DateTime? @start_date_time, [Parameter("cc_last4", "nvarchar", ParameterDirection.Input)] string @cc_last4, [Parameter("cc_name_on_card", "nvarchar", ParameterDirection.Input)] string @cc_name_on_card, [Parameter("order_zip", "nvarchar", ParameterDirection.Input)] string @order_zip, [Parameter("order_Ip", "nvarchar", ParameterDirection.Input)] string @order_Ip);
		[Procedure("USP_UPDATE_HOSTING_PROVIDER_DETAILS", "dbo")] public abstract void USP_UPDATE_HOSTING_PROVIDER_DETAILS([Parameter("ModernbillId", "nvarchar", ParameterDirection.Input)] string @ModernbillId, [Parameter("UbersmithId", "nvarchar", ParameterDirection.Input)] string @UbersmithId, [Parameter("newProvider", "varchar", ParameterDirection.Input)] string @newProvider);
		[Procedure("USP_UPDATE_LOG_ACTIONSTATUS", "dbo")] public abstract void USP_UPDATE_LOG_ACTIONSTATUS([Parameter("orderId", "int", ParameterDirection.Input)] int? @orderId, [Parameter("refId", "nvarchar", ParameterDirection.Input)] string @refId, [Parameter("sld", "nvarchar", ParameterDirection.Input)] string @sld, [Parameter("tld", "nvarchar", ParameterDirection.Input)] string @tld, [Parameter("actionId", "nvarchar", ParameterDirection.Input)] string @actionId, [Parameter("actionSuccess", "bit", ParameterDirection.Input)] bool? @actionSuccess, [Parameter("errNumber", "varchar", ParameterDirection.Input)] string @errNumber, [Parameter("errDesc", "varchar", ParameterDirection.Input)] string @errDesc, [Parameter("enomRawData", "text", ParameterDirection.Input)] string @enomRawData, [Parameter("logErrorNumber", "varchar", ParameterDirection.Input)] string @logErrorNumber, [Parameter("logErrDesc", "text", ParameterDirection.Input)] string @logErrDesc);
		[Procedure("USP_UPDATE_LOG_SECURITY", "dbo")] public abstract void USP_UPDATE_LOG_SECURITY([Parameter("auto_ids", "varchar", ParameterDirection.Input)] string @auto_ids, [Parameter("delemiter", "char", ParameterDirection.Input)] string @delemiter);
		[Procedure("USP_UPDATE_SSL_RENEWALMAIL_UNSUBSCRIBE_FLAG", "dbo")] public abstract void USP_UPDATE_SSL_RENEWALMAIL_UNSUBSCRIBE_FLAG([Parameter("certificateId", "int", ParameterDirection.Input)] int? @certificateId);
		[Procedure("USP_UPDATE_TRANSACTION_STATUS_AND_ADD_FUNDS", "dbo")] public abstract void USP_UPDATE_TRANSACTION_STATUS_AND_ADD_FUNDS([Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId, [Parameter("ccOrderId", "nvarchar", ParameterDirection.Input)] string @ccOrderId, [Parameter("ccTransId", "nvarchar", ParameterDirection.Input)] string @ccTransId, [Parameter("ccStatus", "nvarchar", ParameterDirection.Input)] string @ccStatus, [Parameter("orderError", "nvarchar", ParameterDirection.Input)] string @orderError, [Parameter("rawData", "text", ParameterDirection.Input)] string @rawData, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("ProcessAmount", "money", ParameterDirection.Input)] decimal? @ProcessAmount, [Parameter("Transaction_Type", "varchar", ParameterDirection.Input)] string @Transaction_Type);
		[Procedure("USP_UPDATE_TRANSACTION_STATUS_AND_PROCESS_FUNDS", "dbo")] public abstract void USP_UPDATE_TRANSACTION_STATUS_AND_PROCESS_FUNDS([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Transaction_ID", "numeric", ParameterDirection.Input)] decimal? @Transaction_ID, [Parameter("CC_Status", "varchar", ParameterDirection.Input)] string @CC_Status, [Parameter("Completed_YN", "bit", ParameterDirection.Input)] bool? @Completed_YN, [Parameter("EndDate", "datetime", ParameterDirection.Input)] DateTime? @EndDate, [Parameter("FundTransactionType", "varchar", ParameterDirection.Input)] string @FundTransactionType, [Parameter("ProcessAmount", "money", ParameterDirection.Input)] decimal? @ProcessAmount);
		[Procedure("USP_UPDATE_TRANSFER_QUEUE_WITH_PROMOTION_DETAILS", "dbo")] public abstract void USP_UPDATE_TRANSFER_QUEUE_WITH_PROMOTION_DETAILS([Parameter("TransferID", "numeric", ParameterDirection.Input)] decimal? @TransferID, [Parameter("parentOrderItemId", "numeric", ParameterDirection.Input)] decimal? @parentOrderItemId, [Parameter("orderItemId", "numeric", ParameterDirection.Input)] decimal? @orderItemId);
		[Procedure("USP_UPDATE_USER_LOGIN", "dbo")] public abstract void USP_UPDATE_USER_LOGIN([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("newSessionId", "varchar", ParameterDirection.Input)] string @newSessionId, [Parameter("oldSessionId", "varchar", ParameterDirection.Input)] string @oldSessionId);
		[Procedure("USP_UPDATE_UserSettings", "dbo")] public abstract void USP_UPDATE_UserSettings([Parameter("timeZoneId", "uniqueidentifier", ParameterDirection.Input)] Guid? @timeZoneId, [Parameter("email", "varchar", ParameterDirection.Input)] string @email, [Parameter("phone", "varchar", ParameterDirection.Input)] string @phone, [Parameter("userName", "varchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_UPDATE_WG_EMAIL_QUEUE", "dbo")] public abstract void USP_UPDATE_WG_EMAIL_QUEUE([Parameter("EmailQueueID", "numeric", ParameterDirection.Input)] decimal? @EmailQueueID);
		[Procedure("usp_UpdateAndAddToCanceledPaymentQueue", "dbo")] public abstract void usp_UpdateAndAddToCanceledPaymentQueue([Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId, [Parameter("currentStatus", "varchar", ParameterDirection.Input)] string @currentStatus, [Parameter("newStatus", "varchar", ParameterDirection.Input)] string @newStatus);
		[Procedure("usp_UpdateCancelRefundFlag", "dbo")] public abstract void usp_UpdateCancelRefundFlag([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId, [Parameter("cancelByRefundYN", "bit", ParameterDirection.Input)] bool? @cancelByRefundYN, [Parameter("ccStatus", "varchar", ParameterDirection.Input)] string @ccStatus);
		[Procedure("usp_UpdateCardAutoRenewForUser", "dbo")] public abstract void usp_UpdateCardAutoRenewForUser([Parameter("creditCardId", "uniqueidentifier", ParameterDirection.Input)] Guid? @creditCardId, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("isAutoRenew", "bit", ParameterDirection.Input)] bool? @isAutoRenew);
		[Procedure("usp_UpdateCCTransactionDetails", "dbo")] public abstract void usp_UpdateCCTransactionDetails([Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId, [Parameter("completedYN", "bit", ParameterDirection.Input)] bool? @completedYN, [Parameter("ccStatus", "nvarchar", ParameterDirection.Input)] string @ccStatus, [Parameter("ccLast4", "nvarchar", ParameterDirection.Input)] string @ccLast4, [Parameter("ccNameOnCard", "nvarchar", ParameterDirection.Input)] string @ccNameOnCard, [Parameter("ccOrderId", "nvarchar", ParameterDirection.Input)] string @ccOrderId, [Parameter("ccTransId", "nvarchar", ParameterDirection.Input)] string @ccTransId, [Parameter("errInfo", "varchar", ParameterDirection.Input)] string @errInfo, [Parameter("orderError", "nvarchar", ParameterDirection.Input)] string @orderError, [Parameter("paymentProviderStatus", "varchar", ParameterDirection.Input)] string @paymentProviderStatus, [Parameter("rawData", "text", ParameterDirection.Input)] string @rawData, [Parameter("ccFirst4", "nvarchar", ParameterDirection.Input)] string @ccFirst4);
		[Procedure("usp_UpdateConfigUserCountForFreeHosting", "dbo")] public abstract void usp_UpdateConfigUserCountForFreeHosting([Parameter("UserCount", "bigint", ParameterDirection.Input)] long? @UserCount);
		[Procedure("usp_UpdateOrderDetailsWithParentOrderItemId", "dbo")] public abstract void usp_UpdateOrderDetailsWithParentOrderItemId([Parameter("shoppingCartProcessId", "bigint", ParameterDirection.Input)] long? @shoppingCartProcessId, [Parameter("orderId", "numeric", ParameterDirection.Input)] decimal? @orderId);
		[Procedure("usp_UpdateOrderEmailOneTimeSentFlag", "dbo")] public abstract void usp_UpdateOrderEmailOneTimeSentFlag([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_UpdateOrderIdsForTldPromotionCheck", "dbo")] public abstract void usp_UpdateOrderIdsForTldPromotionCheck([Parameter("orderId", "numeric", ParameterDirection.Input)] decimal? @orderId);
		[Procedure("usp_UpdateOrderItemsActionStatus", "dbo")] public abstract void usp_UpdateOrderItemsActionStatus([Parameter("OrderXml", "xml", ParameterDirection.Input)] string @OrderXml, [Parameter("OrderRefID", "nvarchar", ParameterDirection.Input)] string @OrderRefID);
		[Procedure("usp_UpdatePaypalPendingTrack", "dbo")] public abstract void usp_UpdatePaypalPendingTrack([Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId, [Parameter("paymentStatus", "varchar", ParameterDirection.Input)] string @paymentStatus, [Parameter("refundedYN", "bit", ParameterDirection.Input)] bool? @refundedYN, [Parameter("refundedTransID", "varchar", ParameterDirection.Input)] string @refundedTransID);
		[Procedure("usp_UpdatePaypalTransactionDetails", "dbo")] public abstract void usp_UpdatePaypalTransactionDetails([Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId, [Parameter("completedYN", "bit", ParameterDirection.Input)] bool? @completedYN, [Parameter("ccStatus", "nvarchar", ParameterDirection.Input)] string @ccStatus, [Parameter("ccTransId", "nvarchar", ParameterDirection.Input)] string @ccTransId, [Parameter("payerEmail", "nvarchar", ParameterDirection.Input)] string @payerEmail, [Parameter("ccInitialAmount", "money", ParameterDirection.Input)] decimal? @ccInitialAmount, [Parameter("errInfo", "varchar", ParameterDirection.Input)] string @errInfo, [Parameter("orderError", "nvarchar", ParameterDirection.Input)] string @orderError, [Parameter("paymentProviderStatus", "varchar", ParameterDirection.Input)] string @paymentProviderStatus, [Parameter("paypalPendingReason", "nvarchar", ParameterDirection.Input)] string @paypalPendingReason);
		[Procedure("usp_UpdateRawDataOnFraudCheck", "dbo")] public abstract void usp_UpdateRawDataOnFraudCheck([Parameter("rawData", "text", ParameterDirection.Input)] string @rawData, [Parameter("providerToken", "varchar", ParameterDirection.Input)] string @providerToken, [Parameter("fromAdminFlag", "bit", ParameterDirection.Input)] bool? @fromAdminFlag);
		[Procedure("usp_UpdateResellerUpgradationSentMailFlag", "dbo")] public abstract void usp_UpdateResellerUpgradationSentMailFlag([Parameter("autoId", "bigint", ParameterDirection.Input)] long? @autoId);
		[Procedure("usp_UpdateServiceProviderRRDetails", "dbo")] public abstract void usp_UpdateServiceProviderRRDetails([Parameter("providerId", "int", ParameterDirection.Input)] int? @providerId, [Parameter("providerrrId", "int", ParameterDirection.Input)] int? @providerrrId, [Parameter("host", "varchar", ParameterDirection.Input)] string @host, [Parameter("recordType", "varchar", ParameterDirection.Input)] string @recordType, [Parameter("data", "varchar", ParameterDirection.Input)] string @data, [Parameter("priority", "int", ParameterDirection.Input)] int? @priority, [Parameter("serverDescription", "varchar", ParameterDirection.Input)] string @serverDescription, [Parameter("isActive", "bit", ParameterDirection.Input)] bool? @isActive);
		[Procedure("usp_UpdateTransactionStatus", "dbo")] public abstract void usp_UpdateTransactionStatus([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("transactionId", "numeric", ParameterDirection.Input)] decimal? @transactionId, [Parameter("ccstatus", "nvarchar", ParameterDirection.Input)] string @ccstatus, [Parameter("paymentProviderStatus", "varchar", ParameterDirection.Input)] string @paymentProviderStatus);
		[Procedure("usp_UpdateUserExpireDomainDetails", "dbo")] public abstract void usp_UpdateUserExpireDomainDetails([Parameter("DomainStatusAutoId", "int", ParameterDirection.Input)] int? @DomainStatusAutoId, [Parameter("DomainName", "varchar", ParameterDirection.Input)] string @DomainName, [Parameter("RegistryOldExpireDateTime", "datetime", ParameterDirection.Input)] DateTime? @RegistryOldExpireDateTime, [Parameter("RegistryNewExpireDateTime", "datetime", ParameterDirection.Input)] DateTime? @RegistryNewExpireDateTime, [Parameter("AdminUserName", "varchar", ParameterDirection.Input)] string @AdminUserName, [Parameter("AdminIp", "varchar", ParameterDirection.Input)] string @AdminIp, [Parameter("InternalComments", "varchar", ParameterDirection.Input)] string @InternalComments, [Parameter("UserRenewalFlag", "bit", ParameterDirection.Input)] bool? @UserRenewalFlag, [Parameter("InternalRenewalFlag", "bit", ParameterDirection.Input)] bool? @InternalRenewalFlag, [Parameter("InternalActionType", "varchar", ParameterDirection.Input)] string @InternalActionType, [Parameter("EnomOrderId", "bigint", ParameterDirection.Input)] long? @EnomOrderId, [Parameter("LogInfo", "varchar", ParameterDirection.Input)] string @LogInfo);
		[Procedure("usp_UpdateUserExpireDomainLog", "dbo")] public abstract void usp_UpdateUserExpireDomainLog([Parameter("DomainStatusAutoId", "int", ParameterDirection.Input)] int? @DomainStatusAutoId, [Parameter("LogInfo", "varchar", ParameterDirection.Input)] string @LogInfo);
		[Procedure("usp_UpdateUserLogin", "dbo")] public abstract void usp_UpdateUserLogin([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("oldSessionId", "varchar", ParameterDirection.Input)] string @oldSessionId, [Parameter("newSessionId", "varchar", ParameterDirection.Input)] string @newSessionId);
		[Procedure("usp_UpdateUserSupportPinDetails", "dbo")] public abstract void usp_UpdateUserSupportPinDetails([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("supportPin", "varchar", ParameterDirection.Input)] string @supportPin, [Parameter("adminUserName", "nvarchar", ParameterDirection.Input)] string @adminUserName, [Parameter("type", "varchar", ParameterDirection.Input)] string @type, [Parameter("Ip", "varchar", ParameterDirection.Input)] string @Ip, [Parameter("comment", "varchar", ParameterDirection.Input)] string @comment);
		[Procedure("USP_UpdateUserSupportVerificationStatus", "dbo")] public abstract void USP_UpdateUserSupportVerificationStatus([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username, [Parameter("supportPin", "varchar", ParameterDirection.Input)] string @supportPin, [Parameter("clientIp", "varchar", ParameterDirection.Input)] string @clientIp);
		[Procedure("USP_USER_ADD_REMOVE_FUNDS", "dbo")] public abstract void USP_USER_ADD_REMOVE_FUNDS([Parameter("IPB_Validate_Only_YN", "bit", ParameterDirection.Input)] bool? @IPB_Validate_Only_YN, [Parameter("IPV_User_Name", "varchar", ParameterDirection.Input)] string @IPV_User_Name, [Parameter("IPD_Amount", "money", ParameterDirection.Input)] decimal? @IPD_Amount, [Parameter("IPV_Transaction_Type", "varchar", ParameterDirection.Input)] string @IPV_Transaction_Type, [Parameter("IPV_Payment_Source", "varchar", ParameterDirection.Input)] string @IPV_Payment_Source, [Parameter("IPN_Associated_Order_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Associated_Order_ID, [Parameter("IPV_Payer_EMail", "varchar", ParameterDirection.Input)] string @IPV_Payer_EMail, [Parameter("IPV_Order_RefID", "varchar", ParameterDirection.Input)] string @IPV_Order_RefID, [Parameter("IPV_CC_Order_ID", "varchar", ParameterDirection.Input)] string @IPV_CC_Order_ID, [Parameter("IPV_Comments", "varchar", ParameterDirection.Input)] string @IPV_Comments, [Parameter("IPV_CC_Trans_ID", "varchar", ParameterDirection.Input)] string @IPV_CC_Trans_ID);
		[Procedure("USP_USER_ADD_REMOVE_FUNDS2", "dbo")] public abstract void USP_USER_ADD_REMOVE_FUNDS2([Parameter("IPB_Validate_Only_YN", "bit", ParameterDirection.Input)] bool? @IPB_Validate_Only_YN, [Parameter("IPV_User_Name", "varchar", ParameterDirection.Input)] string @IPV_User_Name, [Parameter("IPD_Amount", "money", ParameterDirection.Input)] decimal? @IPD_Amount, [Parameter("IPV_Transaction_Type", "varchar", ParameterDirection.Input)] string @IPV_Transaction_Type, [Parameter("IPV_Payment_Source", "varchar", ParameterDirection.Input)] string @IPV_Payment_Source, [Parameter("IPN_Associated_Order_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Associated_Order_ID, [Parameter("IPV_Payer_EMail", "varchar", ParameterDirection.Input)] string @IPV_Payer_EMail, [Parameter("IPV_Order_RefID", "nvarchar", ParameterDirection.Input)] string @IPV_Order_RefID, [Parameter("IPV_CC_Order_ID", "varchar", ParameterDirection.Input)] string @IPV_CC_Order_ID, [Parameter("IPV_Comments", "varchar", ParameterDirection.Input)] string @IPV_Comments, [Parameter("IPV_CC_Trans_ID", "varchar", ParameterDirection.Input)] string @IPV_CC_Trans_ID, [Parameter("IPN_TransactionID", "int", ParameterDirection.Input)] int? @IPN_TransactionID, [Parameter("IPN_RelatedTransaction_ID", "int", ParameterDirection.Input)] int? @IPN_RelatedTransaction_ID, [Parameter("IPB_ReturnRecordSet", "bit", ParameterDirection.Input)] bool? @IPB_ReturnRecordSet, [Parameter("LD_Error", "decimal", ParameterDirection.InputOutput)] decimal? @LD_Error, [Parameter("ReturnStatus", "varchar", ParameterDirection.InputOutput)] string @ReturnStatus, [Parameter("ReturnDescription", "varchar", ParameterDirection.InputOutput)] string @ReturnDescription, [Parameter("transactionIdOutput", "int", ParameterDirection.InputOutput)] int? @transactionIdOutput, [Parameter("userIpForCreatingTransaction", "varchar", ParameterDirection.Input)] string @userIpForCreatingTransaction, [Parameter("IPV_CC_Last4", "nvarchar", ParameterDirection.Input)] string @IPV_CC_Last4, [Parameter("IPV_CC_Name_On_Card", "nvarchar", ParameterDirection.Input)] string @IPV_CC_Name_On_Card, [Parameter("BlockNegativeBalanceAfterPayment", "bit", ParameterDirection.Input)] bool? @BlockNegativeBalanceAfterPayment);
		[Procedure("USP_USER_CHECK_TWITTER_ID_EXIST", "dbo")] public abstract void USP_USER_CHECK_TWITTER_ID_EXIST([Parameter("twitterUserID", "int", ParameterDirection.Input)] int? @twitterUserID);
		[Procedure("USP_USER_CLEAR_SESSION", "dbo")] public abstract void USP_USER_CLEAR_SESSION([Parameter("refId", "varchar", ParameterDirection.Input)] string @refId);
		[Procedure("USP_USER_DEVICE_CREATE", "dbo")] public abstract void USP_USER_DEVICE_CREATE([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("deviceId", "nvarchar", ParameterDirection.Input)] string @deviceId, [Parameter("deviceType", "nvarchar", ParameterDirection.Input)] string @deviceType);
		[Procedure("USP_USER_DEVICE_DELETE", "dbo")] public abstract void USP_USER_DEVICE_DELETE([Parameter("deviceId", "nvarchar", ParameterDirection.Input)] string @deviceId);
		[Procedure("USP_USER_DEVICE_REGISTER", "dbo")] public abstract void USP_USER_DEVICE_REGISTER([Parameter("deviceId", "nvarchar", ParameterDirection.Input)] string @deviceId);
		[Procedure("USP_USER_GET_ID", "dbo")] public abstract void USP_USER_GET_ID([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_USER_GET_TWITTER_ACCOUNT_STATUS", "dbo")] public abstract void USP_USER_GET_TWITTER_ACCOUNT_STATUS([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("USP_USER_SET_LOGIN_SECURITY_SETTINGS", "dbo")] public abstract void USP_USER_SET_LOGIN_SECURITY_SETTINGS([Parameter("IPV_UserName", "nvarchar", ParameterDirection.Input)] string @IPV_UserName, [Parameter("IP", "varchar", ParameterDirection.Input)] string @IP);
		[Procedure("USP_USER_SET_TWITTER_VALIDATION", "dbo")] public abstract void USP_USER_SET_TWITTER_VALIDATION([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("twitterScreenName", "varchar", ParameterDirection.Input)] string @twitterScreenName, [Parameter("twitterUserID", "int", ParameterDirection.Input)] int? @twitterUserID, [Parameter("validationCode", "varchar", ParameterDirection.Input)] string @validationCode, [Parameter("alternateValidationCode", "varchar", ParameterDirection.Input)] string @alternateValidationCode);
		[Procedure("USP_USER_TWITTER_VALIDATE_CODE", "dbo")] public abstract void USP_USER_TWITTER_VALIDATE_CODE([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("validationCode", "varchar", ParameterDirection.Input)] string @validationCode);
		[Procedure("USP_USER_UPDATE_TWITTER_INFO", "dbo")] public abstract void USP_USER_UPDATE_TWITTER_INFO([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("twitterScreenName", "varchar", ParameterDirection.Input)] string @twitterScreenName, [Parameter("twitterName", "nvarchar", ParameterDirection.Input)] string @twitterName, [Parameter("profileImageUrl", "varchar", ParameterDirection.Input)] string @profileImageUrl);
		[Procedure("USP_USER_VALIDATE_PASSWORD", "dbo")] public abstract void USP_USER_VALIDATE_PASSWORD([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("password", "varchar", ParameterDirection.Input)] string @password, [Parameter("passwordNoCase", "varchar", ParameterDirection.Input)] string @passwordNoCase);
		[Procedure("USP_VALIDATE_ADMIN_USER", "dbo")] public abstract void USP_VALIDATE_ADMIN_USER([Parameter("AdminUsername", "nvarchar", ParameterDirection.Input)] string @AdminUsername);
		[Procedure("USP_VALIDATE_TLD", "dbo")] public abstract void USP_VALIDATE_TLD([Parameter("TLD_Name", "varchar", ParameterDirection.Input)] string @TLD_Name);
		[Procedure("USP_VALIDATE_USER", "dbo")] public abstract void USP_VALIDATE_USER([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("USP_VALIDATE_VOUCHER_CODE", "dbo")] public abstract void USP_VALIDATE_VOUCHER_CODE([Parameter("code", "varchar", ParameterDirection.Input)] string @code, [Parameter("voucherType", "varchar", ParameterDirection.Input)] string @voucherType);
		[Procedure("usp_ValidateRichContentRenew", "dbo")] public abstract void usp_ValidateRichContentRenew([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("packId", "int", ParameterDirection.Input)] int? @packId);
		[Procedure("USP_WBL_GET_DETAILS_BY_DOMAINNAME", "dbo")] public abstract void USP_WBL_GET_DETAILS_BY_DOMAINNAME([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("USP_WBL_GET_LIST", "dbo")] public abstract void USP_WBL_GET_LIST([Parameter("userId", "int", ParameterDirection.Input)] int? @userId, [Parameter("IPV_Search_Term", "varchar", ParameterDirection.Input)] string @IPV_Search_Term, [Parameter("IPN_Category_ID", "numeric", ParameterDirection.Input)] decimal? @IPN_Category_ID, [Parameter("SortBy", "varchar", ParameterDirection.Input)] string @SortBy, [Parameter("Order", "varchar", ParameterDirection.Input)] string @Order, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("ReturnAllRows", "bit", ParameterDirection.Input)] bool? @ReturnAllRows);
		[Procedure("USP_WBL_PUSH", "dbo")] public abstract void USP_WBL_PUSH([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("pushType", "varchar", ParameterDirection.Input)] string @pushType, [Parameter("targetUserName", "nvarchar", ParameterDirection.Input)] string @targetUserName);
		[Procedure("USP_WBL_UPDATE_EXPDATE_AND_ID", "dbo")] public abstract void USP_WBL_UPDATE_EXPDATE_AND_ID([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("expDate", "datetime", ParameterDirection.Input)] DateTime? @expDate, [Parameter("enomWBLId", "bigint", ParameterDirection.Input)] long? @enomWBLId);
		[Procedure("USP_WG_DISCARD_FOR_DELETED_DOMAIN", "dbo")] public abstract void USP_WG_DISCARD_FOR_DELETED_DOMAIN([Parameter("IPV_DomainName", "nvarchar", ParameterDirection.Input)] string @IPV_DomainName);
		[Procedure("USP_WG_PURCHASE_AND_AUTOMATIC_ENABLE", "dbo")] public abstract void USP_WG_PURCHASE_AND_AUTOMATIC_ENABLE([Parameter("Transfer_id", "numeric", ParameterDirection.Input)] decimal? @Transfer_id, [Parameter("IPV_UserName", "nvarchar", ParameterDirection.Input)] string @IPV_UserName, [Parameter("IPV_Option1", "nvarchar", ParameterDirection.Input)] string @IPV_Option1, [Parameter("IPV_Option2", "nvarchar", ParameterDirection.Input)] string @IPV_Option2, [Parameter("IPV_BatchId", "nvarchar", ParameterDirection.Input)] string @IPV_BatchId);
		[Procedure("USP_WHOISGUARD_ALLOT", "dbo")] public abstract void USP_WHOISGUARD_ALLOT([Parameter("nWGID", "numeric", ParameterDirection.Input)] decimal? @nWGID, [Parameter("sDomain", "nvarchar", ParameterDirection.Input)] string @sDomain, [Parameter("ForwardToEmail", "nvarchar", ParameterDirection.Input)] string @ForwardToEmail, [Parameter("RegistrantFirstName", "nvarchar", ParameterDirection.Input)] string @RegistrantFirstName, [Parameter("RegistrantLastName", "nvarchar", ParameterDirection.Input)] string @RegistrantLastName, [Parameter("RegistrantJobTitle", "nvarchar", ParameterDirection.Input)] string @RegistrantJobTitle, [Parameter("RegistrantOrganizationName", "nvarchar", ParameterDirection.Input)] string @RegistrantOrganizationName, [Parameter("RegistrantAddress1", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress1, [Parameter("RegistrantAddress2", "nvarchar", ParameterDirection.Input)] string @RegistrantAddress2, [Parameter("RegistrantCity", "nvarchar", ParameterDirection.Input)] string @RegistrantCity, [Parameter("RegistrantStateProvince", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvince, [Parameter("RegistrantStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @RegistrantStateProvinceChoice, [Parameter("RegistrantPostalCode", "nvarchar", ParameterDirection.Input)] string @RegistrantPostalCode, [Parameter("RegistrantCountry", "nvarchar", ParameterDirection.Input)] string @RegistrantCountry, [Parameter("RegistrantPhone", "nvarchar", ParameterDirection.Input)] string @RegistrantPhone, [Parameter("RegistrantFax", "nvarchar", ParameterDirection.Input)] string @RegistrantFax, [Parameter("RegistrantEmailAddress", "nvarchar", ParameterDirection.Input)] string @RegistrantEmailAddress, [Parameter("AdminFirstName", "nvarchar", ParameterDirection.Input)] string @AdminFirstName, [Parameter("AdminLastName", "nvarchar", ParameterDirection.Input)] string @AdminLastName, [Parameter("AdminJobTitle", "nvarchar", ParameterDirection.Input)] string @AdminJobTitle, [Parameter("AdminOrganizationName", "nvarchar", ParameterDirection.Input)] string @AdminOrganizationName, [Parameter("AdminAddress1", "nvarchar", ParameterDirection.Input)] string @AdminAddress1, [Parameter("AdminAddress2", "nvarchar", ParameterDirection.Input)] string @AdminAddress2, [Parameter("AdminCity", "nvarchar", ParameterDirection.Input)] string @AdminCity, [Parameter("AdminStateProvince", "nvarchar", ParameterDirection.Input)] string @AdminStateProvince, [Parameter("AdminStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AdminStateProvinceChoice, [Parameter("AdminPostalCode", "nvarchar", ParameterDirection.Input)] string @AdminPostalCode, [Parameter("AdminCountry", "nvarchar", ParameterDirection.Input)] string @AdminCountry, [Parameter("AdminPhone", "nvarchar", ParameterDirection.Input)] string @AdminPhone, [Parameter("AdminFax", "nvarchar", ParameterDirection.Input)] string @AdminFax, [Parameter("AdminEmailAddress", "nvarchar", ParameterDirection.Input)] string @AdminEmailAddress, [Parameter("TechFirstName", "nvarchar", ParameterDirection.Input)] string @TechFirstName, [Parameter("TechLastName", "nvarchar", ParameterDirection.Input)] string @TechLastName, [Parameter("TechJobTitle", "nvarchar", ParameterDirection.Input)] string @TechJobTitle, [Parameter("TechOrganizationName", "nvarchar", ParameterDirection.Input)] string @TechOrganizationName, [Parameter("TechAddress1", "nvarchar", ParameterDirection.Input)] string @TechAddress1, [Parameter("TechAddress2", "nvarchar", ParameterDirection.Input)] string @TechAddress2, [Parameter("TechCity", "nvarchar", ParameterDirection.Input)] string @TechCity, [Parameter("TechStateProvince", "nvarchar", ParameterDirection.Input)] string @TechStateProvince, [Parameter("TechStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @TechStateProvinceChoice, [Parameter("TechPostalCode", "nvarchar", ParameterDirection.Input)] string @TechPostalCode, [Parameter("TechCountry", "nvarchar", ParameterDirection.Input)] string @TechCountry, [Parameter("TechPhone", "nvarchar", ParameterDirection.Input)] string @TechPhone, [Parameter("TechFax", "nvarchar", ParameterDirection.Input)] string @TechFax, [Parameter("TechEmailAddress", "nvarchar", ParameterDirection.Input)] string @TechEmailAddress, [Parameter("AuxBillingFirstName", "nvarchar", ParameterDirection.Input)] string @AuxBillingFirstName, [Parameter("AuxBillingLastName", "nvarchar", ParameterDirection.Input)] string @AuxBillingLastName, [Parameter("AuxBillingJobTitle", "nvarchar", ParameterDirection.Input)] string @AuxBillingJobTitle, [Parameter("AuxBillingOrganizationName", "nvarchar", ParameterDirection.Input)] string @AuxBillingOrganizationName, [Parameter("AuxBillingAddress1", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress1, [Parameter("AuxBillingAddress2", "nvarchar", ParameterDirection.Input)] string @AuxBillingAddress2, [Parameter("AuxBillingCity", "nvarchar", ParameterDirection.Input)] string @AuxBillingCity, [Parameter("AuxBillingStateProvince", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvince, [Parameter("AuxBillingStateProvinceChoice", "nvarchar", ParameterDirection.Input)] string @AuxBillingStateProvinceChoice, [Parameter("AuxBillingPostalCode", "nvarchar", ParameterDirection.Input)] string @AuxBillingPostalCode, [Parameter("AuxBillingCountry", "nvarchar", ParameterDirection.Input)] string @AuxBillingCountry, [Parameter("AuxBillingPhone", "nvarchar", ParameterDirection.Input)] string @AuxBillingPhone, [Parameter("AuxBillingFax", "nvarchar", ParameterDirection.Input)] string @AuxBillingFax, [Parameter("AuxBillingEmailAddress", "nvarchar", ParameterDirection.Input)] string @AuxBillingEmailAddress, [Parameter("RegistrantNexus", "nvarchar", ParameterDirection.Input)] string @RegistrantNexus, [Parameter("RegistrantNexusCountry", "nvarchar", ParameterDirection.Input)] string @RegistrantNexusCountry, [Parameter("RegistrantPurpose", "nvarchar", ParameterDirection.Input)] string @RegistrantPurpose, [Parameter("COUKLegalType", "nvarchar", ParameterDirection.Input)] string @COUKLegalType, [Parameter("COUKCompanyID", "nvarchar", ParameterDirection.Input)] string @COUKCompanyID, [Parameter("ORGUKLegalType", "nvarchar", ParameterDirection.Input)] string @ORGUKLegalType, [Parameter("ORGUKCompanyID", "nvarchar", ParameterDirection.Input)] string @ORGUKCompanyID, [Parameter("RegistrantPhoneext", "nvarchar", ParameterDirection.Input)] string @RegistrantPhoneext, [Parameter("AdminPhoneext", "nvarchar", ParameterDirection.Input)] string @AdminPhoneext, [Parameter("TechPhoneext", "nvarchar", ParameterDirection.Input)] string @TechPhoneext, [Parameter("AuxBillingPhoneext", "nvarchar", ParameterDirection.Input)] string @AuxBillingPhoneext, [Parameter("COUKRegisteredFor", "nvarchar", ParameterDirection.Input)] string @COUKRegisteredFor, [Parameter("COUKRegOptOut", "nvarchar", ParameterDirection.Input)] string @COUKRegOptOut, [Parameter("ORGUKRegisteredFor", "nvarchar", ParameterDirection.Input)] string @ORGUKRegisteredFor, [Parameter("ORGUKRegOptOut", "nvarchar", ParameterDirection.Input)] string @ORGUKRegOptOut, [Parameter("EUAdrLang", "varchar", ParameterDirection.Input)] string @EUAdrLang, [Parameter("MEUKLegalType", "nvarchar", ParameterDirection.Input)] string @MEUKLegalType, [Parameter("MEUKCompanyID", "nvarchar", ParameterDirection.Input)] string @MEUKCompanyID, [Parameter("MEUKRegisteredFor", "nvarchar", ParameterDirection.Input)] string @MEUKRegisteredFor, [Parameter("MEUKRegOptOut", "nvarchar", ParameterDirection.Input)] string @MEUKRegOptOut, [Parameter("CIRA_Legal_Type", "varchar", ParameterDirection.Input)] string @CIRA_Legal_Type, [Parameter("CIRA_Whois_Display", "varchar", ParameterDirection.Input)] string @CIRA_Whois_Display, [Parameter("CIRA_Agreement_Value", "varchar", ParameterDirection.Input)] string @CIRA_Agreement_Value, [Parameter("CIRA_Agreement_Version", "varchar", ParameterDirection.Input)] string @CIRA_Agreement_Version, [Parameter("CIRA_Language", "varchar", ParameterDirection.Input)] string @CIRA_Language, [Parameter("ASIACCLocality", "varchar", ParameterDirection.Input)] string @ASIACCLocality, [Parameter("ASIALocalityCity", "nvarchar", ParameterDirection.Input)] string @ASIALocalityCity, [Parameter("ASIALocalitySP", "nvarchar", ParameterDirection.Input)] string @ASIALocalitySP, [Parameter("ASIALegalEntityType", "varchar", ParameterDirection.Input)] string @ASIALegalEntityType, [Parameter("ASIAIdentform", "varchar", ParameterDirection.Input)] string @ASIAIdentform, [Parameter("ASIAIdentNumber", "varchar", ParameterDirection.Input)] string @ASIAIdentNumber, [Parameter("ASIAOtherleType", "varchar", ParameterDirection.Input)] string @ASIAOtherleType, [Parameter("ASIAOtherIdentForm", "varchar", ParameterDirection.Input)] string @ASIAOtherIdentForm, [Parameter("XXXMemberID", "varchar", ParameterDirection.Input)] string @XXXMemberID, [Parameter("XXXResolving", "bit", ParameterDirection.Input)] bool? @XXXResolving);
		[Procedure("USP_WHOISGUARD_INITIALIZE", "dbo")] public abstract void USP_WHOISGUARD_INITIALIZE([Parameter("id", "int", ParameterDirection.Input)] int? @id, [Parameter("userID", "numeric", ParameterDirection.Input)] decimal? @userID);
		[Procedure("uspAdhocDomainAdminDeleteReport", "dbo")] public abstract void uspAdhocDomainAdminDeleteReport([Parameter("StartDate", "datetime", ParameterDirection.Input)] DateTime? @StartDate, [Parameter("EndDate", "datetime", ParameterDirection.Input)] DateTime? @EndDate, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName);
		[Procedure("uspAdminAddVoucherForTemplateMonster", "dbo")] public abstract void uspAdminAddVoucherForTemplateMonster([Parameter("Number_Of_Vouchers", "int", ParameterDirection.Input)] int? @Number_Of_Vouchers, [Parameter("ExpirationDate", "datetime", ParameterDirection.Input)] DateTime? @ExpirationDate, [Parameter("AddedBy", "varchar", ParameterDirection.Input)] string @AddedBy, [Parameter("ProductName", "varchar", ParameterDirection.Input)] string @ProductName);
		[Procedure("uspApiGetDomainInfoForSync", "dbo")] public abstract void uspApiGetDomainInfoForSync([Parameter("domainname", "varchar", ParameterDirection.Input)] string @domainname);
		[Procedure("uspGetDomainProvider", "dbo")] public abstract void uspGetDomainProvider([Parameter("tld", "varchar", ParameterDirection.Input)] string @tld, [Parameter("action", "varchar", ParameterDirection.Input)] string @action, [Parameter("userID", "numeric", ParameterDirection.Input)] decimal? @userID);
		[Procedure("uspGetDomainProviderForDomainList", "dbo")] public abstract void uspGetDomainProviderForDomainList([Parameter("domainList", "nvarchar", ParameterDirection.Input)] string @domainList, [Parameter("providerType", "varchar", ParameterDirection.Input)] string @providerType);
		[Procedure("uspGetOxAddonDetails", "dbo")] public abstract void uspGetOxAddonDetails([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("ActionId", "varchar", ParameterDirection.Input)] string @ActionId, [Parameter("Duration", "int", ParameterDirection.Input)] int? @Duration, [Parameter("DurationType", "varchar", ParameterDirection.Input)] string @DurationType);
		[Procedure("uspIsMarketPlaceIdValidToOrderId", "dbo")] public abstract void uspIsMarketPlaceIdValidToOrderId([Parameter("mpId", "numeric", ParameterDirection.Input)] decimal? @mpId, [Parameter("orderId", "int", ParameterDirection.Input)] int? @orderId, [Parameter("returnFlag", "bit", ParameterDirection.InputOutput)] bool? @returnFlag);
		[Procedure("uspLogRenewalEmails", "dbo")] public abstract void uspLogRenewalEmails([Parameter("DomainName", "varchar", ParameterDirection.Input)] string @DomainName, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("EMail", "varchar", ParameterDirection.Input)] string @EMail, [Parameter("DaysToExpire", "varchar", ParameterDirection.Input)] string @DaysToExpire, [Parameter("CurrentDate", "datetime", ParameterDirection.Input)] DateTime? @CurrentDate, [Parameter("MailStatus", "varchar", ParameterDirection.Input)] string @MailStatus, [Parameter("Type", "varchar", ParameterDirection.Input)] string @Type);
		[Procedure("uspSerivcePurchaseBuyDomainMarketplaceDomain", "dbo")] public abstract void uspSerivcePurchaseBuyDomainMarketplaceDomain([Parameter("listingId", "numeric", ParameterDirection.Input)] decimal? @listingId, [Parameter("sBuyerUserName", "nvarchar", ParameterDirection.Input)] string @sBuyerUserName, [Parameter("orderRefId", "nvarchar", ParameterDirection.Input)] string @orderRefId, [Parameter("orderId", "numeric", ParameterDirection.Input)] decimal? @orderId, [Parameter("salePrice", "money", ParameterDirection.Input)] decimal? @salePrice, [Parameter("partnerOrderId", "bigint", ParameterDirection.Input)] long? @partnerOrderId);
		[Procedure("uspSetOXAutoRenew", "dbo")] public abstract void uspSetOXAutoRenew([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("IsAutoRenew", "bit", ParameterDirection.Input)] bool? @IsAutoRenew);
		[Procedure("uspTemp_GetRERegisterOrdersToSetRegistrarLock", "dbo")] public abstract void uspTemp_GetRERegisterOrdersToSetRegistrarLock([Parameter("minsToIgnoreResentOrders", "int", ParameterDirection.Input)] int? @minsToIgnoreResentOrders);
		[Procedure("uspTemp_UpdateSetRegistrarLockTrack", "dbo")] public abstract void uspTemp_UpdateSetRegistrarLockTrack([Parameter("LastProcessedOrderId", "numeric", ParameterDirection.Input)] decimal? @LastProcessedOrderId);
		[Procedure("uspUpdateMarketPlaceStatusAndLogForBuyDomain", "dbo")] public abstract void uspUpdateMarketPlaceStatusAndLogForBuyDomain([Parameter("mpId", "numeric", ParameterDirection.Input)] decimal? @mpId, [Parameter("status", "varchar", ParameterDirection.Input)] string @status, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("ip", "nvarchar", ParameterDirection.Input)] string @ip, [Parameter("userType", "char", ParameterDirection.Input)] string @userType, [Parameter("description", "varchar", ParameterDirection.Input)] string @description, [Parameter("isTransferCompletedCallBackReceived", "bit", ParameterDirection.Input)] bool? @isTransferCompletedCallBackReceived);
		[Procedure("uspUpdateMpIdToTransferRequestForBuyDomain", "dbo")] public abstract void uspUpdateMpIdToTransferRequestForBuyDomain([Parameter("transferId", "numeric", ParameterDirection.Input)] decimal? @transferId, [Parameter("mpId", "numeric", ParameterDirection.Input)] decimal? @mpId);
		[Procedure("uspUpdateOnePagerSubscriptionStatus", "dbo")] public abstract void uspUpdateOnePagerSubscriptionStatus([Parameter("OnePagerSubscriptionId", "numeric", ParameterDirection.Input)] decimal? @OnePagerSubscriptionId, [Parameter("adminUserName", "varchar", ParameterDirection.Input)] string @adminUserName, [Parameter("comments", "varchar", ParameterDirection.Input)] string @comments, [Parameter("adminComments", "nvarchar", ParameterDirection.Input)] string @adminComments);
		[Procedure("usp_AdminGetDepartmentDetails", "internallog")] public abstract void usp_AdminGetDepartmentDetails([Parameter("departmentName", "varchar", ParameterDirection.Input)] string @departmentName);
		[Procedure("usp_AdminGetMessagePriorities", "internallog")] public abstract void usp_AdminGetMessagePriorities();
		[Procedure("usp_AdminGetMessageStatuses", "internallog")] public abstract void usp_AdminGetMessageStatuses();
		[Procedure("usp_AdminGetMessageTypes", "internallog")] public abstract void usp_AdminGetMessageTypes();
		[Procedure("USP_GetLogMessageComments", "internallog")] public abstract void USP_GetLogMessageComments([Parameter("messageId", "int", ParameterDirection.Input)] int? @messageId);
		[Procedure("USP_GetLogMessages", "internallog")] public abstract void USP_GetLogMessages([Parameter("startDate", "datetime", ParameterDirection.Input)] DateTime? @startDate, [Parameter("endDate", "datetime", ParameterDirection.Input)] DateTime? @endDate, [Parameter("departments", "varchar", ParameterDirection.Input)] string @departments, [Parameter("messageType", "int", ParameterDirection.Input)] int? @messageType, [Parameter("messageStatus", "int", ParameterDirection.Input)] int? @messageStatus, [Parameter("isRead", "int", ParameterDirection.Input)] int? @isRead, [Parameter("pageNumber", "int", ParameterDirection.Input)] int? @pageNumber, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize);
		[Procedure("USP_InsertLogMessageComments", "internallog")] public abstract void USP_InsertLogMessageComments([Parameter("messageId", "int", ParameterDirection.Input)] int? @messageId, [Parameter("commentsBy", "varchar", ParameterDirection.Input)] string @commentsBy, [Parameter("commentedDate", "datetime", ParameterDirection.Input)] DateTime? @commentedDate, [Parameter("comments", "varchar", ParameterDirection.Input)] string @comments);
		[Procedure("USP_InsertLogMessages", "internallog")] public abstract void USP_InsertLogMessages([Parameter("isRead", "int", ParameterDirection.Input)] int? @isRead, [Parameter("department", "varchar", ParameterDirection.Input)] string @department, [Parameter("message", "varchar", ParameterDirection.Input)] string @message, [Parameter("messageDescription", "varchar", ParameterDirection.Input)] string @messageDescription, [Parameter("messageFrom", "varchar", ParameterDirection.Input)] string @messageFrom, [Parameter("messageFrom2", "varchar", ParameterDirection.Input)] string @messageFrom2, [Parameter("messageShort", "varchar", ParameterDirection.Input)] string @messageShort, [Parameter("messageStatus", "varchar", ParameterDirection.Input)] string @messageStatus, [Parameter("messageType", "varchar", ParameterDirection.Input)] string @messageType, [Parameter("priority", "varchar", ParameterDirection.Input)] string @priority, [Parameter("startDateTime", "datetime", ParameterDirection.Input)] DateTime? @startDateTime);
		[Procedure("USP_NoOfReadUnreadMessages", "internallog")] public abstract void USP_NoOfReadUnreadMessages([Parameter("isRead", "int", ParameterDirection.Input)] int? @isRead, [Parameter("departments", "varchar", ParameterDirection.Input)] string @departments);
		[Procedure("USP_SelectLogMessage", "internallog")] public abstract void USP_SelectLogMessage([Parameter("messageId", "int", ParameterDirection.Input)] int? @messageId);
		[Procedure("USP_UpdateLogMessageActionStatus", "internallog")] public abstract void USP_UpdateLogMessageActionStatus([Parameter("messageId", "int", ParameterDirection.Input)] int? @messageId, [Parameter("isRead", "int", ParameterDirection.Input)] int? @isRead, [Parameter("actionBy", "varchar", ParameterDirection.Input)] string @actionBy);
		[Procedure("USP_UpdateLogMessageDepartment", "internallog")] public abstract void USP_UpdateLogMessageDepartment([Parameter("messageId", "int", ParameterDirection.Input)] int? @messageId, [Parameter("department", "varchar", ParameterDirection.Input)] string @department, [Parameter("actionBy", "varchar", ParameterDirection.Input)] string @actionBy);
		[Procedure("USP_UpdateLogMessageMessageStatus", "internallog")] public abstract void USP_UpdateLogMessageMessageStatus([Parameter("messageId", "int", ParameterDirection.Input)] int? @messageId, [Parameter("messageStatus", "varchar", ParameterDirection.Input)] string @messageStatus, [Parameter("actionBy", "varchar", ParameterDirection.Input)] string @actionBy);
		[Procedure("USP_UpdateLogMessagePriority", "internallog")] public abstract void USP_UpdateLogMessagePriority([Parameter("messageId", "int", ParameterDirection.Input)] int? @messageId, [Parameter("priority", "varchar", ParameterDirection.Input)] string @priority, [Parameter("actionBy", "varchar", ParameterDirection.Input)] string @actionBy);
		[Procedure("usp_Admin_ActionLog_CreateRecord", "log")] public abstract void usp_Admin_ActionLog_CreateRecord([Parameter("Date", "datetime2", ParameterDirection.Input)] DateTime? @Date, [Parameter("ActionId", "tinyint", ParameterDirection.Input)] byte? @ActionId, [Parameter("EntityId", "smallint", ParameterDirection.Input)] short? @EntityId, [Parameter("Actor", "nvarchar", ParameterDirection.Input)] string @Actor, [Parameter("MailBox", "nvarchar", ParameterDirection.Input)] string @MailBox, [Parameter("Plan", "nvarchar", ParameterDirection.Input)] string @Plan, [Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("User", "nvarchar", ParameterDirection.Input)] string @User, [Parameter("OldValue", "nvarchar", ParameterDirection.Input)] string @OldValue, [Parameter("NewValue", "nvarchar", ParameterDirection.Input)] string @NewValue, [Parameter("Comment", "nvarchar", ParameterDirection.Input)] string @Comment, [Parameter("ActionResultSatus", "smallint", ParameterDirection.Input)] short? @ActionResultSatus);
		[Procedure("usp_Admin_ActionLog_Request", "log")] public abstract void usp_Admin_ActionLog_Request([Parameter("DateFrom", "datetime2", ParameterDirection.Input)] DateTime? @DateFrom, [Parameter("DateTo", "datetime2", ParameterDirection.Input)] DateTime? @DateTo, [Parameter("ActionId", "tinyint", ParameterDirection.Input)] byte? @ActionId, [Parameter("EntityId", "smallint", ParameterDirection.Input)] short? @EntityId, [Parameter("Actor", "nvarchar", ParameterDirection.Input)] string @Actor, [Parameter("ActorWholeString", "bit", ParameterDirection.Input)] bool? @ActorWholeString, [Parameter("MailBox", "nvarchar", ParameterDirection.Input)] string @MailBox, [Parameter("MailBoxWholeString", "bit", ParameterDirection.Input)] bool? @MailBoxWholeString, [Parameter("Plan", "nvarchar", ParameterDirection.Input)] string @Plan, [Parameter("PlanWholeString", "bit", ParameterDirection.Input)] bool? @PlanWholeString, [Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("DomainWholeString", "bit", ParameterDirection.Input)] bool? @DomainWholeString, [Parameter("User", "nvarchar", ParameterDirection.Input)] string @User, [Parameter("UserWholeString", "bit", ParameterDirection.Input)] bool? @UserWholeString, [Parameter("OldValue", "nvarchar", ParameterDirection.Input)] string @OldValue, [Parameter("OldValueWholeString", "bit", ParameterDirection.Input)] bool? @OldValueWholeString, [Parameter("NewValue", "nvarchar", ParameterDirection.Input)] string @NewValue, [Parameter("NewValueWholeString", "bit", ParameterDirection.Input)] bool? @NewValueWholeString, [Parameter("Comment", "nvarchar", ParameterDirection.Input)] string @Comment, [Parameter("CommentWholeString", "bit", ParameterDirection.Input)] bool? @CommentWholeString, [Parameter("ActionResultSatus", "smallint", ParameterDirection.Input)] short? @ActionResultSatus, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("SortDirection", "bit", ParameterDirection.Input)] bool? @SortDirection, [Parameter("SortColumn", "nvarchar", ParameterDirection.Input)] string @SortColumn);
		[Procedure("usp_Admin_ActionsToEntities_GetList", "log")] public abstract void usp_Admin_ActionsToEntities_GetList();
		[Procedure("usp_ApiCommand_AddEvent", "log")] public abstract void usp_ApiCommand_AddEvent([Parameter("EventId", "uniqueidentifier", ParameterDirection.Input)] Guid? @EventId, [Parameter("Date", "datetime2", ParameterDirection.Input)] DateTime? @Date, [Parameter("CommandName", "nvarchar", ParameterDirection.Input)] string @CommandName, [Parameter("EventResult", "nvarchar", ParameterDirection.Input)] string @EventResult, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("CommandParameters", "xml", ParameterDirection.Input)] string @CommandParameters, [Parameter("CommandResults", "xml", ParameterDirection.Input)] string @CommandResults, [Parameter("CommandErrors", "xml", ParameterDirection.Input)] string @CommandErrors, [Parameter("Object", "nvarchar", ParameterDirection.Input)] string @Object, [Parameter("Action", "nvarchar", ParameterDirection.Input)] string @Action);
		[Procedure("usp_ApiCommand_UpdateEvent", "log")] public abstract void usp_ApiCommand_UpdateEvent([Parameter("EventId", "uniqueidentifier", ParameterDirection.Input)] Guid? @EventId, [Parameter("EventResult", "nvarchar", ParameterDirection.Input)] string @EventResult, [Parameter("CommandResults", "xml", ParameterDirection.Input)] string @CommandResults, [Parameter("CommandErrors", "xml", ParameterDirection.Input)] string @CommandErrors);
		[Procedure("USP_Billing_GetCustomPriceLog", "log")] public abstract void USP_Billing_GetCustomPriceLog([Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("RecordsOnPage", "int", ParameterDirection.Input)] int? @RecordsOnPage, [Parameter("DomainFilter", "nvarchar", ParameterDirection.Input)] string @DomainFilter, [Parameter("UserFilter", "nvarchar", ParameterDirection.Input)] string @UserFilter, [Parameter("AdminFilter", "nvarchar", ParameterDirection.Input)] string @AdminFilter, [Parameter("OrderFilter", "int", ParameterDirection.Input)] int? @OrderFilter, [Parameter("ActionFilter", "nvarchar", ParameterDirection.Input)] string @ActionFilter, [Parameter("ItemFilter", "nvarchar", ParameterDirection.Input)] string @ItemFilter, [Parameter("CalculateRowsMode", "bit", ParameterDirection.Input)] bool? @CalculateRowsMode);
		[Procedure("USP_Billing_SaveCustomPriceLog", "log")] public abstract void USP_Billing_SaveCustomPriceLog([Parameter("AdminUserName", "nvarchar", ParameterDirection.Input)] string @AdminUserName, [Parameter("DomainName", "nvarchar", ParameterDirection.Input)] string @DomainName, [Parameter("Item", "nvarchar", ParameterDirection.Input)] string @Item, [Parameter("ActionType", "nvarchar", ParameterDirection.Input)] string @ActionType, [Parameter("SupposedPrice", "money", ParameterDirection.Input)] decimal? @SupposedPrice, [Parameter("CustomPrice", "money", ParameterDirection.Input)] decimal? @CustomPrice, [Parameter("Comments", "nvarchar", ParameterDirection.Input)] string @Comments, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("LogDate", "datetime2", ParameterDirection.Input)] DateTime? @LogDate, [Parameter("OrderId", "bigint", ParameterDirection.Input)] long? @OrderId);
		[Procedure("usp_RepositoryMethod_AddEvent", "log")] public abstract void usp_RepositoryMethod_AddEvent([Parameter("Date", "datetime2", ParameterDirection.Input)] DateTime? @Date, [Parameter("EventResult", "nvarchar", ParameterDirection.Input)] string @EventResult, [Parameter("EventInitiator", "nvarchar", ParameterDirection.Input)] string @EventInitiator, [Parameter("ApiCommandEventId", "uniqueidentifier", ParameterDirection.Input)] Guid? @ApiCommandEventId, [Parameter("RepositoryMethodName", "nvarchar", ParameterDirection.Input)] string @RepositoryMethodName, [Parameter("RepositoryName", "nvarchar", ParameterDirection.Input)] string @RepositoryName, [Parameter("CallParameters", "xml", ParameterDirection.Input)] string @CallParameters, [Parameter("CallResults", "xml", ParameterDirection.Input)] string @CallResults, [Parameter("CallErrors", "xml", ParameterDirection.Input)] string @CallErrors, [Parameter("PreviousData", "xml", ParameterDirection.Input)] string @PreviousData, [Parameter("ContainsPreviousData", "bit", ParameterDirection.Input)] bool? @ContainsPreviousData, [Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain);
		[Procedure("ManageUpdateMailboxFeatureSetLog", "mail")] public abstract void ManageUpdateMailboxFeatureSetLog([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("domain", "nvarchar", ParameterDirection.Input)] string @domain, [Parameter("planId", "int", ParameterDirection.Input)] int? @planId, [Parameter("contextId", "int", ParameterDirection.Input)] int? @contextId, [Parameter("contextAdminUserName", "nvarchar", ParameterDirection.Input)] string @contextAdminUserName, [Parameter("contextAdminPassword", "nvarchar", ParameterDirection.Input)] string @contextAdminPassword, [Parameter("ownerUserName", "nvarchar", ParameterDirection.Input)] string @ownerUserName, [Parameter("errorMessage", "nvarchar", ParameterDirection.Input)] string @errorMessage, [Parameter("action", "int", ParameterDirection.Input)] int? @action, [Parameter("isSuccess", "int", ParameterDirection.Input)] int? @isSuccess, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize);
		[Procedure("OXReportGeneral", "mail")] public abstract void OXReportGeneral([Parameter("status", "xml", ParameterDirection.Input)] string @status, [Parameter("TrialSubscriptionCount", "int", ParameterDirection.InputOutput)] int? @TrialSubscriptionCount, [Parameter("PaidSubscriptionCount", "int", ParameterDirection.InputOutput)] int? @PaidSubscriptionCount, [Parameter("TrialMailboxCount", "int", ParameterDirection.InputOutput)] int? @TrialMailboxCount, [Parameter("PaidMailboxCount", "int", ParameterDirection.InputOutput)] int? @PaidMailboxCount, [Parameter("TotalSubscriptionCount", "int", ParameterDirection.InputOutput)] int? @TotalSubscriptionCount, [Parameter("TotalMailboxCount", "int", ParameterDirection.InputOutput)] int? @TotalMailboxCount);
		[Procedure("OXReportKPISubscription", "mail")] public abstract void OXReportKPISubscription([Parameter("status", "xml", ParameterDirection.Input)] string @status, [Parameter("TrialGraceSubscriptions", "int", ParameterDirection.InputOutput)] int? @TrialGraceSubscriptions, [Parameter("PaidGraceSubscriptions", "int", ParameterDirection.InputOutput)] int? @PaidGraceSubscriptions, [Parameter("TrialRedemptionSubscriptions", "int", ParameterDirection.InputOutput)] int? @TrialRedemptionSubscriptions, [Parameter("PaidRedemptionSubscriptions", "int", ParameterDirection.InputOutput)] int? @PaidRedemptionSubscriptions, [Parameter("TrialSubscriptionNotActivated", "int", ParameterDirection.InputOutput)] int? @TrialSubscriptionNotActivated, [Parameter("PaidSubscriptionNotActivated", "int", ParameterDirection.InputOutput)] int? @PaidSubscriptionNotActivated, [Parameter("TrialSubscriptionActive", "int", ParameterDirection.InputOutput)] int? @TrialSubscriptionActive, [Parameter("PaidSubscriptionActive", "int", ParameterDirection.InputOutput)] int? @PaidSubscriptionActive, [Parameter("TrialSubscriptionDisable", "int", ParameterDirection.InputOutput)] int? @TrialSubscriptionDisable, [Parameter("PaidSubscriptionDisable", "int", ParameterDirection.InputOutput)] int? @PaidSubscriptionDisable, [Parameter("TotalSubscriptions", "int", ParameterDirection.InputOutput)] int? @TotalSubscriptions, [Parameter("TotalTrialSubscriptions", "int", ParameterDirection.InputOutput)] int? @TotalTrialSubscriptions, [Parameter("TotalPaidSubscriptions", "int", ParameterDirection.InputOutput)] int? @TotalPaidSubscriptions, [Parameter("TotalGraceSubscriptions", "int", ParameterDirection.InputOutput)] int? @TotalGraceSubscriptions, [Parameter("TotalRedemptionSubscriptions", "int", ParameterDirection.InputOutput)] int? @TotalRedemptionSubscriptions, [Parameter("TotalSubscriptionNotActivated", "int", ParameterDirection.InputOutput)] int? @TotalSubscriptionNotActivated, [Parameter("TotalSubscriptionActive", "int", ParameterDirection.InputOutput)] int? @TotalSubscriptionActive, [Parameter("TotalSubscriptionDisable", "int", ParameterDirection.InputOutput)] int? @TotalSubscriptionDisable);
		[Procedure("OXReportProductStatistic", "mail")] public abstract void OXReportProductStatistic([Parameter("status", "xml", ParameterDirection.Input)] string @status, [Parameter("Month", "int", ParameterDirection.Input)] int? @Month, [Parameter("Year", "int", ParameterDirection.Input)] int? @Year);
		[Procedure("OXReportProductStatisticToPlans", "mail")] public abstract void OXReportProductStatisticToPlans();
		[Procedure("OXReportPurchaseSubscription", "mail")] public abstract void OXReportPurchaseSubscription([Parameter("status", "xml", ParameterDirection.Input)] string @status, [Parameter("Month", "int", ParameterDirection.Input)] int? @Month, [Parameter("Year", "int", ParameterDirection.Input)] int? @Year, [Parameter("AddTrialSubscription1Month", "int", ParameterDirection.InputOutput)] int? @AddTrialSubscription1Month, [Parameter("AddTrialSubscription1Year", "int", ParameterDirection.InputOutput)] int? @AddTrialSubscription1Year, [Parameter("AddPaidSubscription1Month", "int", ParameterDirection.InputOutput)] int? @AddPaidSubscription1Month, [Parameter("AddPaidSubscription1Year", "int", ParameterDirection.InputOutput)] int? @AddPaidSubscription1Year, [Parameter("AddTrialMailbox1Month", "int", ParameterDirection.InputOutput)] int? @AddTrialMailbox1Month, [Parameter("AddTrialMailbox1Year", "int", ParameterDirection.InputOutput)] int? @AddTrialMailbox1Year, [Parameter("AddPaidMailbox1Month", "int", ParameterDirection.InputOutput)] int? @AddPaidMailbox1Month, [Parameter("AddPaidMailbox1Year", "int", ParameterDirection.InputOutput)] int? @AddPaidMailbox1Year, [Parameter("TotalSubscription1Month", "int", ParameterDirection.InputOutput)] int? @TotalSubscription1Month, [Parameter("TotalSubscription1Year", "int", ParameterDirection.InputOutput)] int? @TotalSubscription1Year, [Parameter("TotalMailbox1Month", "int", ParameterDirection.InputOutput)] int? @TotalMailbox1Month, [Parameter("TotalMailbox1Year", "int", ParameterDirection.InputOutput)] int? @TotalMailbox1Year);
		[Procedure("OXReportPurchaseSubscriptionPeriod", "mail")] public abstract void OXReportPurchaseSubscriptionPeriod([Parameter("status", "xml", ParameterDirection.Input)] string @status, [Parameter("FirstDate", "smalldatetime", ParameterDirection.Input)] DateTime? @FirstDate, [Parameter("LastDate", "smalldatetime", ParameterDirection.Input)] DateTime? @LastDate, [Parameter("AddTrialSubscription", "int", ParameterDirection.InputOutput)] int? @AddTrialSubscription, [Parameter("AddPaidSubscription", "int", ParameterDirection.InputOutput)] int? @AddPaidSubscription, [Parameter("AddTrialMailbox", "int", ParameterDirection.InputOutput)] int? @AddTrialMailbox, [Parameter("AddPaidMailbox", "int", ParameterDirection.InputOutput)] int? @AddPaidMailbox, [Parameter("TotalSubscription", "int", ParameterDirection.InputOutput)] int? @TotalSubscription, [Parameter("TotalMailbox", "int", ParameterDirection.InputOutput)] int? @TotalMailbox);
		[Procedure("OXReportSubscriptionMailboxes", "mail")] public abstract void OXReportSubscriptionMailboxes([Parameter("status", "xml", ParameterDirection.Input)] string @status, [Parameter("domain", "nvarchar", ParameterDirection.Input)] string @domain, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize);
		[Procedure("rep_Domain_Delete", "mail")] public abstract void rep_Domain_Delete([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("rep_Domain_Delete_Redemption", "mail")] public abstract void rep_Domain_Delete_Redemption([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("rep_Mailbox_ChangeDomainBulk", "mail")] public abstract void rep_Mailbox_ChangeDomainBulk([Parameter("mailboxesXml", "nvarchar", ParameterDirection.Input)] string @mailboxesXml, [Parameter("newDomain", "nvarchar", ParameterDirection.Input)] string @newDomain, [Parameter("oldDomain", "nvarchar", ParameterDirection.Input)] string @oldDomain);
		[Procedure("rep_Mailbox_ChangePwd", "mail")] public abstract void rep_Mailbox_ChangePwd([Parameter("mailboxName", "nvarchar", ParameterDirection.Input)] string @mailboxName, [Parameter("newPass", "nvarchar", ParameterDirection.Input)] string @newPass);
		[Procedure("rep_Mailbox_DeleteAlias", "mail")] public abstract void rep_Mailbox_DeleteAlias([Parameter("alias", "nvarchar", ParameterDirection.Input)] string @alias);
		[Procedure("rep_Mailbox_DeleteBulk", "mail")] public abstract void rep_Mailbox_DeleteBulk([Parameter("mailboxesXml", "nvarchar", ParameterDirection.Input)] string @mailboxesXml, [Parameter("domain", "nvarchar", ParameterDirection.Input)] string @domain);
		[Procedure("rep_Mailbox_Insert", "mail")] public abstract void rep_Mailbox_Insert([Parameter("mail", "nvarchar", ParameterDirection.Input)] string @mail, [Parameter("domain", "nvarchar", ParameterDirection.Input)] string @domain, [Parameter("password", "nvarchar", ParameterDirection.Input)] string @password);
		[Procedure("rep_Mailbox_InsertAlias", "mail")] public abstract void rep_Mailbox_InsertAlias([Parameter("mailbox", "nvarchar", ParameterDirection.Input)] string @mailbox, [Parameter("alias", "nvarchar", ParameterDirection.Input)] string @alias, [Parameter("domain", "nvarchar", ParameterDirection.Input)] string @domain);
		[Procedure("rep_Mailbox_InsertBulk", "mail")] public abstract void rep_Mailbox_InsertBulk([Parameter("mailboxesXml", "nvarchar", ParameterDirection.Input)] string @mailboxesXml, [Parameter("domain", "nvarchar", ParameterDirection.Input)] string @domain);
		[Procedure("rep_Mailbox_MailChangeStateBulk", "mail")] public abstract void rep_Mailbox_MailChangeStateBulk([Parameter("mailboxesXml", "nvarchar", ParameterDirection.Input)] string @mailboxesXml, [Parameter("domain", "nvarchar", ParameterDirection.Input)] string @domain, [Parameter("active", "bit", ParameterDirection.Input)] bool? @active);
		[Procedure("rep_Mailbox_MailChangeStateBulkCommon", "mail")] public abstract void rep_Mailbox_MailChangeStateBulkCommon([Parameter("MailStateXml", "varchar", ParameterDirection.Input)] string @MailStateXml);
		[Procedure("rep_Mailbox_Recovery", "mail")] public abstract void rep_Mailbox_Recovery([Parameter("mail", "nvarchar", ParameterDirection.Input)] string @mail, [Parameter("domain", "nvarchar", ParameterDirection.Input)] string @domain, [Parameter("password", "nvarchar", ParameterDirection.Input)] string @password, [Parameter("quota", "int", ParameterDirection.Input)] int? @quota, [Parameter("isActive", "tinyint", ParameterDirection.Input)] byte? @isActive);
		[Procedure("rep_Mailbox_SetActivity", "mail")] public abstract void rep_Mailbox_SetActivity([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("UserDisabled", "bit", ParameterDirection.Input)] bool? @UserDisabled, [Parameter("SubscriptionStatus", "int", ParameterDirection.Input)] int? @SubscriptionStatus);
		[Procedure("rep_Mailbox_SetCatchAll", "mail")] public abstract void rep_Mailbox_SetCatchAll([Parameter("mailbox", "nvarchar", ParameterDirection.Input)] string @mailbox, [Parameter("isEnabled", "bit", ParameterDirection.Input)] bool? @isEnabled);
		[Procedure("rep_Mailbox_SetQuota", "mail")] public abstract void rep_Mailbox_SetQuota([Parameter("mailbox", "nvarchar", ParameterDirection.Input)] string @mailbox, [Parameter("quota", "int", ParameterDirection.Input)] int? @quota);
		[Procedure("rep_Mailbox_UpdateAlias", "mail")] public abstract void rep_Mailbox_UpdateAlias([Parameter("mailbox", "nvarchar", ParameterDirection.Input)] string @mailbox, [Parameter("domain", "nvarchar", ParameterDirection.Input)] string @domain, [Parameter("oldAlias", "nvarchar", ParameterDirection.Input)] string @oldAlias, [Parameter("newAlias", "nvarchar", ParameterDirection.Input)] string @newAlias);
		[Procedure("Scheduler_Control", "mail")] public abstract void Scheduler_Control([Parameter("isStop", "bit", ParameterDirection.Input)] bool? @isStop);
		[Procedure("Scheduler_GetMonitor", "mail")] public abstract void Scheduler_GetMonitor();
		[Procedure("Scheduler_GetParameter", "mail")] public abstract void Scheduler_GetParameter();
		[Procedure("Scheduler_GetStatus", "mail")] public abstract void Scheduler_GetStatus([Parameter("isRunning", "bit", ParameterDirection.InputOutput)] bool? @isRunning, [Parameter("lastTimeRunning", "datetime", ParameterDirection.InputOutput)] DateTime? @lastTimeRunning, [Parameter("appVersion", "nvarchar", ParameterDirection.InputOutput)] string @appVersion);
		[Procedure("Scheduler_SetMonitor", "mail")] public abstract void Scheduler_SetMonitor([Parameter("isRunning", "bit", ParameterDirection.Input)] bool? @isRunning, [Parameter("lastTimeRunning", "datetime", ParameterDirection.Input)] DateTime? @lastTimeRunning, [Parameter("appVersion", "nvarchar", ParameterDirection.Input)] string @appVersion);
		[Procedure("Scheduler_UpdateParameter", "mail")] public abstract void Scheduler_UpdateParameter([Parameter("isUseTimeWorkParameter", "bit", ParameterDirection.Input)] bool? @isUseTimeWorkParameter, [Parameter("metaTimeZone", "nvarchar", ParameterDirection.Input)] string @metaTimeZone, [Parameter("startTime", "nvarchar", ParameterDirection.Input)] string @startTime, [Parameter("endTime", "nvarchar", ParameterDirection.Input)] string @endTime, [Parameter("isUseOperationParameter", "bit", ParameterDirection.Input)] bool? @isUseOperationParameter, [Parameter("timeOutOperation", "int", ParameterDirection.Input)] int? @timeOutOperation, [Parameter("countStepOperation", "int", ParameterDirection.Input)] int? @countStepOperation);
		[Procedure("usp_Admin_AdminSubscriptions_Create", "mail")] public abstract void usp_Admin_AdminSubscriptions_Create([Parameter("PlanId", "int", ParameterDirection.Input)] int? @PlanId, [Parameter("ContextId", "int", ParameterDirection.Input)] int? @ContextId, [Parameter("DaysToExpire", "int", ParameterDirection.Input)] int? @DaysToExpire, [Parameter("OrderId", "numeric", ParameterDirection.Input)] decimal? @OrderId, [Parameter("OrderItemId", "numeric", ParameterDirection.Input)] decimal? @OrderItemId, [Parameter("BillingCycle", "int", ParameterDirection.Input)] int? @BillingCycle, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("IsTrialPlan", "bit", ParameterDirection.Input)] bool? @IsTrialPlan);
		[Procedure("usp_Admin_Contexts_GetMailboxes", "mail")] public abstract void usp_Admin_Contexts_GetMailboxes([Parameter("ContextId", "int", ParameterDirection.Input)] int? @ContextId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Admin_FeatureSets_CompareTo", "mail")] public abstract void usp_Admin_FeatureSets_CompareTo([Parameter("PlanSourceId", "int", ParameterDirection.Input)] int? @PlanSourceId, [Parameter("PlanDestinationId", "int", ParameterDirection.Input)] int? @PlanDestinationId);
		[Procedure("usp_Admin_GetAuthorizationEmail", "mail")] public abstract void usp_Admin_GetAuthorizationEmail([Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("AuthorizationEmail", "nvarchar", ParameterDirection.InputOutput)] string @AuthorizationEmail);
		[Procedure("usp_Admin_GetAuthorizationKey", "mail")] public abstract void usp_Admin_GetAuthorizationKey([Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("AuthorizationKey", "nvarchar", ParameterDirection.InputOutput)] string @AuthorizationKey);
		[Procedure("usp_Admin_GetContext", "mail")] public abstract void usp_Admin_GetContext([Parameter("ContextId", "int", ParameterDirection.Input)] int? @ContextId);
		[Procedure("usp_Admin_GetDomainIMAPFolderSetting", "mail")] public abstract void usp_Admin_GetDomainIMAPFolderSetting([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName);
		[Procedure("usp_Admin_GetIMAPSetting", "mail")] public abstract void usp_Admin_GetIMAPSetting([Parameter("IsCurrent", "bit", ParameterDirection.Input)] bool? @IsCurrent);
		[Procedure("usp_Admin_GetMailboxesOfPlan", "mail")] public abstract void usp_Admin_GetMailboxesOfPlan([Parameter("PlanId", "int", ParameterDirection.Input)] int? @PlanId);
		[Procedure("usp_Admin_GetMailboxesOfPlanWithPages", "mail")] public abstract void usp_Admin_GetMailboxesOfPlanWithPages([Parameter("PlanId", "int", ParameterDirection.Input)] int? @PlanId, [Parameter("pageIndex", "int", ParameterDirection.Input)] int? @pageIndex, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize);
		[Procedure("usp_Admin_GetMailboxIMAPFolderSetting", "mail")] public abstract void usp_Admin_GetMailboxIMAPFolderSetting([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_Admin_IMAPSetting_Update", "mail")] public abstract void usp_Admin_IMAPSetting_Update([Parameter("Id", "int", ParameterDirection.Input)] int? @Id, [Parameter("HomeDir", "nvarchar", ParameterDirection.Input)] string @HomeDir, [Parameter("Host", "nvarchar", ParameterDirection.Input)] string @Host, [Parameter("Port", "int", ParameterDirection.Input)] int? @Port, [Parameter("RootUser", "nvarchar", ParameterDirection.Input)] string @RootUser, [Parameter("IsCurrent", "bit", ParameterDirection.Input)] bool? @IsCurrent, [Parameter("Action", "tinyint", ParameterDirection.Input)] byte? @Action);
		[Procedure("usp_Admin_Mails_LockBulk", "mail")] public abstract void usp_Admin_Mails_LockBulk([Parameter("mailBoxesXml", "xml", ParameterDirection.Input)] string @mailBoxesXml, [Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Admin_Mails_TransferBulk", "mail")] public abstract void usp_Admin_Mails_TransferBulk([Parameter("TargetSubscriptionId", "int", ParameterDirection.Input)] int? @TargetSubscriptionId, [Parameter("MailboxesList", "nvarchar", ParameterDirection.Input)] string @MailboxesList, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Admin_Plans_GetListWithInfo", "mail")] public abstract void usp_Admin_Plans_GetListWithInfo([Parameter("keyword", "nvarchar", ParameterDirection.Input)] string @keyword, [Parameter("activeOnly", "bit", ParameterDirection.Input)] bool? @activeOnly);
		[Procedure("usp_Admin_SetAuthorizationEmail", "mail")] public abstract void usp_Admin_SetAuthorizationEmail([Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("AuthorizationEmail", "nvarchar", ParameterDirection.InputOutput)] string @AuthorizationEmail);
		[Procedure("usp_Admin_SetAuthorizationEmailFailed", "mail")] public abstract void usp_Admin_SetAuthorizationEmailFailed([Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Admin_Subscription_Downgrade", "mail")] public abstract void usp_Admin_Subscription_Downgrade([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("newPlanId", "int", ParameterDirection.Input)] int? @newPlanId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Admin_Subscription_GetMailboxes", "mail")] public abstract void usp_Admin_Subscription_GetMailboxes([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("keyword", "nvarchar", ParameterDirection.Input)] string @keyword, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize, [Parameter("SortColumn", "nvarchar", ParameterDirection.Input)] string @SortColumn, [Parameter("SortDirection", "bit", ParameterDirection.Input)] bool? @SortDirection, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Admin_Subscription_Reactivate", "mail")] public abstract void usp_Admin_Subscription_Reactivate([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Admin_Subscription_Restore", "mail")] public abstract void usp_Admin_Subscription_Restore([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("RenewYears", "int", ParameterDirection.Input)] int? @RenewYears, [Parameter("RenewMonths", "int", ParameterDirection.Input)] int? @RenewMonths, [Parameter("RenewDays", "int", ParameterDirection.Input)] int? @RenewDays, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Admin_Subscription_SetExpDate", "mail")] public abstract void usp_Admin_Subscription_SetExpDate([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("ExpirationDate", "datetime", ParameterDirection.Input)] DateTime? @ExpirationDate, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("OrderId", "numeric", ParameterDirection.Input)] decimal? @OrderId, [Parameter("OrderItemId", "numeric", ParameterDirection.Input)] decimal? @OrderItemId, [Parameter("BillingCycle", "int", ParameterDirection.Input)] int? @BillingCycle);
		[Procedure("usp_Admin_Subscriptions_Activation", "mail")] public abstract void usp_Admin_Subscriptions_Activation([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Admin_Subscriptions_ChangePlan", "mail")] public abstract void usp_Admin_Subscriptions_ChangePlan([Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("newPlanId", "int", ParameterDirection.Input)] int? @newPlanId, [Parameter("ownerUserName", "nvarchar", ParameterDirection.Input)] string @ownerUserName, [Parameter("orderID", "int", ParameterDirection.Input)] int? @orderID, [Parameter("typePaySource", "int", ParameterDirection.Input)] int? @typePaySource, [Parameter("ipAddress", "nvarchar", ParameterDirection.Input)] string @ipAddress, [Parameter("TotalToCharge", "decimal", ParameterDirection.Input)] decimal? @TotalToCharge);
		[Procedure("usp_Admin_Subscriptions_ContextChange", "mail")] public abstract void usp_Admin_Subscriptions_ContextChange([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("NewDomain", "nvarchar", ParameterDirection.Input)] string @NewDomain, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Admin_Subscriptions_Create", "mail")] public abstract void usp_Admin_Subscriptions_Create([Parameter("PlanId", "int", ParameterDirection.Input)] int? @PlanId, [Parameter("ContextId", "int", ParameterDirection.Input)] int? @ContextId, [Parameter("DaysToExpire", "int", ParameterDirection.Input)] int? @DaysToExpire, [Parameter("OrderId", "numeric", ParameterDirection.Input)] decimal? @OrderId, [Parameter("OrderItemId", "numeric", ParameterDirection.Input)] decimal? @OrderItemId, [Parameter("BillingCycle", "int", ParameterDirection.Input)] int? @BillingCycle, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("IsThirdPartyDomain", "bit", ParameterDirection.Input)] bool? @IsThirdPartyDomain, [Parameter("IsTrialPlan", "bit", ParameterDirection.Input)] bool? @IsTrialPlan, [Parameter("IsAutoRenew", "bit", ParameterDirection.Input)] bool? @IsAutoRenew, [Parameter("IsIntentionally", "bit", ParameterDirection.Input)] bool? @IsIntentionally);
		[Procedure("USP_Admin_Subscriptions_DeleteExpired", "mail")] public abstract void USP_Admin_Subscriptions_DeleteExpired([Parameter("DeleteExpiredDays", "int", ParameterDirection.Input)] int? @DeleteExpiredDays, [Parameter("countOperation", "int", ParameterDirection.Input)] int? @countOperation);
		[Procedure("USP_Admin_Subscriptions_DeleteRedemptions", "mail")] public abstract void USP_Admin_Subscriptions_DeleteRedemptions([Parameter("DeleteRedemptionDays", "int", ParameterDirection.Input)] int? @DeleteRedemptionDays);
		[Procedure("usp_Admin_Subscriptions_DomainChange", "mail")] public abstract void usp_Admin_Subscriptions_DomainChange([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("NewDomain", "nvarchar", ParameterDirection.Input)] string @NewDomain, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("IsNewContext", "bit", ParameterDirection.Input)] bool? @IsNewContext, [Parameter("ContextId", "int", ParameterDirection.Input)] int? @ContextId);
		[Procedure("usp_Admin_Subscriptions_GetContext", "mail")] public abstract void usp_Admin_Subscriptions_GetContext([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId);
		[Procedure("USP_Admin_Subscriptions_MoveToExpired", "mail")] public abstract void USP_Admin_Subscriptions_MoveToExpired([Parameter("ExpiredStartDays", "int", ParameterDirection.Input)] int? @ExpiredStartDays, [Parameter("countOperation", "int", ParameterDirection.Input)] int? @countOperation);
		[Procedure("USP_Admin_Subscriptions_MoveToGrace", "mail")] public abstract void USP_Admin_Subscriptions_MoveToGrace([Parameter("countOperation", "int", ParameterDirection.Input)] int? @countOperation);
		[Procedure("USP_Admin_Subscriptions_MoveToRedemption", "mail")] public abstract void USP_Admin_Subscriptions_MoveToRedemption([Parameter("RedemptionStartDays", "int", ParameterDirection.Input)] int? @RedemptionStartDays, [Parameter("countOperation", "int", ParameterDirection.Input)] int? @countOperation);
		[Procedure("usp_Admin_Subscriptions_Transfer", "mail")] public abstract void usp_Admin_Subscriptions_Transfer([Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("OldOwnerUserName", "nvarchar", ParameterDirection.Input)] string @OldOwnerUserName, [Parameter("NewOwnerUserName", "nvarchar", ParameterDirection.Input)] string @NewOwnerUserName);
		[Procedure("usp_Admin_Subscriptions_Upgrade", "mail")] public abstract void usp_Admin_Subscriptions_Upgrade([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("NewPlanId", "int", ParameterDirection.Input)] int? @NewPlanId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Admin_UserDomain_GetList", "mail")] public abstract void usp_Admin_UserDomain_GetList([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName, [Parameter("isExclude", "bit", ParameterDirection.Input)] bool? @isExclude);
		[Procedure("usp_AdminBulkMailboxCreateThirdPartyDomain", "mail")] public abstract void usp_AdminBulkMailboxCreateThirdPartyDomain([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("mailBoxesXml", "nvarchar", ParameterDirection.Input)] string @mailBoxesXml, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain);
		[Procedure("usp_AdminChangeAdminContactTryCount", "mail")] public abstract void usp_AdminChangeAdminContactTryCount([Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_AdminContexts_FullGetInfo", "mail")] public abstract void usp_AdminContexts_FullGetInfo([Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_AdminContexts_FullGetInfoByNewThirdPartyDomain", "mail")] public abstract void usp_AdminContexts_FullGetInfoByNewThirdPartyDomain([Parameter("countOperation", "int", ParameterDirection.Input)] int? @countOperation);
		[Procedure("usp_AdminContexts_FullGetInfoByRecoveryContext", "mail")] public abstract void usp_AdminContexts_FullGetInfoByRecoveryContext();
		[Procedure("usp_AdminContexts_GetPreRequisites", "mail")] public abstract void usp_AdminContexts_GetPreRequisites([Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("IsContextRequired", "bit", ParameterDirection.InputOutput)] bool? @IsContextRequired, [Parameter("IsThirdPartyDomain", "bit", ParameterDirection.InputOutput)] bool? @IsThirdPartyDomain);
		[Procedure("USP_AdminContextsAdminCreate", "mail")] public abstract void USP_AdminContextsAdminCreate([Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("Active", "bit", ParameterDirection.Input)] bool? @Active, [Parameter("OXquota", "int", ParameterDirection.Input)] int? @OXquota, [Parameter("OXContextAdminUser", "nvarchar", ParameterDirection.Input)] string @OXContextAdminUser, [Parameter("OXContextAdminPassword", "nvarchar", ParameterDirection.Input)] string @OXContextAdminPassword, [Parameter("IsThirdPartyDomain", "bit", ParameterDirection.Input)] bool? @IsThirdPartyDomain);
		[Procedure("USP_AdminContextsCreate", "mail")] public abstract void USP_AdminContextsCreate([Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("Active", "bit", ParameterDirection.Input)] bool? @Active, [Parameter("OXquota", "int", ParameterDirection.Input)] int? @OXquota, [Parameter("OXContextAdminUser", "nvarchar", ParameterDirection.Input)] string @OXContextAdminUser, [Parameter("OXContextAdminPassword", "nvarchar", ParameterDirection.Input)] string @OXContextAdminPassword, [Parameter("IsThirdPartyDomain", "bit", ParameterDirection.Input)] bool? @IsThirdPartyDomain);
		[Procedure("usp_AdminContextsDelete", "mail")] public abstract void usp_AdminContextsDelete([Parameter("ContextId", "int", ParameterDirection.Input)] int? @ContextId, [Parameter("domainName", "nvarchar", ParameterDirection.InputOutput)] string @domainName);
		[Procedure("usp_AdminContextsGetList", "mail")] public abstract void usp_AdminContextsGetList([Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("keyword", "nvarchar", ParameterDirection.Input)] string @keyword, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize, [Parameter("SortColumn", "nvarchar", ParameterDirection.Input)] string @SortColumn, [Parameter("SortDirection", "bit", ParameterDirection.Input)] bool? @SortDirection);
		[Procedure("usp_AdminDomainSetOXHost", "mail")] public abstract void usp_AdminDomainSetOXHost([Parameter("host", "varchar", ParameterDirection.Input)] string @host, [Parameter("recordType", "varchar", ParameterDirection.Input)] string @recordType, [Parameter("recordSubType", "varchar", ParameterDirection.Input)] string @recordSubType, [Parameter("data", "varchar", ParameterDirection.Input)] string @data, [Parameter("priority", "tinyint", ParameterDirection.Input)] byte? @priority, [Parameter("serverDescription", "varchar", ParameterDirection.Input)] string @serverDescription, [Parameter("action", "int", ParameterDirection.Input)] int? @action);
		[Procedure("USP_AdminDomainsGetList", "mail")] public abstract void USP_AdminDomainsGetList([Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("keyword", "nvarchar", ParameterDirection.Input)] string @keyword, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize, [Parameter("SortColumn", "nvarchar", ParameterDirection.Input)] string @SortColumn, [Parameter("SortDirection", "bit", ParameterDirection.Input)] bool? @SortDirection);
		[Procedure("usp_AdminDomainSubscriptionGetList", "mail")] public abstract void usp_AdminDomainSubscriptionGetList([Parameter("userNameFilter", "nvarchar", ParameterDirection.Input)] string @userNameFilter, [Parameter("domainNameFilter", "nvarchar", ParameterDirection.Input)] string @domainNameFilter, [Parameter("planNameFilter", "nvarchar", ParameterDirection.Input)] string @planNameFilter, [Parameter("status", "xml", ParameterDirection.Input)] string @status, [Parameter("dateRange", "int", ParameterDirection.Input)] int? @dateRange, [Parameter("startDate", "datetime", ParameterDirection.Input)] DateTime? @startDate, [Parameter("endDate", "datetime", ParameterDirection.Input)] DateTime? @endDate, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize, [Parameter("ownerUserName", "nvarchar", ParameterDirection.Input)] string @ownerUserName);
		[Procedure("usp_AdminMails_BulkCheck", "mail")] public abstract void usp_AdminMails_BulkCheck([Parameter("mailboxesListXml", "xml", ParameterDirection.Input)] string @mailboxesListXml, [Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("mailboxesExcessSubscription", "int", ParameterDirection.InputOutput)] int? @mailboxesExcessSubscription);
		[Procedure("usp_AdminMails_ChangePassword", "mail")] public abstract void usp_AdminMails_ChangePassword([Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("mail", "varchar", ParameterDirection.Input)] string @mail, [Parameter("domain", "varchar", ParameterDirection.Input)] string @domain, [Parameter("newPassword", "varchar", ParameterDirection.Input)] string @newPassword);
		[Procedure("usp_AdminMails_CheckMailboxActive", "mail")] public abstract void usp_AdminMails_CheckMailboxActive([Parameter("mailBoxesXml", "xml", ParameterDirection.Input)] string @mailBoxesXml, [Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_AdminMails_CreateBulk", "mail")] public abstract void usp_AdminMails_CreateBulk([Parameter("mailBoxesXml", "xml", ParameterDirection.Input)] string @mailBoxesXml, [Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_AdminMails_CreateBulk_OnlyAtCoredb", "mail")] public abstract void usp_AdminMails_CreateBulk_OnlyAtCoredb([Parameter("mailBoxesXml", "xml", ParameterDirection.Input)] string @mailBoxesXml, [Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_AdminMails_DeleteAlias", "mail")] public abstract void usp_AdminMails_DeleteAlias([Parameter("alias", "nvarchar", ParameterDirection.Input)] string @alias);
		[Procedure("usp_AdminMails_DeleteBulk", "mail")] public abstract void usp_AdminMails_DeleteBulk([Parameter("mailBoxesXml", "xml", ParameterDirection.Input)] string @mailBoxesXml, [Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_AdminMails_GetAlias", "mail")] public abstract void usp_AdminMails_GetAlias([Parameter("mailbox", "nvarchar", ParameterDirection.Input)] string @mailbox);
		[Procedure("usp_AdminMails_InsertAlias", "mail")] public abstract void usp_AdminMails_InsertAlias([Parameter("mailbox", "nvarchar", ParameterDirection.Input)] string @mailbox, [Parameter("domain", "nvarchar", ParameterDirection.Input)] string @domain, [Parameter("alias", "nvarchar", ParameterDirection.Input)] string @alias);
		[Procedure("usp_AdminMails_SetQuota", "mail")] public abstract void usp_AdminMails_SetQuota([Parameter("mailBox", "nvarchar", ParameterDirection.Input)] string @mailBox, [Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("quota", "int", ParameterDirection.Input)] int? @quota, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_AdminMails_UnlockBulk", "mail")] public abstract void usp_AdminMails_UnlockBulk([Parameter("mailBoxesXml", "xml", ParameterDirection.Input)] string @mailBoxesXml, [Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_AdminMails_UpdateAlias", "mail")] public abstract void usp_AdminMails_UpdateAlias([Parameter("mailbox", "nvarchar", ParameterDirection.Input)] string @mailbox, [Parameter("domain", "nvarchar", ParameterDirection.Input)] string @domain, [Parameter("oldAlias", "nvarchar", ParameterDirection.Input)] string @oldAlias, [Parameter("newAlias", "nvarchar", ParameterDirection.Input)] string @newAlias);
		[Procedure("usp_AdminMailsGetContextInfo", "mail")] public abstract void usp_AdminMailsGetContextInfo([Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("MailboxName", "nvarchar", ParameterDirection.Input)] string @MailboxName);
		[Procedure("usp_AdminMailsGetList", "mail")] public abstract void usp_AdminMailsGetList([Parameter("AdminUser", "nvarchar", ParameterDirection.Input)] string @AdminUser, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("PageSize", "int", ParameterDirection.Input)] int? @PageSize, [Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("PlanName", "nvarchar", ParameterDirection.Input)] string @PlanName, [Parameter("SearchByCreatedDate", "bit", ParameterDirection.Input)] bool? @SearchByCreatedDate, [Parameter("CreateFilterStartDate", "datetime", ParameterDirection.Input)] DateTime? @CreateFilterStartDate, [Parameter("CreateFilterEndDate", "datetime", ParameterDirection.Input)] DateTime? @CreateFilterEndDate, [Parameter("isActive", "bit", ParameterDirection.Input)] bool? @isActive, [Parameter("isGrace", "bit", ParameterDirection.Input)] bool? @isGrace, [Parameter("isRedemption", "bit", ParameterDirection.Input)] bool? @isRedemption, [Parameter("isDisabled", "bit", ParameterDirection.Input)] bool? @isDisabled);
		[Procedure("usp_AdminPlans_GetInfoBySubscriptionId", "mail")] public abstract void usp_AdminPlans_GetInfoBySubscriptionId([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_AdminPlansCreate", "mail")] public abstract void usp_AdminPlansCreate([Parameter("name", "nvarchar", ParameterDirection.Input)] string @name, [Parameter("description", "nvarchar", ParameterDirection.Input)] string @description, [Parameter("filestoreQuota", "int", ParameterDirection.Input)] int? @filestoreQuota, [Parameter("mailboxDefaultQuota", "int", ParameterDirection.Input)] int? @mailboxDefaultQuota, [Parameter("initialMailboxCount", "int", ParameterDirection.Input)] int? @initialMailboxCount, [Parameter("featureSetsString", "nvarchar", ParameterDirection.Input)] string @featureSetsString);
		[Procedure("usp_AdminPlansDelete", "mail")] public abstract void usp_AdminPlansDelete([Parameter("PlanId", "int", ParameterDirection.Input)] int? @PlanId);
		[Procedure("usp_AdminPlansGetInfo", "mail")] public abstract void usp_AdminPlansGetInfo([Parameter("PlanId", "int", ParameterDirection.Input)] int? @PlanId);
		[Procedure("USP_AdminPlansGetList", "mail")] public abstract void USP_AdminPlansGetList([Parameter("keyword", "nvarchar", ParameterDirection.Input)] string @keyword, [Parameter("activeOnly", "bit", ParameterDirection.Input)] bool? @activeOnly);
		[Procedure("usp_AdminPlansModify", "mail")] public abstract void usp_AdminPlansModify([Parameter("planId", "int", ParameterDirection.Input)] int? @planId, [Parameter("description", "nvarchar", ParameterDirection.Input)] string @description, [Parameter("filestoreQuota", "int", ParameterDirection.Input)] int? @filestoreQuota, [Parameter("mailboxDefaultQuota", "int", ParameterDirection.Input)] int? @mailboxDefaultQuota, [Parameter("initialMailboxCount", "int", ParameterDirection.Input)] int? @initialMailboxCount, [Parameter("featureSetsString", "nvarchar", ParameterDirection.Input)] string @featureSetsString);
		[Procedure("usp_AdminPlansSetFeatureState", "mail")] public abstract void usp_AdminPlansSetFeatureState([Parameter("planId", "int", ParameterDirection.Input)] int? @planId, [Parameter("featureName", "nvarchar", ParameterDirection.Input)] string @featureName, [Parameter("state", "bit", ParameterDirection.Input)] bool? @state);
		[Procedure("usp_AdminSubscriptionRenew", "mail")] public abstract void usp_AdminSubscriptionRenew([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("RenewYears", "int", ParameterDirection.Input)] int? @RenewYears, [Parameter("RenewMonths", "int", ParameterDirection.Input)] int? @RenewMonths, [Parameter("RenewDays", "int", ParameterDirection.Input)] int? @RenewDays, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("OrderId", "numeric", ParameterDirection.Input)] decimal? @OrderId, [Parameter("OrderItemId", "numeric", ParameterDirection.Input)] decimal? @OrderItemId, [Parameter("BillingCycle", "int", ParameterDirection.Input)] int? @BillingCycle);
		[Procedure("usp_AdminSubscriptionsChangeMailboxesCount", "mail")] public abstract void usp_AdminSubscriptionsChangeMailboxesCount([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("MailboxesCount", "int", ParameterDirection.Input)] int? @MailboxesCount, [Parameter("CommandType", "varchar", ParameterDirection.Input)] string @CommandType, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("ResultMailboxesCount", "int", ParameterDirection.InputOutput)] int? @ResultMailboxesCount, [Parameter("IgnoreQty", "bit", ParameterDirection.Input)] bool? @IgnoreQty);
		[Procedure("usp_AdminSubscriptionsGetContext", "mail")] public abstract void usp_AdminSubscriptionsGetContext([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_AdminSubscriptionsGetInfo", "mail")] public abstract void usp_AdminSubscriptionsGetInfo([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("USP_AdminSubscriptionsGetList", "mail")] public abstract void USP_AdminSubscriptionsGetList([Parameter("domainNameFilter", "nvarchar", ParameterDirection.Input)] string @domainNameFilter, [Parameter("ownerUserName", "nvarchar", ParameterDirection.Input)] string @ownerUserName);
		[Procedure("usp_CheckLockForAbusePeriodSubscription", "mail")] public abstract void usp_CheckLockForAbusePeriodSubscription([Parameter("LockForAbuseDays", "int", ParameterDirection.Input)] int? @LockForAbuseDays, [Parameter("countOperation", "int", ParameterDirection.Input)] int? @countOperation);
		[Procedure("usp_CheckNotActivateSubscription", "mail")] public abstract void usp_CheckNotActivateSubscription([Parameter("countOperation", "int", ParameterDirection.Input)] int? @countOperation, [Parameter("dateToCanceled", "int", ParameterDirection.Input)] int? @dateToCanceled);
		[Procedure("usp_CheckRenewalPeriodSubscription", "mail")] public abstract void usp_CheckRenewalPeriodSubscription([Parameter("countOperation", "int", ParameterDirection.Input)] int? @countOperation);
		[Procedure("usp_CheckUserHasOXSubscriptions", "mail")] public abstract void usp_CheckUserHasOXSubscriptions([Parameter("username", "nvarchar", ParameterDirection.Input)] string @username);
		[Procedure("usp_Contexts_Create", "mail")] public abstract void usp_Contexts_Create([Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("OXquota", "int", ParameterDirection.Input)] int? @OXquota, [Parameter("OXContextAdminUser", "nvarchar", ParameterDirection.Input)] string @OXContextAdminUser, [Parameter("OXContextAdminPassword", "nvarchar", ParameterDirection.Input)] string @OXContextAdminPassword, [Parameter("IsThirdPartyDomain", "bit", ParameterDirection.Input)] bool? @IsThirdPartyDomain);
		[Procedure("usp_Contexts_FullGetInfo", "mail")] public abstract void usp_Contexts_FullGetInfo([Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Contexts_GetDomain", "mail")] public abstract void usp_Contexts_GetDomain([Parameter("ContextId", "int", ParameterDirection.Input)] int? @ContextId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("domainName", "nvarchar", ParameterDirection.InputOutput)] string @domainName);
		[Procedure("usp_Contexts_GetInfo", "mail")] public abstract void usp_Contexts_GetInfo([Parameter("ContextId", "int", ParameterDirection.Input)] int? @ContextId);
		[Procedure("usp_Contexts_GetList", "mail")] public abstract void usp_Contexts_GetList([Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("keyword", "nvarchar", ParameterDirection.Input)] string @keyword, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize, [Parameter("SortColumn", "nvarchar", ParameterDirection.Input)] string @SortColumn, [Parameter("SortDirection", "bit", ParameterDirection.Input)] bool? @SortDirection);
		[Procedure("usp_Contexts_GetMailboxes", "mail")] public abstract void usp_Contexts_GetMailboxes([Parameter("ContextId", "int", ParameterDirection.Input)] int? @ContextId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Contexts_GetOXAdmin", "mail")] public abstract void usp_Contexts_GetOXAdmin([Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("ContextId", "int", ParameterDirection.Input)] int? @ContextId);
		[Procedure("usp_Contexts_GetPreRequisites", "mail")] public abstract void usp_Contexts_GetPreRequisites([Parameter("Domain", "nvarchar", ParameterDirection.Input)] string @Domain, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("IsContextRequired", "bit", ParameterDirection.InputOutput)] bool? @IsContextRequired, [Parameter("IsThirdPartyDomain", "bit", ParameterDirection.InputOutput)] bool? @IsThirdPartyDomain);
		[Procedure("usp_DeleteContextThirdPartyDomain", "mail")] public abstract void usp_DeleteContextThirdPartyDomain();
		[Procedure("usp_DeleteHandledRecordFromUpdateMailboxFeatureSetTmp", "mail")] public abstract void usp_DeleteHandledRecordFromUpdateMailboxFeatureSetTmp([Parameter("mailbox", "nvarchar", ParameterDirection.Input)] string @mailbox);
		[Procedure("usp_DomainHasSubscriptions", "mail")] public abstract void usp_DomainHasSubscriptions([Parameter("domainName", "nvarchar", ParameterDirection.Input)] string @domainName, [Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_Domains_GetList", "mail")] public abstract void usp_Domains_GetList([Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("keyword", "nvarchar", ParameterDirection.Input)] string @keyword, [Parameter("page", "int", ParameterDirection.Input)] int? @page, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize, [Parameter("SortColumn", "nvarchar", ParameterDirection.Input)] string @SortColumn, [Parameter("SortDirection", "bit", ParameterDirection.Input)] bool? @SortDirection, [Parameter("isExpiredList", "bit", ParameterDirection.Input)] bool? @isExpiredList);
		[Procedure("usp_EntityInfoCollect", "mail")] public abstract void usp_EntityInfoCollect([Parameter("EntityId", "nvarchar", ParameterDirection.Input)] string @EntityId, [Parameter("EntityType", "int", ParameterDirection.Input)] int? @EntityType);
		[Procedure("usp_GetAuthorizationEmail", "mail")] public abstract void usp_GetAuthorizationEmail([Parameter("AuthorizationKey", "nvarchar", ParameterDirection.Input)] string @AuthorizationKey, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("AuthorizationEmail", "nvarchar", ParameterDirection.InputOutput)] string @AuthorizationEmail);
		[Procedure("usp_GetHighPlanListToUserWithPricesCompare", "mail")] public abstract void usp_GetHighPlanListToUserWithPricesCompare([Parameter("currentPlanName", "nvarchar", ParameterDirection.Input)] string @currentPlanName);
		[Procedure("USP_GetMailHostAliases", "mail")] public abstract void USP_GetMailHostAliases();
		[Procedure("usp_GetMaxFileStoreOfDomain", "mail")] public abstract void usp_GetMaxFileStoreOfDomain([Parameter("domain", "nvarchar", ParameterDirection.Input)] string @domain);
		[Procedure("USP_GetSubscriptionPlanDetails", "mail")] public abstract void USP_GetSubscriptionPlanDetails([Parameter("planName", "nvarchar", ParameterDirection.Input)] string @planName);
		[Procedure("usp_GetUserData", "mail")] public abstract void usp_GetUserData([Parameter("userName", "nvarchar", ParameterDirection.Input)] string @userName);
		[Procedure("usp_GetUserDataList", "mail")] public abstract void usp_GetUserDataList([Parameter("UserName", "nvarchar", ParameterDirection.Input)] string @UserName, [Parameter("Except", "bit", ParameterDirection.Input)] bool? @Except);
		[Procedure("usp_IncSendEmailTryCountSubscription", "mail")] public abstract void usp_IncSendEmailTryCountSubscription([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId);
		[Procedure("usp_Mailboxes_Delete_Pending", "mail")] public abstract void usp_Mailboxes_Delete_Pending([Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId);
		[Procedure("usp_Mails_BulkCheck", "mail")] public abstract void usp_Mails_BulkCheck([Parameter("mailboxesListXml", "xml", ParameterDirection.Input)] string @mailboxesListXml, [Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("mailboxesExcessSubscription", "int", ParameterDirection.InputOutput)] int? @mailboxesExcessSubscription);
		[Procedure("usp_Mails_ChangePassword", "mail")] public abstract void usp_Mails_ChangePassword([Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("mail", "varchar", ParameterDirection.Input)] string @mail, [Parameter("domain", "varchar", ParameterDirection.Input)] string @domain, [Parameter("newPassword", "varchar", ParameterDirection.Input)] string @newPassword);
		[Procedure("usp_Mails_ChangeStateBulk", "mail")] public abstract void usp_Mails_ChangeStateBulk([Parameter("mailBoxesXml", "xml", ParameterDirection.Input)] string @mailBoxesXml, [Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("UserDisable", "bit", ParameterDirection.Input)] bool? @UserDisable, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Mails_Create", "mail")] public abstract void usp_Mails_Create([Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("mail", "varchar", ParameterDirection.Input)] string @mail, [Parameter("alias", "varchar", ParameterDirection.Input)] string @alias, [Parameter("catchalladdress", "varchar", ParameterDirection.Input)] string @catchalladdress, [Parameter("password", "varchar", ParameterDirection.Input)] string @password, [Parameter("createdId", "int", ParameterDirection.InputOutput)] int? @createdId);
		[Procedure("usp_Mails_Create_Pending", "mail")] public abstract void usp_Mails_Create_Pending([Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("mail", "varchar", ParameterDirection.Input)] string @mail, [Parameter("alias", "varchar", ParameterDirection.Input)] string @alias, [Parameter("catchalladdress", "varchar", ParameterDirection.Input)] string @catchalladdress, [Parameter("password", "varchar", ParameterDirection.Input)] string @password, [Parameter("createdId", "int", ParameterDirection.InputOutput)] int? @createdId, [Parameter("quota", "int", ParameterDirection.Input)] int? @quota);
		[Procedure("usp_Mails_CreateBulk", "mail")] public abstract void usp_Mails_CreateBulk([Parameter("mailBoxesXml", "xml", ParameterDirection.Input)] string @mailBoxesXml, [Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Mails_DeleteAlias", "mail")] public abstract void usp_Mails_DeleteAlias([Parameter("alias", "nvarchar", ParameterDirection.Input)] string @alias);
		[Procedure("usp_Mails_DeleteBulk", "mail")] public abstract void usp_Mails_DeleteBulk([Parameter("mailBoxesXml", "xml", ParameterDirection.Input)] string @mailBoxesXml, [Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Mails_GetAlias", "mail")] public abstract void usp_Mails_GetAlias([Parameter("mailbox", "nvarchar", ParameterDirection.Input)] string @mailbox);
		[Procedure("usp_Mails_GetContextInfo", "mail")] public abstract void usp_Mails_GetContextInfo([Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("MailboxName", "nvarchar", ParameterDirection.Input)] string @MailboxName);
		[Procedure("usp_Mails_GetInfo", "mail")] public abstract void usp_Mails_GetInfo([Parameter("MailboxName", "nvarchar", ParameterDirection.Input)] string @MailboxName, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Mails_GetLocalParts", "mail")] public abstract void usp_Mails_GetLocalParts([Parameter("MailboxesList", "nvarchar", ParameterDirection.Input)] string @MailboxesList, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Mails_GetMailboxStatus", "mail")] public abstract void usp_Mails_GetMailboxStatus([Parameter("mailbox", "nvarchar", ParameterDirection.Input)] string @mailbox);
		[Procedure("usp_Mails_InsertAlias", "mail")] public abstract void usp_Mails_InsertAlias([Parameter("mailbox", "nvarchar", ParameterDirection.Input)] string @mailbox, [Parameter("domain", "nvarchar", ParameterDirection.Input)] string @domain, [Parameter("alias", "nvarchar", ParameterDirection.Input)] string @alias);
		[Procedure("usp_Mails_Replication", "mail")] public abstract void usp_Mails_Replication();
		[Procedure("usp_Mails_SetQuota", "mail")] public abstract void usp_Mails_SetQuota([Parameter("mailBox", "nvarchar", ParameterDirection.Input)] string @mailBox, [Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("quota", "int", ParameterDirection.Input)] int? @quota, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Mails_TransferBulk", "mail")] public abstract void usp_Mails_TransferBulk([Parameter("TargetSubscriptionId", "int", ParameterDirection.Input)] int? @TargetSubscriptionId, [Parameter("MailboxesList", "nvarchar", ParameterDirection.Input)] string @MailboxesList, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Mails_UpdateAlias", "mail")] public abstract void usp_Mails_UpdateAlias([Parameter("mailbox", "nvarchar", ParameterDirection.Input)] string @mailbox, [Parameter("domain", "nvarchar", ParameterDirection.Input)] string @domain, [Parameter("oldAlias", "nvarchar", ParameterDirection.Input)] string @oldAlias, [Parameter("newAlias", "nvarchar", ParameterDirection.Input)] string @newAlias);
		[Procedure("usp_Plans_GetInfo", "mail")] public abstract void usp_Plans_GetInfo([Parameter("PlanId", "int", ParameterDirection.Input)] int? @PlanId);
		[Procedure("usp_Plans_GetInfoBySubscriptionId", "mail")] public abstract void usp_Plans_GetInfoBySubscriptionId([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Plans_GetList", "mail")] public abstract void usp_Plans_GetList([Parameter("keyword", "nvarchar", ParameterDirection.Input)] string @keyword, [Parameter("activeOnly", "bit", ParameterDirection.Input)] bool? @activeOnly);
		[Procedure("usp_Plans_GetListForLog", "mail")] public abstract void usp_Plans_GetListForLog([Parameter("keyword", "nvarchar", ParameterDirection.Input)] string @keyword);
		[Procedure("usp_Plans_GetListWithInfo", "mail")] public abstract void usp_Plans_GetListWithInfo([Parameter("keyword", "nvarchar", ParameterDirection.Input)] string @keyword, [Parameter("activeOnly", "bit", ParameterDirection.Input)] bool? @activeOnly);
		[Procedure("usp_Plans_SetFeaturesStateBulk", "mail")] public abstract void usp_Plans_SetFeaturesStateBulk([Parameter("planId", "int", ParameterDirection.Input)] int? @planId, [Parameter("featureSetsString", "nvarchar", ParameterDirection.Input)] string @featureSetsString, [Parameter("updateModifiedDate", "bit", ParameterDirection.Input)] bool? @updateModifiedDate);
		[Procedure("Usp_Sch_ExpirationCheck", "mail")] public abstract void Usp_Sch_ExpirationCheck([Parameter("GracePeriod", "int", ParameterDirection.Input)] int? @GracePeriod);
		[Procedure("Usp_Sch_RedemptionCheck", "mail")] public abstract void Usp_Sch_RedemptionCheck([Parameter("GracePeriod", "int", ParameterDirection.Input)] int? @GracePeriod, [Parameter("RedemptionPeriod", "int", ParameterDirection.Input)] int? @RedemptionPeriod);
		[Procedure("usp_Subscription_GetInfo_ByContextId", "mail")] public abstract void usp_Subscription_GetInfo_ByContextId([Parameter("contextId", "int", ParameterDirection.Input)] int? @contextId);
		[Procedure("usp_Subscription_GetMailboxes", "mail")] public abstract void usp_Subscription_GetMailboxes([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("keyword", "nvarchar", ParameterDirection.Input)] string @keyword, [Parameter("Page", "int", ParameterDirection.Input)] int? @Page, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize, [Parameter("SortColumn", "nvarchar", ParameterDirection.Input)] string @SortColumn, [Parameter("SortDirection", "bit", ParameterDirection.Input)] bool? @SortDirection, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_SubscriptionHistory_Insert", "mail")] public abstract void usp_SubscriptionHistory_Insert([Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("oldStatus", "tinyint", ParameterDirection.Input)] byte? @oldStatus, [Parameter("newStatus", "tinyint", ParameterDirection.Input)] byte? @newStatus, [Parameter("oldOrderId", "numeric", ParameterDirection.Input)] decimal? @oldOrderId, [Parameter("newOrderId", "numeric", ParameterDirection.Input)] decimal? @newOrderId, [Parameter("changeDate", "datetime", ParameterDirection.Input)] DateTime? @changeDate);
		[Procedure("usp_Subscriptions_Activation", "mail")] public abstract void usp_Subscriptions_Activation([Parameter("ContextId", "int", ParameterDirection.Input)] int? @ContextId, [Parameter("AuthorizationKey", "nvarchar", ParameterDirection.Input)] string @AuthorizationKey, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("Domain", "nvarchar", ParameterDirection.InputOutput)] string @Domain);
		[Procedure("usp_Subscriptions_Cancel", "mail")] public abstract void usp_Subscriptions_Cancel([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId);
		[Procedure("usp_Subscriptions_ChangeMailboxesCount", "mail")] public abstract void usp_Subscriptions_ChangeMailboxesCount([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("MailboxesCount", "int", ParameterDirection.Input)] int? @MailboxesCount, [Parameter("CommandType", "varchar", ParameterDirection.Input)] string @CommandType, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("ResultMailboxesCount", "int", ParameterDirection.InputOutput)] int? @ResultMailboxesCount);
		[Procedure("usp_Subscriptions_ChangePlan", "mail")] public abstract void usp_Subscriptions_ChangePlan([Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("newPlanId", "int", ParameterDirection.Input)] int? @newPlanId, [Parameter("ownerUserName", "nvarchar", ParameterDirection.Input)] string @ownerUserName);
		[Procedure("usp_Subscriptions_ChangeStatus", "mail")] public abstract void usp_Subscriptions_ChangeStatus([Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("Status", "int", ParameterDirection.Input)] int? @Status, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Subscriptions_CheckIntegrityDelete", "mail")] public abstract void usp_Subscriptions_CheckIntegrityDelete([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId);
		[Procedure("usp_Subscriptions_Create", "mail")] public abstract void usp_Subscriptions_Create([Parameter("PlanId", "int", ParameterDirection.Input)] int? @PlanId, [Parameter("ContextId", "int", ParameterDirection.Input)] int? @ContextId, [Parameter("DaysToExpire", "int", ParameterDirection.Input)] int? @DaysToExpire, [Parameter("OrderId", "numeric", ParameterDirection.Input)] decimal? @OrderId, [Parameter("OrderItemId", "numeric", ParameterDirection.Input)] decimal? @OrderItemId, [Parameter("BillingCycle", "int", ParameterDirection.Input)] int? @BillingCycle, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("IsThirdPartyDomain", "bit", ParameterDirection.Input)] bool? @IsThirdPartyDomain, [Parameter("IsIntentionally", "bit", ParameterDirection.Input)] bool? @IsIntentionally);
		[Procedure("usp_Subscriptions_Delete", "mail")] public abstract void usp_Subscriptions_Delete([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Subscriptions_GetContext", "mail")] public abstract void usp_Subscriptions_GetContext([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId);
		[Procedure("usp_Subscriptions_GetCount", "mail")] public abstract void usp_Subscriptions_GetCount([Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Subscriptions_GetInfo", "mail")] public abstract void usp_Subscriptions_GetInfo([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Subscriptions_GetList", "mail")] public abstract void usp_Subscriptions_GetList([Parameter("domainNameFilter", "nvarchar", ParameterDirection.Input)] string @domainNameFilter, [Parameter("ownerUserName", "nvarchar", ParameterDirection.Input)] string @ownerUserName);
		[Procedure("usp_Subscriptions_GetMailboxes_Pending", "mail")] public abstract void usp_Subscriptions_GetMailboxes_Pending([Parameter("subscriptionId", "int", ParameterDirection.Input)] int? @subscriptionId, [Parameter("ownerUserName", "nvarchar", ParameterDirection.Input)] string @ownerUserName);
		[Procedure("usp_Subscriptions_Lock", "mail")] public abstract void usp_Subscriptions_Lock([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("LockForAbuse", "bit", ParameterDirection.Input)] bool? @LockForAbuse, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Subscriptions_Renew", "mail")] public abstract void usp_Subscriptions_Renew([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("RenewDays", "int", ParameterDirection.Input)] int? @RenewDays, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_Subscriptions_Unlock", "mail")] public abstract void usp_Subscriptions_Unlock([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName, [Parameter("RedemptionStartDays", "int", ParameterDirection.Input)] int? @RedemptionStartDays);
		[Procedure("usp_Subscriptions_Upgrade", "mail")] public abstract void usp_Subscriptions_Upgrade([Parameter("SubscriptionId", "int", ParameterDirection.Input)] int? @SubscriptionId, [Parameter("NewPlanId", "int", ParameterDirection.Input)] int? @NewPlanId, [Parameter("OwnerUserName", "nvarchar", ParameterDirection.Input)] string @OwnerUserName);
		[Procedure("usp_UpdateMailboxFeatureSetTmp_GetList", "mail")] public abstract void usp_UpdateMailboxFeatureSetTmp_GetList([Parameter("pageIndex", "int", ParameterDirection.Input)] int? @pageIndex, [Parameter("pageSize", "int", ParameterDirection.Input)] int? @pageSize);
		[Procedure("usp_UpdateMailboxFeatureSetTmp_Prepare", "mail")] public abstract void usp_UpdateMailboxFeatureSetTmp_Prepare([Parameter("planId", "int", ParameterDirection.Input)] int? @planId);
		[Procedure("USP_ValidateSubscription", "mail")] public abstract void USP_ValidateSubscription([Parameter("domain", "nvarchar", ParameterDirection.Input)] string @domain, [Parameter("ownerUserName", "nvarchar", ParameterDirection.Input)] string @ownerUserName, [Parameter("isTrial", "bit", ParameterDirection.Input)] bool? @isTrial);
		[Procedure("SP_GET_USER_PROFILE", "messaging")] public abstract void SP_GET_USER_PROFILE([Parameter("Name", "nvarchar", ParameterDirection.Input)] string @Name, [Parameter("EventTypeName", "nvarchar", ParameterDirection.Input)] string @EventTypeName);
		[Procedure("USP_AUTOMATION_GET_DOMAINS_LIST", "reports")] public abstract void USP_AUTOMATION_GET_DOMAINS_LIST();
		[Procedure("USP_AUTOMATION_UPDATE_DOMAINS_LIST", "reports")] public abstract void USP_AUTOMATION_UPDATE_DOMAINS_LIST([Parameter("Domainname", "varchar", ParameterDirection.Input)] string @Domainname, [Parameter("Nameservers", "varchar", ParameterDirection.Input)] string @Nameservers);
	}
}